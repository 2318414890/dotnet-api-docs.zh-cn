<Type Name="XmlElement" FullName="System.Xml.XmlElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7a4d609de9aa613973f5d46855ba168b2714a10" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlElement : System.Xml.XmlLinkedNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElement extends System.Xml.XmlLinkedNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlElement" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElement&#xA;Inherits XmlLinkedNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElement : System::Xml::XmlLinkedNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlLinkedNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="73a95-101">表示元素。</span>
      <span class="sxs-lookup">
        <span data-stu-id="73a95-101">Represents an element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-102">元素是最常见的节点在 W3C 文档对象模型 (DOM) 之一。</span><span class="sxs-lookup"><span data-stu-id="73a95-102">Elements are one of the most common nodes in the W3C Document Object Model (DOM).</span></span> <span data-ttu-id="73a95-103">元素可以有与之关联的特性。</span><span class="sxs-lookup"><span data-stu-id="73a95-103">Elements can have attributes associated with them.</span></span> <span data-ttu-id="73a95-104">`XmlElement`类具有访问这些属性的许多方法 (<xref:System.Xml.XmlElement.GetAttribute%2A>， <xref:System.Xml.XmlElement.SetAttribute%2A>， <xref:System.Xml.XmlElement.RemoveAttribute%2A>， <xref:System.Xml.XmlElement.GetAttributeNode%2A>，依次类推)。</span><span class="sxs-lookup"><span data-stu-id="73a95-104">The `XmlElement` class has many methods for accessing attributes (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>, and so on).</span></span> <span data-ttu-id="73a95-105">你还可以使用<xref:System.Xml.XmlElement.Attributes%2A>属性返回<xref:System.Xml.XmlAttributeCollection>使你能够访问集合中按名称或索引的属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-105">You can also use the <xref:System.Xml.XmlElement.Attributes%2A> property which returns an <xref:System.Xml.XmlAttributeCollection> enabling you to access attributes by name or index from the collection.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlDocument.CreateElement(System.String)" />
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlElement (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string prefix, string localName, string namespaceURI, class System.Xml.XmlDocument doc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (prefix As String, localName As String, namespaceURI As String, doc As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::Xml::XmlDocument ^ doc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="73a95-106">命名空间前缀，请参见 <see cref="P:System.Xml.XmlElement.Prefix" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-106">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix" /> property.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="73a95-107">本地名称，请参见 <see cref="P:System.Xml.XmlElement.LocalName" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-107">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName" /> property.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-108">命名空间 URI，请参见 <see cref="P:System.Xml.XmlElement.NamespaceURI" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-108">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI" /> property.</span>
          </span>
        </param>
        <param name="doc">
          <span data-ttu-id="73a95-109">父 XML 文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-109">The parent XML document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-110">初始化 <see cref="T:System.Xml.XmlElement" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-110">Initializes a new instance of the <see cref="T:System.Xml.XmlElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-111">不要实例化<xref:System.Xml.XmlElement>直接; 相反，使用方法，如<xref:System.Xml.XmlDocument.CreateElement%2A>。</span><span class="sxs-lookup"><span data-stu-id="73a95-111">Do not instantiate an <xref:System.Xml.XmlElement> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateElement%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-112">获取包含该节点特性列表的 <see cref="T:System.Xml.XmlAttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-112">Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-113">包含该节点特性列表的 <see cref="T:System.Xml.XmlAttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-113">
              <see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73a95-114">下面的示例使用的第一个属性的值更改。</span><span class="sxs-lookup"><span data-stu-id="73a95-114">The following example uses changes the value of the first attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="73a95-115">若要递归地克隆指定节点下的子树，则为 <see langword="true" />；若仅克隆节点本身（如果节点是 <see langword="XmlElement" />，还克隆其属性），则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-115">
              <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself (and its attributes if the node is an <see langword="XmlElement" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-116">创建此节点的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-116">Creates a duplicate of this node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-117">克隆的节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-117">The cloned node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-118">此方法可作为节点的复制构造函数。</span><span class="sxs-lookup"><span data-stu-id="73a95-118">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="73a95-119">重复的节点具有没有父级 (<xref:System.Xml.XmlNode.ParentNode%2A>返回`null`)。</span><span class="sxs-lookup"><span data-stu-id="73a95-119">The duplicate node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-120">下面的示例创建一个新元素，其进行克隆，然后将这两个元素添加到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="73a95-120">The following example creates a new element, clones it, and then adds both elements into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-121">返回指定特性的特性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-121">Returns the attribute value for the specified attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="73a95-122">要检索的属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-122">The name of the attribute to retrieve.</span>
          </span>
          <span data-ttu-id="73a95-123">这是限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-123">This is a qualified name.</span>
          </span>
          <span data-ttu-id="73a95-124">它针对匹配节点的 <see langword="Name" /> 属性进行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-124">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-125">返回具有指定名称的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-125">Returns the value for the attribute with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-126">指定的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-126">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="73a95-127">如果未找到匹配属性，或者如果此属性没有指定值或默认值，则返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-127">An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73a95-128">下面的示例检查以查看该元素有指定的属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-128">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="73a95-129">要检索的特性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-129">The local name of the attribute to retrieve.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-130">要检索的特性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-130">The namespace URI of the attribute to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-131">返回具有指定本地名称和命名空间 URI 的特性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-131">Returns the value for the attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-132">指定的属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-132">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="73a95-133">如果未找到匹配属性，或者如果此属性没有指定值或默认值，则返回空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-133">An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-134">返回指定的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-134">Return the specified <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="73a95-135">要检索的属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-135">The name of the attribute to retrieve.</span>
          </span>
          <span data-ttu-id="73a95-136">这是限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-136">This is a qualified name.</span>
          </span>
          <span data-ttu-id="73a95-137">它针对匹配节点的 <see langword="Name" /> 属性进行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-137">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-138">返回具有指定名称的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-138">Returns the <see langword="XmlAttribute" /> with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-139">指定的 <see langword="XmlAttribute" />；如果未找到匹配特性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-139">The specified <see langword="XmlAttribute" /> or <see langword="null" /> if a matching attribute was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73a95-140">下面的示例检查以查看该元素有指定的属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-140">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="73a95-141">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-141">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-142">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-142">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-143">返回具有指定本地名称和命名空间 URI 的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-143">Returns the <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-144">指定的 <see langword="XmlAttribute" />；如果未找到匹配特性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-144">The specified <see langword="XmlAttribute" /> or <see langword="null" /> if a matching attribute was not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-145">返回一个 <see cref="T:System.Xml.XmlNodeList" />，它包含与指定名称匹配的所有子代元素的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-145">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="73a95-146">要匹配的名称标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-146">The name tag to match.</span>
          </span>
          <span data-ttu-id="73a95-147">这是限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-147">This is a qualified name.</span>
          </span>
          <span data-ttu-id="73a95-148">它针对匹配节点的 <see langword="Name" /> 属性进行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-148">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
          <span data-ttu-id="73a95-149">星号 (\*) 是匹配所有标记的特殊值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-149">The asterisk (\*) is a special value that matches all tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-150">返回一个 <see cref="T:System.Xml.XmlNodeList" />，它包含与指定 <see cref="P:System.Xml.XmlElement.Name" /> 匹配的所有子代元素的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-150">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-151">
            <see cref="T:System.Xml.XmlNodeList" />，包含所有匹配节点的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-151">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="73a95-152">如果不存在任何匹配节点，则该列表为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-152">The list is empty if there are no matching nodes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-153">节点都将置于将的前序遍历中遇到的顺序<xref:System.Xml.XmlElement>树。</span><span class="sxs-lookup"><span data-stu-id="73a95-153">The nodes are placed in the order in which they would be encountered in a preorder traversal of the <xref:System.Xml.XmlElement> tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73a95-154">建议你使用<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>或<xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType>方法而不是<xref:System.Xml.XmlElement.GetElementsByTagName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="73a95-154">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlElement.GetElementsByTagName%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-155">下面的示例获取并显示所有书名。</span><span class="sxs-lookup"><span data-stu-id="73a95-155">The following example gets and displays all the book titles.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/VB/source.vb#1)]  
  
 <span data-ttu-id="73a95-156">该示例使用文件，`2books.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="73a95-156">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="73a95-157">要匹配的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-157">The local name to match.</span>
          </span>
          <span data-ttu-id="73a95-158">星号 (\*) 是匹配所有标记的特殊值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-158">The asterisk (\*) is a special value that matches all tags.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-159">要匹配的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-159">The namespace URI to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-160">返回一个 <see cref="T:System.Xml.XmlNodeList" />，它包含与指定 <see cref="P:System.Xml.XmlElement.LocalName" /> 和 <see cref="P:System.Xml.XmlElement.NamespaceURI" /> 匹配的所有子代元素的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-160">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.LocalName" /> and <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-161">
            <see cref="T:System.Xml.XmlNodeList" />，包含所有匹配节点的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-161">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span>
          </span>
          <span data-ttu-id="73a95-162">如果不存在任何匹配节点，则该列表为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-162">The list is empty if there are no matching nodes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-163">节点都将置于将的前序遍历中遇到的顺序`XmlElement`树。</span><span class="sxs-lookup"><span data-stu-id="73a95-163">The nodes are placed in the order in which they would be encountered in a preorder traversal of the `XmlElement` tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73a95-164">建议你使用<xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>或<xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType>方法而不是<xref:System.Xml.XmlElement.GetElementsByTagName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="73a95-164">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlElement.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-165">确定当前节点是否具有指定的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-165">Determines whether the current node has the specified attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="73a95-166">要查找的属性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-166">The name of the attribute to find.</span>
          </span>
          <span data-ttu-id="73a95-167">这是限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-167">This is a qualified name.</span>
          </span>
          <span data-ttu-id="73a95-168">它针对匹配节点的 <see langword="Name" /> 属性进行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-168">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-169">确定当前节点是否具有带有指定名称的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-169">Determines whether the current node has an attribute with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-170">如果当前节点具有指定的特性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-170">
              <see langword="true" /> if the current node has the specified attribute; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73a95-171">下面的示例检查以查看该元素有指定的属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-171">The following example checks to see if the element has the specified attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="73a95-172">要查找的特性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-172">The local name of the attribute to find.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-173">要查找的特性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-173">The namespace URI of the attribute to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-174">确定当前节点是否具有带有指定本地名称和命名空间 URI 的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-174">Determines whether the current node has an attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-175">如果当前节点具有指定的特性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-175">
              <see langword="true" /> if the current node has the specified attribute; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-176">获取一个 <see langword="boolean" /> 值，该值指示当前节点是否有任何属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-176">Gets a <see langword="boolean" /> value indicating whether the current node has any attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-177">如果当前节点具有属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-177">
              <see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-178">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="73a95-178">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-179">下面的示例从根元素中移除所有属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-179">The following example removes all attributes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-180">获取或设置节点及其所有子级的串连值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-180">Gets or sets the concatenated values of the node and all its children.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-181">节点及其所有子级的串连值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-181">The concatenated values of the node and all its children.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-182">设置此属性将给定字符串的已分析内容替换所有子级。</span><span class="sxs-lookup"><span data-stu-id="73a95-182">Setting this property replaces all the children with the parsed contents of the given string.</span></span>  
  
 <span data-ttu-id="73a95-183">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="73a95-183">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-184">下面的示例比较`InnerText`和<xref:System.Xml.XmlElement.InnerXml%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-184">The following example compares the `InnerText` and <xref:System.Xml.XmlElement.InnerXml%2A> properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-185">获取或设置仅表示此节点的子级的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-185">Gets or sets the markup representing just the children of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-186">此节点子级的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-186">The markup of the children of this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-187">将此属性设置给定字符串的已分析内容替换节点的子级。</span><span class="sxs-lookup"><span data-stu-id="73a95-187">Setting this property replaces the children of the node with the parsed contents of the given string.</span></span> <span data-ttu-id="73a95-188">分析在当前命名空间上下文中完成。</span><span class="sxs-lookup"><span data-stu-id="73a95-188">The parsing is done in the current namespace context.</span></span>  
  
 <span data-ttu-id="73a95-189">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="73a95-189">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-190">下面的示例比较<xref:System.Xml.XmlElement.InnerText%2A>和`InnerXml`属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-190">The following example compares the <xref:System.Xml.XmlElement.InnerText%2A> and `InnerXml` properties.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="73a95-191">设置此属性时指定的 XML 格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-191">The XML specified when setting this property is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-192">获取或设置元素的标记格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-192">Gets or sets the tag format of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-193">返回<see langword="true" />元素将以短标记格式序列化"&lt;项 /&gt;";<see langword="false" />对于长格式"&lt;项&gt;&lt;/项&gt;"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-193">Returns <see langword="true" /> if the element is to be serialized in the short tag format "&lt;item/&gt;"; <see langword="false" /> for the long format "&lt;item&gt;&lt;/item&gt;".</span>
          </span>
          <span data-ttu-id="73a95-194">当设置该属性时，如果设置为 <see langword="true" />，则移除该元素的子级并以短标记格式序列化该元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-194">When setting this property, if set to <see langword="true" />, the children of the element are removed and the element is serialized in the short tag format.</span>
          </span>
          <span data-ttu-id="73a95-195">如果设置为 <see langword="false" />，则更改该属性的值（不管该元素是否具有内容）；如果该元素为空，则以长格式对其进行序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-195">If set to <see langword="false" />, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.</span>
          </span>
          <span data-ttu-id="73a95-196">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-196">This property is a Microsoft extension to the Document Object Model (DOM).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-197">此属性是 Microsoft 扩展的文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="73a95-197">This property is a Microsoft extension of the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-198">下面的示例将内容添加到空元素。</span><span class="sxs-lookup"><span data-stu-id="73a95-198">The following example adds content to an empty element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-199">获取当前节点的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-199">Gets the local name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-200">移除了前缀的当前节点的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-200">The name of the current node with the prefix removed.</span>
          </span>
          <span data-ttu-id="73a95-201">例如，<see langword="LocalName" />是元素的 book &lt;bk:book&gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-201">For example, <see langword="LocalName" /> is book for the element &lt;bk:book&gt;.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-202">如果节点没有前缀，`LocalName`相同<xref:System.Xml.XmlElement.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="73a95-202">If the node does not have a prefix, `LocalName` is the same as <xref:System.Xml.XmlElement.Name%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-203">下面的示例显示 ISBN 元素上的信息。</span><span class="sxs-lookup"><span data-stu-id="73a95-203">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-204">获取节点的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-204">Gets the qualified name of the node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-205">节点的限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-205">The qualified name of the node.</span>
          </span>
          <span data-ttu-id="73a95-206">对于 <see langword="XmlElement" /> 节点，这是该元素的标记名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-206">For <see langword="XmlElement" /> nodes, this is the tag name of the element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73a95-207">下面的示例显示 ISBN 元素上的信息。</span><span class="sxs-lookup"><span data-stu-id="73a95-207">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlElement.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-208">获取该节点的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-208">Gets the namespace URI of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-209">该节点的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-209">The namespace URI of this node.</span>
          </span>
          <span data-ttu-id="73a95-210">如果没有命名空间 URI，则此属性返回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-210">If there is no namespace URI, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-211">这是在创建时指定的 URI 的命名空间。</span><span class="sxs-lookup"><span data-stu-id="73a95-211">This is the namespace URI specified at creation time.</span></span> <span data-ttu-id="73a95-212">例如，`NamespaceURI`是 urn： 示例元素\<bk:book xmlns:bk ="urn： 示例"></span><span class="sxs-lookup"><span data-stu-id="73a95-212">For example, `NamespaceURI` is urn:samples for the element \<bk:book xmlns:bk= "urn:samples"></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-213">下面的示例显示 ISBN 元素上的信息。</span><span class="sxs-lookup"><span data-stu-id="73a95-213">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-214">获取紧接在该元素后面的 <see cref="T:System.Xml.XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-214">Gets the <see cref="T:System.Xml.XmlNode" /> immediately following this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-215">紧接在该元素后面的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-215">The <see langword="XmlNode" /> immediately following this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-216">获取当前节点的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-216">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-217">节点类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-217">The node type.</span>
          </span>
          <span data-ttu-id="73a95-218">对于 <see langword="XmlElement" /> 节点，该值是 XmlNodeType.Element。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-218">For <see langword="XmlElement" /> nodes, this value is XmlNodeType.Element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-219">获取该节点所属的 <see cref="T:System.Xml.XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-219">Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-220">该元素所属的 <see langword="XmlDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-220">The <see langword="XmlDocument" /> to which this element belongs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-221">将节点添加到当前节点中，使用`XmlDocument`返回`OwnerDocument`属性创建的节点。</span><span class="sxs-lookup"><span data-stu-id="73a95-221">When adding nodes to the current node, use the `XmlDocument` returned by the `OwnerDocument` property to create the node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-222">下面的示例将新元素插入到 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="73a95-222">The following example inserts a new element into an XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-223">获取该节点的父级（针对可以拥有父级的节点）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-223">Gets the parent of this node (for nodes that can have parents).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-224">为当前节点父级的 <see langword="XmlNode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-224">The <see langword="XmlNode" /> that is the parent of the current node.</span>
          </span>
          <span data-ttu-id="73a95-225">如果节点刚刚创建还未添加到树中，或如果已从树中移除了节点，则父级为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-225">If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="73a95-226">对于所有其他节点，返回的值取决于节点的 <see cref="P:System.Xml.XmlNode.NodeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-226">For all other nodes, the value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="73a95-227">下表描述 <see langword="ParentNode" /> 属性可能的返回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-227">The following table describes the possible return values for the <see langword="ParentNode" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-228">获取或设置该节点的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-228">Gets or sets the namespace prefix of this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-229">该节点的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-229">The namespace prefix of this node.</span>
          </span>
          <span data-ttu-id="73a95-230">如果没有前缀，则该属性返回 String.Empty。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-230">If there is no prefix, this property returns String.Empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-231">设置此属性将更改<xref:System.Xml.XmlElement.Name%2A>属性，其中包含有关的限定的名称`XmlElement`。</span><span class="sxs-lookup"><span data-stu-id="73a95-231">Setting this property changes the <xref:System.Xml.XmlElement.Name%2A> property, which holds the qualified name for an `XmlElement`.</span></span> <span data-ttu-id="73a95-232">但是，更改的前缀不会更改的命名空间 URI 的元素。</span><span class="sxs-lookup"><span data-stu-id="73a95-232">However, changing the prefix does not change the namespace URI of the element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-233">下面的示例显示 ISBN 元素上的信息。</span><span class="sxs-lookup"><span data-stu-id="73a95-233">The following example displays information on the ISBN element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73a95-234">该节点是只读的</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-234">This node is read-only</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="73a95-235">指定的前缀包含无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-235">The specified prefix contains an invalid character.</span>
          </span>
          <span data-ttu-id="73a95-236">指定的前缀格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-236">The specified prefix is malformed.</span>
          </span>
          <span data-ttu-id="73a95-237">该节点的 namespaceURI 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-237">The namespaceURI of this node is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="73a95-238">指定的前缀为“xml”，而该节点的 namespaceURI 与 http://www.w3.org/XML/1998/namespace 不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-238">The specified prefix is "xml" and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public override void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="73a95-239">删除当前节点的所有指定特性和子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-239">Removes all specified attributes and children of the current node.</span>
          </span>
          <span data-ttu-id="73a95-240">不删除默认属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-240">Default attributes are not removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73a95-241">下面的示例从根元素中移除所有属性和子节点。</span><span class="sxs-lookup"><span data-stu-id="73a95-241">The following example removes all attributes and child nodes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllAttributes">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAllAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAllAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAllAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="73a95-242">从元素中删除所有指定的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-242">Removes all specified attributes from the element.</span>
          </span>
          <span data-ttu-id="73a95-243">不删除默认属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-243">Default attributes are not removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-244">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="73a95-244">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-245">下面的示例从根元素中移除所有属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-245">The following example removes all attributes from the root element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-246">移除指定的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-246">Removes the specified attribute.</span>
          </span>
          <span data-ttu-id="73a95-247">（如果删除的特性具有默认值时，则将立即替换它）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-247">(If the removed attribute has a default value, it is immediately replaced).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="73a95-248">要删除的特性的名称。该名称限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-248">The name of the attribute to remove.This is a qualified name.</span>
          </span>
          <span data-ttu-id="73a95-249">它针对匹配节点的 <see langword="Name" /> 属性进行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-249">It is matched against the <see langword="Name" /> property of the matching node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-250">按名称删除特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-250">Removes an attribute by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-251">如果已知删除的特性具有默认值，则立即出现一个属性，它包含默认值并且，如果适用，对应的命名空间 URI、 本地名称和前缀。</span><span class="sxs-lookup"><span data-stu-id="73a95-251">If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-252">下面的示例中的元素中删除属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-252">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73a95-253">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-253">The node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (localName As String, namespaceURI As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="73a95-254">要移除的特性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-254">The local name of the attribute to remove.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-255">要移除的特性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-255">The namespace URI of the attribute to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-256">移除具有指定本地名称和命名空间 URI 的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-256">Removes an attribute with the specified local name and namespace URI.</span>
          </span>
          <span data-ttu-id="73a95-257">（如果删除的特性具有默认值时，则将立即替换它）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-257">(If the removed attribute has a default value, it is immediately replaced).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-258">如果已知删除的特性具有默认值，则立即出现一个属性，它包含默认值并且，如果适用，对应的命名空间 URI、 本地名称和前缀。</span><span class="sxs-lookup"><span data-stu-id="73a95-258">If the removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-259">下面的示例中的元素中删除属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-259">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73a95-260">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-260">The node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeAt">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveAttributeAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveAttributeAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeAt (i As Integer) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveAttributeAt(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="73a95-261">要删除的节点的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-261">The index of the node to remove.</span>
          </span>
          <span data-ttu-id="73a95-262">第一个节点的索引为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-262">The first node has index 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-263">从元素中删除具有指定索引的特性节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-263">Removes the attribute node with the specified index from the element.</span>
          </span>
          <span data-ttu-id="73a95-264">（如果删除的特性具有默认值时，则将立即替换它）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-264">(If the removed attribute has a default value, it is immediately replaced).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-265">移除的特性节点；如果在给定索引位置没有节点，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-265">The attribute node removed or <see langword="null" /> if there is no node at the given index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-266">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="73a95-266">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-267">下面的示例中的元素中删除属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-267">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-268">移除 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-268">Removes an <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (System.Xml.XmlAttribute oldAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(class System.Xml.XmlAttribute oldAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (oldAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::Xml::XmlAttribute ^ oldAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="oldAttr">
          <span data-ttu-id="73a95-269">要移除的 <see langword="XmlAttribute" /> 节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-269">The <see langword="XmlAttribute" /> node to remove.</span>
          </span>
          <span data-ttu-id="73a95-270">如果移除的特性具有默认值，则立即替换它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-270">If the removed attribute has a default value, it is immediately replaced.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-271">删除指定的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-271">Removes the specified <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-272">移除的 <see langword="XmlAttribute" />；如果 <paramref name="oldAttr" /> 不是 <see langword="null" /> 的特性节点，则为 <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-272">The removed <see langword="XmlAttribute" /> or <see langword="null" /> if <paramref name="oldAttr" /> is not an attribute node of the <see langword="XmlElement" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73a95-273">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-273">This node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="73a95-274">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-274">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-275">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-275">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-276">移除由本地名称和命名空间 URI 指定的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-276">Removes the <see cref="T:System.Xml.XmlAttribute" /> specified by the local name and namespace URI.</span>
          </span>
          <span data-ttu-id="73a95-277">（如果删除的特性具有默认值时，则将立即替换它）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-277">(If the removed attribute has a default value, it is immediately replaced).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-278">移除的 <see langword="XmlAttribute" />；如果 <see langword="null" /> 不具有匹配的特性节点，则为 <see langword="XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-278">The removed <see langword="XmlAttribute" /> or <see langword="null" /> if the <see langword="XmlElement" /> does not have a matching attribute node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="73a95-279">下面的示例中的元素中删除属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-279">The following example removes an attribute from an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73a95-280">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-280">This node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-281">获取作为架构验证的结果分配给此节点的后架构验证信息集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-281">Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73a95-282">包含此节点的架构验证后信息集的 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-282">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-283"><xref:System.Xml.XmlElement.SchemaInfo%2A>时验证此节点设置属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-283">The <xref:System.Xml.XmlElement.SchemaInfo%2A> property is set when this node is validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-284">设置所指定特性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-284">Sets the value of the specified attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="73a95-285">要创建或更改的特性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-285">The name of the attribute to create or alter.</span>
          </span>
          <span data-ttu-id="73a95-286">这是限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-286">This is a qualified name.</span>
          </span>
          <span data-ttu-id="73a95-287">如果该名称包含一个冒号，则将其解析为前缀和本地名称两个部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-287">If the name contains a colon it is parsed into prefix and local name components.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="73a95-288">要为此特性设置的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-288">The value to set for the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-289">设置具有指定名称的特性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-289">Sets the value of the attribute with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-290">如果具有相同名称的属性已存在于该元素，其值更改为的`value`。</span><span class="sxs-lookup"><span data-stu-id="73a95-290">If an attribute with the same name is already present in the element, its value is changed to that of `value`.</span></span> <span data-ttu-id="73a95-291">`value` 是一个简单的字符串。</span><span class="sxs-lookup"><span data-stu-id="73a95-291">`value` is a simple string.</span></span> <span data-ttu-id="73a95-292">它不会被解析为设置它。</span><span class="sxs-lookup"><span data-stu-id="73a95-292">It is not parsed as it is being set.</span></span> <span data-ttu-id="73a95-293">任何标记，如语法识别为实体引用，被视为文字文本，并需要正确写出时由实现进行转义。若要将分配一个包含实体引用的属性值，用户必须创建<xref:System.Xml.XmlAttribute>节点以及任何<xref:System.Xml.XmlText>和<xref:System.Xml.XmlEntityReference>节点，生成适当的子树，并使用<xref:System.Xml.XmlElement.SetAttributeNode%2A>要分配为属性的值。</span><span class="sxs-lookup"><span data-stu-id="73a95-293">Any markup, such as syntax to be recognized as an entity reference, is treated as literal text and needs to be properly escaped by the implementation when it is written out. In order to assign an attribute value that contains entity references, the user must create an <xref:System.Xml.XmlAttribute> node plus any <xref:System.Xml.XmlText> and <xref:System.Xml.XmlEntityReference> nodes, build the appropriate subtree and use <xref:System.Xml.XmlElement.SetAttributeNode%2A> to assign it as the value of an attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="73a95-294">指定的名称包含无效字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-294">The specified name contains an invalid character.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73a95-295">该节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-295">The node is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual string SetAttribute (string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SetAttribute(string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttribute (localName As String, namespaceURI As String, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ SetAttribute(System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="73a95-296">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-296">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-297">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-297">The namespace URI of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="73a95-298">要为此特性设置的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-298">The value to set for the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-299">设置具有指定本地名称和命名空间 URI 的特性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-299">Sets the value of the attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-300">特性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-300">The attribute value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="73a95-301">添加一个新 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-301">Adds a new <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (System.Xml.XmlAttribute newAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(class System.Xml.XmlAttribute newAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (newAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::Xml::XmlAttribute ^ newAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newAttr">
          <span data-ttu-id="73a95-302">要添加到该元素的特性集合的 <see langword="XmlAttribute" /> 节点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-302">The <see langword="XmlAttribute" /> node to add to the attribute collection for this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-303">添加指定的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-303">Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-304">如果该特性替换同名现有特性，则返回旧 <see langword="XmlAttribute" />；否则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-304">If the attribute replaces an existing attribute with the same name, the old <see langword="XmlAttribute" /> is returned; otherwise, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-305">如果具有该名称的属性已存在于该元素，则将它替换为一个新。</span><span class="sxs-lookup"><span data-stu-id="73a95-305">If an attribute with that name is already present in the element, it is replaced by the new one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="73a95-306">
            <paramref name="newAttr" /> 是从不同于创建此节点的文档创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-306">The <paramref name="newAttr" /> was created from a different document than the one that created this node.</span>
          </span>
          <span data-ttu-id="73a95-307">或者此节点是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-307">Or this node is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="73a95-308">
            <paramref name="newAttr" /> 已经是另一个 <see langword="XmlElement" /> 对象的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-308">The <paramref name="newAttr" /> is already an attribute of another <see langword="XmlElement" /> object.</span>
          </span>
          <span data-ttu-id="73a95-309">您必须显式克隆 <see langword="XmlAttribute" /> 节点以在其他 <see langword="XmlElement" /> 对象中重用它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-309">You must explicitly clone <see langword="XmlAttribute" /> nodes to re-use them in other <see langword="XmlElement" /> objects.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="73a95-310">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-310">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="73a95-311">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-311">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-312">添加指定的 <see cref="T:System.Xml.XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-312">Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="73a95-313">要添加的 <see langword="XmlAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-313">The <see langword="XmlAttribute" /> to add.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-314">`XmlAttribute`没有任何子级。</span><span class="sxs-lookup"><span data-stu-id="73a95-314">The `XmlAttribute` does not have any children.</span></span> <span data-ttu-id="73a95-315">使用<xref:System.Xml.XmlAttribute.Value%2A>分配给属性的一个文本值或使用<xref:System.Xml.XmlNode.AppendChild%2A>（或类似的方法） 将子级添加到该属性。</span><span class="sxs-lookup"><span data-stu-id="73a95-315">Use <xref:System.Xml.XmlAttribute.Value%2A> to assign a text value to the attribute or use <xref:System.Xml.XmlNode.AppendChild%2A> (or a similar method) to add children to the attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-316">下面的示例将属性添加到元素。</span><span class="sxs-lookup"><span data-stu-id="73a95-316">The following example adds an attribute to an element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="73a95-317">要保存到其中的 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-317">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-318">将该节点的所有子项保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-318">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-319">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="73a95-319">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-320">下面的示例向控制台显示元素的内容。</span><span class="sxs-lookup"><span data-stu-id="73a95-320">The following example displays the contents of the element to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="73a95-321">要保存到其中的 <see langword="XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-321">The <see langword="XmlWriter" /> to which you want to save.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="73a95-322">将当前节点保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="73a95-322">Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73a95-323">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="73a95-323">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73a95-324">下面的示例将属性添加到元素，然后显示经过修改的元素。</span><span class="sxs-lookup"><span data-stu-id="73a95-324">The following example adds an attribute to an element and then displays the modified element.</span></span>  
  
 [!code-cpp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>