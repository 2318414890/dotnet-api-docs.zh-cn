<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlEntityReference.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54fb5a058223b2b17800e19137b2b09c4ac742b5d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fb5a058223b2b17800e19137b2b09c4ac742b5d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlEntityReference">
          <source>Represents an entity reference node.</source>
          <target state="translated">表示实体引用节点。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
          <source>The name of the entity reference; see the <ph id="ph1">&lt;see cref="P:System.Xml.XmlEntityReference.Name" /&gt;</ph> property.</source>
          <target state="translated">实体引用的名称，请参见 <ph id="ph1">&lt;see cref="P:System.Xml.XmlEntityReference.Name" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
          <source>The parent XML document.</source>
          <target state="translated">父 XML 文档。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
          <source>Do not instantiate an <ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> directly; instead, use methods such as <ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateEntityReference%2A&gt;</ph>.</source>
          <target state="translated">不要实例化<ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph>直接; 相反，使用方法，如<ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateEntityReference%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>Gets the base Uniform Resource Identifier (URI) of the current node.</source>
          <target state="translated">获取当前节点的基础统一资源标识符 (URI)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The location from which the node was loaded.</source>
          <target state="translated">从其加载节点的位置。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
          <target state="translated">联网的 XML 文档的聚合使用各种 World Wide Web Consortium (W3C) 标准包含机制的数据块组成，因此包含来自不同位置的节点。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The <ph id="ph1">`BaseURI`</ph> tells you where these nodes came from.</source>
          <target state="translated"><ph id="ph1">`BaseURI`</ph>告诉这些节点来自何处。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>If there is no base URI for the nodes being returned (maybe they were parsed from an in-memory string), <ph id="ph1">&lt;xref:System.String.Empty&gt;</ph> is returned.</source>
          <target state="translated">如果没有要返回的节点 （甚至从内存中字符串分析），没有基 URI<ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>返回。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source><ph id="ph1">`BaseURI`</ph> walks the node tree looking for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the XmlDocument in all cases.</source>
          <target state="translated"><ph id="ph1">`BaseURI`</ph> 查找步程节点树，以查找实体引用边界，因此如果展开实体，此信息不会保留和此属性在所有情况下返回 XmlDocument 的位置。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>For additional information on <ph id="ph1">`BaseURI`</ph> and how it behaves with other node types, see <ph id="ph2">&lt;xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">有关其他信息<ph id="ph1">`BaseURI`</ph>以及如何其行为与其他节点类型，请参阅<ph id="ph2">&lt;xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The following example displays information on entity reference node, including its base URI.</source>
          <target state="translated">下面的示例显示了在实体引用节点，包括它的基 URI 的信息。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The sample uses the file, <ph id="ph1">`uri.xml`</ph>, as input.</source>
          <target state="translated">此示例使用该文件，<ph id="ph1">`uri.xml`</ph>作为输入。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.BaseURI">
          <source>The <ph id="ph1">`style.xml`</ph> file contains the XML string <ph id="ph2">`&lt;style&gt;hardcover&lt;/style&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">`style.xml`</ph>文件包含的 XML 字符串<ph id="ph2">`&lt;style&gt;hardcover&lt;/style&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to recursively clone the subtree under the specified node; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to clone only the node itself.</source>
          <target state="translated">若要递归地克隆指定节点下的子树，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅克隆节点本身，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>For <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes, this method always returns an entity reference node with no children.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 节点，此方法总是返回不带任何子级的实体引用节点。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>The replacement text is set when the node is inserted into a parent.</source>
          <target state="translated">当将节点插入父级时，设置替换文本。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>Creates a duplicate of this node.</source>
          <target state="translated">创建此节点的副本。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>The cloned node.</source>
          <target state="translated">克隆的节点。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>This method serves as a copy constructor for nodes.</source>
          <target state="translated">此方法可作为节点的复制构造函数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
          <source>The cloned node has no parent (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph> returns <ph id="ph2">`null`</ph>).</source>
          <target state="translated">克隆的节点具有没有父级 (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph>返回<ph id="ph2">`null`</ph>)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>Gets a value indicating whether the node is read-only.</source>
          <target state="translated">获取指示节点是否只读的值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the node is read-only; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果节点是只读的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>Because <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes are read-only, this property always returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">由于 <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 节点为只读，该属性总是返回 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>A read-only node is one whose properties, attributes, or children cannot be changed.</source>
          <target state="translated">只读节点是一个无法更改其属性、 属性或子级。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>However, you can remove a read-only node from the tree and insert it somewhere else.</source>
          <target state="translated">但是，你可以从树中删除只读节点，并将它的其他位置。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.IsReadOnly">
          <source>The following example shows how to use the <ph id="ph1">`IsReadOnly`</ph> property.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">`IsReadOnly`</ph> 属性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.LocalName">
          <source>Gets the local name of the node.</source>
          <target state="translated">获取节点的本地名称。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.LocalName">
          <source>For <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes, this property returns the name of the entity referenced.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 节点，此属性返回引用的实体的名称。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.Name">
          <source>Gets the name of the node.</source>
          <target state="translated">获取节点的名称。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.Name">
          <source>The name of the entity referenced.</source>
          <target state="translated">引用的实体的名称。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.Name">
          <source>The following example displays information on the entity reference node.</source>
          <target state="translated">下面的示例显示了在实体引用节点上的信息。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.NodeType">
          <source>Gets the type of the node.</source>
          <target state="translated">获取节点的类型。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.NodeType">
          <source>The node type.</source>
          <target state="translated">节点类型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.NodeType">
          <source>For <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes, the value is XmlNodeType.EntityReference.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 节点，该值是 XmlNodeType.EntityReference。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.Value">
          <source>Gets or sets the value of the node.</source>
          <target state="translated">获取或设置节点的值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.Value">
          <source>The value of the node.</source>
          <target state="translated">节点的值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlEntityReference.Value">
          <source>For <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> nodes, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see langword="XmlEntityReference" /&gt;</ph> 节点，此属性返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.Value">
          <source>Node is read-only.</source>
          <target state="translated">节点是只读的。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlEntityReference.Value">
          <source>Setting the property.</source>
          <target state="translated">设置该属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> to which you want to save.</source>
          <target state="translated">要保存到其中的 <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
          <source>Saves all the children of the node to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">将该节点的所有子项保存到指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> to which you want to save.</source>
          <target state="translated">要保存到其中的 <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
          <source>Saves the node to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">将节点保存到指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>