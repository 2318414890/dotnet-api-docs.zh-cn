<Type Name="XmlEntityReference" FullName="System.Xml.XmlEntityReference">
  <TypeSignature Language="C#" Value="public class XmlEntityReference : System.Xml.XmlLinkedNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlEntityReference extends System.Xml.XmlLinkedNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlEntityReference" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlEntityReference&#xA;Inherits XmlLinkedNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlEntityReference : System::Xml::XmlLinkedNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlLinkedNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2fb21-101">表示实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="2fb21-101">Represents an entity reference node.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="M:System.Xml.XmlDocument.CreateEntityReference(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlEntityReference (string name, System.Xml.XmlDocument doc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Xml.XmlDocument doc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (name As String, doc As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlEntityReference(System::String ^ name, System::Xml::XmlDocument ^ doc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2fb21-102">实体引用的名称，请参见 <see cref="P:System.Xml.XmlEntityReference.Name" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="2fb21-102">The name of the entity reference; see the <see cref="P:System.Xml.XmlEntityReference.Name" /> property.</span></span></param>
        <param name="doc"><span data-ttu-id="2fb21-103">父 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2fb21-103">The parent XML document.</span></span></param>
        <summary><span data-ttu-id="2fb21-104">初始化 <see cref="T:System.Xml.XmlEntityReference" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2fb21-104">Initializes a new instance of the <see cref="T:System.Xml.XmlEntityReference" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb21-105">不要实例化<xref:System.Xml.XmlEntityReference>直接; 相反，使用方法，如<xref:System.Xml.XmlDocument.CreateEntityReference%2A>。</span><span class="sxs-lookup"><span data-stu-id="2fb21-105">Do not instantiate an <xref:System.Xml.XmlEntityReference> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateEntityReference%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntityReference.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fb21-106">获取当前节点的基础统一资源标识符 (URI)。</span><span class="sxs-lookup"><span data-stu-id="2fb21-106">Gets the base Uniform Resource Identifier (URI) of the current node.</span></span></summary>
        <value><span data-ttu-id="2fb21-107">从其加载节点的位置。</span><span class="sxs-lookup"><span data-stu-id="2fb21-107">The location from which the node was loaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb21-108">联网的 XML 文档的聚合使用各种 World Wide Web Consortium (W3C) 标准包含机制的数据块组成，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="2fb21-108">A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="2fb21-109">`BaseURI`告诉这些节点来自何处。</span><span class="sxs-lookup"><span data-stu-id="2fb21-109">The `BaseURI` tells you where these nodes came from.</span></span> <span data-ttu-id="2fb21-110">如果没有要返回的节点 （甚至从内存中字符串分析），没有基 URI<xref:System.String.Empty>返回。</span><span class="sxs-lookup"><span data-stu-id="2fb21-110">If there is no base URI for the nodes being returned (maybe they were parsed from an in-memory string), <xref:System.String.Empty> is returned.</span></span>  
  
 <span data-ttu-id="2fb21-111">`BaseURI` 查找步程节点树，以查找实体引用边界，因此如果展开实体，此信息不会保留和此属性在所有情况下返回 XmlDocument 的位置。</span><span class="sxs-lookup"><span data-stu-id="2fb21-111">`BaseURI` walks the node tree looking for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the XmlDocument in all cases.</span></span>  
  
 <span data-ttu-id="2fb21-112">有关其他信息`BaseURI`以及如何其行为与其他节点类型，请参阅<xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2fb21-112">For additional information on `BaseURI` and how it behaves with other node types, see <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2fb21-113">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="2fb21-113">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fb21-114">下面的示例显示了在实体引用节点，包括它的基 URI 的信息。</span><span class="sxs-lookup"><span data-stu-id="2fb21-114">The following example displays information on entity reference node, including its base URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlEntityReference.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlEntityReference.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlEntityReference.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlEntityReference.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlEntityReference.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlEntityReference.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="2fb21-115">此示例使用该文件，`uri.xml`作为输入。</span><span class="sxs-lookup"><span data-stu-id="2fb21-115">The sample uses the file, `uri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlEntityReference.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlEntityReference.BaseURI Example/XML/source.xml#2)]  
  
 <span data-ttu-id="2fb21-116">`style.xml`文件包含的 XML 字符串`<style>hardcover</style>`。</span><span class="sxs-lookup"><span data-stu-id="2fb21-116">The `style.xml` file contains the XML string `<style>hardcover</style>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="2fb21-117">若要递归地克隆指定节点下的子树，则为 <see langword="true" />；若仅克隆节点本身，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fb21-117"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span> <span data-ttu-id="2fb21-118">对于 <see langword="XmlEntityReference" /> 节点，此方法总是返回不带任何子级的实体引用节点。</span><span class="sxs-lookup"><span data-stu-id="2fb21-118">For <see langword="XmlEntityReference" /> nodes, this method always returns an entity reference node with no children.</span></span> <span data-ttu-id="2fb21-119">当将节点插入父级时，设置替换文本。</span><span class="sxs-lookup"><span data-stu-id="2fb21-119">The replacement text is set when the node is inserted into a parent.</span></span></param>
        <summary><span data-ttu-id="2fb21-120">创建此节点的副本。</span><span class="sxs-lookup"><span data-stu-id="2fb21-120">Creates a duplicate of this node.</span></span></summary>
        <returns><span data-ttu-id="2fb21-121">克隆的节点。</span><span class="sxs-lookup"><span data-stu-id="2fb21-121">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb21-122">此方法可作为节点的复制构造函数。</span><span class="sxs-lookup"><span data-stu-id="2fb21-122">This method serves as a copy constructor for nodes.</span></span> <span data-ttu-id="2fb21-123">克隆的节点具有没有父级 (<xref:System.Xml.XmlNode.ParentNode%2A>返回`null`)。</span><span class="sxs-lookup"><span data-stu-id="2fb21-123">The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntityReference.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fb21-124">获取指示节点是否只读的值。</span><span class="sxs-lookup"><span data-stu-id="2fb21-124">Gets a value indicating whether the node is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="2fb21-125">如果节点是只读的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2fb21-125"><see langword="true" /> if the node is read-only; otherwise <see langword="false" />.</span></span>  
  
 <span data-ttu-id="2fb21-126">由于 <see langword="XmlEntityReference" /> 节点为只读，该属性总是返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="2fb21-126">Because <see langword="XmlEntityReference" /> nodes are read-only, this property always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb21-127">只读节点是一个无法更改其属性、 属性或子级。</span><span class="sxs-lookup"><span data-stu-id="2fb21-127">A read-only node is one whose properties, attributes, or children cannot be changed.</span></span> <span data-ttu-id="2fb21-128">但是，你可以从树中删除只读节点，并将它的其他位置。</span><span class="sxs-lookup"><span data-stu-id="2fb21-128">However, you can remove a read-only node from the tree and insert it somewhere else.</span></span>  
  
 <span data-ttu-id="2fb21-129">此属性是文档对象模型 (DOM) 的 Microsoft 扩展。</span><span class="sxs-lookup"><span data-stu-id="2fb21-129">This property is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fb21-130">下面的示例演示如何使用 `IsReadOnly` 属性。</span><span class="sxs-lookup"><span data-stu-id="2fb21-130">The following example shows how to use the `IsReadOnly` property.</span></span>  
  
 [!code-cpp[Classic WebData XmlEntityReference.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlEntityReference.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlEntityReference.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlEntityReference.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlEntityReference.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlEntityReference.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntityReference.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fb21-131">获取节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="2fb21-131">Gets the local name of the node.</span></span></summary>
        <value><span data-ttu-id="2fb21-132">对于 <see langword="XmlEntityReference" /> 节点，此属性返回引用的实体的名称。</span><span class="sxs-lookup"><span data-stu-id="2fb21-132">For <see langword="XmlEntityReference" /> nodes, this property returns the name of the entity referenced.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntityReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fb21-133">获取节点的名称。</span><span class="sxs-lookup"><span data-stu-id="2fb21-133">Gets the name of the node.</span></span></summary>
        <value><span data-ttu-id="2fb21-134">引用的实体的名称。</span><span class="sxs-lookup"><span data-stu-id="2fb21-134">The name of the entity referenced.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2fb21-135">下面的示例显示了在实体引用节点上的信息。</span><span class="sxs-lookup"><span data-stu-id="2fb21-135">The following example displays information on the entity reference node.</span></span>  
  
 [!code-cpp[Classic WebData XmlEntityReference.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlEntityReference.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlEntityReference.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlEntityReference.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlEntityReference.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlEntityReference.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntityReference.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fb21-136">获取节点的类型。</span><span class="sxs-lookup"><span data-stu-id="2fb21-136">Gets the type of the node.</span></span></summary>
        <value><span data-ttu-id="2fb21-137">节点类型。</span><span class="sxs-lookup"><span data-stu-id="2fb21-137">The node type.</span></span> <span data-ttu-id="2fb21-138">对于 <see langword="XmlEntityReference" /> 节点，该值是 XmlNodeType.EntityReference。</span><span class="sxs-lookup"><span data-stu-id="2fb21-138">For <see langword="XmlEntityReference" /> nodes, the value is XmlNodeType.EntityReference.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlEntityReference.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fb21-139">获取或设置节点的值。</span><span class="sxs-lookup"><span data-stu-id="2fb21-139">Gets or sets the value of the node.</span></span></summary>
        <value><span data-ttu-id="2fb21-140">节点的值。</span><span class="sxs-lookup"><span data-stu-id="2fb21-140">The value of the node.</span></span> <span data-ttu-id="2fb21-141">对于 <see langword="XmlEntityReference" /> 节点，此属性返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2fb21-141">For <see langword="XmlEntityReference" /> nodes, this property returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2fb21-142">节点是只读的。</span><span class="sxs-lookup"><span data-stu-id="2fb21-142">Node is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2fb21-143">设置该属性。</span><span class="sxs-lookup"><span data-stu-id="2fb21-143">Setting the property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="2fb21-144">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2fb21-144">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="2fb21-145">将该节点的所有子项保存到指定的 <see cref="T:System.Xml.XmlWriter" /> 中。</span><span class="sxs-lookup"><span data-stu-id="2fb21-145">Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb21-146">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="2fb21-146">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="2fb21-147">要保存到其中的 <see langword="XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2fb21-147">The <see langword="XmlWriter" /> to which you want to save.</span></span></param>
        <summary><span data-ttu-id="2fb21-148">将节点保存到指定的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2fb21-148">Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb21-149">此方法是 Microsoft 扩展到文档对象模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="2fb21-149">This method is a Microsoft extension to the Document Object Model (DOM).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>