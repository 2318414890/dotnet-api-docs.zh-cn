<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventSource.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca45660fa9656f72899783c29825f675f5a9aaf846b6a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">60fa9656f72899783c29825f675f5a9aaf846b6a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Provides the ability to create events for event tracing for Windows (ETW).</source>
          <target state="translated">提供为 Windows 事件跟踪 (ETW) 创建事件的功能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This class is intended to be inherited by a user class that provides specific events to be used for ETW.</source>
          <target state="translated">此类旨在由提供特定的事件，以便用于 ETW 用户类继承的。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> methods are called to log the events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph>方法调用来记录事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此类型实现<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">在使用完类型后，您应直接或间接释放类型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>中的方法<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>块。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，请使用 <ph id="ph1">`using`</ph>（在 C# 中）或 <ph id="ph2">`Using`</ph>（在 Visual Basic 中）等语言构造。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口主题。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The basic functionality of <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is sufficient for most applications.</source>
          <target state="translated">基本功能<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>足以满足大多数应用程序。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If you want more control over the ETW manifest that is created, you can apply the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventAttribute&gt;</ph> attribute to the methods.</source>
          <target state="translated">如果你希望更好地控制创建的 ETW 清单，可以应用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventAttribute&gt;</ph>属性的方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</source>
          <target state="translated">对于高级的事件源应用程序，则可能截获发送到派生的事件源的命令并更改筛选，或者若要使操作 （例如转储数据结构） 由继承者执行。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</source>
          <target state="translated">事件源可以立即激活 Windows ETW 控制器，例如 Logman 工具。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>It is also possible to programmatically control and intercept the data dispatcher.</source>
          <target state="translated">还有可能以编程方式控制和截获数据调度程序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph> class provides additional functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventListener&gt;</ph>类提供了其他功能。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Starting with <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> provides channel support and some of the event source validation rules have been relaxed.</source>
          <target state="translated">从开始<ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>，<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>提供通道支持和某些事件源验证规则放宽了。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This means:</source>
          <target state="translated">这意味着：</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> types may now implement interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> 类型现在可能实现接口。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</source>
          <target state="translated">这样使用接口来定义常见的日志记录目标的高级日志记录系统中使用事件源类型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The concept of a utility event source type has been introduced.</source>
          <target state="translated">引入了一个实用工具事件源类型的概念。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overloads.</source>
          <target state="translated">此功能使共享的代码跨多个事件源类型的项目中以启用方案，如优化<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>For a version of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class that provides features such as channel support you are targeting <ph id="ph2">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph> or earlier, see <bpt id="p1">[</bpt>Microsoft EventSource Library 1.0.16<ept id="p1">](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource)</ept>.</source>
          <target state="translated">版本的<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>以提供功能，例如通道支持你的类为目标<ph id="ph2">[!INCLUDE[net_v451](~/includes/net-v451-md.md)]</ph>或更早版本，请参阅<bpt id="p1">[</bpt>Microsoft EventSource 库 1.0.16<ept id="p1">](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The following example shows a simple implementation of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">下面的示例演示的简单实现<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The following example shows a more complex implementation of the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">下面的示例演示的一个更复杂实现<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>This type is thread safe.</source>
          <target state="translated">此类型是线程安全的。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception when an error occurs in the underlying Windows code; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">在从属位置的 Windows 代码生成引发异常，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的新实例，并指定在 Windows 基础代码发生错误时是否引发异常。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">一个枚举值的按位组合，这些枚举值指定要应用于事件源的配置设置。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified configuration settings.</source>
          <target state="translated">使用指定的配置设置创建 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">指定<ph id="ph1">`settings`</ph>时<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>构造，可指定是否在基于清单的或自我描述格式写入事件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">此外，你可以指定事件写入过程中发生错误时应引发异常。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>The name to apply to the event source.</source>
          <target state="translated">要应用于事件源的名称。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">不得为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified name.</source>
          <target state="translated">使用指定的名称创建 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">一个枚举值的按位组合，这些枚举值指定要应用于事件源的配置设置。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The key-value pairs that specify traits for the event source.</source>
          <target state="translated">指定事件源特性的键值对。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> to be used with non-contract events that contains the specified settings and traits.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 的新实例，以用于其中包含指定设置和特性的非约定事件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">特征为事件提供额外信息，并由事件侦听器解释。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</source>
          <target state="translated">特征被指定为键 / 值对，而如果中对未指定，将发生异常。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>You can retrieve a trait by passing the key to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, method.</source>
          <target state="translated">您可以通过传递的关键检索特性<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>，方法。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">指定<ph id="ph1">`settings`</ph>时<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>构造，可指定是否在基于清单的或自我描述格式写入事件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">此外，你可以指定事件写入过程中发生错误时应引发异常。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> is not specified in key-value pairs.</source>
          <target state="translated">键值对中未指定 <ph id="ph1">&lt;paramref name="traits" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>The name to apply to the event source.</source>
          <target state="translated">要应用于事件源的名称。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">不得为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">一个枚举值的按位组合，这些枚举值指定要应用于事件源的配置设置。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified name and settings.</source>
          <target state="translated">使用指定的名称和设置创建 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>Specifying <ph id="ph1">`settings`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">指定<ph id="ph1">`settings`</ph>时<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>构造，可指定是否在基于清单的或自我描述格式写入事件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">此外，你可以指定事件写入过程中发生错误时应引发异常。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The name to apply to the event source.</source>
          <target state="translated">要应用于事件源的名称。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Must not be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">不得为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</source>
          <target state="translated">一个枚举值的按位组合，这些枚举值指定要应用于事件源的配置设置。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>The key-value pairs that specify traits for the event source.</source>
          <target state="translated">指定事件源特性的键值对。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class with the specified configuration settings.</source>
          <target state="translated">使用指定的配置设置创建 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">特征为事件提供额外信息，并由事件侦听器解释。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</source>
          <target state="translated">特征被指定为键 / 值对，而如果中对未指定，将发生异常。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>You can retrieve a trait by passing the key to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>, method.</source>
          <target state="translated">您可以通过传递的关键检索特性<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A&gt;</ph>，方法。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>Specifying <ph id="ph1">`config`</ph> when the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</source>
          <target state="translated">指定<ph id="ph1">`config`</ph>时<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>构造，可指定是否在基于清单的或自我描述格式写入事件。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source>In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</source>
          <target state="translated">此外，你可以指定事件写入过程中发生错误时应引发异常。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventSourceName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
          <source><ph id="ph1">&lt;paramref name="traits" /&gt;</ph> is not specified in key-value pairs.</source>
          <target state="translated">键值对中未指定 <ph id="ph1">&lt;paramref name="traits" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>Gets any exception that was thrown during the construction of the event source.</source>
          <target state="translated">获取在事件源的构造过程中引发的任何异常。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>The exception that was thrown during the construction of the event source, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no exception was thrown.</source>
          <target state="translated">在事件源的构造过程中引发的异常；如果没有引发异常，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> constructors do not throw exceptions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> 构造函数不会引发异常。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
          <source>Instead, any exception that is thrown is assigned to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A&gt;</ph> property and logged by the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">相反，则会引发任何异常分配给<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A&gt;</ph>属性和记录的<ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>Gets the activity ID of the current thread.</source>
          <target state="translated">获取当前线程的活动 ID。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
          <source>The activity ID of the current thread.</source>
          <target state="translated">当前线程的活动 ID。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">`Dispose`</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 方法使 <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">`Dispose`</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">`Dispose`</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 类使用的非托管资源，并可以选择释放托管资源。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">`Finalize`</ph>方法。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请注意不要引用对象已释放方法调用之前释放在早期<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted">
          <source>Occurs when a command comes from an event listener.</source>
          <target state="translated">当命令来自事件侦听器时出现。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Finalize">
          <source>Allows the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</source>
          <target state="translated">允许 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 对象在被垃圾回收之前尝试释放资源并执行其他清理操作。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">返回与当前事件源关联的 XML 清单的字符串。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The type of the event source.</source>
          <target state="translated">事件源的类型。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The path to the assembly file (.dll) to include in the <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> element of the manifest.</source>
          <target state="translated">要包含在清单的 <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> 元素中的程序集文件 (.dll) 的路径。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">返回与当前事件源关联的 XML 清单的字符串。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The XML data string.</source>
          <target state="translated">XML 数据字符串。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
          <source>The information about the XML schema for the event manifest, see <bpt id="p1">[</bpt>Event Manifest Schema<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228077)</ept> in the MSDN Library.</source>
          <target state="translated">有关事件清单的 XML 架构的信息请参阅<bpt id="p1">[</bpt>事件清单架构<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228077)</ept>MSDN 库中。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The type of the event source.</source>
          <target state="translated">事件源的类型。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The path to the assembly file (.dll) file to include in the <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> element of the manifest.</source>
          <target state="translated">要包含在清单的 <bpt id="p1">[</bpt>provider<ept id="p1">](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx)</ept> 元素中的程序集文件 (.dll) 的路径。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>A bitwise combination of the enumeration values that specify how the manifest is generated.</source>
          <target state="translated">一个枚举值的按位组合，这些枚举值指定如何生成清单。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>Returns a string of the XML manifest that is associated with the current event source.</source>
          <target state="translated">返回与当前事件源关联的 XML 清单的字符串。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>The XML data string or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">XML 数据字符串或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
          <source>If <ph id="ph1">`flags`</ph> specifies <ph id="ph2">`OnlyIfNeededForRegistration`</ph> and the <ph id="ph3">`eventSourceType`</ph> specified does not require explicit registration, <ph id="ph4">&lt;xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A&gt;</ph> returns <ph id="ph5">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`flags`</ph>指定<ph id="ph2">`OnlyIfNeededForRegistration`</ph>和<ph id="ph3">`eventSourceType`</ph>指定不需要显式注册<ph id="ph4">&lt;xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A&gt;</ph>返回<ph id="ph5">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>The type of the event source.</source>
          <target state="translated">事件源的类型。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>Gets the unique identifier for this implementation of the event source.</source>
          <target state="translated">获取事件源的实现的唯一标识符。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
          <source>A unique identifier for this event source type.</source>
          <target state="translated">此事件源类型的唯一标识符。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The type of the event source.</source>
          <target state="translated">事件源的类型。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>Gets the friendly name of the event source.</source>
          <target state="translated">获取事件源的好友名称。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The friendly name of the event source.</source>
          <target state="translated">事件源的友好名称。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
          <source>The default is the simple name of the class.</source>
          <target state="translated">默认值为类的简单名称。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetSources">
          <source>Gets a snapshot of all the event sources for the application domain.</source>
          <target state="translated">获取应用程序域的所有事件源的快照。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetSources">
          <source>An enumeration of all the event sources in the application domain.</source>
          <target state="translated">应用程序域中所有事件源的枚举。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>The key of the trait to get.</source>
          <target state="translated">要获取的特性的键。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Gets the trait value associated with the specified key.</source>
          <target state="translated">获取与指定键关联的特性值。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>The trait value associated with the specified key.</source>
          <target state="translated">与指定的键相关联的特性值。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>If the key is not found, returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果未找到该键，则返回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Traits provide additional information for an event and are interpreted by an event listener.</source>
          <target state="translated">特征为事件提供额外信息，并由事件侦听器解释。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
          <source>Traits are specified as key-value pairs when the event source is constructed.</source>
          <target state="translated">构造事件源时，特征被指定为键 / 值对。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Guid">
          <source>The unique identifier for the event source.</source>
          <target state="translated">此事件源的唯一标识符。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Guid">
          <source>A unique identifier for the event source.</source>
          <target state="translated">此事件源的唯一标识符。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Determines whether the current event source is enabled.</source>
          <target state="translated">确定是否已启用当前事件源。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
          <source>Determines whether the current event source is enabled.</source>
          <target state="translated">确定是否已启用当前事件源。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current event source is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用了当前事件源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The level of the event source.</source>
          <target state="translated">事件源级别。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The keyword of the event source.</source>
          <target state="translated">事件源的关键字。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Determines whether the current event source that has the specified level and keyword is enabled.</source>
          <target state="translated">确定是否已启用具有指定级别和关键字的当前事件源。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event source is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用了事件源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>The result of this method is only an approximation of whether a particular event is active.</source>
          <target state="translated">通过此方法的结果仅可大概了解特定的事件是否处于活动状态。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Use it to avoid expensive computation for logging when logging is disabled.</source>
          <target state="translated">使用它可避免在禁用了记录的情况下因记录造成昂贵的计算费用。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
          <source>Event sources may have additional filtering that determines their activity.</source>
          <target state="translated">事件源可能具有确定其活动的附加筛选。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event level to check.</source>
          <target state="translated">要检查的事件级别。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>An event source will be considered enabled when its level is greater than or equal to <bpt id="p1">&lt;c&gt;</bpt>level<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">当事件源的级别大于或等于 <bpt id="p1">&lt;c&gt;</bpt>level<ept id="p1">&lt;/c&gt;</ept> 时，将其视为已启用。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event keywords to check.</source>
          <target state="translated">要检查的事件关键字。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The event channel to check.</source>
          <target state="translated">要检查的事件通道。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Determines whether the current event source is enabled for events with the specified level, keywords and channel.</source>
          <target state="translated">确定是否对带有指定级别、关键字和通道的事件启用了当前事件源。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event source is enabled for the specified event level, keywords and channel; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对指定的事件级别、关键字和通道启用了事件源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>The result of this method is only an approximation of whether a particular event is active.</source>
          <target state="translated">通过此方法的结果仅可大概了解特定的事件是否处于活动状态。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Use it to avoid expensive computation for logging when logging is disabled.</source>
          <target state="translated">使用它可避免在禁用了记录的情况下因记录造成昂贵的计算费用。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>Event sources may have additional filtering that determines their activity..</source>
          <target state="translated">事件源可能具有确定其活动的其他筛选。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
          <source>If the</source>
          <target state="translated">如果</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The friendly name of the class that is derived from the event source.</source>
          <target state="translated">从事件源中派生出来的类的友好名称。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The friendly name of the derived class.</source>
          <target state="translated">派生类的友好名称。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Name">
          <source>The default is the simple name of the class.</source>
          <target state="translated">默认值为类的简单名称。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
          <source>The arguments for the event.</source>
          <target state="translated">事件的自变量。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
          <source>Called when the current event source is updated by the controller.</source>
          <target state="translated">当该控制器更新当前事件源时调用。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The event source to send the command to.</source>
          <target state="translated">对其发送命令的事件源。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The event command to send.</source>
          <target state="translated">要发送的事件命令。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The arguments for the event command.</source>
          <target state="translated">事件命令的自变量。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Sends a command to a specified event source.</source>
          <target state="translated">发送命令到指定的事件源。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph> forwards the command to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> callback.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A&gt;</ph>将转发到命令<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph>回调。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>What the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> does with the command and its arguments is specific to the event source.</source>
          <target state="translated">什么<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>通过该命令执行和其自变量是特定于事件源。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>The command and command arguments are passed to the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph> callback of the specified event source.</source>
          <target state="translated">命令和命令参数传递给<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A&gt;</ph>的指定的事件源的回调。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
          <source>If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</source>
          <target state="translated">如果可能，当前事件源不应影响其他事件侦听器的筛选事件;但是，程序可能无法如果该命令会导致垃圾回收、 刷新，系统或一些其他全局活动。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Sets the activity ID on the current thread.</source>
          <target state="translated">在当前线程上设置活动 ID。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>The current thread's new activity ID, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> to indicate that work on the current thread is not associated with any activity.</source>
          <target state="translated">当前线程的新活动 ID；或者为 <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> 以指示当前线程上的工作与任何活动都不关联。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>Sets the activity ID on the current thread.</source>
          <target state="translated">在当前线程上设置活动 ID。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A&gt;</ph> method sets the activity ID on a per-thread basis.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A&gt;</ph>方法设置基于每个线程的活动 ID。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>All events on the thread will have that activity ID until a new activity is started on the same thread.</source>
          <target state="translated">在同一线程上启动新的活动之前，该线程上的所有事件将都具有该活动 ID。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
          <source>This method is called only by libraries that manage their own threads.</source>
          <target state="translated">仅通过库进行的管理它们自己的线程调用此方法。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>The current thread's new activity ID, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> to indicate that work on the current thread is not associated with any activity.</source>
          <target state="translated">当前线程的新活动 ID；或者为 <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> 以指示当前线程上的工作与任何活动都不关联。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>When this method returns, contains the previous activity ID on the current thread.</source>
          <target state="translated">当此方法返回时，将包含当前线程上以前的活动 ID。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>Sets the activity ID on the current thread, and returns the previous activity ID.</source>
          <target state="translated">在当前线程上设置活动 ID 并返回以前的活动 ID。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29&gt;</ph> method to temporarily overwrite the current thread's activity ID with a new activity ID.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29&gt;</ph>方法暂时使用一个新的活动 id。 覆盖当前线程的活动 ID</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
          <source>You must then restore the previous activity ID by passing the <ph id="ph1">`oldActivityThatWillContinue`</ph> argument to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29&gt;</ph> method.</source>
          <target state="translated">然后，您必须还原以前的活动 ID 通过传递<ph id="ph1">`oldActivityThatWillContinue`</ph>参数<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Tracing.EventSource.Settings">
          <source>Gets the settings applied to this event source.</source>
          <target state="translated">获取应用于此事件源的设置。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Tracing.EventSource.Settings">
          <source>The settings applied to this event source.</source>
          <target state="translated">应用于此事件源的设置。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.ToString">
          <source>Obtains a string representation of the current event source instance.</source>
          <target state="translated">获得当前事件源实例的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.ToString">
          <source>The name and unique identifier that identify the current event source.</source>
          <target state="translated">标识当前事件源的名称和唯一标识符。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Writes an event.</source>
          <target state="translated">写入某个事件。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source>The name of the event to write.</source>
          <target state="translated">要写入的事件的名称。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source>Writes an event without fields, but with the specified name and default options.</source>
          <target state="translated">使用指定的名称和默认选项而非字段来写入事件。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
          <source><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>The name of the event to write.</source>
          <target state="translated">要写入的事件的名称。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>The options such as level, keywords and operation code for the event.</source>
          <target state="translated">事件的级别、关键字和操作代码等选项。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source>Writes an event without fields, but with the specified name and options.</source>
          <target state="translated">使用指定的名称和选项而非字段来写入事件。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
          <source><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">定义事件及其关联数据的类型。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">此类型必须为匿名类型或以 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> 属性进行标记。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The name of the event.</source>
          <target state="translated">事件的名称。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">此类型必须为匿名类型或以 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> 属性进行标记。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>Writes an event with the specified name and data.</source>
          <target state="translated">使用指定的名称和数据写入事件。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`eventName`</ph>是<ph id="ph2">`null`</ph>，事件名称自动派生自的类型 T 的事件数据 (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) 或确定基于类型的名称<ph id="ph4">`T`</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">实例的属性的公共<ph id="ph1">`data`</ph>将写入以递归方式来创建事件字段。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">定义事件及其关联数据的类型。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">此类型必须为匿名类型或以 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> 属性进行标记。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The name of the event.</source>
          <target state="translated">事件的名称。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The event options.</source>
          <target state="translated">事件选项。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">此类型必须为匿名类型或以 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> 属性进行标记。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>Writes an event with the specified name, event data and options.</source>
          <target state="translated">使用指定的名称、事件数据和选项写入事件。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`eventName`</ph>是<ph id="ph2">`null`</ph>，事件名称自动派生自的类型 T 的事件数据 (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) 或确定基于类型的名称<ph id="ph4">`T`</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">实例的属性的公共<ph id="ph1">`data`</ph>将写入以递归方式来创建事件字段。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">定义事件及其关联数据的类型。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">此类型必须为匿名类型或以 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> 属性进行标记。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The name of the event.</source>
          <target state="translated">事件的名称。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The event options.</source>
          <target state="translated">事件选项。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">此类型必须为匿名类型或以 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> 属性进行标记。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>Writes an event with the specified name, options and event data.</source>
          <target state="translated">使用指定的名称、选项和事件数据写入事件。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`eventName`</ph>是<ph id="ph2">`null`</ph>，事件名称自动派生自的类型 T 的事件数据 (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) 或确定基于类型的名称<ph id="ph4">`T`</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">实例的属性的公共<ph id="ph1">`data`</ph>将写入以递归方式来创建事件字段。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The type that defines the event and its associated data.</source>
          <target state="translated">定义事件及其关联数据的类型。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">此类型必须为匿名类型或以 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /&gt;</ph> 属性进行标记。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The name of the event.</source>
          <target state="translated">事件的名称。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The event options.</source>
          <target state="translated">事件选项。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The ID of the activity associated with the event.</source>
          <target state="translated">与事件关联的活动的 ID。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The ID of an associated activity, or <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph> if there is no associated activity.</source>
          <target state="translated">关联活动的 ID；如果没有关联活动，则为 <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>This type must be an anonymous type or marked with the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">此类型必须为匿名类型或以 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /&gt;</ph> 属性进行标记。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>Writes an event with the specified name, options, related activity and event data.</source>
          <target state="translated">使用指定的名称、选项、相关活动和事件数据写入事件。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>If <ph id="ph1">`eventName`</ph> is <ph id="ph2">`null`</ph>, the event name is automatically derived from the type T’s event data (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) or determined based on the name of type <ph id="ph4">`T`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`eventName`</ph>是<ph id="ph2">`null`</ph>，事件名称自动派生自的类型 T 的事件数据 (<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A&gt;</ph>) 或确定基于类型的名称<ph id="ph4">`T`</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
          <source>The public instance properties of <ph id="ph1">`data`</ph> will be written recursively to create the event fields.</source>
          <target state="translated">实例的属性的公共<ph id="ph1">`data`</ph>将写入以递归方式来创建事件字段。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>Writes an event by using the provided event identifier and optional arguments.</source>
          <target state="translated">通过使用提供的事件标识符和可选自变量写入事件。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>The <ph id="ph1">`WriteEvent`</ph> method provides overloads with combinations of string and integer arguments.</source>
          <target state="translated"><ph id="ph1">`WriteEvent`</ph>方法提供了具有字符串和整数自变量组合的重载。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If none of these combinations match the parameters for the call, the compiler uses the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> overload, which is considerably slower than the other overloads.</source>
          <target state="translated">如果没有这些组合匹配调用的参数，编译器将使用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>超负荷运转，这是比其他重载显著变慢。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>See the overload page for details.</source>
          <target state="translated">请参阅重载页面了解详细信息。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>In all cases, the <ph id="ph1">`eventid`</ph> parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated">在所有情况下，<ph id="ph1">`eventid`</ph>参数应大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Tracing.EventSource">
          <source>You can also create a custom overload by using the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> method.</source>
          <target state="translated">你还可以通过创建自定义重载<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>Writes an event by using the provided event identifier.</source>
          <target state="translated">通过使用提供的事件标识符写入事件。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">下面的示例演示如何使用此方法重载来将事件写入。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>A byte array argument.</source>
          <target state="translated">字节数组自变量。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>Writes an event by using the provided event identifier and byte array argument.</source>
          <target state="translated">通过使用提供的事件标识符和字节数组自变量写入事件。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">一个整数自变量。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer argument.</source>
          <target state="translated">通过使用提供的事件标识符和 32 位整数自变量写入事件。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">下面的示例演示如何使用此方法重载来将事件写入。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit integer argument.</source>
          <target state="translated">通过使用提供的事件标识符和 64 位整数自变量写入事件。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>An array of objects.</source>
          <target state="translated">对象数组。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>Writes an event by using the provided event identifier and array of arguments.</source>
          <target state="translated">通过使用提供的事件标识符和自变量数组写入事件。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</source>
          <target state="translated">默认情况下，编译器将调用此重载，如果调用的参数不匹配的其他方法重载之一。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>This overload is much slower than the other overloads, because it does the following:</source>
          <target state="translated">此重载是比其他重载，要慢得多，因为它将执行以下：</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It allocates an array to hold the variable argument.</source>
          <target state="translated">它分配一个数组，以保存变量自变量。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It casts each parameter to an object (which causes allocations for primitive types).</source>
          <target state="translated">它将转换的对象 （这会导致基元类型的分配） 到每个参数。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It assigns these objects to the array.</source>
          <target state="translated">会为数组分配这些对象。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>It calls the function, which then determines the type of each argument so it can be serialized for ETW.</source>
          <target state="translated">它调用的函数，然后确定每个自变量的类型，因此它可以序列化的 ETW。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</source>
          <target state="translated">此重载的高开销并不重要时跟踪低容量事件，因为仅当启用提供程序时使用的方法。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>However, for high-volume events, the performance overhead can be significant.</source>
          <target state="translated">但是，对于大量事件，性能开销非常显著。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You can avoid using <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph> for high-volume payloads by creating a new, faster  overload with the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> method.</source>
          <target state="translated">你可以避免使用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType&gt;</ph>通过创建新的、 更快重载的大容量负载<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>Writes an event by using the provided event identifier and string argument.</source>
          <target state="translated">通过使用提供的事件标识符和字符串自变量写入事件。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>The following example shows how to use this method overload to write an event.</source>
          <target state="translated">下面的示例演示如何使用此方法重载来将事件写入。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">一个整数自变量。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">一个整数自变量。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer arguments.</source>
          <target state="translated">通过使用提供的事件标识符和 32 位整数自变量写入事件。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>A 32-bit integer argument.</source>
          <target state="translated">32 位整数参数。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
          <source>Writes an event by using the provided event identifier and 32-bit integer and string arguments.</source>
          <target state="translated">使用提供的事件标识符、32 位整数和字符串自变量写入事件。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>A 64-bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>A byte array argument.</source>
          <target state="translated">字节数组自变量。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</source>
          <target state="translated">使用指定的标识符、64 位整数和字节数组自变量写入事件数据。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit arguments.</source>
          <target state="translated">通过使用提供的事件标识符和 64 位自变量写入事件。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>A 64-bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</source>
          <target state="translated">使用提供的事件标识符、64 位整数和字符串自变量写入事件。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">32 位整数自变量。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">通过使用提供的事件标识符和自变量写入事件。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">通过使用提供的事件标识符和自变量写入事件。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">一个字符串参数。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>Writes an event by using the provided event identifier and string arguments.</source>
          <target state="translated">通过使用提供的事件标识符和字符串自变量写入事件。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">一个整数自变量。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">一个整数自变量。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An integer argument.</source>
          <target state="translated">一个整数自变量。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and 32-bit integer arguments.</source>
          <target state="translated">通过使用提供的事件标识符和 32 位整数自变量写入事件。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>A 64 bit integer argument.</source>
          <target state="translated">64 位整数自变量。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>Writes an event by using the provided event identifier and 64-bit arguments.</source>
          <target state="translated">通过使用提供的事件标识符和 64 位自变量写入事件。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">32 位整数自变量。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>A 32 bit integer argument.</source>
          <target state="translated">32 位整数参数。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>Writes an event by using the provided event identifier and arguments.</source>
          <target state="translated">通过使用提供的事件标识符和自变量写入事件。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>This value should be between 0 and 65535.</source>
          <target state="translated">该值应介于 0 到 65535 之间。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">一个字符串自变量。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>A string argument.</source>
          <target state="translated">一个字符串参数。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>Writes an event by using the provided event identifier and string arguments.</source>
          <target state="translated">通过使用提供的事件标识符和字符串自变量写入事件。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>When you implement a method that is identified as an ETW event in an <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class.</source>
          <target state="translated">当实现标识为中的 ETW 事件方法<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-派生类。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
          <source>You must call the base class <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method passing the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> and the same arguments as the implemented method similar to the following example.</source>
          <target state="translated">必须调用基类<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>方法并传递<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph>和与实现的方法类似于下面的示例相同的参数。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The number of event data items.</source>
          <target state="translated">事件数据项的数目。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The structure that contains the event data.</source>
          <target state="translated">包含事件数据的结构。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Creates a new <ph id="ph1">&lt;see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /&gt;</ph> overload by using the provided event identifier and event data.</source>
          <target state="translated">通过使用提供的事件标识符和事件数据，创建新的 <ph id="ph1">&lt;see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /&gt;</ph> 重载。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source><ph id="ph1">`eventid`</ph> should be greater than 0 or less than 65535 or errors can occur in the operation.</source>
          <target state="translated"><ph id="ph1">`eventid`</ph> 应为大于 0 或小于 65535 或错误会导致该操作。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</source>
          <target state="translated">如果错误发生，你可以通过检查输出流的调试程序时，获取有关错误的源的详细信息，如果你有一个调试器附加到激发事件的过程。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</source>
          <target state="translated">如果出现错误的事件源中有一个 ETW 侦听器，还可以查看在 ETW 事件流中，报告的错误。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>This protected method  enables users to define new <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overloads that are faster than the provided overloads.</source>
          <target state="translated">此受保护的方法使用户能够定义新<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>速度要快于提供的重载的重载。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Creating a new overload involves unsafe code.</source>
          <target state="translated">创建的新重载涉及不安全代码。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</source>
          <target state="translated">基本过程是堆栈分配匹配负载项的数目的事件数据描述符数组。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>For each payload item, set the correct size and value in the event data array.Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph> with the initialized array.</source>
          <target state="translated">对于每个负载项、 设置正确的大小，并在事件值数据数组。调用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>与初始化的数组。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The following example shows how to add a <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> overload that accepts four arguments.</source>
          <target state="translated">下面的示例演示如何将添加<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>接受四个自变量的重载。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>An example would be if you have a logging event that logs a string and 3 integers.</source>
          <target state="translated">示例是，如果你有一个日志记录事件日志字符串和 3 的整数。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>You could do this without calling <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>, but it would be slower than it needs to be.</source>
          <target state="translated">无法执行此操作而不调用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A&gt;</ph>，但它会超出其所需的要慢。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>That is because it uses arrays and reflection to figure out what to do.</source>
          <target state="translated">这是因为它使用数组和反射来找出要执行的操作。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>If you log these at a high rate (&gt; 1000 / sec), it can be worth making a fast helper, as shown in the following example.</source>
          <target state="translated">如果记录了这些比率较高 (&gt; 1000年 / 秒)，它可以是值得进行快速的帮助器，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The method shadows the existing <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>.</source>
          <target state="translated">方法将隐藏现有<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</source>
          <target state="translated">因此原始调用方的代码 (LogTime) 实际上不会更改，但 C# 编译器将使用专用化程度的版本，它会更快。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>To compile unsafe code, you must specify the <bpt id="p1">[</bpt>/unsafe (C# Compiler Options)<ept id="p1">](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md)</ept> compiler option.</source>
          <target state="translated">若要编译不安全代码，必须指定<bpt id="p1">[</bpt>/unsafe （C# 编译器选项）<ept id="p1">](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md)</ept>编译器选项。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>An identifier that uniquely identifies this event within the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 中唯一标识此事件的标识符。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The related activity identifier.</source>
          <target state="translated">相关的活动标识符。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>An array of objects that contain data about the event.</source>
          <target state="translated">包含与事件相关的数据的对象数组。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Writes an event that indicates that the current activity is related to another activity.</source>
          <target state="translated">写入一个指示当前活动与其他活动相关的事件。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> method logs a transfer event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>方法将记录传输事件。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</source>
          <target state="translated">当前线程的活动都记录与事件，且这让两个活动相关的事件使用者。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Your ETW event method calling this function must follow these guidelines:</source>
          <target state="translated">你调用此函数的 ETW 事件方法必须遵循以下准则：</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Specify the first parameter as a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> named <ph id="ph2">`relatedActivityId`</ph>.</source>
          <target state="translated">指定第一个参数作为<ph id="ph1">&lt;xref:System.Guid&gt;</ph>名为<ph id="ph2">`relatedActivityId`</ph>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Specify either <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> as the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">指定<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph>作为<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>传递事件 ID，相关 ID GUID 后, 跟跟所有参数的事件方法中传递，以相同的顺序。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>If <ph id="ph1">`args`</ph> is not used, it is converted to an empty array for the resulting call to ETW.</source>
          <target state="translated">如果<ph id="ph1">`args`</ph>是未使用，它将转换为对 ETW 的结果调用一个空数组。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
          <source>The following code example shows how you might can specify an event source that calls <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何可能指定事件源调用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>An identifier that uniquely identifies this event within the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Tracing.EventSource" /&gt;</ph> 中唯一标识此事件的标识符。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>A pointer to the GUID of the related activity ID.</source>
          <target state="translated">指向相关活动 ID 的 GUID 的指针。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The number of items in the <bpt id="p1">&lt;c&gt;</bpt>data<ept id="p1">&lt;/c&gt;</ept> field.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>data<ept id="p1">&lt;/c&gt;</ept> 字段中的项数。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>A pointer to the first item in the event data field.</source>
          <target state="translated">指向事件数据字段中第一个项的指针。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Writes an event that indicates that the current activity is related to another activity.</source>
          <target state="translated">写入一个指示当前活动与其他活动相关的事件。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> is similar to the <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph> method but offers better performance, bevcause it does not have to unbox the <ph id="ph3">`childActivityID`</ph> and <ph id="ph4">`data`</ph> arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> 类似于<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A&gt;</ph>方法但提供更好的性能，它没有要取消装箱的 bevcause<ph id="ph3">`childActivityID`</ph>和<ph id="ph4">`data`</ph>自变量。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Your ETW event method calling this function must follow these guidelines:</source>
          <target state="translated">你调用此函数的 ETW 事件方法必须遵循以下准则：</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Specify the first parameter as a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> named <ph id="ph2">`relatedActivityId`</ph>.</source>
          <target state="translated">指定第一个参数作为<ph id="ph1">&lt;xref:System.Guid&gt;</ph>名为<ph id="ph2">`relatedActivityId`</ph>。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Specify either <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph> as the <ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">指定<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Send&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.Tracing.EventOpcode.Receive&gt;</ph>作为<ph id="ph3">&lt;xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>Call <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph>传递事件 ID，相关 ID GUID 后, 跟跟所有参数的事件方法中传递，以相同的顺序。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
          <source>The following C# code example shows how to define a method overload that calls <ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph>.</source>
          <target state="translated">下面的 C# 代码示例演示如何定义调用的方法重载<ph id="ph1">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>