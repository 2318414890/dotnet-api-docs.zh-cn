<Type Name="CacheItemUpdateCallback" FullName="System.Web.Caching.CacheItemUpdateCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd94116502855281da6a207c2da00a54b2c8fcee" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36604432" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void CacheItemUpdateCallback(string key, CacheItemUpdateReason reason, out object expensiveObject, out CacheDependency dependency, out DateTime absoluteExpiration, out TimeSpan slidingExpiration);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CacheItemUpdateCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheItemUpdateCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CacheItemUpdateCallback(key As String, reason As CacheItemUpdateReason, ByRef expensiveObject As Object, ByRef dependency As CacheDependency, ByRef absoluteExpiration As DateTime, ByRef slidingExpiration As TimeSpan)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CacheItemUpdateCallback(System::String ^ key, CacheItemUpdateReason reason, [Runtime::InteropServices::Out] System::Object ^ % expensiveObject, [Runtime::InteropServices::Out] CacheDependency ^ % dependency, [Runtime::InteropServices::Out] DateTime % absoluteExpiration, [Runtime::InteropServices::Out] TimeSpan % slidingExpiration);" />
  <TypeSignature Language="F#" Value="type CacheItemUpdateCallback = delegate of string * CacheItemUpdateReason *  *  *  *  -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="System.String" />
    <Parameter Name="reason" Type="System.Web.Caching.CacheItemUpdateReason" />
    <Parameter Name="expensiveObject" Type="System.Object&amp;" RefType="out" />
    <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency&amp;" RefType="out" />
    <Parameter Name="absoluteExpiration" Type="System.DateTime&amp;" RefType="out" />
    <Parameter Name="slidingExpiration" Type="System.TimeSpan&amp;" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">从缓存删除的项的标识符。</param>
    <param name="reason">从缓存删除该项的原因。</param>
    <param name="expensiveObject">此方法返回时，会包含缓存项对象，其中包含更新。</param>
    <param name="dependency">此方法返回时，会包含一个对象，该对象可定义项对象与文件、缓存密钥、文件或缓存密钥的数组或是另一个 <see cref="T:System.Web.Caching.CacheDependency" /> 对象之间的依赖关系。</param>
    <param name="absoluteExpiration">此方法返回时会包含对象过期时间。</param>
    <param name="slidingExpiration">此方法返回时，会包含上次访问对象的时间与该对象的过期时间之间的间隔时间。</param>
    <summary>定义回调方法，用于在删除缓存中的缓存项之前，向应用程序发出通知。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当对象在缓存中过期时，ASP.NET 会调用<xref:System.Web.Caching.CacheItemUpdateCallback>方法与键的缓存项目，你可能想要更新项的原因。 此方法的剩余参数是 out 参数。 你提供新的缓存的项可选的到期以及刷新缓存的项时要使用的依赖项值。  
  
 如果通过使用调用显式删除缓存的项目，则不调用更新回调<xref:System.Web.Caching.Cache.Remove%2A>。  
  
 如果你想要从缓存中删除的缓存的项，您必须返回`null`中`expensiveObject`参数。 否则，使用返回对新缓存的数据的引用`expensiveObject`参数。 如果未指定过期或依赖项的值，项将删除从缓存中，仅在需要内存时。  
  
 如果该回调方法将引发异常，ASP.NET 将取消显示异常，并将删除缓存的值。  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>