<Type Name="CacheDependency" FullName="System.Web.Caching.CacheDependency">
  <TypeSignature Language="C#" Value="public class CacheDependency : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CacheDependency extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheDependency" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheDependency&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheDependency : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a3703-101">在存储于 ASP.NET 应用程序的 <see cref="T:System.Web.Caching.Cache" /> 对象中的项与文件、缓存键、文件或缓存键的数组，或另一个 <see cref="T:System.Web.Caching.CacheDependency" /> 对象之间建立依赖关系。</span><span class="sxs-lookup"><span data-stu-id="a3703-101">Establishes a dependency relationship between an item stored in an ASP.NET application's <see cref="T:System.Web.Caching.Cache" /> object and a file, cache key, an array of either, or another <see cref="T:System.Web.Caching.CacheDependency" /> object.</span></span> <span data-ttu-id="a3703-102"><see cref="T:System.Web.Caching.CacheDependency" /> 类监视依赖关系，以便在任何这些对象发生更改时，自动删除缓存的项。</span><span class="sxs-lookup"><span data-stu-id="a3703-102">The <see cref="T:System.Web.Caching.CacheDependency" /> class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-103">如果将项添加到缓存依赖于另一个对象，如文件或文件，数组的依赖项是自动从缓存中删除对象更改时。</span><span class="sxs-lookup"><span data-stu-id="a3703-103">If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes.</span></span> <span data-ttu-id="a3703-104">例如，假设你创建<xref:System.Data.DataSet>根据 XML 文件中的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-104">For example, suppose you create a <xref:System.Data.DataSet> object based on data in an XML file.</span></span> <span data-ttu-id="a3703-105">你可以添加<xref:System.Data.DataSet>到缓存的<xref:System.Web.Caching.CacheDependency>使对象<xref:System.Data.DataSet>依赖于 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a3703-105">You can add the <xref:System.Data.DataSet> to the cache with a <xref:System.Web.Caching.CacheDependency> object that makes the <xref:System.Data.DataSet> dependent on the XML file.</span></span> <span data-ttu-id="a3703-106">如果 XML 文件发生更改，<xref:System.Data.DataSet>从缓存中删除。</span><span class="sxs-lookup"><span data-stu-id="a3703-106">If the XML file changes, the <xref:System.Data.DataSet> is removed from the cache.</span></span>  
  
 <span data-ttu-id="a3703-107">可以将具有依赖项的项添加到你的应用程序的缓存<xref:System.Web.Caching.Cache.Add%2A>和<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-107">You can add items with dependencies to your application's cache with the <xref:System.Web.Caching.Cache.Add%2A> and <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="a3703-108">不能使用<xref:System.Web.Caching.Cache.Item%2A>属性将项添加到缓存的依赖关系。</span><span class="sxs-lookup"><span data-stu-id="a3703-108">You cannot use the <xref:System.Web.Caching.Cache.Item%2A> property to add items to the cache with dependencies.</span></span>  
  
 <span data-ttu-id="a3703-109">若要设置依赖项，你创建的实例<xref:System.Web.Caching.CacheDependency>类，指定文件、 密钥或在其的项是依赖项，目录，然后将传递到的依赖关系<xref:System.Web.Caching.Cache.Add%2A>或<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-109">To set up a dependency, you create an instance of the <xref:System.Web.Caching.CacheDependency> class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <xref:System.Web.Caching.Cache.Add%2A> or <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a3703-110"><xref:System.Web.Caching.CacheDependency>实例可以表示单个文件或目录、 文件或目录的数组或文件或目录以及缓存键的数组的数组 (这些表示存储在其他项<xref:System.Web.Caching.Cache>对象)。</span><span class="sxs-lookup"><span data-stu-id="a3703-110">The <xref:System.Web.Caching.CacheDependency> instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <xref:System.Web.Caching.Cache> object).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-111">下面的代码示例演示如何使用<xref:System.Web.Caching.CacheDependency.HasChanged%2A>属性来确定是否<xref:System.Web.Caching.CacheDependency>自上一个请求中的项以来更改<xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-111">The following code example demonstrates using the <xref:System.Web.Caching.CacheDependency.HasChanged%2A> property to determine whether a <xref:System.Web.Caching.CacheDependency> changed since the previous request for an item in the <xref:System.Web.Caching.Cache>.</span></span> <span data-ttu-id="a3703-112">`dt`传入值`start`参数设置为<xref:System.DateTime.Now%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a3703-112">The `dt` value passed in the `start` parameter is set to <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Caching.Cache" />
    <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3703-113">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a3703-113">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class.</span></span></summary>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CacheDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-114">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a3703-114">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-115">如果你想要派生您自己的类从<xref:System.Web.Caching.CacheDependency>，实现此版本的<xref:System.Web.Caching.CacheDependency.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a3703-115">If you want to derive your own class from <xref:System.Web.Caching.CacheDependency>, implement this version of the <xref:System.Web.Caching.CacheDependency.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-116">下面的代码示例是一个类以实现此版本的<xref:System.Web.Caching.CacheDependency>构造函数、 派生自的所有类作为<xref:System.Web.Caching.CacheDependency>所需的。</span><span class="sxs-lookup"><span data-stu-id="a3703-116">The following code example is a class that implements this version of the <xref:System.Web.Caching.CacheDependency> constructor as all classes that derive from <xref:System.Web.Caching.CacheDependency> are required to.</span></span>  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="a3703-117">缓存对象所依赖的文件或目录的路径。</span><span class="sxs-lookup"><span data-stu-id="a3703-117">The path to a file or directory that the cached object is dependent upon.</span></span> <span data-ttu-id="a3703-118">当该资源更改时，缓存的对象将过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-118">When this resource changes, the cached object becomes obsolete and is removed from the cache.</span></span></param>
        <summary><span data-ttu-id="a3703-119">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例，它监视文件或目录的更改情况。</span><span class="sxs-lookup"><span data-stu-id="a3703-119">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors a file or directory for changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-120">如果目录或文件中指定`filename`参数找不到在文件系统中，则将视为丢失。</span><span class="sxs-lookup"><span data-stu-id="a3703-120">If the directory or file specified in the `filename` parameter is not found in the file system, it will be treated as missing.</span></span> <span data-ttu-id="a3703-121">如果缺少目录或文件，则当与依赖项的对象将添加到<xref:System.Web.Caching.Cache>，缓存的对象将不再从<xref:System.Web.Caching.Cache>创建目录或文件时。</span><span class="sxs-lookup"><span data-stu-id="a3703-121">If the directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when the directory or file is created.</span></span>  
  
 <span data-ttu-id="a3703-122">例如，假定你将添加到对象<xref:System.Web.Caching.Cache>并依赖于以下的文件路径： c:\stocks\xyz.dat。</span><span class="sxs-lookup"><span data-stu-id="a3703-122">For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\stocks\xyz.dat.</span></span> <span data-ttu-id="a3703-123">如果该文件未找到时<xref:System.Web.Caching.CacheDependency>对象创建，但更高版本创建，xyz.dat 文件在创建时删除缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-123">If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-124">下面的代码示例创建的实例<xref:System.Web.Caching.CacheDependency>并依赖于 XML 文件的类。</span><span class="sxs-lookup"><span data-stu-id="a3703-124">The following code example creates an instance of the <xref:System.Web.Caching.CacheDependency> class with a dependency on an XML file.</span></span> <span data-ttu-id="a3703-125"><xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法然后将项添加到<xref:System.Web.Caching.Cache>这是依赖于该文件。</span><span class="sxs-lookup"><span data-stu-id="a3703-125">The <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> method then adds an item to the <xref:System.Web.Caching.Cache> that is dependent upon that file.</span></span>  
  
 [!code-csharp[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/CS/source.cs#1)]
 [!code-vb[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a3703-126">你也可以使用以下方法添加一个项<xref:System.Web.Caching.Cache>并依赖于一个文件。</span><span class="sxs-lookup"><span data-stu-id="a3703-126">You can also use the following technique to add an item to the <xref:System.Web.Caching.Cache> with a dependency on a file.</span></span>  
  
 [!code-csharp[Single File Dependency Cache entry#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Single File Dependency Cache entry/CS/DependencySingleFilecs.aspx#1)]
 [!code-vb[Single File Dependency Cache entry#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Single File Dependency Cache entry/VB/DependencySingleFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="a3703-127">缓存对象所依赖的一组（到文件或目录的）路径。</span><span class="sxs-lookup"><span data-stu-id="a3703-127">An array of paths (to files or directories) that the cached object is dependent upon.</span></span> <span data-ttu-id="a3703-128">当这些资源中的任何一个更改时，缓存的对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-128">When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</span></span></param>
        <summary><span data-ttu-id="a3703-129">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例，它监视一组（到文件或目录的）路径的更改情况。</span><span class="sxs-lookup"><span data-stu-id="a3703-129">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories) for changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-130">如果文件或数组中的目录的任何更改或是来自该数组中删除缓存的项则成为过时记录并从应用程序的移除<xref:System.Web.Caching.Cache>对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-130">If any of the files or directories in the array changes or is removed from the array, the cached item becomes obsolete and is removed from the application's <xref:System.Web.Caching.Cache> object.</span></span>  
  
 <span data-ttu-id="a3703-131">此外，如果任何目录或文件中指定`filenames`参数找不到在文件系统中，它将被视为丢失。</span><span class="sxs-lookup"><span data-stu-id="a3703-131">Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing.</span></span> <span data-ttu-id="a3703-132">如果缺少目录或文件，则当与依赖项的对象将添加到<xref:System.Web.Caching.Cache>，缓存的对象将不再从<xref:System.Web.Caching.Cache>创建该目录或文件时。</span><span class="sxs-lookup"><span data-stu-id="a3703-132">If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.</span></span>  
  
 <span data-ttu-id="a3703-133">例如，假定你将添加到对象<xref:System.Web.Caching.Cache>并依赖于以下的文件路径： c:\stocks\xyz.dat。</span><span class="sxs-lookup"><span data-stu-id="a3703-133">For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\stocks\xyz.dat.</span></span> <span data-ttu-id="a3703-134">如果该文件未找到时<xref:System.Web.Caching.CacheDependency>对象创建，但更高版本创建，xyz.dat 文件在创建时删除缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-134">If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3703-135">在创建数组，其中包含的文件依赖关系时，你必须定义的文件数项添加到<xref:System.Web.Caching.Cache>依赖于。</span><span class="sxs-lookup"><span data-stu-id="a3703-135">When you create the array that contains the file dependencies, you must define the number of files that the item you are adding to the <xref:System.Web.Caching.Cache> is dependent on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-136">下面的代码示例演示如何使用<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法将添加一个项<xref:System.Web.Caching.Cache>有一组文件的依赖关系。</span><span class="sxs-lookup"><span data-stu-id="a3703-136">The following code example demonstrates how to use the <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> method to add an item to the <xref:System.Web.Caching.Cache> with dependencies on an array of files.</span></span> <span data-ttu-id="a3703-137">你还可以进行项取决于目录的数组。</span><span class="sxs-lookup"><span data-stu-id="a3703-137">You can also make the item dependent on an array of directories.</span></span>  
  
 [!code-csharp[Multiple file based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Multiple file based dependency/CS/DependencyMultiFilecs.aspx#1)]
 [!code-vb[Multiple file based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Multiple file based dependency/VB/DependencyMultiFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename, DateTime start);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="a3703-138">缓存对象所依赖的文件或目录的路径。</span><span class="sxs-lookup"><span data-stu-id="a3703-138">The path to a file or directory that the cached object is dependent upon.</span></span> <span data-ttu-id="a3703-139">当该资源更改时，缓存的对象将过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-139">When this resource changes, the cached object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="start"><span data-ttu-id="a3703-140">检查目录或文件的上次修改日期所依据的时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-140">The time against which to check the last modified date of the directory or file.</span></span></param>
        <summary><span data-ttu-id="a3703-141">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例，它监视文件或目录的更改情况。</span><span class="sxs-lookup"><span data-stu-id="a3703-141">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors a file or directory for changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-142">如果目录或文件中指定`filename`参数找不到在文件系统中，则将视为丢失。</span><span class="sxs-lookup"><span data-stu-id="a3703-142">If the directory or file specified in the `filename` parameter is not found in the file system, it will be treated as missing.</span></span> <span data-ttu-id="a3703-143">如果缺少目录或文件，则当与依赖项的对象将添加到<xref:System.Web.Caching.Cache>，缓存的对象将不再从<xref:System.Web.Caching.Cache>创建目录或文件时。</span><span class="sxs-lookup"><span data-stu-id="a3703-143">If the directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when the directory or file is created.</span></span>  
  
 <span data-ttu-id="a3703-144">例如，假定你将添加到对象<xref:System.Web.Caching.Cache>并依赖于以下的文件路径： c:\stocks\xyz.dat。</span><span class="sxs-lookup"><span data-stu-id="a3703-144">For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\stocks\xyz.dat.</span></span> <span data-ttu-id="a3703-145">如果该文件未找到时<xref:System.Web.Caching.CacheDependency>对象创建，但更高版本创建，xyz.dat 文件在创建时删除缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-145">If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3703-146">更改跟踪将立即开始，并在不直接基于`start`参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-146">Change tracking begins immediately and is not directly based on the `start` parameter.</span></span> <span data-ttu-id="a3703-147">使用`start`参数来传递日期和时间在过去你想要检查的上次修改日期的目录或文件传递中对其`filename`参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-147">Use the `start` parameter to pass a date and time in the past against which you want to check the last modified date of the directory or file passed in the `filename` parameter.</span></span> <span data-ttu-id="a3703-148">如果的上次修改日期是否晚于日期和时间集传入`start`参数，该缓存的项移除从<xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-148">If the last modified date is later than the date and time set passed in the `start` parameter, the cached item is removed from the <xref:System.Web.Caching.Cache>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-149">下面的代码示例使用此构造函数来实例化<xref:System.Web.Caching.CacheDependency>对象，然后将一项插入<xref:System.Web.Caching.Cache>具有此依赖项。</span><span class="sxs-lookup"><span data-stu-id="a3703-149">The following code example uses this constructor to instantiate a <xref:System.Web.Caching.CacheDependency> object, then inserts an item into the <xref:System.Web.Caching.Cache> with that dependency.</span></span> <span data-ttu-id="a3703-150">`dt`传入值`start`参数设置为<xref:System.DateTime.Now%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a3703-150">The `dt` value passed in the `start` parameter is set to <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, DateTime start);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="a3703-151">缓存对象所依赖的一组（到文件或目录的）路径。</span><span class="sxs-lookup"><span data-stu-id="a3703-151">An array of paths (to files or directories) that the cached object is dependent upon.</span></span> <span data-ttu-id="a3703-152">当这些资源中的任何一个更改时，缓存的对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-152">When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="start"><span data-ttu-id="a3703-153">检查数组中对象的上次修改日期所依据的时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-153">The time against which to check the last modified date of the objects in the array.</span></span></param>
        <summary><span data-ttu-id="a3703-154">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例，它监视一组（到文件或目录的）路径的更改情况并指定更改监视开始的时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-154">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-155">如果任何目录或文件中指定`filenames`参数找不到在文件系统中，它将被视为丢失。</span><span class="sxs-lookup"><span data-stu-id="a3703-155">If any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing.</span></span> <span data-ttu-id="a3703-156">如果缺少目录或文件，则当与依赖项的对象将添加到<xref:System.Web.Caching.Cache>，缓存的对象将不再从<xref:System.Web.Caching.Cache>创建该目录或文件时。</span><span class="sxs-lookup"><span data-stu-id="a3703-156">If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.</span></span>  
  
 <span data-ttu-id="a3703-157">例如，假定你将添加到对象<xref:System.Web.Caching.Cache>并依赖于以下的文件路径： c:\stocks\xyz.dat。</span><span class="sxs-lookup"><span data-stu-id="a3703-157">For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\stocks\xyz.dat.</span></span> <span data-ttu-id="a3703-158">如果该文件未找到时<xref:System.Web.Caching.CacheDependency>对象创建，但更高版本创建，xyz.dat 文件在创建时删除缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-158">If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3703-159">更改跟踪将立即开始，并在不直接基于`start`参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-159">Change tracking begins immediately and is not directly based on the `start` parameter.</span></span> <span data-ttu-id="a3703-160">使用`start`参数来传递日期和你要对其检查数组的上次修改的日期为过去时间传递中`filenames`参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-160">Use the `start` parameter to pass a date and time in the past against which you want to check the last modified date of the array passed in the `filenames` parameter.</span></span> <span data-ttu-id="a3703-161">如果的上次修改的数组中的任何对象的日期是否晚于日期和时间集传入`start`参数，该缓存的项移除从<xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-161">If the last modified date of any object in the array is later than the date and time set passed in the `start` parameter, the cached item is removed from the <xref:System.Web.Caching.Cache>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-162">下面的代码示例创建<xref:System.Web.Caching.CacheDependency>传递两个 XML 文件的对象和一个<xref:System.DateTime.Now%2A?displayProperty=nameWithType>值作为参数传递中包含对象时<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法调用。</span><span class="sxs-lookup"><span data-stu-id="a3703-162">The following code example creates a <xref:System.Web.Caching.CacheDependency> object that passes two XML files and a <xref:System.DateTime.Now%2A?displayProperty=nameWithType> value when the object is included as a parameter argument in an <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> method call.</span></span>  
  
 [!code-csharp[CacheDependency Constructor4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor4/CS/depmultifilestimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor4/VB/depmultifilestimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="a3703-163">缓存对象所依赖的一组（到文件或目录的）路径。</span><span class="sxs-lookup"><span data-stu-id="a3703-163">An array of paths (to files or directories) that the cached object is dependent upon.</span></span> <span data-ttu-id="a3703-164">当这些资源中的任何一个更改时，缓存的对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-164">When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="cachekeys"><span data-ttu-id="a3703-165">一组缓存键，新对象监视它们的更改。</span><span class="sxs-lookup"><span data-stu-id="a3703-165">An array of cache keys that the new object monitors for changes.</span></span> <span data-ttu-id="a3703-166">当这些缓存键中的任何一个发生更改时，与此依赖项对象关联的缓存对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-166">When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</span></span></param>
        <summary><span data-ttu-id="a3703-167">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例，它监视一组（到文件或目录的）路径、缓存键的更改情况或同时监视二者的更改情况。</span><span class="sxs-lookup"><span data-stu-id="a3703-167">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-168">此外，如果任何目录或文件中指定`filenames`参数找不到在文件系统中，它将被视为丢失。</span><span class="sxs-lookup"><span data-stu-id="a3703-168">Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing.</span></span> <span data-ttu-id="a3703-169">如果缺少目录或文件，则当与依赖项的对象将添加到<xref:System.Web.Caching.Cache>，缓存的对象将不再从<xref:System.Web.Caching.Cache>创建该目录或文件时。</span><span class="sxs-lookup"><span data-stu-id="a3703-169">If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.</span></span>  
  
 <span data-ttu-id="a3703-170">例如，假定你将添加到对象<xref:System.Web.Caching.Cache>并依赖于以下的文件路径： c:\stocks\xyz.dat。</span><span class="sxs-lookup"><span data-stu-id="a3703-170">For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\stocks\xyz.dat.</span></span> <span data-ttu-id="a3703-171">如果该文件未找到时<xref:System.Web.Caching.CacheDependency>对象创建，但更高版本创建，xyz.dat 文件在创建时删除缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-171">If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</span></span>  
  
 <span data-ttu-id="a3703-172">但是，`cachekeys`依赖项不起作用相同的方式。</span><span class="sxs-lookup"><span data-stu-id="a3703-172">However, the `cachekeys` dependency does not work the same way.</span></span> <span data-ttu-id="a3703-173">如果中至少一个值`cachekeys`参数不存在的插入操作时，插入操作失败。</span><span class="sxs-lookup"><span data-stu-id="a3703-173">If at least one value in the `cachekeys` parameter does not exist at the time of an insert, the insert fails.</span></span> <span data-ttu-id="a3703-174">请注意，对于此方案引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="a3703-174">Note that there is no exception thrown for this scenario.</span></span>  
  
## Examples  
 <span data-ttu-id="a3703-175">下面的代码段演示如何将项插入您的应用程序<xref:System.Web.Caching.Cache>并依赖于另一个项的键放入缓存。</span><span class="sxs-lookup"><span data-stu-id="a3703-175">The following code fragment demonstrates how to insert an item into your application's <xref:System.Web.Caching.Cache> with a dependency on a key to another item placed in the cache.</span></span> <span data-ttu-id="a3703-176">由于此方法使用数组语法，你必须定义的键的数目在其上项要添加到<xref:System.Web.Caching.Cache>依赖。</span><span class="sxs-lookup"><span data-stu-id="a3703-176">Since this method uses array syntax, you must define the number of keys on which the item you are adding to the <xref:System.Web.Caching.Cache> is dependent.</span></span>  
  
 [!code-csharp[Key based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Key based dependency/CS/DependencyKeycs.aspx#1)]
 [!code-vb[Key based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Key based dependency/VB/DependencyKeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, DateTime start);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="a3703-177">缓存对象所依赖的一组（到文件或目录的）路径。</span><span class="sxs-lookup"><span data-stu-id="a3703-177">An array of paths (to files or directories) that the cached object is dependent upon.</span></span> <span data-ttu-id="a3703-178">当这些资源中的任何一个更改时，缓存的对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-178">When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="cachekeys"><span data-ttu-id="a3703-179">一组缓存键，新对象监视它们的更改。</span><span class="sxs-lookup"><span data-stu-id="a3703-179">An array of cache keys that the new object monitors for changes.</span></span> <span data-ttu-id="a3703-180">当这些缓存键中的任何一个发生更改时，与此依赖项对象关联的缓存对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-180">When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="start"><span data-ttu-id="a3703-181">检查在 <c>filenames</c> 和 <c>cachekeys</c> 数组中传递的对象的上次修改日期所依据的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-181">The date and time against which to check the last modified date of the objects passed in the <c>filenames</c> and <c>cachekeys</c> arrays.</span></span></param>
        <summary><span data-ttu-id="a3703-182">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例，它监视一组（到文件或目录的）路径、缓存键的更改情况或同时监视二者的更改情况。</span><span class="sxs-lookup"><span data-stu-id="a3703-182">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-183">此外，如果任何目录或文件中指定`filenames`参数找不到在文件系统中，它将被视为丢失。</span><span class="sxs-lookup"><span data-stu-id="a3703-183">Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing.</span></span> <span data-ttu-id="a3703-184">如果缺少目录或文件，则当与依赖项的对象将添加到<xref:System.Web.Caching.Cache>，缓存的对象将不再从<xref:System.Web.Caching.Cache>创建该目录或文件时。</span><span class="sxs-lookup"><span data-stu-id="a3703-184">If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.</span></span>  
  
 <span data-ttu-id="a3703-185">例如，假定你将添加到对象<xref:System.Web.Caching.Cache>并依赖于以下的文件路径： c:\stocks\xyz.dat。</span><span class="sxs-lookup"><span data-stu-id="a3703-185">For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\stocks\xyz.dat.</span></span> <span data-ttu-id="a3703-186">如果该文件未找到时<xref:System.Web.Caching.CacheDependency>对象创建，但更高版本创建，xyz.dat 文件在创建时删除缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-186">If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</span></span>  
  
 <span data-ttu-id="a3703-187">但是，`cachekeys`依赖项不起作用相同的方式。</span><span class="sxs-lookup"><span data-stu-id="a3703-187">However, the `cachekeys` dependency does not work the same way.</span></span> <span data-ttu-id="a3703-188">如果中至少一个值`cachekeys`参数不存在的插入操作时，插入操作失败。</span><span class="sxs-lookup"><span data-stu-id="a3703-188">If at least one value in the `cachekeys` parameter does not exist at the time of an insert, the insert fails.</span></span> <span data-ttu-id="a3703-189">请注意，对于此方案引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="a3703-189">Note that there is no exception thrown for this scenario.</span></span>

> [!NOTE]
>  <span data-ttu-id="a3703-190">更改跟踪将立即开始，并在不直接基于`start`参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-190">Change tracking begins immediately and is not directly based on the `start` parameter.</span></span> <span data-ttu-id="a3703-191">使用`start`参数来传递日期和你要对其检查任何对象的上次修改的日期为过去时间传递中`filenames`或`cachekeys`参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-191">Use the `start` parameter to pass a date and time in the past against which you want to check the last modified date of any object passed in the `filenames` or `cachekeys` parameters.</span></span> <span data-ttu-id="a3703-192">如果的上次修改的那些对象中的任何日期晚于日期且时间集传入`start`参数，该缓存的项移除从<xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-192">If the last modified date of any of those objects is later than the date and time set passed in the `start` parameter, the cached item is removed from the <xref:System.Web.Caching.Cache>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-193">下面的代码示例创建`CreateDependency`方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-193">The following code example creates a `CreateDependency` method.</span></span> <span data-ttu-id="a3703-194">当调用此方法时，它将创建<xref:System.DateTime>对象和<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>属性用于将项添加到缓存中，与`key`参数`key1`和的值`Value 1`。</span><span class="sxs-lookup"><span data-stu-id="a3703-194">When this method is called, it creates a <xref:System.DateTime> object and the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> property is used to add an item to the cache with a `key` parameter of `key1` and a value of `Value 1`.</span></span> <span data-ttu-id="a3703-195">一个字符串，数组`dependencyKey`，然后使用的值创建`key1`以及。</span><span class="sxs-lookup"><span data-stu-id="a3703-195">An array of strings, `dependencyKey`, is then created with the value of `key1` as well.</span></span> <span data-ttu-id="a3703-196">这<xref:System.Web.Caching.CacheDependency>构造函数，然后实例化<xref:System.Web.Caching.CacheDependency>传递对象的`dependencyKey`和<xref:System.DateTime>对象作为参数自变量。</span><span class="sxs-lookup"><span data-stu-id="a3703-196">This <xref:System.Web.Caching.CacheDependency> constructor then instantiates a <xref:System.Web.Caching.CacheDependency> object that passes `dependencyKey` and the <xref:System.DateTime> object as parameter arguments.</span></span> <span data-ttu-id="a3703-197"><xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法使用接下来，调用<xref:System.Web.Caching.CacheDependency>对象作为参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-197">The <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> method is called next, using the <xref:System.Web.Caching.CacheDependency> object as a parameter.</span></span> <span data-ttu-id="a3703-198">这使得该对象添加到缓存使用<xref:System.Web.Caching.Cache.Insert%2A>方法依赖于`key1`密钥。</span><span class="sxs-lookup"><span data-stu-id="a3703-198">This makes the object added to the cache using the <xref:System.Web.Caching.Cache.Insert%2A> method dependent on the `key1` key.</span></span>  
  
 [!code-csharp[CacheDependency Constructor6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor6/CS/depkeytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor6/VB/depkeytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="a3703-199">缓存对象所依赖的一组（到文件或目录的）路径。</span><span class="sxs-lookup"><span data-stu-id="a3703-199">An array of paths (to files or directories) that the cached object is dependent upon.</span></span> <span data-ttu-id="a3703-200">当这些资源中的任何一个更改时，缓存的对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-200">When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="cachekeys"><span data-ttu-id="a3703-201">一组缓存键，新对象监视它们的更改。</span><span class="sxs-lookup"><span data-stu-id="a3703-201">An array of cache keys that the new object monitors for changes.</span></span> <span data-ttu-id="a3703-202">当这些缓存键中的任何一个发生更改时，与此依赖项对象关联的缓存对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-202">When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="dependency"><span data-ttu-id="a3703-203">此实例所依赖的 <see cref="T:System.Web.Caching.CacheDependency" /> 类的另一个实例。</span><span class="sxs-lookup"><span data-stu-id="a3703-203">Another instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that this instance is dependent upon.</span></span></param>
        <summary><span data-ttu-id="a3703-204">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例，它监视一组（到文件或目录的）路径、缓存键的更改情况或同时监视二者的更改情况。</span><span class="sxs-lookup"><span data-stu-id="a3703-204">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</span></span> <span data-ttu-id="a3703-205">它还使自己依赖于 <see cref="T:System.Web.Caching.CacheDependency" /> 类的一个单独的实例。</span><span class="sxs-lookup"><span data-stu-id="a3703-205">It also makes itself dependent upon a separate instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-206">此外，如果任何目录或文件中指定`filenames`参数找不到在文件系统中，它将被视为丢失。</span><span class="sxs-lookup"><span data-stu-id="a3703-206">Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing.</span></span> <span data-ttu-id="a3703-207">如果缺少目录或文件，则当与依赖项的对象将添加到<xref:System.Web.Caching.Cache>，缓存的对象将不再从<xref:System.Web.Caching.Cache>创建该目录或文件时。</span><span class="sxs-lookup"><span data-stu-id="a3703-207">If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.</span></span>  
  
 <span data-ttu-id="a3703-208">例如，假定你将添加到对象<xref:System.Web.Caching.Cache>并依赖于以下的文件路径： c:\stocks\xyz.dat。</span><span class="sxs-lookup"><span data-stu-id="a3703-208">For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\stocks\xyz.dat.</span></span> <span data-ttu-id="a3703-209">如果该文件未找到时<xref:System.Web.Caching.CacheDependency>对象创建，但更高版本创建，xyz.dat 文件在创建时删除缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-209">If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</span></span>  
  
 <span data-ttu-id="a3703-210">但是，`cachekeys`依赖项不起作用相同的方式。</span><span class="sxs-lookup"><span data-stu-id="a3703-210">However, the `cachekeys` dependency does not work the same way.</span></span> <span data-ttu-id="a3703-211">如果中至少一个值`cachekeys`参数不存在的插入操作时，插入操作失败。</span><span class="sxs-lookup"><span data-stu-id="a3703-211">If at least one value in the `cachekeys` parameter does not exist at the time of an insert, the insert fails.</span></span> <span data-ttu-id="a3703-212">请注意，对于此方案引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="a3703-212">Note that there is no exception thrown for this scenario.</span></span>
  
## Examples  
 <span data-ttu-id="a3703-213">下面的代码示例创建`CreateDependency`方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-213">The following code example creates a `CreateDependency` method.</span></span> <span data-ttu-id="a3703-214">当调用此方法时，它使用<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>属性以将项添加到缓存中，与`key`参数`key1`和的值`Value 1`。</span><span class="sxs-lookup"><span data-stu-id="a3703-214">When this method is called, it uses the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> property to add an item to the cache with a `key` parameter of `key1` and a value of `Value 1`.</span></span> <span data-ttu-id="a3703-215">一个字符串，数组`dependencyKey`，然后使用的值创建`key1`以及。</span><span class="sxs-lookup"><span data-stu-id="a3703-215">An array of strings, `dependencyKey`, is then created with the value of `key1` as well.</span></span> <span data-ttu-id="a3703-216"><xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType>构造函数用于创建<xref:System.Web.Caching.CacheDependency>对象， `dep1`，哪些传递`dependencyKey`作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="a3703-216">The <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> constructor is used to create a <xref:System.Web.Caching.CacheDependency> object, `dep1`, which passes `dependencyKey` as a parameter argument.</span></span> <span data-ttu-id="a3703-217">第二个<xref:System.Web.Caching.CacheDependency>对象， `dep2`，使用此构造函数，创建`dep1`作为第三个参数自变量传递。</span><span class="sxs-lookup"><span data-stu-id="a3703-217">A second <xref:System.Web.Caching.CacheDependency> object, `dep2`, is created using this constructor, with `dep1` passed as the third parameter argument.</span></span> <span data-ttu-id="a3703-218">此第二个依赖关系是依赖于第一个。</span><span class="sxs-lookup"><span data-stu-id="a3703-218">This second dependency is dependent on the first.</span></span> <span data-ttu-id="a3703-219"><xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法使用第二个接下来，调用<xref:System.Web.Caching.CacheDependency>对象作为参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-219">The <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> method is called next, using the second <xref:System.Web.Caching.CacheDependency> object as a parameter.</span></span> <span data-ttu-id="a3703-220">如果第一个依赖项以任何方式发生更改，缓存的项都将失效。</span><span class="sxs-lookup"><span data-stu-id="a3703-220">If the first dependency changes in any way, the cached item will be invalidated.</span></span>  
  
 [!code-csharp[CacheDependency Constructor7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor7/CS/dependencycs.aspx#1)]
 [!code-vb[CacheDependency Constructor7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor7/VB/dependencyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency, DateTime start);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="a3703-221">缓存对象所依赖的一组（到文件或目录的）路径。</span><span class="sxs-lookup"><span data-stu-id="a3703-221">An array of paths (to files or directories) that the cached object is dependent upon.</span></span> <span data-ttu-id="a3703-222">当这些资源中的任何一个更改时，缓存的对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-222">When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="cachekeys"><span data-ttu-id="a3703-223">一组缓存键，新对象监视它们的更改。</span><span class="sxs-lookup"><span data-stu-id="a3703-223">An array of cache keys that the new object monitors for changes.</span></span> <span data-ttu-id="a3703-224">当这些缓存键中的任何一个发生更改时，与此依赖项对象关联的缓存对象即过时，并从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="a3703-224">When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</span></span></param>
        <param name="dependency"><span data-ttu-id="a3703-225">此实例所依赖的 <see cref="T:System.Web.Caching.CacheDependency" /> 类的另一个实例。</span><span class="sxs-lookup"><span data-stu-id="a3703-225">Another instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that this instance is dependent upon.</span></span></param>
        <param name="start"><span data-ttu-id="a3703-226">检查数组中对象和 <see cref="T:System.Web.Caching.CacheDependency" /> 对象的上次修改日期所依据的时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-226">The time against which to check the last modified date of the objects in the arrays and the <see cref="T:System.Web.Caching.CacheDependency" /> object.</span></span></param>
        <summary><span data-ttu-id="a3703-227">初始化 <see cref="T:System.Web.Caching.CacheDependency" /> 类的新实例，它监视一组（到文件或目录的）路径、缓存键的更改情况或同时监视二者的更改情况。</span><span class="sxs-lookup"><span data-stu-id="a3703-227">Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</span></span> <span data-ttu-id="a3703-228">它还使自己依赖于 <see cref="T:System.Web.Caching.CacheDependency" /> 类的另一个实例以及更改监视开始的时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-228">It also makes itself dependent upon another instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class and a time when the change monitoring begins.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-229">此外，如果任何目录或文件中指定`filenames`参数找不到在文件系统中，它将被视为丢失。</span><span class="sxs-lookup"><span data-stu-id="a3703-229">Also, if any of the directories or files specified in the `filenames` parameter is not found in the file system, it is treated as missing.</span></span> <span data-ttu-id="a3703-230">如果缺少目录或文件，则当与依赖项的对象将添加到<xref:System.Web.Caching.Cache>，缓存的对象将不再从<xref:System.Web.Caching.Cache>创建该目录或文件时。</span><span class="sxs-lookup"><span data-stu-id="a3703-230">If a directory or file is missing when the object with the dependency is added to the <xref:System.Web.Caching.Cache>, the cached object will be removed from the <xref:System.Web.Caching.Cache> when that directory or file is created.</span></span>  
  
 <span data-ttu-id="a3703-231">例如，假定你将添加到对象<xref:System.Web.Caching.Cache>并依赖于以下的文件路径： c:\stocks\xyz.dat。</span><span class="sxs-lookup"><span data-stu-id="a3703-231">For example, assume that you add an object to the <xref:System.Web.Caching.Cache> with a dependency on the following file path: c:\stocks\xyz.dat.</span></span> <span data-ttu-id="a3703-232">如果该文件未找到时<xref:System.Web.Caching.CacheDependency>对象创建，但更高版本创建，xyz.dat 文件在创建时删除缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-232">If that file is not found when the <xref:System.Web.Caching.CacheDependency> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</span></span>  
 
 <span data-ttu-id="a3703-233">但是，`cachekeys`依赖项不起作用相同的方式。</span><span class="sxs-lookup"><span data-stu-id="a3703-233">However, the `cachekeys` dependency does not work the same way.</span></span> <span data-ttu-id="a3703-234">如果中至少一个值`cachekeys`参数不存在的插入操作时，插入操作失败。</span><span class="sxs-lookup"><span data-stu-id="a3703-234">If at least one value in the `cachekeys` parameter does not exist at the time of an insert, the insert fails.</span></span> <span data-ttu-id="a3703-235">请注意，对于此方案引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="a3703-235">Note that there is no exception thrown for this scenario.</span></span>

> [!NOTE]
>  <span data-ttu-id="a3703-236">更改跟踪将立即开始，并在不直接基于`start`参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-236">Change tracking begins immediately and is not directly based on the `start` parameter.</span></span> <span data-ttu-id="a3703-237">使用`start`传递参数来传递日期和时间在过去依据你想要检查的任何对象的上次修改的日期`filenames`， `cachekeys`，或`dependency`参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-237">Use the `start` parameter to pass a date and time in the past against which you want to check the last modified date of any of the objects passed in the `filenames`, `cachekeys`, or `dependency` parameters.</span></span> <span data-ttu-id="a3703-238">如果的上次修改任何这些对象的日期是否晚于日期和时间传递中`start`参数，该缓存的项移除从<xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-238">If the last modified date for any of those objects is later than the date and time passed in the `start` parameter, the cached item is removed from the <xref:System.Web.Caching.Cache>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-239">下面的代码示例演示`CreateDependency`方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-239">The following code example shows a `CreateDependency` method.</span></span> <span data-ttu-id="a3703-240">当调用此方法时，它将创建<xref:System.DateTime>对象和<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>属性用于将项添加到缓存的 key 参数为`key1`和的值`Value 1`。</span><span class="sxs-lookup"><span data-stu-id="a3703-240">When this method is called, it creates a <xref:System.DateTime> object and the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> property is used to add an item to the cache with a key parameter of `key1` and a value of `Value 1`.</span></span> <span data-ttu-id="a3703-241">一个字符串，数组`dependencyKey`，然后使用设置的值为其第一个 （并且只有一个） 索引处的值创建`key1`以及。</span><span class="sxs-lookup"><span data-stu-id="a3703-241">An array of strings, `dependencyKey`, is then created with the value at its first (and only) index set to the value of `key1` as well.</span></span> <span data-ttu-id="a3703-242"><xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType>构造函数之后用于创建<xref:System.Web.Caching.CacheDependency>对象， `dep1`，哪些传递`dependencyKey`作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="a3703-242">The <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> constructor is then used to create a <xref:System.Web.Caching.CacheDependency> object, `dep1`, which passes `dependencyKey` as a parameter argument.</span></span> <span data-ttu-id="a3703-243">第二个<xref:System.Web.Caching.CacheDependency>对象， `dep2`，然后，与使用此构造函数，创建`dep1`和<xref:System.DateTime>对象作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="a3703-243">A second <xref:System.Web.Caching.CacheDependency> object, `dep2`, is then created using this constructor, with `dep1` and the <xref:System.DateTime> object passed as parameter arguments.</span></span> <span data-ttu-id="a3703-244">此第二个依赖关系将依赖于第一个，并且依赖监视将开始在 10 秒后`CreateDependency`调用方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-244">This second dependency is dependent on the first, and dependency monitoring will begin 10 seconds after the `CreateDependency` method is called.</span></span> <span data-ttu-id="a3703-245"><xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法使用第二个接下来，调用<xref:System.Web.Caching.CacheDependency>对象作为参数。</span><span class="sxs-lookup"><span data-stu-id="a3703-245">The <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> method is called next, using the second <xref:System.Web.Caching.CacheDependency> object as a parameter.</span></span> <span data-ttu-id="a3703-246">如果第一个依赖项以任何方式发生更改，缓存的项都将失效。</span><span class="sxs-lookup"><span data-stu-id="a3703-246">If the first dependency changes in any way, the cached item will be invalidated.</span></span>  
  
 [!code-csharp[CacheDependency Constructor8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor8/CS/dependencytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor8/VB/dependencytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="DependencyDispose">
      <MemberSignature Language="C#" Value="protected virtual void DependencyDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DependencyDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.DependencyDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DependencyDispose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DependencyDispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-247">释放由 <see cref="T:System.Web.Caching.CacheDependency" /> 类和从 <see cref="T:System.Web.Caching.CacheDependency" /> 派生的所有类使用的资源。</span><span class="sxs-lookup"><span data-stu-id="a3703-247">Releases the resources used by the <see cref="T:System.Web.Caching.CacheDependency" /> class and any classes that derive from <see cref="T:System.Web.Caching.CacheDependency" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-248">任何派生自的类<xref:System.Web.Caching.CacheDependency>类是需要实现此方法，以清理派生的类已使用的资源。</span><span class="sxs-lookup"><span data-stu-id="a3703-248">Any class that derives from the <xref:System.Web.Caching.CacheDependency> class is required to implement this method to clean up resources the derived class has used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-249">下面的代码示例演示从继承的类<xref:System.Web.Caching.CacheDependency>类，并重写<xref:System.Web.Caching.CacheDependency.DependencyDispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-249">The following code example shows a class that inherits from the <xref:System.Web.Caching.CacheDependency> class and overrides the <xref:System.Web.Caching.CacheDependency.DependencyDispose%2A> method.</span></span> <span data-ttu-id="a3703-250">当调用此方法时，它将设置自定义布尔值属性名为`Disposed`到`true`。</span><span class="sxs-lookup"><span data-stu-id="a3703-250">When this method is called, it sets a custom Boolean property named `Disposed` to `true`.</span></span>  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-251">释放由 <see cref="T:System.Web.Caching.CacheDependency" /> 对象使用的资源。</span><span class="sxs-lookup"><span data-stu-id="a3703-251">Releases the resources used by the <see cref="T:System.Web.Caching.CacheDependency" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInit">
      <MemberSignature Language="C#" Value="protected internal void FinishInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void FinishInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.FinishInit" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub FinishInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void FinishInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-252">完成 <see cref="T:System.Web.Caching.CacheDependency" /> 对象的初始化。</span><span class="sxs-lookup"><span data-stu-id="a3703-252">Completes initialization of the <see cref="T:System.Web.Caching.CacheDependency" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-253"><xref:System.Web.Caching.CacheDependency.FinishInit%2A>方法完成的初始化<xref:System.Web.Caching.CacheDependency>对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-253">The <xref:System.Web.Caching.CacheDependency.FinishInit%2A> method completes the initialization of the <xref:System.Web.Caching.CacheDependency> object.</span></span> <span data-ttu-id="a3703-254">此方法由所有<xref:System.Web.Caching.CacheDependency>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a3703-254">This method is called by all <xref:System.Web.Caching.CacheDependency> constructors.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a3703-255"><see cref="M:System.Web.Caching.CacheDependency.FinishInit" />方法必须在派生类来完成的初始化的构造函数的末尾调用<see cref="T:System.Web.Caching.CacheDependency" />对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-255">The <see cref="M:System.Web.Caching.CacheDependency.FinishInit" /> method must be called at the end of the constructor for derived classes to complete the initialization of the <see cref="T:System.Web.Caching.CacheDependency" /> object.</span></span></para>
        </block>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDependencies">
      <MemberSignature Language="C#" Value="public virtual string[] GetFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDependencies () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFileDependencies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-256">获取文件依赖项。</span><span class="sxs-lookup"><span data-stu-id="a3703-256">Gets the file dependencies.</span></span></summary>
        <returns><span data-ttu-id="a3703-257">文件依赖项。</span><span class="sxs-lookup"><span data-stu-id="a3703-257">The file dependencies.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueID">
      <MemberSignature Language="C#" Value="public virtual string GetUniqueID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUniqueID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetUniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUniqueID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUniqueID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-258">检索 <see cref="T:System.Web.Caching.CacheDependency" /> 对象的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="a3703-258">Retrieves a unique identifier for a <see cref="T:System.Web.Caching.CacheDependency" /> object.</span></span></summary>
        <returns><span data-ttu-id="a3703-259"><see cref="T:System.Web.Caching.CacheDependency" /> 对象的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="a3703-259">The unique identifier for the <see cref="T:System.Web.Caching.CacheDependency" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-260">此方法会很适合用于跟踪的多个实例<xref:System.Web.Caching.CacheDependency>与某个项或应用程序相关联的类。</span><span class="sxs-lookup"><span data-stu-id="a3703-260">This method can be particularly useful for tracking multiple instances of the <xref:System.Web.Caching.CacheDependency> class associated with an item or an application.</span></span>  
  
 <span data-ttu-id="a3703-261">标识符是文件名 （针对文件依赖项） 或 （对于缓存键依赖关系） 项的名称和一个字符串，此方法将分配到的依赖项的组合。</span><span class="sxs-lookup"><span data-stu-id="a3703-261">The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency.</span></span> <span data-ttu-id="a3703-262">派生自的类中<xref:System.Web.Caching.CacheDependency>类，你可以重写此方法以自定义它如何生成的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="a3703-262">In classes that derive from the <xref:System.Web.Caching.CacheDependency> class, you can override this method to customize how it generates the unique identifier.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-263">下面的代码示例创建<xref:System.Web.Caching.AggregateCacheDependency>对象，名为`aggDep`，包含两个<xref:System.Web.Caching.CacheDependency>其数组中的对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-263">The following code example creates an <xref:System.Web.Caching.AggregateCacheDependency> object, named `aggDep`, with two <xref:System.Web.Caching.CacheDependency> objects in its array.</span></span> <span data-ttu-id="a3703-264">一次`aggDep`实例化时，该代码调用<xref:System.Web.Caching.CacheDependency.GetUniqueID%2A>方法来生成两个依赖项的唯一标识符，`aggDep`包含和到包含页显示的标识符。</span><span class="sxs-lookup"><span data-stu-id="a3703-264">Once `aggDep` is instantiated, the code calls the <xref:System.Web.Caching.CacheDependency.GetUniqueID%2A> method to generate a unique identifier for both dependencies that `aggDep` contains and displays the identifiers to the containing page.</span></span> <span data-ttu-id="a3703-265">然后将项添加到<xref:System.Web.Caching.Cache>，使用<xref:System.Web.Caching.Cache.Insert%2A>方法，与`aggDep`作为依赖项。</span><span class="sxs-lookup"><span data-stu-id="a3703-265">An item is then added to the <xref:System.Web.Caching.Cache>, using the <xref:System.Web.Caching.Cache.Insert%2A> method, with `aggDep` as a dependency.</span></span>  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3703-266">获取一个值，该值指示 <see cref="T:System.Web.Caching.CacheDependency" /> 对象是否已更改。</span><span class="sxs-lookup"><span data-stu-id="a3703-266">Gets a value indicating whether the <see cref="T:System.Web.Caching.CacheDependency" /> object has changed.</span></span></summary>
        <value>
          <span data-ttu-id="a3703-267">如果 <see cref="T:System.Web.Caching.CacheDependency" /> 对象已更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3703-267"><see langword="true" /> if the <see cref="T:System.Web.Caching.CacheDependency" /> object has changed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a3703-268">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3703-268">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-269">你可以将项添加到 ASP.NET 应用程序的<xref:System.Web.Caching.Cache>与<xref:System.Web.Caching.CacheDependency>。</span><span class="sxs-lookup"><span data-stu-id="a3703-269">You can add an item to an ASP.NET application's <xref:System.Web.Caching.Cache> with a <xref:System.Web.Caching.CacheDependency>.</span></span> <span data-ttu-id="a3703-270">当<xref:System.Web.Caching.CacheDependency>发生更改，添加了项<xref:System.Web.Caching.Cache>失效，并且从缓存中删除。</span><span class="sxs-lookup"><span data-stu-id="a3703-270">When the <xref:System.Web.Caching.CacheDependency> changes, the item added to the <xref:System.Web.Caching.Cache> is invalidated and removed from the cache.</span></span> <span data-ttu-id="a3703-271">你可以使用此属性以确定是否<xref:System.Web.Caching.CacheDependency>已更改，并重新创建中的项<xref:System.Web.Caching.Cache>如果发生这种。</span><span class="sxs-lookup"><span data-stu-id="a3703-271">You can use this property to determine whether a <xref:System.Web.Caching.CacheDependency> has changed, and recreate the item in the <xref:System.Web.Caching.Cache> if that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-272">下面的代码示例演示如何使用<xref:System.Web.Caching.CacheDependency.HasChanged%2A>属性来确定是否<xref:System.Web.Caching.CacheDependency>自上一个请求中的项以来更改<xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-272">The following code example demonstrates using the <xref:System.Web.Caching.CacheDependency.HasChanged%2A> property to determine whether a <xref:System.Web.Caching.CacheDependency> changed since the previous request for an item in the <xref:System.Web.Caching.Cache>.</span></span> <span data-ttu-id="a3703-273">`dt`传入值`start`参数设置为<xref:System.DateTime.Now%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a3703-273">The `dt` value passed in the `start` parameter is set to <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="ItemRemoved">
      <MemberSignature Language="C#" Value="public void ItemRemoved ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ItemRemoved() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.ItemRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItemRemoved ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItemRemoved();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-274">删除监视的缓存项时调用。</span><span class="sxs-lookup"><span data-stu-id="a3703-274">Called when a monitored cache entry is removed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepDependenciesAlive">
      <MemberSignature Language="C#" Value="public void KeepDependenciesAlive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void KeepDependenciesAlive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeepDependenciesAlive ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void KeepDependenciesAlive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-275">更新依赖于此项的每个缓存项的上次访问时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-275">Updates the last access time of every cache item that depends on this item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDependencyChanged">
      <MemberSignature Language="C#" Value="protected void NotifyDependencyChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyDependencyChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyDependencyChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyDependencyChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="a3703-276">事件源。</span><span class="sxs-lookup"><span data-stu-id="a3703-276">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="a3703-277">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-277">An <see cref="T:System.EventArgs" /> object that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a3703-278">通知 <see cref="T:System.Web.Caching.CacheDependency" /> 基对象由派生的 <see cref="T:System.Web.Caching.CacheDependency" /> 类表示的依赖项已更改。</span><span class="sxs-lookup"><span data-stu-id="a3703-278">Notifies the base <see cref="T:System.Web.Caching.CacheDependency" /> object that the dependency represented by a derived <see cref="T:System.Web.Caching.CacheDependency" /> class has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-279">任何派生自的类<xref:System.Web.Caching.CacheDependency>类必须实现此方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-279">Any class that derives from the <xref:System.Web.Caching.CacheDependency> class must implement this method.</span></span>  
  
 <span data-ttu-id="a3703-280">派生自<xref:System.Web.Caching.CacheDependency>类，你可以使用任何方法或已在不重写的属性的基本功能。</span><span class="sxs-lookup"><span data-stu-id="a3703-280">When you derive from the <xref:System.Web.Caching.CacheDependency> class, you use the base functionality of any method or property that you have not overridden.</span></span> <span data-ttu-id="a3703-281">在创建派生类的实例时，它表示文件、 缓存键、 数据库表或你想要使缓存的项取决于其他任意对象。</span><span class="sxs-lookup"><span data-stu-id="a3703-281">When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon.</span></span> <span data-ttu-id="a3703-282">当依赖项更改时，此方法通知的基本功能<xref:System.Web.Caching.CacheDependency>类项已更改，以便值<xref:System.Web.Caching.CacheDependency.HasChanged%2A>和<xref:System.Web.Caching.CacheDependency.UtcLastModified%2A>可以更新属性。</span><span class="sxs-lookup"><span data-stu-id="a3703-282">When a dependency item changes, this method notifies the base functionality of the <xref:System.Web.Caching.CacheDependency> class that the item has changed, so that the values of the <xref:System.Web.Caching.CacheDependency.HasChanged%2A> and <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> properties can be updated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-283">下面的代码示例演示从继承的类<xref:System.Web.Caching.CacheDependency>类。</span><span class="sxs-lookup"><span data-stu-id="a3703-283">The following code example shows a class that inherits from the <xref:System.Web.Caching.CacheDependency> class.</span></span> <span data-ttu-id="a3703-284">它创建一个公共方法， `ResetDependency`，使用<xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A>方法可以更改从该处修改依赖项的时间，然后调用<xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-284">It creates a public method, `ResetDependency`, that uses the <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> method to change the time at which the dependency was modified, and then calls the <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> method.</span></span>  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="SetCacheDependencyChanged">
      <MemberSignature Language="C#" Value="public void SetCacheDependencyChanged (Action&lt;object,EventArgs&gt; dependencyChangedAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheDependencyChanged(class System.Action`2&lt;object, class System.EventArgs&gt; dependencyChangedAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheDependencyChanged (dependencyChangedAction As Action(Of Object, EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheDependencyChanged(Action&lt;System::Object ^, EventArgs ^&gt; ^ dependencyChangedAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyChangedAction" Type="System.Action&lt;System.Object,System.EventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencyChangedAction"><span data-ttu-id="a3703-285">依赖项更改的操作。</span><span class="sxs-lookup"><span data-stu-id="a3703-285">The dependency changed action.</span></span></param>
        <summary><span data-ttu-id="a3703-286">添加 Action 方法，处理通知感兴趣的参与方有关此依赖项的更改。</span><span class="sxs-lookup"><span data-stu-id="a3703-286">Adds an Action method to handle notifying interested party in changes to this dependency.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUtcLastModified">
      <MemberSignature Language="C#" Value="protected void SetUtcLastModified (DateTime utcLastModified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetUtcLastModified(valuetype System.DateTime utcLastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetUtcLastModified (utcLastModified As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetUtcLastModified(DateTime utcLastModified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utcLastModified" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="utcLastModified"><span data-ttu-id="a3703-287">依赖项的上次更改时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-287">The time when the dependency last changed.</span></span></param>
        <summary><span data-ttu-id="a3703-288">标记依赖项的上次更改时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-288">Marks the time when a dependency last changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3703-289">下面的代码示例演示从继承的类<xref:System.Web.Caching.CacheDependency>类。</span><span class="sxs-lookup"><span data-stu-id="a3703-289">The following code example shows a class that inherits from the <xref:System.Web.Caching.CacheDependency> class.</span></span> <span data-ttu-id="a3703-290">它创建一个公共方法， `ResetDependency`，使用<xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A>方法可以更改从该处修改依赖项的时间，然后调用<xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3703-290">It creates a public method, `ResetDependency`, that uses the <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> method to change the time at which the dependency was modified, and then calls the <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> method.</span></span>  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="TakeOwnership">
      <MemberSignature Language="C#" Value="public bool TakeOwnership ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TakeOwnership() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.TakeOwnership" />
      <MemberSignature Language="VB.NET" Value="Public Function TakeOwnership () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TakeOwnership();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3703-291">允许第一个用户声明对此依赖项的独占拥有权。</span><span class="sxs-lookup"><span data-stu-id="a3703-291">Allows the first user to declare exclusive ownership of this dependency.</span></span></summary>
        <returns>
          <span data-ttu-id="a3703-292">如果此项第一个获得拥有权，则为 <see langword="true" />
          <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3703-292"><see langword="true" />
<see langword="true" /> if the item was the first to take ownership otherwise <see langword="false" />.</span></span> <span data-ttu-id="a3703-293"><see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3703-293"><see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-294">此方法声明使用依赖项。</span><span class="sxs-lookup"><span data-stu-id="a3703-294">This method declares that the dependency is used.</span></span> <span data-ttu-id="a3703-295">如果另一个项之前调用此方法，并取得所有权，`false`返回。</span><span class="sxs-lookup"><span data-stu-id="a3703-295">If another item previously called this method and took ownership, `false` is returned.</span></span> <span data-ttu-id="a3703-296">A<xref:System.Web.Caching.CacheDependency>只能由一个缓存项。</span><span class="sxs-lookup"><span data-stu-id="a3703-296">A  <xref:System.Web.Caching.CacheDependency> can only be used by one cache entry.</span></span> <span data-ttu-id="a3703-297">当项目具有指定任何缓存依赖项添加到缓存时，缓存应该采取这些依赖关系，以确保，它们不会重新使用某处其他的所有权。</span><span class="sxs-lookup"><span data-stu-id="a3703-297">When an item is added to a cache with any cache dependencies specified, the cache should take ownership of those dependencies to make sure that they are not reused somewhere else.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime UtcLastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcLastModified" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcLastModified As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcLastModified { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3703-298">获取依赖项的上次更改时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-298">Gets the time when the dependency was last changed.</span></span></summary>
        <value><span data-ttu-id="a3703-299">依赖项的上次更改时间。</span><span class="sxs-lookup"><span data-stu-id="a3703-299">The time when the dependency was last changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3703-300">此属性的单位以协调世界时 (UTC) （也称为格林威治标准时间）。</span><span class="sxs-lookup"><span data-stu-id="a3703-300">This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3703-301">下面的代码示例使用<xref:System.Web.Caching.AggregateCacheDependency>要添加的项，请使用两个类<xref:System.Web.Caching.CacheDependency>为对象依赖关系， <xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-301">The following code example uses the <xref:System.Web.Caching.AggregateCacheDependency> class to add an item, with two <xref:System.Web.Caching.CacheDependency> object dependencies, to the <xref:System.Web.Caching.Cache>.</span></span> <span data-ttu-id="a3703-302">当请求<xref:System.Web.Caching.Cache>项时，代码检查该项是否处于<xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-302">When a request for the <xref:System.Web.Caching.Cache> item is made, the code checks whether the item is in the <xref:System.Web.Caching.Cache>.</span></span> <span data-ttu-id="a3703-303">如果是，<xref:System.Web.Caching.CacheDependency.UtcLastModified%2A>属性是转换为字符串，页面上显示。</span><span class="sxs-lookup"><span data-stu-id="a3703-303">If it is, the <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> property is converted to a string and displayed on the page.</span></span> <span data-ttu-id="a3703-304">将该项目，其两个依赖项不是这样，如果会创建并添加到<xref:System.Web.Caching.Cache>。</span><span class="sxs-lookup"><span data-stu-id="a3703-304">If it is not, the item and its two dependencies are created and added to the <xref:System.Web.Caching.Cache>.</span></span>  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
  </Members>
</Type>