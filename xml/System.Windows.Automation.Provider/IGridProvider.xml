<Type Name="IGridProvider" FullName="System.Windows.Automation.Provider.IGridProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6dea9dcc9b9aa12c549200565d53b582263c289b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30618771" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IGridProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGridProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IGridProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGridProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IGridProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("b17d6187-0907-464b-a168-0ef17a1572b1")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问充当某个子元素集合的容器的控件。 此元素的子级必须实现 <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" />，而且必须使用键盘在可以进行遍历的一个二维逻辑坐标系统中组织（即，UI 自动化客户端可以移动到相邻控件）。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现 UI 自动化提供程序必须支持上<xref:System.Windows.Automation.GridPattern>控件模式。  
  
 <xref:System.Windows.Automation.Provider.IGridProvider> 不会启用网格的主动操作；必须实现 <xref:System.Windows.Automation.Provider.ITransformProvider> 以启用此功能。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.GridPattern" />
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取网格中的总列数。</summary>
        <value>网格中的总列数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 隐藏的行和列，具体取决于提供程序实现中，可以加载在[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]树，因此将反映在<xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A>和<xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A>属性。 如果隐藏的行和列尚未加载它们将不计。  
  
   
  
## Examples  
 下面的代码示例返回属性值。  
  
 [!code-csharp[UIAMiscPatternProviders_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#102)]
 [!code-vb[UIAMiscPatternProviders_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetItem (int row, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetItem(int32 row, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (row As Integer, column As Integer) As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetItem(int row, int column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">相关行的序号。</param>
        <param name="column">相关列的序号。</param>
        <summary>检索指定单元格的 UI 自动化提供程序。</summary>
        <returns>指定单元格的 UI 自动化提供程序。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   网格坐标是从零开始的左上角单元格 （或右上角单元格，具体取决于区域设置） 的坐标 (0，0)。  
  
-   如果某个单元格为空 UI 自动化提供程序必须仍返回为了支持<xref:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid%2A>该单元格的属性。 当在网格中的子元素的布局类似于未对齐的数组时，这是可行的。  
  
 ![Windows 资源管理器视图显示未对齐的布局。] (~/add/media/uia-gridpattern-ragged-array.PNG "Windows 资源管理器视图显示未对齐的布局。")  
坐标为空的 Grid 控件的示例  
  
-   隐藏的行和列，具体取决于提供程序实现中，可以加载在[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]树，因此将反映在<xref:System.Windows.Automation.Provider.IGridProvider.RowCount%2A>和<xref:System.Windows.Automation.Provider.IGridProvider.ColumnCount%2A>属性。 如果隐藏的行和列尚未加载它们不应进行计数。  
  
   
  
## Examples  
 下面的代码是此方法的返回表示指定的位置处的项的对象的示例实现。  
  
 [!code-csharp[UIAMiscPatternProviders_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#101)]
 [!code-vb[UIAMiscPatternProviders_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IGridProvider.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取网格中的总行数。</summary>
        <value>网格中的总行数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 隐藏的行和列，具体取决于提供程序实现中，可以加载的逻辑树中，因此将反映在<xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A>和<xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A>属性。 如果隐藏的行和列尚未加载它们将不计。  
  
   
  
## Examples  
 下面的代码示例返回属性值。  
  
 [!code-csharp[UIAMiscPatternProviders_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#103)]
 [!code-vb[UIAMiscPatternProviders_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>