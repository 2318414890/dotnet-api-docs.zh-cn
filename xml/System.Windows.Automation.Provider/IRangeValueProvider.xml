<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRangeValueProvider.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56dffcd0287384ebbbce831285dfd1515ba9636ec.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6dffcd0287384ebbbce831285dfd1515ba9636ec</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.IRangeValueProvider">
          <source>Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.</source>
          <target state="translated">公开一些方法和属性，以支持 UI 自动化客户端访问可在一定范围内设置为值的控件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IRangeValueProvider">
          <source>Implemented on a UI Automation provider that must support the <ph id="ph1">&lt;xref:System.Windows.Automation.RangeValuePattern&gt;</ph> control pattern.</source>
          <target state="translated">实现 UI 自动化提供程序必须支持上<ph id="ph1">&lt;xref:System.Windows.Automation.RangeValuePattern&gt;</ph>控件模式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
          <source>Gets a value that specifies whether the value of a control is read-only.</source>
          <target state="translated">获取一个值，该值指定控件的值是否是只读的。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value is read-only; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it can be modified.</source>
          <target state="translated">如果值为只读的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果可以修改它，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
          <source>The following example shows an implementation of this method for a control that is not read-only.</source>
          <target state="translated">下面的示例演示的控件不是只读的此方法的实现。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
          <source>Gets the value that is added to or subtracted from the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph> property when a large change is made, such as with the PAGE DOWN key.</source>
          <target state="translated">获取一个值，当发生大更改时（例如按下了 Page Down 键），会将 <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph> 属性加上该值或从中减去该值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
          <source>The large-change value supported by the control or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /&gt;</ph>.</source>
          <target state="translated">控件支持的大更改值；如果控件不支持 <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /&gt;</ph>，则为 null（在 <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph> 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
          <source>The following example shows an implementation of this method for a control that has a large change value of 5.0.</source>
          <target state="translated">下面的示例演示的控件的显著更改值为 5.0，此方法的实现。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
          <source>Gets the maximum range value supported by the control.</source>
          <target state="translated">获取控件支持的最大范围值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
          <source>The maximum value supported by the control or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /&gt;</ph>.</source>
          <target state="translated">控件支持的最大值；如果控件不支持 <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /&gt;</ph>，则为 null（在 <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph> 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
          <source>The following example shows an implementation of this method for a control that has a maximum value of 255.0.</source>
          <target state="translated">下面的示例演示的控件 255.0 的最大值，此方法的实现。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
          <source>Gets the minimum range value supported by the control.</source>
          <target state="translated">获取控件支持的最小范围值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
          <source>The minimum value supported by the control or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /&gt;</ph>.</source>
          <target state="translated">控件支持的最小值；如果控件不支持 <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /&gt;</ph>，则为 null（在 <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph> 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
          <source>The following example shows an implementation of this method for a control that has a minimum value of 0.0.</source>
          <target state="translated">下面的示例演示的控件的最小值为 0.0，此方法的实现。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The value to set.</source>
          <target state="translated">要设置的值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>Sets the value of the control.</source>
          <target state="translated">设置控件的值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The actual value set depends on the control implementation.</source>
          <target state="translated">设置的实际值取决于控件的实现。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The control may round the requested <ph id="ph1">`value`</ph> up or down.</source>
          <target state="translated">控件可能舍入请求<ph id="ph1">`value`</ph>上移或下移。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The following example shows one possible implementation of this method for a custom control.</source>
          <target state="translated">下面的示例演示此方法对于自定义控件的一种可能的实现。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>The custom control displays its range value through the alpha value of its base color.</source>
          <target state="translated">自定义控件显示其基的颜色的 alpha 值通过其范围值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
          <source>When <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than the minimum or greater than the maximum value of the control.</source>
          <target state="translated">当 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 小于控件的最小值或大于控件的最大值时。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
          <source>Gets the value that is added to or subtracted from the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph> property when a small change is made, such as with an arrow key.</source>
          <target state="translated">获取一个值，当发生小更改时（例如按下了某个箭头键），会将 <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph> 属性加上该值或从中减去该值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
          <source>The small-change value or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /&gt;</ph>.</source>
          <target state="translated">对于控件唯一的小更改值；如果控件不支持 <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /&gt;</ph>，则为 null（在 <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph> 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
          <source>The following example shows an implementation of this method for a control that has a small change value of 1.0.</source>
          <target state="translated">下面的示例演示的控件的小更改值为 1.0，此方法的实现。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
          <source>Gets the value of the control.</source>
          <target state="translated">获取控件的值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
          <source>The value of the control or null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>) if the control does not support <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph>.</source>
          <target state="translated">控件的值；如果控件不支持 <ph id="ph3">&lt;see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /&gt;</ph>，则为 null（在 <ph id="ph2">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph> 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
          <source>The following example shows an implementation of this method for a custom control.</source>
          <target state="translated">下面的示例演示此方法的自定义控件的实现。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
          <source>For the purposes of this sample, the custom control displays the value through the alpha setting of its base color.</source>
          <target state="translated">此示例的目的，自定义控件显示通过其基础颜色的 alpha 设置的值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>