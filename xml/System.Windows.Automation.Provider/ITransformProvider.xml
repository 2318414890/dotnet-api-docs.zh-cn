<Type Name="ITransformProvider" FullName="System.Windows.Automation.Provider.ITransformProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5b21cba0c524449ce98319e948fae297e25d289" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39947705" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITransformProvider" />
  <TypeSignature Language="F#" Value="type ITransformProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="25083-101">公开一些方法和属性，以支持 UI 自动化客户端访问可移动、调整大小或在二维空间中旋转的控件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="25083-101">Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25083-102">必须支持的 UI 自动化提供程序上实现<xref:System.Windows.Automation.TransformPattern>控件模式。</span><span class="sxs-lookup"><span data-stu-id="25083-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TransformPattern> control pattern.</span></span>  
  
 <span data-ttu-id="25083-103">对此控件模式的支持并不限于桌面上的对象。</span><span class="sxs-lookup"><span data-stu-id="25083-103">Support for this control pattern is not limited to objects on the desktop.</span></span> <span data-ttu-id="25083-104">只要子级可以移动、 调整大小或容器的边界内自由地旋转，则还必须由容器对象的子级的实现此控件模式。</span><span class="sxs-lookup"><span data-stu-id="25083-104">This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TransformPattern" />
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMove : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25083-105">获取一个值，该值指示控件是否可移动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-105">Gets a value that specifies whether the control can be moved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25083-106">如果元素可以移动，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-106">
              <see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="25083-107">下面的示例显示了可以移动控件的此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="25083-107">The following example shows an implementation of this method for a control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanMove](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canmove)]
 [!code-vb[UIAITransformProvider_snip#CanMove](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canmove)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResize : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25083-108">获取一个值，该值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素是否可以调整大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-108">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be resized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25083-109">如果元素可以调整大小，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-109">
              <see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="25083-110">下面的示例显示了此控件可调整大小的方法的实现。</span><span class="sxs-lookup"><span data-stu-id="25083-110">The following example shows an implementation of this method for a control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanResize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canresize)]
 [!code-vb[UIAITransformProvider_snip#CanResize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canresize)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRotate : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="25083-111">获取一个值，该值指示控件是否可旋转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-111">Gets a value that specifies whether the control can be rotated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="25083-112">如果元素可以旋转，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-112">
              <see langword="true" /> if the element can be rotated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="25083-113">下面的示例显示了此方法不能旋转的控件的实现。</span><span class="sxs-lookup"><span data-stu-id="25083-113">The following example shows an implementation of this method for a control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanRotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canrotate)]
 [!code-vb[UIAITransformProvider_snip#CanRotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canrotate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Move(double x, double y);" />
      <MemberSignature Language="F#" Value="abstract member Move : double * double -&gt; unit" Usage="iTransformProvider.Move (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="25083-114">控件左侧的绝对屏幕坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-114">Absolute screen coordinates of the left side of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="25083-115">控件顶部的绝对屏幕坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-115">Absolute screen coordinates of the top of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25083-116">移动控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-116">Moves the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25083-117">不能移动、 调整大小或旋转，以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。</span><span class="sxs-lookup"><span data-stu-id="25083-117">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="25083-118">例如，当顶层窗口移动完全屏幕或子对象移动的容器的视区边界之外。</span><span class="sxs-lookup"><span data-stu-id="25083-118">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="25083-119">在这些情况下该对象被放在尽可能靠近尽可能与顶部或左侧坐标被覆盖以位于容器边界内的请求的屏幕坐标。</span><span class="sxs-lookup"><span data-stu-id="25083-119">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25083-120">下面的示例显示了此方法对于可以移动一个自定义控件的一种可能的实现。</span><span class="sxs-lookup"><span data-stu-id="25083-120">The following example shows one possible implementation of this method for a custom control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Move](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#move)]
 [!code-vb[UIAITransformProvider_snip#Move](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#move)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25083-121">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> 属性为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-121">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resize (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resize(double width, double height);" />
      <MemberSignature Language="F#" Value="abstract member Resize : double * double -&gt; unit" Usage="iTransformProvider.Resize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="25083-122">窗口的新宽度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-122">The new width of the window, in pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="25083-123">窗口的新高度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-123">The new height of the window, in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25083-124">调整控件大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-124">Resizes the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25083-125">调用控件上时支持拆分窗格中，此方法可以具有其他相邻窗格调整大小的副作用。</span><span class="sxs-lookup"><span data-stu-id="25083-125">When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.</span></span>  
  
 <span data-ttu-id="25083-126">不能移动、 调整大小或旋转，以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。</span><span class="sxs-lookup"><span data-stu-id="25083-126">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="25083-127">例如，当顶层窗口移动完全屏幕或子对象移动的容器的视区边界之外。</span><span class="sxs-lookup"><span data-stu-id="25083-127">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="25083-128">在这些情况下该对象被放在尽可能靠近尽可能与顶部或左侧坐标被覆盖以位于容器边界内的请求的屏幕坐标。</span><span class="sxs-lookup"><span data-stu-id="25083-128">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25083-129">下面的示例显示了此方法对于自定义控件可调整大小的一种可能的实现。</span><span class="sxs-lookup"><span data-stu-id="25083-129">The following example shows one possible implementation of this method for a custom control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Resize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#resize)]
 [!code-vb[UIAITransformProvider_snip#Resize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#resize)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25083-130">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> 属性为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-130">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (degrees As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double degrees);" />
      <MemberSignature Language="F#" Value="abstract member Rotate : double -&gt; unit" Usage="iTransformProvider.Rotate degrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">
          <span data-ttu-id="25083-131">控件的旋转角度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-131">The number of degrees to rotate the control.</span>
          </span>
          <span data-ttu-id="25083-132">正值表示顺时针旋转；负值表示逆时针旋转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-132">A positive number rotates clockwise; a negative number rotates counterclockwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25083-133">旋转控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-133">Rotates the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25083-134">不能移动、 调整大小或旋转，以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。</span><span class="sxs-lookup"><span data-stu-id="25083-134">An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="25083-135">例如，当顶层窗口移动完全屏幕或子对象移动的容器的视区边界之外。</span><span class="sxs-lookup"><span data-stu-id="25083-135">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="25083-136">在这些情况下该对象被放在尽可能靠近尽可能与顶部或左侧坐标被覆盖以位于容器边界内的请求的屏幕坐标。</span><span class="sxs-lookup"><span data-stu-id="25083-136">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25083-137">下面的示例显示了此方法对于在无法旋转的自定义控件的一种可能的实现。</span><span class="sxs-lookup"><span data-stu-id="25083-137">The following example shows one possible implementation of this method for a custom control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Rotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#rotate)]
 [!code-vb[UIAITransformProvider_snip#Rotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#rotate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="25083-138">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> 属性为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="25083-138">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>