<Type Name="ITransformProvider" FullName="System.Windows.Automation.Provider.ITransformProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56daef985679416cab49ebfa89493628182c27c2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30617131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITransformProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c958d-101">公开一些方法和属性，以支持 UI 自动化客户端访问可移动、调整大小或在二维空间中旋转的控件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c958d-101">Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c958d-102">实现 UI 自动化提供程序必须支持上<xref:System.Windows.Automation.TransformPattern>控件模式。</span><span class="sxs-lookup"><span data-stu-id="c958d-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TransformPattern> control pattern.</span></span>  
  
 <span data-ttu-id="c958d-103">对此控件模式的支持并不限于桌面上的对象。</span><span class="sxs-lookup"><span data-stu-id="c958d-103">Support for this control pattern is not limited to objects on the desktop.</span></span> <span data-ttu-id="c958d-104">只要子级可以移动、 调整大小或容器的边界内自由地旋转，则还必须受到容器对象子级实现此控件模式。</span><span class="sxs-lookup"><span data-stu-id="c958d-104">This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TransformPattern" />
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c958d-105">获取一个值，该值指示控件是否可移动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-105">Gets a value that specifies whether the control can be moved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c958d-106">如果可以移动该元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-106">
              <see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c958d-107">下面的示例演示的控件可以移动，此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="c958d-107">The following example shows an implementation of this method for a control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanMove](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canmove)]
 [!code-vb[UIAITransformProvider_snip#CanMove](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canmove)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c958d-108">获取一个值，该值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素是否可以调整大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-108">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be resized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c958d-109">如果元素可以调整大小，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-109">
              <see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c958d-110">下面的示例演示的控件可以调整大小，此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="c958d-110">The following example shows an implementation of this method for a control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanResize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canresize)]
 [!code-vb[UIAITransformProvider_snip#CanResize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canresize)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c958d-111">获取一个值，该值指示控件是否可旋转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-111">Gets a value that specifies whether the control can be rotated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c958d-112">如果元素可旋转，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-112">
              <see langword="true" /> if the element can be rotated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c958d-113">下面的示例演示此方法在无法旋转的控件的实现。</span><span class="sxs-lookup"><span data-stu-id="c958d-113">The following example shows an implementation of this method for a control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanRotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canrotate)]
 [!code-vb[UIAITransformProvider_snip#CanRotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canrotate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Move(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c958d-114">此控件左侧的绝对屏幕坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-114">Absolute screen coordinates of the left side of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c958d-115">此控件顶部的绝对屏幕坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-115">Absolute screen coordinates of the top of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c958d-116">移动此控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-116">Moves the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c958d-117">不能移动、 调整大小或旋转以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。</span><span class="sxs-lookup"><span data-stu-id="c958d-117">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="c958d-118">例如，当顶层窗口移动完全屏幕或子对象移动容器的视区边界之外。</span><span class="sxs-lookup"><span data-stu-id="c958d-118">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="c958d-119">在这些情况下该对象被放置靠近尽可能使用顶部或左侧坐标被覆盖以位于容器边界内所请求的屏幕坐标。</span><span class="sxs-lookup"><span data-stu-id="c958d-119">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c958d-120">下面的示例演示一个可能的自定义控件，可以移动此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="c958d-120">The following example shows one possible implementation of this method for a custom control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Move](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#move)]
 [!code-vb[UIAITransformProvider_snip#Move](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#move)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c958d-121">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> 属性为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-121">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resize (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resize(double width, double height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="c958d-122">窗口的新宽度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-122">The new width of the window, in pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="c958d-123">窗口的新高度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-123">The new height of the window, in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c958d-124">调整控件大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-124">Resizes the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c958d-125">调用控件上时，支持拆分窗格，此方法可以产生副作用的大小调整其他相邻窗格。</span><span class="sxs-lookup"><span data-stu-id="c958d-125">When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.</span></span>  
  
 <span data-ttu-id="c958d-126">不能移动、 调整大小或旋转以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。</span><span class="sxs-lookup"><span data-stu-id="c958d-126">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="c958d-127">例如，当顶层窗口移动完全屏幕或子对象移动容器的视区边界之外。</span><span class="sxs-lookup"><span data-stu-id="c958d-127">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="c958d-128">在这些情况下该对象被放置靠近尽可能使用顶部或左侧坐标被覆盖以位于容器边界内所请求的屏幕坐标。</span><span class="sxs-lookup"><span data-stu-id="c958d-128">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c958d-129">下面的示例演示此方法的自定义控件，可以调整大小的一种可能的实现。</span><span class="sxs-lookup"><span data-stu-id="c958d-129">The following example shows one possible implementation of this method for a custom control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Resize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#resize)]
 [!code-vb[UIAITransformProvider_snip#Resize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#resize)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c958d-130">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> 属性为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-130">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (degrees As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double degrees);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">
          <span data-ttu-id="c958d-131">旋转控件的度数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-131">The number of degrees to rotate the control.</span>
          </span>
          <span data-ttu-id="c958d-132">正数会顺时针旋转；负数会逆时针旋转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-132">A positive number rotates clockwise; a negative number rotates counterclockwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c958d-133">旋转控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-133">Rotates the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c958d-134">不能移动、 调整大小或旋转以便其生成的屏幕位置将完全位于坐标其容器的和键盘或鼠标无法访问外部对象。</span><span class="sxs-lookup"><span data-stu-id="c958d-134">An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="c958d-135">例如，当顶层窗口移动完全屏幕或子对象移动容器的视区边界之外。</span><span class="sxs-lookup"><span data-stu-id="c958d-135">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="c958d-136">在这些情况下该对象被放置靠近尽可能使用顶部或左侧坐标被覆盖以位于容器边界内所请求的屏幕坐标。</span><span class="sxs-lookup"><span data-stu-id="c958d-136">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c958d-137">下面的示例演示一个可能的自定义控件，在无法旋转此方法的实现。</span><span class="sxs-lookup"><span data-stu-id="c958d-137">The following example shows one possible implementation of this method for a custom control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Rotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#rotate)]
 [!code-vb[UIAITransformProvider_snip#Rotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#rotate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c958d-138">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> 属性为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c958d-138">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>