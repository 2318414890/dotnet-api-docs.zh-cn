<Type Name="ITextProvider" FullName="System.Windows.Automation.Provider.ITextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12cb0908a2fbabaa2316da0be35971ca1a429419" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31910201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITextProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("3589c92c-63f3-4367-99bb-ada653b77cf2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>公开方法和属性以支持 UI 自动化客户端对包含文本的控件的访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现 UI 自动化提供程序必须支持上<xref:System.Windows.Automation.TextPattern>控件模式。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TextPattern" />
  </Docs>
  <Members>
    <Member MemberName="DocumentRange">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider DocumentRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.ITextRangeProvider DocumentRange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentRange As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::ITextRangeProvider ^ DocumentRange { System::Windows::Automation::Provider::ITextRangeProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含文档主文本的文本范围。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如页眉、 页脚或批注一些辅助文本可能不包含。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.GetSelection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelection () As ITextRangeProvider()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::ITextRangeProvider ^&gt; ^ GetSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索与当前文本选择（或多个文本选择）关联的不连续文本范围的集合。</summary>
        <returns>不连续文本范围的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于支持文本选择的 UI 自动化提供程序，该提供程序应实现此方法，也可以返回<xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection%2A>值。  
  
 如果未选择文本，<xref:System.Windows.Automation.Provider.ITextProvider.GetSelection%2A>系统光标 （文本插入点） 的位置返回退化文本范围 （空范围）。  
  
 如果系统光标 （文本插入点） 不存在，<xref:System.Windows.Automation.Provider.ITextProvider.GetSelection%2A>可能返回空引用 (`Nothing`在 Visual Basic 中)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">如果 UI 自动化提供程序不支持文本选择。</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetVisibleRanges">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider[] GetVisibleRanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider[] GetVisibleRanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVisibleRanges () As ITextRangeProvider()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::ITextRangeProvider ^&gt; ^ GetVisibleRanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从文本容器中检索一个不连续文本范围的数组，其中每个文本范围都以第一个部分可见的行开始，以最后一个部分可见的行结束。</summary>
        <returns>容器内可见文本范围的集合或者一个空数组。 从不返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 UI 自动化提供程序应确保它们，最多返回容器内可见文本范围。  
  
 不连续的文本范围可能发生时被某个重叠窗口或其他对象，遮盖任何内容的文本容器也可以在具有多列布局的文本容器的一个或多个列部分滚动到视图。  
  
 如果没有文本均可见，则返回退化 （空） 文本范围。 文本容器是否为空或所有文本都滚动到视图时，可以返回此空范围。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="RangeFromChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider RangeFromChild (System.Windows.Automation.Provider.IRawElementProviderSimple childElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider RangeFromChild(class System.Windows.Automation.Provider.IRawElementProviderSimple childElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromChild (childElement As IRawElementProviderSimple) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ RangeFromChild(System::Windows::Automation::Provider::IRawElementProviderSimple ^ childElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childElement" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="childElement">所包含的对象。</param>
        <summary>检索包含子元素（例如图像、超链接或其他嵌入对象）的一个文本范围。</summary>
        <returns>涵盖子元素的一个范围。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 UI 自动化提供程序应检查传递的元素是文本容器的子级。  
  
 如果子元素所在的范围中没有任何文本，则返回退化 （空） 范围。  
  
 `childElement`参数是任一子节点的<xref:System.Windows.Automation.AutomationElement>与关联<xref:System.Windows.Automation.TextPattern>或从子元素的数组<xref:System.Windows.Automation.Text.TextPatternRange>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">如果该子元素为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="RangeFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider RangeFromPoint (System.Windows.Point screenLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider RangeFromPoint(valuetype System.Windows.Point screenLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromPoint (screenLocation As Point) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ RangeFromPoint(System::Windows::Point screenLocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenLocation" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="screenLocation">以屏幕坐标的形式表示的位置。</param>
        <summary>返回与指定屏幕坐标最接近的退化（空）文本范围。</summary>
        <returns>与指定位置最接近的退化范围。 从不返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果屏幕坐标位于图像、 超链接或其他嵌入的对象的坐标，则返回环绕子对象的文本范围。  
  
 因为隐藏的文本不忽略由<xref:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint%2A>返回退化范围从给定的点最接近的可见文本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">如果给定点位于与文本模式关联的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素外部。</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="SupportedTextSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.SupportedTextSelection SupportedTextSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.SupportedTextSelection SupportedTextSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedTextSelection As SupportedTextSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::SupportedTextSelection SupportedTextSelection { System::Windows::Automation::SupportedTextSelection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.SupportedTextSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个指定文本提供程序是否支持文本选择的值，并在支持文本选择的情况下获取所支持的选择的类型。</summary>
        <value>来自 <see cref="T:System.Windows.Automation.SupportedTextSelection" /> 的 <see langword="None" />、<see langword="Single" /> 或 <see langword="Multiple" /> 之一。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>