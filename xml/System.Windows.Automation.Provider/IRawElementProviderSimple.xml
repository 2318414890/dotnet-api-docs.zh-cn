<Type Name="IRawElementProviderSimple" FullName="System.Windows.Automation.Provider.IRawElementProviderSimple">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8da2aa266c0edcfc4d1bedd0d482ffbfb69f8c5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30616211" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderSimple" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("d6dd68d1-86fd-4332-8666-9abedea2d24c")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供公开 UI 元素基本信息的方法和属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以对如按钮的简单元素的 UI 自动化提供程序实现此接口。 它可以还实现的提供程序提供其他属性或控件模式，或重写现有属性或控件模式，在已有默认提供程序的元素上。  
  
 为复杂元素的提供程序必须实现<xref:System.Windows.Automation.Provider.IRawElementProviderFragment>或<xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPatternProvider">
      <MemberSignature Language="C#" Value="public object GetPatternProvider (int patternId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPatternProvider(int32 patternId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPatternProvider (patternId As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPatternProvider(int patternId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="patternId">模式的标识符。</param>
        <summary>检索一个对象，该对象在 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 元素上提供对控件模式的支持。</summary>
        <returns>实现模式接口的对象；或者，如果不支持模式，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何实现<xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPatternProvider%2A>，该提供程序仅支持<xref:System.Windows.Automation.InvokePattern>。  
  
 [!code-csharp[UIAProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#101)]
 [!code-vb[UIAProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (int propertyId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyValue(int32 propertyId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyId As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(int propertyId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyId">属性标识符。</param>
        <summary>检索 UI 自动化提供程序支持的某个属性的值。</summary>
        <returns>属性的值；如果此提供程序不支持该属性，则为 <see langword="null" />；如果根本不支持该属性，则为 <see cref="F:System.Windows.Automation.AutomationElementIdentifiers.NotSupported" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供程序应返回<xref:System.Windows.Automation.AutomationElementIdentifiers.NotSupported>仅当显式地隐藏的属性值并且该请求不要传递到其他提供程序。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Windows.Automation.Provider.IRawElementProviderSimple.GetPropertyValue%2A>为自定义按钮控件。  
  
 [!code-csharp[UIAProvider_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#102)]
 [!code-vb[UIAProvider_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostRawElementProvider">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple HostRawElementProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderSimple HostRawElementProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostRawElementProvider As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderSimple ^ HostRawElementProvider { System::Windows::Automation::Provider::IRawElementProviderSimple ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此元素的基本提供程序。</summary>
        <value>基本提供程序，或 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是一个自定义控件的窗口的 UI 自动化提供程序。 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 在窗口中承载的控件提供程序实现一起使用此提供程序。 例如，从宿主提供程序中获取的元素的运行时标识符。  
  
 必须在任何以下情况下返回宿主提供程序：  
  
-   此元素是片段的根元素。  
  
-   该元素是一个简单的元素，如按钮。  
  
-   提供程序是一个重新放置的占位符。  
  
 在其他情况下，该属性应返回`null`。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Windows.Automation.Provider.IRawElementProviderSimple.HostRawElementProvider%2A>对于在 Windows 窗体中承载的片段根。  
  
 [!code-csharp[UIAProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#103)]
 [!code-vb[UIAProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderOptions">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ProviderOptions ProviderOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.Provider.ProviderOptions ProviderOptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderOptions As ProviderOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::ProviderOptions ProviderOptions { System::Windows::Automation::Provider::ProviderOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ProviderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指定 UI 自动化提供程序的特征；例如，该程序是客户端还是服务器端提供程序。</summary>
        <value>为 <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ClientSideProvider" /> 或 <see cref="F:System.Windows.Automation.Provider.ProviderOptions.ServerSideProvider" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 在处理不同类型的提供程序不同。 例如，从服务器端提供程序的事件会传播至所有侦听 UI 自动化客户端进程，但事件从客户端提供程序仍保留在该客户端进程。  
  
   
  
## Examples  
 下面的代码示例演示如何实现<xref:System.Windows.Automation.Provider.IRawElementProviderSimple.ProviderOptions%2A>服务器端 UI 自动化提供程序。  
  
 [!code-csharp[UIAProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#104)]
 [!code-vb[UIAProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>