<Type Name="ReadOnlyCollection&lt;T&gt;" FullName="System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b24e025e457fca6d235cd9b24561708a7d5434fd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39951485" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReadOnlyCollection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ReadOnlyCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ReadOnlyCollection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ReadOnlyCollection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ReadOnlyCollection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="7490d-101">集合中的元素类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-101">The type of elements in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="7490d-102">提供泛型只读集合的基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-102">Provides the base class for a generic read-only collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-103">实例<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>泛型类始终是只读的。</span><span class="sxs-lookup"><span data-stu-id="7490d-103">An instance of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> generic class is always read-only.</span></span>  <span data-ttu-id="7490d-104">集合是只读的只是一个集合与可防止修改集合; 的包装器因此，如果对基础集合进行更改，只读集合反映了这些更改。</span><span class="sxs-lookup"><span data-stu-id="7490d-104">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  <span data-ttu-id="7490d-105">请参阅<xref:System.Collections.ObjectModel.Collection%601>有关的此类可修改版本。</span><span class="sxs-lookup"><span data-stu-id="7490d-105">See <xref:System.Collections.ObjectModel.Collection%601> for a modifiable version of this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7490d-106">下面的代码示例演示了几个成员的<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="7490d-106">The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.</span></span> <span data-ttu-id="7490d-107">该代码示例创建<xref:System.Collections.Generic.List%601>的字符串，并向其添加四个恐龙名称。</span><span class="sxs-lookup"><span data-stu-id="7490d-107">The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it.</span></span> <span data-ttu-id="7490d-108">代码示例然后将包装的列表中<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-108">The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-109">演示后<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>，和<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A>成员，该代码示例表明，<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>只是包装了原始<xref:System.Collections.Generic.List%601>通过添加的新项<xref:System.Collections.Generic.List%601>和显示的内容<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-109">After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-110">最后，代码示例创建一个数组大于集合并使用<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A>方法到该数组中间插入集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-110">Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.</span></span>  
  
 [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]
 [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]
 [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="7490d-111">公共静态 (<see langword="Shared" />在 Visual Basic 中) 的此类型的成员是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-111">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="7490d-112">但不保证所有实例成员都是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-112">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="7490d-113">一个<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，只要不修改该集合可以同时支持多个读取器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-113">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="7490d-114">即便如此，枚举整个集合本质上不是线程安全的过程。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-114">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="7490d-115">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-115">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="7490d-116">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-116">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="7490d-117">
        <para>此基类提供轻松实现器来创建泛型的只读的自定义集合。建议来扩展此基类而不是创建其自己的实施者。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="7490d-117">
          <para>This base class is provided to make it easier for implementers to create a generic read-only custom collection. Implementers are encouraged to extend this base class instead of creating their own.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.ObjectModel.Collection`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyCollection (System.Collections.Generic.IList&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyCollection(System::Collections::Generic::IList&lt;T&gt; ^ list);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt; : System.Collections.Generic.IList&lt;'T&gt; -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="new System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt; list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="7490d-118">要包装的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-118">The list to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-119">初始化 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 类的新实例，该实例是指定列表周围的只读包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-119">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> class that is a read-only wrapper around the specified list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-120">若要防止对进行任何修改`list`，公开`list`只能通过此包装器。</span><span class="sxs-lookup"><span data-stu-id="7490d-120">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="7490d-121">集合是只读的只是一个集合与可防止修改集合; 的包装器因此，如果对基础集合进行更改，只读集合反映了这些更改。</span><span class="sxs-lookup"><span data-stu-id="7490d-121">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="7490d-122">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="7490d-122">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7490d-123">下面的代码示例演示了此构造函数和多个成员<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="7490d-123">The following code example demonstrates this constructor and several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.</span></span>  
  
 <span data-ttu-id="7490d-124">该代码示例创建<xref:System.Collections.Generic.List%601>的字符串，并向其添加四个恐龙名称。</span><span class="sxs-lookup"><span data-stu-id="7490d-124">The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it.</span></span> <span data-ttu-id="7490d-125">代码示例然后将包装的列表中<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>通过向其传递给构造函数。</span><span class="sxs-lookup"><span data-stu-id="7490d-125">The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> by passing it to the constructor.</span></span>  
  
 <span data-ttu-id="7490d-126">演示后<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>，和<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A>成员，该代码示例表明，<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>只是包装了原始<xref:System.Collections.Generic.List%601>通过添加的新项<xref:System.Collections.Generic.List%601>和显示的内容<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-126">After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-127">最后，代码示例创建一个数组大于集合并使用<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A>方法到该数组中间插入集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-127">Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.</span></span>  
  
 [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]
 [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]
 [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7490d-128">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-128">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IList`1" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="readOnlyCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7490d-129">要在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 中定位的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-129">The object to locate in the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
          <span data-ttu-id="7490d-130">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-130">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-131">确定某元素是否在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-131">Determines whether an element is in the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7490d-132">如果在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 中找到 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-132">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-133">此方法可确定使用的默认相等比较器的相等性<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7490d-133">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7490d-134">此方法执行线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-134">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7490d-135">下面的代码示例演示了几个成员的<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="7490d-135">The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.</span></span> <span data-ttu-id="7490d-136">该代码示例创建<xref:System.Collections.Generic.List%601>的字符串，并向其添加四个恐龙名称。</span><span class="sxs-lookup"><span data-stu-id="7490d-136">The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it.</span></span> <span data-ttu-id="7490d-137">代码示例然后将包装的列表中<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-137">The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-138">演示后<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>，和<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A>成员，该代码示例表明，<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>只是包装了原始<xref:System.Collections.Generic.List%601>通过添加的新项<xref:System.Collections.Generic.List%601>和显示的内容<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-138">After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-139">最后，代码示例创建一个数组大于集合并使用<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A>方法到该数组中间插入集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-139">Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.</span></span>  
  
 [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]
 [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]
 [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="readOnlyCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7490d-140">作为从 <see cref="T:System.Array" /> 复制的元素的目标的一维 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-140">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
          <span data-ttu-id="7490d-141">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-141">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7490d-142">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-142">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-143">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-143">Copies the entire <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-144">此方法使用<xref:System.Array.Copy%2A?displayProperty=nameWithType>元素将复制到。</span><span class="sxs-lookup"><span data-stu-id="7490d-144">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="7490d-145">将元素复制到<xref:System.Array>枚举数循环访问的相同顺序<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-145">The elements are copied to the <xref:System.Array> in the same order that the enumerator iterates through the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-146">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-146">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7490d-147">下面的代码示例演示了几个成员的<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="7490d-147">The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.</span></span> <span data-ttu-id="7490d-148">该代码示例创建<xref:System.Collections.Generic.List%601>的字符串，并向其添加四个恐龙名称。</span><span class="sxs-lookup"><span data-stu-id="7490d-148">The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it.</span></span> <span data-ttu-id="7490d-149">代码示例然后将包装的列表中<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-149">The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-150">演示后<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>，和<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A>成员，该代码示例表明，<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>只是包装了原始<xref:System.Collections.Generic.List%601>通过添加的新项<xref:System.Collections.Generic.List%601>和显示的内容<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-150">After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-151">最后，代码示例创建一个数组大于集合并使用<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A>方法到该数组中间插入集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-151">Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.</span></span>  
  
 [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]
 [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]
 [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7490d-152">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-152">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7490d-153">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-153">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7490d-154">源 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-154">The number of elements in the source <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7490d-155">获取包含在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 实例中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-155">Gets the number of elements contained in the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-156">包含在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 实例中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-156">The number of elements contained in the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-157">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-157">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7490d-158">下面的代码示例演示了几个成员的<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="7490d-158">The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.</span></span> <span data-ttu-id="7490d-159">该代码示例创建<xref:System.Collections.Generic.List%601>的字符串，并向其添加四个恐龙名称。</span><span class="sxs-lookup"><span data-stu-id="7490d-159">The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it.</span></span> <span data-ttu-id="7490d-160">代码示例然后将包装的列表中<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-160">The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-161">演示后<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>，和<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A>成员，该代码示例表明，<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>只是包装了原始<xref:System.Collections.Generic.List%601>通过添加的新项<xref:System.Collections.Generic.List%601>和显示的内容<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-161">After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-162">最后，代码示例创建一个数组大于集合并使用<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A>方法到该数组中间插入集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-162">Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.</span></span>  
  
 [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]
 [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]
 [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="readOnlyCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7490d-163">返回循环访问 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-163">Returns an enumerator that iterates through the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7490d-164">用于 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-164">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-165">`foreach` C# 语言的语句 (`for each` Visual c + +，`For Each`在 Visual Basic 中) 隐藏了枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="7490d-165">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="7490d-166">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="7490d-166">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="7490d-167">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="7490d-167">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="7490d-168">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="7490d-168">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="7490d-169">在此位置上，未定义 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-169">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="7490d-170">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-170">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="7490d-171">在调用 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 之前，<xref:System.Collections.IEnumerator.MoveNext%2A> 返回相同的对象。</span><span class="sxs-lookup"><span data-stu-id="7490d-171"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="7490d-172"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-172"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="7490d-173">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="7490d-173">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="7490d-174">当枚举数位于此位置上，对后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="7490d-174">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="7490d-175">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.Generic.IEnumerator%601.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="7490d-175">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="7490d-176">无法再次将 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 设置为集合的第一个元素；必须改为创建新的枚举器实例。</span><span class="sxs-lookup"><span data-stu-id="7490d-176">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="7490d-177">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="7490d-177">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="7490d-178">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="7490d-178">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="7490d-179">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="7490d-179">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="7490d-180">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="7490d-180">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="7490d-181">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="7490d-181">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="7490d-182">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>不同步。</span><span class="sxs-lookup"><span data-stu-id="7490d-182">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="7490d-183">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="7490d-183">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7490d-184">下面的代码示例使用枚举器中显示的内容<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>包装<xref:System.Collections.Generic.List%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-184">The following code example uses the enumerator to display the contents of a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> that wraps a <xref:System.Collections.Generic.List%601>.</span></span> <span data-ttu-id="7490d-185">枚举器隐藏其`foreach`语句 (`For Each`在 Visual Basic 中`for each`c + + 中)。</span><span class="sxs-lookup"><span data-stu-id="7490d-185">The enumerator is concealed by the `foreach` statement (`For Each` in Visual Basic, `for each` in C++).</span></span>  
  
 [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]
 [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]
 [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="readOnlyCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7490d-186">要在 <see cref="T:System.Collections.Generic.List`1" /> 中定位的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-186">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="7490d-187">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-187">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-188">搜索指定的对象，并返回整个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 中第一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-188">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7490d-189">如果找到，则为整个 <paramref name="item" /> 中 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 第一个匹配项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-189">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-190"><xref:System.Collections.ObjectModel.ReadOnlyCollection%601>向前的第一个元素开始和结束时间的最后一个元素搜索。</span><span class="sxs-lookup"><span data-stu-id="7490d-190">The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="7490d-191">此方法可确定使用默认比较器的相等性<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7490d-191">This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7490d-192">此方法执行线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-192">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T" Usage="System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7490d-193">要获取的元素的索引（索引从零开始）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-193">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-194">获取指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-194">Gets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-195">位于指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-195">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-196">此属性，可以通过使用下面的 C# 语法访问集合中的特定元素： `myCollection[index]` (`myCollection(index)`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="7490d-196">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[index]` (`myCollection(index)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="7490d-197">C# 语言使用关键字来定义而不是实现索引器<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7490d-197">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> property.</span></span> <span data-ttu-id="7490d-198">Visual Basic 将 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="7490d-198">Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="7490d-199">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-199">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7490d-200">下面的代码示例演示了几个成员的<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="7490d-200">The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.</span></span> <span data-ttu-id="7490d-201">该代码示例创建<xref:System.Collections.Generic.List%601>的字符串，并向其添加四个恐龙名称。</span><span class="sxs-lookup"><span data-stu-id="7490d-201">The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it.</span></span> <span data-ttu-id="7490d-202">代码示例然后将包装的列表中<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-202">The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-203">演示后<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>，和<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A>成员，该代码示例表明，<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>只是包装了原始<xref:System.Collections.Generic.List%601>通过添加的新项<xref:System.Collections.Generic.List%601>和显示的内容<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-203">After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-204">最后，代码示例创建一个数组大于集合并使用<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A>方法到该数组中间插入集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-204">Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.</span></span>  
  
 [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]
 [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]
 [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7490d-205">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-205">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="7490d-206">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-206">-or-</span>
          </span>
          <span data-ttu-id="7490d-207">
            <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-207">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Items { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7490d-208">返回 <see cref="T:System.Collections.Generic.IList`1" /> 包装的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-208">Returns the <see cref="T:System.Collections.Generic.IList`1" /> that the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wraps.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-209">
            <see cref="T:System.Collections.Generic.IList`1" /> 包装的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-209">The <see cref="T:System.Collections.Generic.IList`1" /> that the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wraps.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-210">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-210">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7490d-211">下面的代码示例演示了几个成员的<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="7490d-211">The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.</span></span> <span data-ttu-id="7490d-212">该代码示例创建<xref:System.Collections.Generic.List%601>的字符串，并向其添加四个恐龙名称。</span><span class="sxs-lookup"><span data-stu-id="7490d-212">The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it.</span></span> <span data-ttu-id="7490d-213">代码示例然后将包装的列表中<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-213">The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-214">演示后<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>， <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>，和<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A>成员，该代码示例表明，<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>只是包装了原始<xref:System.Collections.Generic.List%601>通过添加的新项<xref:System.Collections.Generic.List%601>和显示的内容<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>。</span><span class="sxs-lookup"><span data-stu-id="7490d-214">After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 <span data-ttu-id="7490d-215">最后，代码示例创建一个数组大于集合并使用<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A>方法到该数组中间插入集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-215">Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.</span></span>  
  
 [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]
 [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]
 [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="7490d-216">
            <para>提供此属性以允许直接访问权限的成员<see cref="T:System.Collections.Generic.IList`1" />的<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />隐藏。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-216">
              <para>This property is provided to allow direct access to members of the <see cref="T:System.Collections.Generic.IList`1" /> that the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> hides.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (value As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7490d-217">要添加到 <see cref="T:System.Collections.Generic.ICollection`1" /> 的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-217">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-218">将某项添加到 <see cref="T:System.Collections.Generic.ICollection`1" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-218">Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
          <span data-ttu-id="7490d-219">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-219">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-220">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-220">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-221">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.Generic.ICollection%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-221">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-222">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-222">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Clear() = System::Collections::Generic::ICollection&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7490d-223">从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除所有项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-223">Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
          <span data-ttu-id="7490d-224">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-224">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-225">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-225">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-226">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.Generic.ICollection%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-226">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-227">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-227">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7490d-228">获取一个值，该值指示 <see cref="T:System.Collections.Generic.ICollection`1" /> 是否为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-228">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-229">如果 <see cref="T:System.Collections.Generic.ICollection`1" /> 为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-229">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7490d-230">在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的默认实现中，此属性始终返回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-230">In the default implementation of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, this property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-231">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-231">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="7490d-232">集合是只读的只是一个集合与可防止修改集合; 的包装器因此，如果对基础集合进行更改，只读集合反映了这些更改。</span><span class="sxs-lookup"><span data-stu-id="7490d-232">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="7490d-233">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-233">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="7490d-234">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-234">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-235">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-235">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;T&gt;.Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (value As T) As Boolean Implements ICollection(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7490d-236">要从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-236">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-237">从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除特定对象的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-237">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span>
          </span>
          <span data-ttu-id="7490d-238">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-238">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7490d-239">如果已从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中成功移除 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-239">
              <see langword="true" /> if <paramref name="value" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-240">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-240">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-241">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.Generic.ICollection%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-241">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-242">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-242">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As T) Implements IList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.Insert(int index, T value) = System::Collections::Generic::IList&lt;T&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7490d-243">从零开始的索引，应在该位置插入 <c>value</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-243">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7490d-244">要插入 <see cref="T:System.Collections.Generic.IList`1" /> 的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-244">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-245">将一个项插入指定索引处的 <see cref="T:System.Collections.Generic.IList`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-245">Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.</span>
          </span>
          <span data-ttu-id="7490d-246">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-246">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-247">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-247">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-248">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.Generic.IList%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-248">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-249">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-249">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IList&lt;T&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As T Implements IList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System::Collections::Generic::IList&lt;T&gt;::Item[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IList&lt;T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7490d-250">要获取的元素的索引（索引从零开始）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-250">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-251">获取指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-251">Gets the element at the specified index.</span>
          </span>
          <span data-ttu-id="7490d-252">如果您尝试设置指定索引处的项，则会发生 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-252">An <see cref="T:System.NotSupportedException" /> occurs if you try to set the item at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-253">位于指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-253">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-254">因为集合是只读的仅可以指定索引处获取此项。</span><span class="sxs-lookup"><span data-stu-id="7490d-254">Because the collection is read-only, you can only get this item at the specified index.</span></span> <span data-ttu-id="7490d-255">如果你尝试将项设置，将发生异常。</span><span class="sxs-lookup"><span data-stu-id="7490d-255">An exception will occur if you try to set the item.</span></span> <span data-ttu-id="7490d-256">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-256">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-257">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.Generic.IList%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-257">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-258">如果设置了该属性，则总是引发此异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-258">Always thrown if the property is set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;T&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7490d-259">要移除的项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-259">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-260">移除指定索引处的 <see cref="T:System.Collections.Generic.IList`1" /> 项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-260">Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.</span>
          </span>
          <span data-ttu-id="7490d-261">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-261">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-262">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-262">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-263">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.Generic.IList%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-263">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-264">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-264">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7490d-265">作为从 <see cref="T:System.Array" /> 复制的元素的目标的一维 <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-265">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="7490d-266">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-266">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7490d-267">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-267">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-268">从特定的 <see cref="T:System.Collections.ICollection" /> 索引处开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-268">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7490d-269">如果源的类型<xref:System.Collections.ICollection>不能自动强制转换为目标的类型`array`的非泛型实现<xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType>引发<xref:System.InvalidCastException>，而泛型实现会引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="7490d-269">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="7490d-270">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-270">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="7490d-271">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-271">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-272">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-272">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7490d-273">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-273">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7490d-274">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-274">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7490d-275">
            <paramref name="array" /> 是多维的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-275">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="7490d-276">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-276">-or-</span>
          </span>
          <span data-ttu-id="7490d-277">
            <paramref name="array" /> 没有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-277">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="7490d-278">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-278">-or-</span>
          </span>
          <span data-ttu-id="7490d-279">源 <see cref="T:System.Collections.ICollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-279">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="7490d-280">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-280">-or-</span>
          </span>
          <span data-ttu-id="7490d-281">源 <see cref="T:System.Collections.ICollection" /> 的类型无法自动转换为目标 <paramref name="array" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-281">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7490d-282">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection" /> 的访问（线程安全）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-282">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-283">如果对 <see cref="T:System.Collections.ICollection" /> 的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-283">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7490d-284">在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-284">In the default implementation of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-285">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>不同步。</span><span class="sxs-lookup"><span data-stu-id="7490d-285">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="7490d-286">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="7490d-286">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="7490d-287">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="7490d-287">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="7490d-288">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="7490d-288">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="7490d-289"><xref:System.Collections.ICollection.SyncRoot%2A> 返回一个对象，可用于同步对<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="7490d-289"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="7490d-290">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-290">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="7490d-291">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-291">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-292">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-292">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7490d-293">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-293">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-294">可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-294">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="7490d-295">在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的默认实现中，此属性始终返回当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-295">In the default implementation of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-296">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>不同步。</span><span class="sxs-lookup"><span data-stu-id="7490d-296">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="7490d-297">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="7490d-297">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="7490d-298">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="7490d-298">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="7490d-299">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="7490d-299">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="7490d-300"><xref:System.Collections.ICollection.SyncRoot%2A> 返回一个对象，可用于同步对<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="7490d-300"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="7490d-301">同步是所有线程访问集合之前都锁定此对象时才有效。</span><span class="sxs-lookup"><span data-stu-id="7490d-301">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="7490d-302">下面的代码演示如何使用<xref:System.Collections.ICollection.SyncRoot%2A>C#、 Visual c + + 和 Visual Basic 的属性。</span><span class="sxs-lookup"><span data-stu-id="7490d-302">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, Visual C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="7490d-303">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-303">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="7490d-304">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-305">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-305">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7490d-306">返回一个循环访问集合的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-306">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7490d-307">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-307">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-308">`foreach` C# 语言的语句 (`for each` Visual c + +，`For Each`在 Visual Basic 中) 隐藏了枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="7490d-308">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="7490d-309">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="7490d-309">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="7490d-310">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="7490d-310">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="7490d-311">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="7490d-311">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="7490d-312"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="7490d-312"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="7490d-313">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-313">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="7490d-314">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-314">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="7490d-315">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="7490d-315"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="7490d-316"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-316"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="7490d-317">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="7490d-317">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="7490d-318">当枚举数位于此位置上，对后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="7490d-318">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="7490d-319">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.IEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="7490d-319">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="7490d-320">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-320">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="7490d-321">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="7490d-321">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="7490d-322">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="7490d-322">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="7490d-323">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="7490d-323">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="7490d-324">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="7490d-324">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="7490d-325">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="7490d-325">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="7490d-326">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>不同步。</span><span class="sxs-lookup"><span data-stu-id="7490d-326">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="7490d-327">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="7490d-327">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="7490d-328">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-329">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-329">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7490d-330">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-330">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-331">将某项添加到 <see cref="T:System.Collections.IList" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-331">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
          <span data-ttu-id="7490d-332">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-332">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7490d-333">新元素的插入位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-333">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-334">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-334">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-335">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-335">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-336">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-336">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7490d-337">从 <see cref="T:System.Collections.IList" /> 中移除所有项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-337">Removes all items from the <see cref="T:System.Collections.IList" />.</span>
          </span>
          <span data-ttu-id="7490d-338">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-338">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-339">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-339">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-340">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-340">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-341">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-341">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7490d-342">要在 <see cref="T:System.Object" /> 中查找的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-342">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-343">确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-343">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7490d-344">如果在 <see cref="T:System.Collections.IList" /> 中找到 <see cref="T:System.Object" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-344">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-345">此方法可确定使用默认比较器的相等性<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7490d-345">This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7490d-346">此方法执行线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-346">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="7490d-347">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-347">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-348">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-348">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7490d-349">
            <paramref name="value" /> 所属的类型不是泛型类型参数 <paramref name="T" /> 的指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-349">
              <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7490d-350">要在 <see cref="T:System.Object" /> 中查找的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-350">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-351">确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-351">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7490d-352">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-352">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-353">此方法可确定使用默认比较器的相等性<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7490d-353">This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7490d-354">此方法执行线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="7490d-354">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="7490d-355">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-355">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-356">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-356">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7490d-357">
            <paramref name="value" /> 所属的类型不是泛型类型参数 <paramref name="T" /> 的指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-357">
              <paramref name="value" /> is not of the type specified for the generic type parameter <paramref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7490d-358">从零开始的索引，应在该位置插入 <c>value</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-358">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7490d-359">要插入 <see cref="T:System.Object" /> 中的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-359">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-360">将一个项插入指定索引处的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-360">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
          <span data-ttu-id="7490d-361">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-361">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-362">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-362">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-363">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-363">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-364">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-364">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7490d-365">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-365">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-366">如果 <see cref="T:System.Collections.IList" /> 具有固定大小，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-366">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7490d-367">在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的默认实现中，此属性始终返回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-367">In the default implementation of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, this property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-368">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-368">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="7490d-369">具有固定大小的集合只是一个集合与防止添加和移除元素; 的包装器因此，如果在更改基础集合，包括添加或删除的元素，大小固定集合反映了这些更改。</span><span class="sxs-lookup"><span data-stu-id="7490d-369">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="7490d-370">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-370">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="7490d-371">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-371">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-372">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-372">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7490d-373">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-373">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-374">如果 <see cref="T:System.Collections.IList" /> 为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-374">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7490d-375">在 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的默认实现中，此属性始终返回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-375">In the default implementation of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, this property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-376">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="7490d-376">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="7490d-377">集合是只读的只是一个集合与可防止修改集合; 的包装器因此，如果对基础集合进行更改，只读集合反映了这些更改。</span><span class="sxs-lookup"><span data-stu-id="7490d-377">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="7490d-378">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-378">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="7490d-379">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-379">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-380">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-380">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7490d-381">要获取的元素的索引（索引从零开始）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-381">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-382">获取指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-382">Gets the element at the specified index.</span>
          </span>
          <span data-ttu-id="7490d-383">如果尝试设置指定索引处的项，则会发生 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-383">A <see cref="T:System.NotSupportedException" /> occurs if you try to set the item at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7490d-384">位于指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-384">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-385">可以使用下面的语法通过此属性访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="7490d-385">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="7490d-386">使用 C# 语言[这](~/docs/csharp/language-reference/keywords/this.md)关键字来定义而不是实现索引器<xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7490d-386">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="7490d-387">Visual Basic 将 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="7490d-387">Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="7490d-388">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="7490d-388">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="7490d-389">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-389">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-390">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-390">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7490d-391">
            <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-391">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-392">如果设置了该属性，则总是引发此异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-392">Always thrown if the property is set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7490d-393">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-393">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-394">从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-394">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
          <span data-ttu-id="7490d-395">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-395">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-396">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-396">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-397">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-397">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-398">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-398">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7490d-399">要移除的项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-399">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7490d-400">移除指定索引处的 <see cref="T:System.Collections.IList" /> 项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-400">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span>
          </span>
          <span data-ttu-id="7490d-401">此实现总是引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-401">This implementation always throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7490d-402">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7490d-402">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7490d-403">它只能在 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7490d-403">It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7490d-404">总是引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7490d-404">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>