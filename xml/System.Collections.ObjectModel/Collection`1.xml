<Type Name="Collection&lt;T&gt;" FullName="System.Collections.ObjectModel.Collection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04dcf055fc5d0a39b96d6bc914764f7cacb40f6d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39908276" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Collection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Collection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.Collection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Collection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Collection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="1ed33-101">集合中的元素类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-101">The type of elements in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="1ed33-102">提供泛型集合的基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-102">Provides the base class for a generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-103"><xref:System.Collections.ObjectModel.Collection%601>类可以由立即创建一个其构造类型的实例; 您需要做的就是指定要包含在集合中的对象类型。</span><span class="sxs-lookup"><span data-stu-id="1ed33-103">The <xref:System.Collections.ObjectModel.Collection%601> class can be used immediately by creating an instance of one of its constructed types; all you have to do is specify the type of object to be contained in the collection.</span></span> <span data-ttu-id="1ed33-104">此外，可以从任何构造类型中派生您自己的集合类型或派生泛型集合类型从<xref:System.Collections.ObjectModel.Collection%601>类本身。</span><span class="sxs-lookup"><span data-stu-id="1ed33-104">In addition, you can derive your own collection type from any constructed type, or derive a generic collection type from the <xref:System.Collections.ObjectModel.Collection%601> class itself.</span></span>  
  
 <span data-ttu-id="1ed33-105"><xref:System.Collections.ObjectModel.Collection%601>类提供了可用于自定义其行为时添加和删除项、 清除集合中，或将现有项的值设置的受保护的方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-105">The <xref:System.Collections.ObjectModel.Collection%601> class provides protected methods that can be used to customize its behavior when adding and removing items, clearing the collection, or setting the value of an existing item.</span></span>  
  
 <span data-ttu-id="1ed33-106">大多数<xref:System.Collections.ObjectModel.Collection%601>objectscan 进行修改。</span><span class="sxs-lookup"><span data-stu-id="1ed33-106">Most <xref:System.Collections.ObjectModel.Collection%601> objectscan be modified.</span></span> <span data-ttu-id="1ed33-107">但是，<xref:System.Collections.ObjectModel.Collection%601>对象，将使用只读的初始化<xref:System.Collections.Generic.IList%601>不能修改对象。</span><span class="sxs-lookup"><span data-stu-id="1ed33-107">However, a <xref:System.Collections.ObjectModel.Collection%601> object that is initialized with a read-only <xref:System.Collections.Generic.IList%601> object cannot be modified.</span></span> <span data-ttu-id="1ed33-108">请参阅<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>有关此类的只读版本。</span><span class="sxs-lookup"><span data-stu-id="1ed33-108">See <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> for a read-only version of this class.</span></span>  
  
 <span data-ttu-id="1ed33-109">可以使用整数索引访问此集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-109">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="1ed33-110">在此集合中的索引都是从零开始的。</span><span class="sxs-lookup"><span data-stu-id="1ed33-110">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="1ed33-111"><xref:System.Collections.ObjectModel.Collection%601> 接受`null`是有效的引用值类型以及允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-111"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-112">本部分包含两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="1ed33-112">This section contains two code examples.</span></span> <span data-ttu-id="1ed33-113">第一个示例演示了一些属性和方法的<xref:System.Collections.ObjectModel.Collection%601>类。</span><span class="sxs-lookup"><span data-stu-id="1ed33-113">The first example demonstrates several properties and methods of the <xref:System.Collections.ObjectModel.Collection%601> class.</span></span> <span data-ttu-id="1ed33-114">第二个示例演示如何从构造类型的派生集合类<xref:System.Collections.ObjectModel.Collection%601>，以及如何重写的受保护的方法<xref:System.Collections.ObjectModel.Collection%601>以提供自定义行为。</span><span class="sxs-lookup"><span data-stu-id="1ed33-114">The second example shows how to derive a collection class from a constructed type of <xref:System.Collections.ObjectModel.Collection%601>, and how to override the protected methods of <xref:System.Collections.ObjectModel.Collection%601> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="1ed33-115">示例 1</span><span class="sxs-lookup"><span data-stu-id="1ed33-115">Example 1</span></span>  
  
 <span data-ttu-id="1ed33-116">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-116">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-117">该代码示例创建一个字符串，使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-117">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-118">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-118">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-119">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-119">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-120">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-120">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-121">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-121">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 <span data-ttu-id="1ed33-122">示例 2</span><span class="sxs-lookup"><span data-stu-id="1ed33-122">Example 2</span></span>  
  
 <span data-ttu-id="1ed33-123">下面的代码示例演示如何从构造类型的派生集合类<xref:System.Collections.ObjectModel.Collection%601>泛型类，以及如何重写受保护<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>，和<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>方法，以提供自定义行为<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>， <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，并设置<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-123">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="1ed33-124">此示例中提供的自定义行为是`Changed`每个受保护方法结束时引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-124">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="1ed33-125">`Dinosaurs`类继承`Collection<string>`(`Collection(Of String)`在 Visual Basic 中)，并定义`Changed`事件，使用`DinosaursChangedEventArgs`类用于事件信息和使用枚举标识的更改种类。</span><span class="sxs-lookup"><span data-stu-id="1ed33-125">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="1ed33-126">此代码示例调用多个属性和方法<xref:System.Collections.ObjectModel.Collection%601>来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-126">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="1ed33-127">公共静态 (<see langword="Shared" />在 Visual Basic 中) 的此类型的成员是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="1ed33-128">但不保证所有实例成员都是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-128">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="1ed33-129">一个<see cref="T:System.Collections.ObjectModel.Collection`1" />，只要不修改该集合可以同时支持多个读取器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-129">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="1ed33-130">即便如此，枚举整个集合本质上不是线程安全的过程。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-130">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="1ed33-131">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-131">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="1ed33-132">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-132">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="1ed33-133">
        <para>此基类提供轻松实现器来创建自定义集合。建议来扩展此基类而不是创建其自己的实施者。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="1ed33-133">
          <para>This base class is provided to make it easier for implementers to create a custom collection. Implementers are encouraged to extend this base class instead of creating their own.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-134">初始化 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-134">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-135">初始化为空的 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-135">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class that is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-136">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="1ed33-136">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-137">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-137">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-138">该代码示例创建一个字符串与集合<xref:System.Collections.ObjectModel.Collection%601.%23ctor>构造函数，使用<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-138">The code example creates a collection of strings with the <xref:System.Collections.ObjectModel.Collection%601.%23ctor> constructor, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-139">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-139">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-140">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-140">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-141">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-141">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-142">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-142">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection (System.Collections.Generic.IList&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection(System::Collections::Generic::IList&lt;T&gt; ^ list);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.Collection&lt;'T&gt; : System.Collections.Generic.IList&lt;'T&gt; -&gt; System.Collections.ObjectModel.Collection&lt;'T&gt;" Usage="new System.Collections.ObjectModel.Collection&lt;'T&gt; list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="1ed33-143">由新的集合包装的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-143">The list that is wrapped by the new collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-144">将 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 类的新实例初始化为指定列表的包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-144">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class as a wrapper for the specified list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-145">不会复制列表的元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-145">The elements of the list are not copied.</span></span> <span data-ttu-id="1ed33-146">列表包装集合，以便对列表的元素的后续更改都通过可见<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-146">The list is wrapped by the collection, so that subsequent changes to the elements of the list are visible through the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="1ed33-147">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="1ed33-147">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ed33-148">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-148">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="collection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="1ed33-149">要添加到 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的末尾处的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-149">The object to be added to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="1ed33-150">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-150">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-151">将对象添加到 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的结尾处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-151">Adds an object to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-152"><xref:System.Collections.ObjectModel.Collection%601> 接受`null`是有效的引用值类型以及允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-152"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="1ed33-153">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="1ed33-153">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-154">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-154">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-155">该代码示例创建一个字符串，使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-155">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-156">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-156">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-157">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-157">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-158">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-158">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-159">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-159">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-160">从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中移除所有元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-160">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-161"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> 已设置为零，并且对其他对象的集合的元素也被释放。</span><span class="sxs-lookup"><span data-stu-id="1ed33-161"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="1ed33-162">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-162">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-163">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-163">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-164">该代码示例创建一个字符串，使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-164">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-165">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-165">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-166">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-166">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-167">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-167">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-168">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-168">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1ed33-169">
            <para>派生的类可以重写<see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" />若要更改此方法的行为。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-169">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected virtual void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearItems();" />
      <MemberSignature Language="F#" Value="abstract member ClearItems : unit -&gt; unit&#xA;override this.ClearItems : unit -&gt; unit" Usage="collection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-170">从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中移除所有元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-170">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-171"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> 已设置为零，并且对其他对象的集合的元素也被释放。</span><span class="sxs-lookup"><span data-stu-id="1ed33-171"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="1ed33-172">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-172">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-173">下面的代码示例演示如何从构造类型的派生集合类<xref:System.Collections.ObjectModel.Collection%601>泛型类，以及如何重写受保护<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>，和<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>方法，以提供自定义行为<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>， <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，并设置<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-173">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="1ed33-174">此示例中提供的自定义行为是`Changed`每个受保护方法结束时引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-174">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="1ed33-175">`Dinosaurs`类继承`Collection<string>`(`Collection(Of String)`在 Visual Basic 中)，并定义`Changed`事件，使用`DinosaursChangedEventArgs`类用于事件信息和使用枚举标识的更改种类。</span><span class="sxs-lookup"><span data-stu-id="1ed33-175">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="1ed33-176">此代码示例调用多个属性和方法<xref:System.Collections.ObjectModel.Collection%601>来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-176">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1ed33-177">
            <para>派生的类可以重写此方法可以更改的行为<see cref="M:System.Collections.ObjectModel.Collection`1.Clear" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-177">
              <para>Derived classes can override this method to change the behavior of the <see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="collection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="1ed33-178">要在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中定位的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-178">The object to locate in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="1ed33-179">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-179">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-180">确定某元素是否在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-180">Determines whether an element is in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ed33-181">如果在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中找到 <paramref name="item" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-181">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ObjectModel.Collection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-182">如果<xref:System.Collections.ObjectModel.Collection%601>使用默认构造函数创建对象，此方法确定是否使用默认的相等比较的相等<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>为`T`，列表中的值的类型。</span><span class="sxs-lookup"><span data-stu-id="1ed33-182">If the <xref:System.Collections.ObjectModel.Collection%601> object is created using the default constructor, this method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span> <span data-ttu-id="1ed33-183">如果类型`T`不实现<xref:System.IEquatable%601>接口，<xref:System.Object.Equals%2A>使用方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-183">If type `T` does not implement the <xref:System.IEquatable%601> interface, the <xref:System.Object.Equals%2A> method is used.</span></span>  
  
 <span data-ttu-id="1ed33-184">如果集合对象创建通过传递<xref:System.Collections.Generic.IList%601>对象构造函数中，<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法将由<xref:System.Collections.Generic.IEqualityComparer%601>使用的接口<xref:System.Collections.Generic.IList%601>对象。</span><span class="sxs-lookup"><span data-stu-id="1ed33-184">If the Collection object is created by passing an <xref:System.Collections.Generic.IList%601> object to the constructor, the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method will be determined by the <xref:System.Collections.Generic.IEqualityComparer%601> interface used by that <xref:System.Collections.Generic.IList%601> object.</span></span>  
  
 <span data-ttu-id="1ed33-185">此方法执行线性搜索;因此，平均执行时间是成比例<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-185">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="1ed33-186">也就是说，此方法是 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-186">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="collection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="1ed33-187">作为从 <see cref="T:System.Array" /> 复制的元素的目标的一维 <see cref="T:System.Collections.ObjectModel.Collection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-187">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="1ed33-188">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-188">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1ed33-189">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-189">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-190">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-190">Copies the entire <see cref="T:System.Collections.ObjectModel.Collection`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-191">此方法使用<xref:System.Array.Copy%2A?displayProperty=nameWithType>元素将复制到。</span><span class="sxs-lookup"><span data-stu-id="1ed33-191">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="1ed33-192">将元素复制到<xref:System.Array>枚举器循环访问的相同顺序<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-192">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="1ed33-193">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-193">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ed33-194">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-194">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-195">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-195">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ed33-196">源 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-196">The number of elements in the source <see cref="T:System.Collections.ObjectModel.Collection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-197">获取 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中实际包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-197">Gets the number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-198">
            <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中实际包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-198">The number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-199">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="1ed33-199">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-200">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-200">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-201">该代码示例创建一个字符串，使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-201">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-202">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-202">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-203">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-203">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-204">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-204">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-205">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-205">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-206">返回循环访问 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-206">Returns an enumerator that iterates through the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ed33-207">用于 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 的 <see cref="T:System.Collections.ObjectModel.Collection`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-207">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-208">`foreach` C# 语言的语句 (`for each` c + + 中`For Each`在 Visual Basic 中) 隐藏了枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-208">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="1ed33-209">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="1ed33-209">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="1ed33-210">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="1ed33-210">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="1ed33-211">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="1ed33-211">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="1ed33-212">在此位置上，未定义 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-212">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="1ed33-213">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-213">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="1ed33-214">在调用 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 之前，<xref:System.Collections.IEnumerator.MoveNext%2A> 返回相同的对象。</span><span class="sxs-lookup"><span data-stu-id="1ed33-214"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="1ed33-215"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-215"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="1ed33-216">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1ed33-216">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="1ed33-217">当枚举数位于此位置上，对后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1ed33-217">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="1ed33-218">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.Generic.IEnumerator%601.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="1ed33-218">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="1ed33-219">无法再次将 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 设置为集合的第一个元素；必须改为创建新的枚举器实例。</span><span class="sxs-lookup"><span data-stu-id="1ed33-219">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="1ed33-220">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="1ed33-220">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1ed33-221">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="1ed33-221">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="1ed33-222">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="1ed33-222">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="1ed33-223">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="1ed33-223">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="1ed33-224">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="1ed33-224">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="1ed33-225">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>不同步。</span><span class="sxs-lookup"><span data-stu-id="1ed33-225">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="1ed33-226">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="1ed33-226">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="collection.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="1ed33-227">要在 <see cref="T:System.Collections.Generic.List`1" /> 中定位的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-227">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="1ed33-228">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-228">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-229">搜索指定的对象，并返回整个 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中第一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-229">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ed33-230">如果找到，则为整个 <paramref name="item" /> 中 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 第一个匹配项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-230">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-231"><xref:System.Collections.ObjectModel.Collection%601>向前的第一个元素开始和结束时间的最后一个元素搜索。</span><span class="sxs-lookup"><span data-stu-id="1ed33-231">The <xref:System.Collections.ObjectModel.Collection%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="1ed33-232">此方法可确定是否使用默认的相等比较的相等<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>为`T`，列表中的值的类型。</span><span class="sxs-lookup"><span data-stu-id="1ed33-232">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="1ed33-233">此方法执行线性搜索;因此，平均执行时间是成比例<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-233">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="1ed33-234">也就是说，此方法是 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-234">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-235">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-235">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-236">该代码示例创建一个字符串，使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-236">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-237">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-237">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-238">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-238">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-239">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-239">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-240">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-240">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="collection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ed33-241">从零开始的索引，应在该位置插入 <c>item</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-241">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="1ed33-242">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-242">The object to insert.</span>
          </span>
          <span data-ttu-id="1ed33-243">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-243">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-244">将元素插入 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-244">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-245"><xref:System.Collections.ObjectModel.Collection%601> 接受`null`是有效的引用值类型以及允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-245"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="1ed33-246">如果`index`等同于<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，`item`添加到末尾<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-246">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="1ed33-247">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-247">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-248">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-248">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1ed33-249">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-249">-or-</span>
          </span>
          <span data-ttu-id="1ed33-250">
            <paramref name="index" /> 大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-250">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="1ed33-251">
            <para>派生的类可以重写<see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />若要更改此方法的行为。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-251">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected virtual void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : int * 'T -&gt; unit&#xA;override this.InsertItem : int * 'T -&gt; unit" Usage="collection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ed33-252">从零开始的索引，应在该位置插入 <c>item</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-252">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="1ed33-253">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-253">The object to insert.</span>
          </span>
          <span data-ttu-id="1ed33-254">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-254">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-255">将元素插入 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-255">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-256"><xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> 意味着在派生类中被重写。</span><span class="sxs-lookup"><span data-stu-id="1ed33-256">The <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> is meant to be overridden in a derived class.</span></span> <span data-ttu-id="1ed33-257">有关将项插入 <xref:System.Collections.ObjectModel.Collection%601> 中的公共方法，请参阅 <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-257">For a public method to insert an item in the <xref:System.Collections.ObjectModel.Collection%601>, see <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>.</span></span>  
  
 <span data-ttu-id="1ed33-258"><xref:System.Collections.ObjectModel.Collection%601> 接受`null`是有效的引用值类型以及允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-258"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="1ed33-259">如果`index`等同于<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，`item`添加到末尾<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-259">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="1ed33-260">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-260">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-261">下面的代码示例演示如何从构造类型的派生集合类<xref:System.Collections.ObjectModel.Collection%601>泛型类，以及如何重写受保护<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>，和<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>方法，以提供自定义行为<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>， <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，并设置<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-261">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="1ed33-262">此示例中提供的自定义行为是`Changed`每个受保护方法结束时引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-262">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="1ed33-263">`Dinosaurs`类继承`Collection<string>`(`Collection(Of String)`在 Visual Basic 中)，并定义`Changed`事件，使用`DinosaursChangedEventArgs`类用于事件信息和使用枚举标识的更改种类。</span><span class="sxs-lookup"><span data-stu-id="1ed33-263">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="1ed33-264">此代码示例调用多个属性和方法<xref:System.Collections.ObjectModel.Collection%601>来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-264">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-265">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-265">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1ed33-266">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-266">-or-</span>
          </span>
          <span data-ttu-id="1ed33-267">
            <paramref name="index" /> 大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-267">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ed33-268">要获得或设置的元素从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-268">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-269">获取或设置位于指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-269">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-270">位于指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-270">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-271"><xref:System.Collections.ObjectModel.Collection%601> 接受`null`是有效的引用值类型以及允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-271"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="1ed33-272">可以使用下面的语法通过此属性访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="1ed33-272">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="1ed33-273">C# 语言使用关键字来定义而不是实现索引器<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-273">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span> <span data-ttu-id="1ed33-274">Visual Basic 将 <xref:System.Collections.ObjectModel.Collection%601.Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="1ed33-274">Visual Basic implements <xref:System.Collections.ObjectModel.Collection%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="1ed33-275">检索此属性的值是 o （1） 的操作;将属性设置也是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="1ed33-275">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-276">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-276">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-277">该代码示例创建一个字符串，使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-277">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-278">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-278">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-279">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-279">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-280">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-280">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-281">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-281">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-282">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-282">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1ed33-283">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-283">-or-</span>
          </span>
          <span data-ttu-id="1ed33-284">
            <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-284">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="1ed33-285">
            <para>派生的类可以重写<see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />若要更改设置此属性的行为。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-285">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /> to change the behavior of setting this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Items { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-286">获取 <see cref="T:System.Collections.Generic.IList`1" /> 周围的 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-286">Gets a <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-287">
            <see cref="T:System.Collections.Generic.IList`1" /> 周围的 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-287">A <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-288">包装器提供的功能<xref:System.Collections.Generic.IList%601>类并公开的所有元素<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-288">The wrapper provides the functionality of the <xref:System.Collections.Generic.IList%601> class and exposes all the elements of the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="1ed33-289">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="1ed33-289">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="collection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="1ed33-290">要从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中移除的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-290">The object to remove from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="1ed33-291">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-291">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-292">从 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中移除特定对象的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-292">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ed33-293">如果成功移除 <paramref name="item" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-293">
              <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1ed33-294">如果在原始 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 中没有找到 <paramref name="item" />，此方法也会返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-294">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-295">此方法可确定是否使用默认的相等比较的相等<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>为`T`，列表中的值的类型。</span><span class="sxs-lookup"><span data-stu-id="1ed33-295">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="1ed33-296">此方法执行线性搜索;因此，平均执行时间是成比例<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-296">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="1ed33-297">也就是说，此方法是 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-297">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-298">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-298">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-299">该代码示例创建一个字符串，使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-299">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-300">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-300">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-301">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-301">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-302">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-302">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-303">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-303">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1ed33-304">
            <para>派生的类可以重写<see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />若要更改此方法的行为。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-304">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="collection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ed33-305">要移除的元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-305">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-306">移除 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-306">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-307">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-307">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-308">下面的代码示例演示的许多属性和方法的<xref:System.Collections.ObjectModel.Collection%601>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-308">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="1ed33-309">该代码示例创建一个字符串，使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法来添加多个字符串，显示<xref:System.Collections.ObjectModel.Collection%601.Count%2A>，并列出这些字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-309">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="1ed33-310">该示例使用<xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A>方法来查找字符串的索引和<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>方法来确定字符串是否是集合中。</span><span class="sxs-lookup"><span data-stu-id="1ed33-310">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="1ed33-311">此示例将插入字符串使用<xref:System.Collections.ObjectModel.Collection%601.Insert%2A>使用默认值的方法和检索和设置字符串<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性 （C# 中的索引器）。</span><span class="sxs-lookup"><span data-stu-id="1ed33-311">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="1ed33-312">此示例删除字符串标识使用的字符串<xref:System.Collections.ObjectModel.Collection%601.Remove%2A>方法和索引使用<xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1ed33-312">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="1ed33-313">最后，<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法用于清除集合中的所有字符串。</span><span class="sxs-lookup"><span data-stu-id="1ed33-313">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-314">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-314">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1ed33-315">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-315">-or-</span>
          </span>
          <span data-ttu-id="1ed33-316">
            <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-316">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="1ed33-317">
            <para>派生的类可以重写<see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />若要更改此方法的行为。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-317">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : int -&gt; unit&#xA;override this.RemoveItem : int -&gt; unit" Usage="collection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ed33-318">要移除的元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-318">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-319">移除 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-319">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-320">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-320">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-321">下面的代码示例演示如何从构造类型的派生集合类<xref:System.Collections.ObjectModel.Collection%601>泛型类，以及如何重写受保护<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>，和<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>方法，以提供自定义行为<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>， <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，并设置<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-321">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="1ed33-322">此示例中提供的自定义行为是`Changed`每个受保护方法结束时引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-322">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="1ed33-323">`Dinosaurs`类继承`Collection<string>`(`Collection(Of String)`在 Visual Basic 中)，并定义`Changed`事件，使用`DinosaursChangedEventArgs`类用于事件信息和使用枚举标识的更改种类。</span><span class="sxs-lookup"><span data-stu-id="1ed33-323">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="1ed33-324">此代码示例调用多个属性和方法<xref:System.Collections.ObjectModel.Collection%601>来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-324">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-325">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-325">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1ed33-326">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-326">-or-</span>
          </span>
          <span data-ttu-id="1ed33-327">
            <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-327">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected virtual void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit&#xA;override this.SetItem : int * 'T -&gt; unit" Usage="collection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ed33-328">待替换元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-328">The zero-based index of the element to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="1ed33-329">位于指定索引处的元素的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-329">The new value for the element at the specified index.</span>
          </span>
          <span data-ttu-id="1ed33-330">对于引用类型，该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-330">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-331">替换指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-331">Replaces the element at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-332"><xref:System.Collections.ObjectModel.Collection%601> 接受`null`是有效的引用值类型以及允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-332"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="1ed33-333">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="1ed33-333">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ed33-334">下面的代码示例演示如何从构造类型的派生集合类<xref:System.Collections.ObjectModel.Collection%601>泛型类，以及如何重写受保护<xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>， <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>，和<xref:System.Collections.ObjectModel.Collection%601.SetItem%2A>方法，以提供自定义行为<xref:System.Collections.ObjectModel.Collection%601.Add%2A>， <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>， <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>，和<xref:System.Collections.ObjectModel.Collection%601.Clear%2A>方法，并设置<xref:System.Collections.ObjectModel.Collection%601.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-334">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="1ed33-335">此示例中提供的自定义行为是`Changed`每个受保护方法结束时引发的通知事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-335">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="1ed33-336">`Dinosaurs`类继承`Collection<string>`(`Collection(Of String)`在 Visual Basic 中)，并定义`Changed`事件，使用`DinosaursChangedEventArgs`类用于事件信息和使用枚举标识的更改种类。</span><span class="sxs-lookup"><span data-stu-id="1ed33-336">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="1ed33-337">此代码示例调用多个属性和方法<xref:System.Collections.ObjectModel.Collection%601>来演示自定义事件。</span><span class="sxs-lookup"><span data-stu-id="1ed33-337">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-338">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-338">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1ed33-339">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-339">-or-</span>
          </span>
          <span data-ttu-id="1ed33-340">
            <paramref name="index" /> 大于 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-340">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Items" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-341">获取一个值，该值指示 <see cref="T:System.Collections.Generic.ICollection`1" /> 是否为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-341">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-342">如果 <see cref="T:System.Collections.Generic.ICollection`1" /> 为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-342">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1ed33-343">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-343">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-344">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-344">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="1ed33-345">集合是只读的只是一个集合与可防止修改集合; 的包装器因此，如果对基础集合进行更改，只读集合反映了这些更改。</span><span class="sxs-lookup"><span data-stu-id="1ed33-345">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="1ed33-346">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="1ed33-346">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="1ed33-347">作为从 <see cref="T:System.Array" /> 复制的元素的目标的一维 <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-347">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="1ed33-348">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-348">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1ed33-349">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-349">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-350">从特定的 <see cref="T:System.Collections.ICollection" /> 索引处开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-350">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1ed33-351">如果源的类型<xref:System.Collections.ICollection>不能自动强制转换为目标的类型`array`的非泛型实现<xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType>引发<xref:System.InvalidCastException>，而泛型实现会引发<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-351">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="1ed33-352">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-352">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ed33-353">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-353">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-354">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-354">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ed33-355">
            <paramref name="array" /> 是多维的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-355">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="1ed33-356">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-356">-or-</span>
          </span>
          <span data-ttu-id="1ed33-357">
            <paramref name="array" /> 没有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-357">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="1ed33-358">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-358">-or-</span>
          </span>
          <span data-ttu-id="1ed33-359">源 <see cref="T:System.Collections.ICollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-359">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="1ed33-360">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-360">-or-</span>
          </span>
          <span data-ttu-id="1ed33-361">源 <see cref="T:System.Collections.ICollection" /> 的类型无法自动转换为目标 <paramref name="array" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-361">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-362">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection" /> 的访问（线程安全）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-362">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-363">如果对 <see cref="T:System.Collections.ICollection" /> 的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-363">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1ed33-364">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-364">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-365">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>不同步。</span><span class="sxs-lookup"><span data-stu-id="1ed33-365">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="1ed33-366">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="1ed33-366">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="1ed33-367">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="1ed33-367">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="1ed33-368">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="1ed33-368">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="1ed33-369"><xref:System.Collections.ICollection.SyncRoot%2A> 返回一个对象，可用于同步对<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-369"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="1ed33-370">同步是所有线程访问集合之前都锁定此对象时才有效。</span><span class="sxs-lookup"><span data-stu-id="1ed33-370">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="1ed33-371">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="1ed33-371">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-372">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-372">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-373">可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-373">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="1ed33-374">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-374">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-375">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>不同步。</span><span class="sxs-lookup"><span data-stu-id="1ed33-375">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="1ed33-376">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="1ed33-376">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="1ed33-377">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="1ed33-377">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="1ed33-378">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="1ed33-378">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="1ed33-379"><xref:System.Collections.ICollection.SyncRoot%2A> 返回一个对象，可用于同步对<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-379"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="1ed33-380">同步是所有线程访问集合之前都锁定此对象时才有效。</span><span class="sxs-lookup"><span data-stu-id="1ed33-380">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="1ed33-381">下面的代码演示如何使用<xref:System.Collections.ICollection.SyncRoot%2A>C#、 c + + 和 Visual Basic 的属性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-381">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="1ed33-382">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="1ed33-382">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-383">返回一个循环访问集合的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-383">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ed33-384">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-384">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-385">`foreach` C# 语言的语句 (`for each` c + + 中`For Each`在 Visual Basic 中) 隐藏了枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-385">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="1ed33-386">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="1ed33-386">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="1ed33-387">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="1ed33-387">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="1ed33-388">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="1ed33-388">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="1ed33-389"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="1ed33-389"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="1ed33-390">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-390">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="1ed33-391">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-391">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="1ed33-392">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="1ed33-392"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="1ed33-393"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-393"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="1ed33-394">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1ed33-394">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="1ed33-395">当枚举数位于此位置上，对后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1ed33-395">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="1ed33-396">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.IEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="1ed33-396">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="1ed33-397">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-397">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="1ed33-398">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="1ed33-398">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="1ed33-399">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="1ed33-399">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="1ed33-400">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="1ed33-400">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="1ed33-401">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="1ed33-401">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="1ed33-402">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="1ed33-402">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="1ed33-403">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>不同步。</span><span class="sxs-lookup"><span data-stu-id="1ed33-403">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="1ed33-404">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="1ed33-404">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ed33-405">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-405">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-406">将某项添加到 <see cref="T:System.Collections.IList" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-406">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ed33-407">新元素的插入位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-407">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-408">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="1ed33-408">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ed33-409">
            <paramref name="value" /> 属于不能分配给 <see cref="T:System.Collections.IList" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-409">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ed33-410">要在 <see cref="T:System.Object" /> 中查找的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-410">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-411">确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-411">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ed33-412">如果在 <see cref="T:System.Collections.IList" /> 中找到 <see cref="T:System.Object" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-412">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-413">此方法确定相等性，首先确定是否`value`属于类型`T`（或 null），然后再调用<xref:System.Collections.ObjectModel.Collection%601.Contains%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-413">This method determines equality by first determining whether `value` is of type `T` (or null) and then calling <xref:System.Collections.ObjectModel.Collection%601.Contains%2A>.</span></span>  
  
 <span data-ttu-id="1ed33-414">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-414">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ed33-415">
            <paramref name="value" /> 属于不能分配给 <see cref="T:System.Collections.IList" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-415">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ed33-416">要在 <see cref="T:System.Object" /> 中查找的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-416">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-417">确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-417">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ed33-418">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-418">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-419">此方法可确定使用默认比较器的相等性<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-419">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="1ed33-420"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 检查是否键入`T`实现<xref:System.IComparable%601?displayProperty=nameWithType>并使用该实现，如果可用。</span><span class="sxs-lookup"><span data-stu-id="1ed33-420"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="1ed33-421">如果不是，<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>检查是否类型`T`实现<xref:System.IComparable?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-421">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="1ed33-422">如果类型`T`未的实现任何一个接口，此方法将使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-422">If type `T` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1ed33-423">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-423">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ed33-424">
            <paramref name="value" /> 属于不能分配给 <see cref="T:System.Collections.IList" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-424">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ed33-425">从零开始的索引，应在该位置插入 <c>value</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-425">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1ed33-426">要插入 <see cref="T:System.Object" /> 中的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-426">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-427">将某项插入 <see cref="T:System.Collections.IList" /> 中指定的索引处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-427">Inserts an item into the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-428">如果 `index` 等于 <xref:System.Collections.IList> 中的项数，则将 `value` 追加到末尾。</span><span class="sxs-lookup"><span data-stu-id="1ed33-428">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="1ed33-429">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-429">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-430">
            <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-430">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ed33-431">
            <paramref name="value" /> 属于不能分配给 <see cref="T:System.Collections.IList" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-431">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-432">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-432">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-433">如果 <see cref="T:System.Collections.IList" /> 具有固定大小，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-433">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1ed33-434">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-434">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-435">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-435">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="1ed33-436">具有固定大小的集合只是一个集合与防止添加和移除元素; 的包装器因此，如果在更改基础集合，包括添加或删除的元素，大小固定集合反映了这些更改。</span><span class="sxs-lookup"><span data-stu-id="1ed33-436">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="1ed33-437">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="1ed33-437">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ed33-438">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-438">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-439">如果 <see cref="T:System.Collections.IList" /> 为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-439">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1ed33-440">在 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 的默认实现中，此属性始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-440">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-441">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="1ed33-441">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="1ed33-442">集合是只读的只是一个集合与可防止修改集合; 的包装器因此，如果对基础集合进行更改，只读集合反映了这些更改。</span><span class="sxs-lookup"><span data-stu-id="1ed33-442">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="1ed33-443">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="1ed33-443">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ed33-444">要获得或设置的元素从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-444">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-445">获取或设置位于指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-445">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ed33-446">位于指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-446">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-447">可以使用下面的语法通过此属性访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="1ed33-447">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="1ed33-448">使用 C# 语言[这](~/docs/csharp/language-reference/keywords/this.md)关键字来定义而不是实现索引器<xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1ed33-448">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="1ed33-449">Visual Basic 将 <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="1ed33-449">Visual Basic implements <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="1ed33-450">检索此属性的值是 o （1） 的操作;将属性设置也是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="1ed33-450">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ed33-451">
            <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-451">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ed33-452">已设置属性，且 <paramref name="value" /> 属于不能对 <see cref="T:System.Collections.IList" /> 赋值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-452">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ed33-453">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-453">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ed33-454">从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-454">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ed33-455">此方法可确定使用默认比较器的相等性<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-455">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="1ed33-456"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 检查是否键入`T`实现<xref:System.IComparable%601?displayProperty=nameWithType>并使用该实现，如果可用。</span><span class="sxs-lookup"><span data-stu-id="1ed33-456"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="1ed33-457">如果不是，<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>检查是否类型`T`实现<xref:System.IComparable?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-457">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="1ed33-458">如果类型`T`未的实现任何一个接口，此方法将使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-458">If type `T` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1ed33-459">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ObjectModel.Collection%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="1ed33-459">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ed33-460">
            <paramref name="value" /> 属于不能分配给 <see cref="T:System.Collections.IList" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ed33-460">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>