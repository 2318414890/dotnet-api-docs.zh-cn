<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XPathNodeIterator.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac579f55fb6e8b1dfcfb81b3b8d2737df75c404edd2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79f55fb6e8b1dfcfb81b3b8d2737df75c404edd2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>Provides an iterator over a selected set of nodes.</source>
          <target state="translated">在选定节点集上提供一个迭代器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class is not positioned on the first node in a selected set of nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>返回对象<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>类未定位在选定节点集的第一个节点上。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>A call to the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class must be made to position the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object on the first node in the selected set of nodes.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>必须使类可以放置<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>选定节点集的第一个节点上的对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>When using the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>, if you edit the current node or any of its ancestors, your current position is lost.</source>
          <target state="translated">使用时<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>，如果编辑当前节点或任何其祖先，当前位置将会丢失。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>If you want to edit a number of nodes that you have selected, create a <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> array, copy all of the nodes from the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> into the array, then iterate through the array and modify the nodes.</source>
          <target state="translated">如果你想要编辑的节点数已选择，请创建<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>数组，复制所有从节点<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>到数组，然后循环访问数组和修改节点。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">有两种方法来循环访问<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>使用进行收集<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
          <target state="translated">一种方法是使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法，然后调用<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>若要获取当前<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>实例，如以下示例所示：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
          <target state="translated">另一种方法是使用<ph id="ph1">`foreach`</ph>循环来调用<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>方法并使用返回的<ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph>接口来枚举的节点，如以下示例所示：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>You should either use <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>.</source>
          <target state="translated">你应该使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>或使用<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">组合这两种方法可能会导致意外的结果。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
          <target state="translated">例如，如果<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>首先，调用方法，然后<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>方法调用<ph id="ph3">`foreach`</ph>循环，<ph id="ph4">`foreach`</ph>循环不会启动枚举结果从开始处的集合，但从之后的位置<ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.Select%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class to select a node set using the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.Select%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>类来选择节点集使用<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>The example takes the <ph id="ph1">`books.xml`</ph> file as input.</source>
          <target state="translated">该示例使用 <ph id="ph1">`books.xml`</ph> 文件作为输入。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.XPathNodeIterator">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> class, you must override the following members:</source>
          <target state="translated">继承自<ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph>类，你必须重写以下成员：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.#ctor">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">派生的类构造函数来初始化此类型中的状态将调用此构造函数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.Clone">
          <source>When overridden in a derived class, returns a clone of this <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> object.</source>
          <target state="translated">当在派生类中重写时，返回此 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 对象的复本。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> object clone of this <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> object.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 对象的新 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 对象复本。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.Clone">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is positioned at the same node in the node set if calls have been made to the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method.</source>
          <target state="translated">克隆<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>对象定位在的节点设置如果对进行调用了中的相同节点<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.Clone">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is not affected by subsequent changes to this <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object.</source>
          <target state="translated">克隆<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>对象不受后续改为如下命令<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Xml.XPath.XPathNodeIterator.Count">
          <source>Gets the index of the last node in the selected set of nodes.</source>
          <target state="translated">获取所选节点集中最后一个节点的索引。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Count">
          <source>The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.</source>
          <target state="translated">所选节点集中最后一个节点的索引或者 0 （如果没有选择节点）。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Count">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph> property does not affect the position of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph>属性不会影响的位置<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for this <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph>, positioned on the current context node.</source>
          <target state="translated">在派生类中重写时，获取此 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph>的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象，它定位在当前上下文节点上。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object positioned on the context node from which the node set was selected.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象，定位在从中选择节点集的上下文节点上。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /&gt;</ph> method must be called to move the <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> to the first node in the selected set.</source>
          <target state="translated">必须调用 <ph id="ph1">&lt;see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /&gt;</ph> 方法将 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNodeIterator" /&gt;</ph> 移至所选集中的第一个节点。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>You can use the properties of the returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object to obtain information on the current node.</source>
          <target state="translated">你可以使用返回的属性<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>对象以获取当前节点上的信息。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>However, the returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object should not be modified.</source>
          <target state="translated">但是，返回<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>不应修改对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object cannot be moved away from the selected node set.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>对象不能离开所选的节点集。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>Alternatively, you can clone the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class.</source>
          <target state="translated">或者，您可以克隆<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>对象使用<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object can then be moved away from the selected node set.</source>
          <target state="translated">克隆<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>对象然后离开所选的节点集。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>This method of cloning the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object might affect the performance of the XPath query.</source>
          <target state="translated">此方法的克隆<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>对象可能会影响将 XPath 查询的性能。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A&gt;</ph> methods result in no nodes being selected, the <ph id="ph4">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> property might not be pointing to the context node.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A&gt;</ph>方法都会导致选择，没有任何节点<ph id="ph4">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>属性不可能指向上下文节点。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>To test whether nodes have been selected, use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph> property as shown in the following example.</source>
          <target state="translated">若要测试是否已选择节点，请使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph>属性，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The following example gets all book titles authored by Herman Melville using the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class.</source>
          <target state="translated">下面的示例获取创作 Herman Melville 使用的所有书名<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>对象和<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph>方法<ph id="ph4">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.Current">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">该示例使用 <ph id="ph1">`contosoBooks.xml`</ph> 文件作为输入。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>When overridden in a derived class, gets the index of the current position in the selected set of nodes.</source>
          <target state="translated">当在派生的类中重写时，获取所选节点集中当前位置的索引。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>The index of the current position.</source>
          <target state="translated">当前位置的索引。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>The index is 1-based.</source>
          <target state="translated">索引从 1 开始。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>Therefore, the first node has an index of 1.</source>
          <target state="translated">因此，第一个节点具有的索引为 1。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>An index of 0 indicates there are no selected nodes.</source>
          <target state="translated">索引为 0 指示没有所选的节点。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
          <source>This property always returns a positive integer.</source>
          <target state="translated">此属性始终返回一个正整数。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object to iterate through the selected node set.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 对象以循环访问所选的节点集。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object to iterate through the selected node set.</source>
          <target state="translated">循环访问所选节点集的 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>The enumerator is positioned on the current position of the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object.</source>
          <target state="translated">枚举数定位在的当前位置上<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">有两种方法来循环访问<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>使用进行收集<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
          <target state="translated">一种方法是使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法，然后调用<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>若要获取当前<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>实例，如以下示例所示：</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
          <target state="translated">另一种方法是使用<ph id="ph1">`foreach`</ph>循环来调用<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>方法并使用返回的<ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph>接口来枚举的节点，如以下示例所示：</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>You should either use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">你应该使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>或使用<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">组合这两种方法可能会导致意外的结果。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
          <target state="translated">例如，如果<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>首先，调用方法，然后<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>方法调用<ph id="ph3">`foreach`</ph>循环，<ph id="ph4">`foreach`</ph>循环不会启动枚举结果从开始处的集合，但从之后的位置<ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>When overridden in a derived class, moves the <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object returned by the <ph id="ph2">&lt;see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /&gt;</ph> property to the next node in the selected node set.</source>
          <target state="translated">在派生类中重写时，将 <ph id="ph2">&lt;see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /&gt;</ph> 属性返回的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象移至选定节点集中的下一个节点。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object moved to the next node; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if there are no more selected nodes.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象已移至下一个节点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果没有其他选定节点，则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is positioned on the first node in the selected node set only after the initial call to the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>对象定位在设置仅在首次调用后所选节点中的第一个节点上<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>The node set is created in document order.</source>
          <target state="translated">节点集是按文档顺序创建的。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>Therefore, calling the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method moves to the next node in document order.</source>
          <target state="translated">因此，调用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法将移动到按文档顺序的下一个节点。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">有两种方法来循环访问<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>使用进行收集<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
          <target state="translated">一种方法是使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法，然后调用<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>若要获取当前<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>实例，如以下示例所示：</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
          <target state="translated">另一种方法是使用<ph id="ph1">`foreach`</ph>循环来调用<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>方法并使用返回的<ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph>接口来枚举的节点，如以下示例所示：</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>You should either use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">你应该使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>或使用<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">组合这两种方法可能会导致意外的结果。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
          <target state="translated">例如，如果<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph>首先，调用方法，然后<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>方法调用<ph id="ph3">`foreach`</ph>循环，<ph id="ph4">`foreach`</ph>循环不会启动枚举结果从开始处的集合，但从之后的位置<ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.Select%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class to select a node set using the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.Select%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>类来选择节点集使用<ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
          <source>The example takes the <ph id="ph1">`books.xml`</ph> file as input.</source>
          <target state="translated">该示例使用 <ph id="ph1">`books.xml`</ph> 文件作为输入。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">创建作为当前实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">作为此实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> 接口时使用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>