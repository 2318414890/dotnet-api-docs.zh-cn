<Type Name="XPathItem" FullName="System.Xml.XPath.XPathItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eead02533e836b5f3eea91d12c0ad25ff3e603b8" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46653670" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XPathItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XPathItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.XPathItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XPathItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathItem abstract" />
  <TypeSignature Language="F#" Value="type XPathItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="06d27-101">表示 XQuery 1.0 和 XPath 2.0 数据模型中的项。</span>
      <span class="sxs-lookup">
        <span data-stu-id="06d27-101">Represents an item in the XQuery 1.0 and XPath 2.0 Data Model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-102">项是节点或原子值。</span><span class="sxs-lookup"><span data-stu-id="06d27-102">An item is either a node or an atomic value.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="06d27-103">继承自<see cref="T:System.Xml.XPath.XPathItem" />类，必须重写以下成员： <see cref="P:System.Xml.XPath.XPathItem.IsNode" />:</span>
        <span class="sxs-lookup">
          <span data-stu-id="06d27-103">When you inherit from the <see cref="T:System.Xml.XPath.XPathItem" /> class, you must override the following members: <see cref="P:System.Xml.XPath.XPathItem.IsNode" />:</span>
        </span> 
-   <see cref="P:System.Xml.XPath.XPathItem.TypedValue" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.Value" />  
  
-   <see cref="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.ValueAsBoolean" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.ValueAsDateTime" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.ValueAsDouble" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.ValueAsInt" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.ValueAsLong" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.ValueType" />  
  
-   <see cref="P:System.Xml.XPath.XPathItem.XmlType" /></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XPathItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XPathItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="06d27-104">初始化 <see cref="T:System.Xml.XPath.XPathItem" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-104">Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-105">在派生的类构造函数来初始化此类型中的状态将调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="06d27-105">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNode">
      <MemberSignature Language="C#" Value="public abstract bool IsNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.IsNode" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsNode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsNode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNode : bool" Usage="System.Xml.XPath.XPathItem.IsNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-106">当在派生类中重写时，获取一个值，该值指示项是否表示 XPath 节点或者原子值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-106">When overridden in a derived class, gets a value indicating whether the item represents an XPath node or an atomic value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-107">如果项表示 XPath 节点，则为 <see langword="true" />；如果项表示原子值，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-107">
              <see langword="true" /> if the item represents an XPath node; <see langword="false" /> if the item represents an atomic value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public abstract object TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ TypedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypedValue : obj" Usage="System.Xml.XPath.XPathItem.TypedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-108">当在派生类中重写时，根据当前项的架构类型以最合适的 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]类型的装箱对象的形式获取当前项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-108">When overridden in a derived class, gets the current item as a boxed object of the most appropriate [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] type according to its schema type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-109">以最合适的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 类型的装箱对象形式表示的当前项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-109">The current item as a boxed object of the most appropriate [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-110">如果项的值不符合其指定架构类型，值<xref:System.Xml.XPath.XPathItem.TypedValue%2A>属性的值等效<xref:System.Xml.XPath.XPathItem.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="06d27-110">If the value of the item is not valid according to its specified schema type, the value of the <xref:System.Xml.XPath.XPathItem.TypedValue%2A> property is equivalent to the value of the <xref:System.Xml.XPath.XPathItem.Value%2A> property.</span></span>  
  
 <span data-ttu-id="06d27-111">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="06d27-111">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XPath.XPathItem.Value" />
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-112">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-112">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XPath.XPathItem.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-113">当在派生类中重写时，获取项的 <see langword="string" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-113">When overridden in a derived class, gets the <see langword="string" /> value of the item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-114">项的 <see langword="string" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-114">The <see langword="string" /> value of the item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValueAs">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-115">按照指定的类型返回该项的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-115">Returns the item's value as the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValueAs">
      <MemberSignature Language="C#" Value="public virtual object ValueAs (Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ValueAs(class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValueAs (returnType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ValueAs(Type ^ returnType);" />
      <MemberSignature Language="F#" Value="abstract member ValueAs : Type -&gt; obj&#xA;override this.ValueAs : Type -&gt; obj" Usage="xPathItem.ValueAs returnType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="06d27-116">返回的项值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-116">The type to return the item value as.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06d27-117">按照指定的类型返回该项的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-117">Returns the item's value as the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06d27-118">以所请求类型表示的项值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-118">The value of the item as the type requested.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-119">当在派生类中重写<xref:System.Xml.XPath.XPathItem.ValueAs%2A>方法尝试将项的值转换[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]指定类型。</span><span class="sxs-lookup"><span data-stu-id="06d27-119">When overridden in a derived class, the <xref:System.Xml.XPath.XPathItem.ValueAs%2A> method attempts to convert the value of the item to the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] type specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="06d27-120">项值的目标类型的格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-120">The item's value is not in the correct format for the target type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="06d27-121">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-121">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="06d27-122">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-122">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-123">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-123">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ValueAs">
      <MemberSignature Language="C#" Value="public abstract object ValueAs (Type returnType, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ValueAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ValueAs (returnType As Type, nsResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ValueAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ nsResolver);" />
      <MemberSignature Language="F#" Value="abstract member ValueAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xPathItem.ValueAs (returnType, nsResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="06d27-124">返回的项值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-124">The type to return the item's value as.</span>
          </span>
        </param>
        <param name="nsResolver">
          <span data-ttu-id="06d27-125">用于解析命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-125">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06d27-126">当在派生类中重写时，以指定用于解析命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象所指定的类型返回项值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-126">When overridden in a derived class, returns the item's value as the type specified using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06d27-127">以所请求类型表示的项值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-127">The value of the item as the type requested.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-128">当在派生类中重写<xref:System.Xml.XPath.XPathItem.ValueAs%2A>方法尝试将项的值转换[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]指定类型。</span><span class="sxs-lookup"><span data-stu-id="06d27-128">When overridden in a derived class, the <xref:System.Xml.XPath.XPathItem.ValueAs%2A> method attempts to convert the value of the item to the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] type specified.</span></span>  
  
 <span data-ttu-id="06d27-129"><xref:System.Xml.IXmlNamespaceResolver>对象用于解析与类型转换有关的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="06d27-129">The <xref:System.Xml.IXmlNamespaceResolver> object is used to resolve namespace prefixes related to type conversions.</span></span> <span data-ttu-id="06d27-130">例如，当转换`xs:QName`到`xs:string`。</span><span class="sxs-lookup"><span data-stu-id="06d27-130">For example, when converting an `xs:QName` to an `xs:string`.</span></span>  
  
 <span data-ttu-id="06d27-131">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="06d27-131">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="06d27-132">项值的目标类型的格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-132">The item's value is not in the correct format for the target type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="06d27-133">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-133">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="06d27-134">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-134">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-135">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-135">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ValueAsBoolean">
      <MemberSignature Language="C#" Value="public abstract bool ValueAsBoolean { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueAsBoolean" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.ValueAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueAsBoolean As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool ValueAsBoolean { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsBoolean : bool" Usage="System.Xml.XPath.XPathItem.ValueAsBoolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-136">当在派生类中重写时，获取该项的 <see cref="T:System.Boolean" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-136">When overridden in a derived class, gets the item's value as a <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-137">该项的 <see cref="T:System.Boolean" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-137">The item's value as a <see cref="T:System.Boolean" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-138"><xref:System.Xml.XPath.XPathItem.ValueAsDateTime%2A>属性尝试将项的值转换[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]<xref:System.Boolean>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="06d27-138">The <xref:System.Xml.XPath.XPathItem.ValueAsDateTime%2A> property attempts to convert the value of the item to the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] <xref:System.Boolean> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="06d27-139">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="06d27-139">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="06d27-140">该项值的 <see cref="T:System.Boolean" /> 类型的格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-140">The item's value is not in the correct format for the <see cref="T:System.Boolean" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="06d27-141">尝试到 <see cref="T:System.Boolean" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-141">The attempted cast to <see cref="T:System.Boolean" /> is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-142">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-142">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime ValueAsDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValueAsDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.ValueAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueAsDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValueAsDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsDateTime : DateTime" Usage="System.Xml.XPath.XPathItem.ValueAsDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-143">当在派生类中重写时，获取该项的 <see cref="T:System.DateTime" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-143">When overridden in a derived class, gets the item's value as a <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-144">该项的 <see cref="T:System.DateTime" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-144">The item's value as a <see cref="T:System.DateTime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-145"><xref:System.Xml.XPath.XPathItem.ValueAsDateTime%2A>属性尝试将项的值转换[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]<xref:System.DateTime>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="06d27-145">The <xref:System.Xml.XPath.XPathItem.ValueAsDateTime%2A> property attempts to convert the value of the item to the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] <xref:System.DateTime> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="06d27-146">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="06d27-146">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="06d27-147">该项值的 <see cref="T:System.DateTime" /> 类型的格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-147">The item's value is not in the correct format for the <see cref="T:System.DateTime" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="06d27-148">尝试到 <see cref="T:System.DateTime" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-148">The attempted cast to <see cref="T:System.DateTime" /> is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-149">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-149">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDouble">
      <MemberSignature Language="C#" Value="public abstract double ValueAsDouble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ValueAsDouble" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.ValueAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueAsDouble As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property double ValueAsDouble { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsDouble : double" Usage="System.Xml.XPath.XPathItem.ValueAsDouble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-150">当在派生类中重写时，获取该项的 <see cref="T:System.Double" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-150">When overridden in a derived class, gets the item's value as a <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-151">该项的 <see cref="T:System.Double" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-151">The item's value as a <see cref="T:System.Double" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-152"><xref:System.Xml.XPath.XPathItem.ValueAsDouble%2A>属性尝试将项的值转换[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]<xref:System.Double>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="06d27-152">The <xref:System.Xml.XPath.XPathItem.ValueAsDouble%2A> property attempts to convert the value of the item to the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] <xref:System.Double> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="06d27-153">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="06d27-153">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="06d27-154">该项值的 <see cref="T:System.Double" /> 类型的格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-154">The item's value is not in the correct format for the <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="06d27-155">尝试到 <see cref="T:System.Double" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-155">The attempted cast to <see cref="T:System.Double" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="06d27-156">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-156">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-157">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-157">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ValueAsInt">
      <MemberSignature Language="C#" Value="public abstract int ValueAsInt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueAsInt" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.ValueAsInt" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueAsInt As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int ValueAsInt { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsInt : int" Usage="System.Xml.XPath.XPathItem.ValueAsInt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-158">当在派生类中重写时，获取该项的 <see cref="T:System.Int32" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-158">When overridden in a derived class, gets the item's value as an <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-159">该项的 <see cref="T:System.Int32" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-159">The item's value as an <see cref="T:System.Int32" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-160"><xref:System.Xml.XPath.XPathItem.ValueAsInt%2A>属性尝试将项的值转换[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]<xref:System.Int32>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="06d27-160">The <xref:System.Xml.XPath.XPathItem.ValueAsInt%2A> property attempts to convert the value of the item to the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] <xref:System.Int32> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="06d27-161">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="06d27-161">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="06d27-162">该项值的 <see cref="T:System.Int32" /> 类型的格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-162">The item's value is not in the correct format for the <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="06d27-163">尝试到 <see cref="T:System.Int32" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-163">The attempted cast to <see cref="T:System.Int32" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="06d27-164">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-164">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-165">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-165">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ValueAsLong">
      <MemberSignature Language="C#" Value="public abstract long ValueAsLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ValueAsLong" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.ValueAsLong" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueAsLong As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long ValueAsLong { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsLong : int64" Usage="System.Xml.XPath.XPathItem.ValueAsLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-166">当在派生类中重写时，获取该项的 <see cref="T:System.Int64" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-166">When overridden in a derived class, gets the item's value as an <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-167">该项的 <see cref="T:System.Int64" /> 数据类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-167">The item's value as an <see cref="T:System.Int64" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-168"><xref:System.Xml.XPath.XPathItem.ValueAsLong%2A>属性尝试将项的值转换[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]<xref:System.Int64>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="06d27-168">The <xref:System.Xml.XPath.XPathItem.ValueAsLong%2A> property attempts to convert the value of the item to the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] <xref:System.Int64> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="06d27-169">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="06d27-169">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="06d27-170">该项值的 <see cref="T:System.Int64" /> 类型的格式不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-170">The item's value is not in the correct format for the <see cref="T:System.Int64" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="06d27-171">尝试到 <see cref="T:System.Int64" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-171">The attempted cast to <see cref="T:System.Int64" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="06d27-172">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-172">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-173">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-173">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.XPath.XPathItem.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-174">当在派生类中重写时，获取该项的 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-174">When overridden in a derived class, gets the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] type of the item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-175">该项的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-175">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type of the item.</span>
          </span>
          <span data-ttu-id="06d27-176">默认值为 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-176">The default value is <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-177">当在派生类中重写<xref:System.Xml.XPath.XPathItem.ValueType%2A>属性获取[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]项的类型化值的类型。</span><span class="sxs-lookup"><span data-stu-id="06d27-177">When overridden in a derived class, the <xref:System.Xml.XPath.XPathItem.ValueType%2A> property gets the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type of the typed value of the item.</span></span>  
  
 <span data-ttu-id="06d27-178">例如，类型的元素`xs:int`必须<xref:System.Xml.XPath.XPathItem.ValueType%2A>的<xref:System.Int32>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="06d27-178">For example, an element of type `xs:int` would have a <xref:System.Xml.XPath.XPathItem.ValueType%2A> of <xref:System.Int32> by default.</span></span> <span data-ttu-id="06d27-179">但是，<xref:System.Xml.XPath.XPathItem.ValueType%2A>可能是任何一种可以映射到有效类型`xs:int`，如<xref:System.Int16>或<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="06d27-179">However, the <xref:System.Xml.XPath.XPathItem.ValueType%2A> could be any one of the valid types that can be mapped to `xs:int`, such as <xref:System.Int16> or <xref:System.Double>.</span></span>  
  
 <span data-ttu-id="06d27-180">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="06d27-180">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="06d27-181">所有实施程序必须提供<see cref="P:System.Xml.XPath.XPathItem.ValueType" />属性的每个项，即使它只是<see cref="T:System.String" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="06d27-181">All implementers must provide a <see cref="P:System.Xml.XPath.XPathItem.ValueType" /> property for every item, even if it is only <see cref="T:System.String" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Xml.XPath.XPathItem.TypedValue" />
        <related type="Article" href="http://msdn.microsoft.com/library/63570538-06e3-4401-ad4d-ac50be90c7bf">
          <span data-ttu-id="06d27-182">System.Xml 类中的类型支持</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-182">Type Support in the System.Xml Classes</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.Schema.XmlSchemaType XmlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaType XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XPath.XPathItem.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XmlType As XmlSchemaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::Schema::XmlSchemaType ^ XmlType { System::Xml::Schema::XmlSchemaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Schema.XmlSchemaType" Usage="System.Xml.XPath.XPathItem.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="06d27-183">当在派生类中重写时，将获取项的 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-183">When overridden in a derived class, gets the <see cref="T:System.Xml.Schema.XmlSchemaType" /> for the item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="06d27-184">项的 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06d27-184">The <see cref="T:System.Xml.Schema.XmlSchemaType" /> for the item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06d27-185">当在派生类中重写<xref:System.Xml.XPath.XPathItem.XmlType%2A>属性获取<xref:System.Xml.Schema.XmlSchemaType>项。</span><span class="sxs-lookup"><span data-stu-id="06d27-185">When overridden in a derived class, the <xref:System.Xml.XPath.XPathItem.XmlType%2A> property gets the <xref:System.Xml.Schema.XmlSchemaType> for the item.</span></span> <span data-ttu-id="06d27-186">例如，<xref:System.Xml.Schema.XmlSchemaSimpleType>或<xref:System.Xml.Schema.XmlSchemaComplexType>。</span><span class="sxs-lookup"><span data-stu-id="06d27-186">For example, the <xref:System.Xml.Schema.XmlSchemaSimpleType> or <xref:System.Xml.Schema.XmlSchemaComplexType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaType" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaSimpleType" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaComplexType" />
      </Docs>
    </Member>
  </Members>
</Type>