<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Extensions.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a3f783e188261854d0c471aa40cc9edbb59d5841.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3f783e188261854d0c471aa40cc9edbb59d5841</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XPath.Extensions">
          <source>This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.</source>
          <target state="translated">此类包含 LINQ to XML 扩展方法，可以使用这些方法计算 XPath 表达式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>There is some performance penalty for using these methods.</source>
          <target state="translated">没有为使用这些方法的某些性能产生负面影响。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Using <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> queries yields better performance.</source>
          <target state="translated">使用<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>查询产生更好的性能。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</source>
          <target state="translated">尽管 XML XPath 语言 1.0 建议中未指定返回的集合的顺序，但此扩展方法按文档顺序返回节点。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Note that nodes are returned in document order even when you use a reverse axis, such as <ph id="ph1">`preceding-sibling`</ph> or <ph id="ph2">`ancestor-or-self`</ph>.</source>
          <target state="translated">请注意，即使你使用反向轴，例如，节点将按文档顺序返回<ph id="ph1">`preceding-sibling`</ph>或<ph id="ph2">`ancestor-or-self`</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Xml.XPath.Extensions">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 创建一个 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>You cannot edit the XML tree by using the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> that is returned by this method.</source>
          <target state="translated">你无法通过使用编辑 XML 树<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>此方法返回。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.CanEdit%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.CanEdit%2A&gt;</ph> 属性返回 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>You cannot create an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> for a <ph id="ph2">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> node.</source>
          <target state="translated">无法创建<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>为<ph id="ph2">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>节点。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Document types do not participate in the XPath data model.</source>
          <target state="translated">在 XPath 数据模型未参与文档类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Namespace declarations are reported from left to right.</source>
          <target state="translated">从左到右报告 Namespace 声明。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>In contrast, for <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> namespaces are reported from right to left.</source>
          <target state="translated">相反，对于<ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>命名空间报告从右到左。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>This is conformant behavior because namespace declarations are not ordered in the XPath data model.</source>
          <target state="translated">这是一致的行为，因为命名空间声明在 XPath 数据模型中不按顺序排列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>The method <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.MoveToId%2A&gt;</ph> is not supported for navigators that are returned by this method.</source>
          <target state="translated">该方法<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.MoveToId%2A&gt;</ph>不支持此方法返回的导航器。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>You can use this method to perform an XSLT transformation.</source>
          <target state="translated">此方法可用于执行 XSLT 转换。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>You can create an XML tree, create an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> from the XML tree, create a new document, and create a <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> that will write into the new document.</source>
          <target state="translated">你可以创建 XML 树，创建<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>从 XML 树中，创建一个新文档，并创建<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>，以写入新文档。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Then, you can invoke the XSLT transformation, passing the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> to the transformation.</source>
          <target state="translated">然后，您可以调用 XSLT 转换，并可以将 <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> 传递到转换中。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</source>
          <target state="translated">在转换成功完成后，使用转换的结果，填充新的 XML 树。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>To perform an XSLT transformation, you can use either an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> or an <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>.</source>
          <target state="translated">若要执行 XSLT 转换，你可以使用<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>或<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>The two approaches have different performance characteristics.</source>
          <target state="translated">这两种方法具有不同的性能特征。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Some transformations will execute faster when using an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, and others will execute faster when using a <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>.</source>
          <target state="translated">某些转换会在使用时更快地执行<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>，并且其他人将执行更快地使用时<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</source>
          <target state="translated">如果性能考虑，我们建议使用以确定将您的环境中更好地执行每种方法进行试验。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that can process XPath queries.</source>
          <target state="translated">一个可以处理 XPath 查询的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 创建一个 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> that can process XPath queries.</source>
          <target state="translated">一个可以处理 XPath 查询的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>You cannot edit the XML tree by using the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> that is returned by this method.</source>
          <target state="translated">你无法通过使用编辑 XML 树<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>此方法返回。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.CanEdit%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.CanEdit%2A&gt;</ph> 属性返回 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>You cannot create an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> for a <ph id="ph2">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> node.</source>
          <target state="translated">无法创建<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>为<ph id="ph2">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>节点。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>Document types do not participate in the XPath data model.</source>
          <target state="translated">在 XPath 数据模型未参与文档类型。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>Namespace declarations are reported from left to right.</source>
          <target state="translated">从左到右报告 Namespace 声明。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>In contrast, for <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> namespaces are reported from right to left.</source>
          <target state="translated">相反，对于<ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>命名空间报告从右到左。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>This is conformant behavior because namespace declarations are not ordered in the XPath data model.</source>
          <target state="translated">这是一致的行为，因为命名空间声明在 XPath 数据模型中不按顺序排列。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>The method <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.MoveToId%2A&gt;</ph> is not supported for navigators that are returned by this method.</source>
          <target state="translated">该方法<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.MoveToId%2A&gt;</ph>不支持此方法返回的导航器。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>You can use this method to perform an XSLT transformation.</source>
          <target state="translated">此方法可用于执行 XSLT 转换。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>You can create an XML tree, create an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> from the XML tree, create a new document, and create a <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> that will write into the new document.</source>
          <target state="translated">你可以创建 XML 树，创建<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>从 XML 树中，创建一个新文档，并创建<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>，以写入新文档。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>Then, you can invoke the XSLT transformation, passing the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> to the transform.</source>
          <target state="translated">然后，可以调用 XSLT 转换，传入<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>的转换。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</source>
          <target state="translated">在转换成功完成后，使用转换的结果，填充新的 XML 树。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>To perform an XSLT transformation, you can use either an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> or an <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>.</source>
          <target state="translated">若要执行 XSLT 转换，你可以使用<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>或<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>The two approaches have different performance characteristics.</source>
          <target state="translated">这两种方法具有不同的性能特征。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>Some transformations will execute faster when using an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, and others will execute faster when using a <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>.</source>
          <target state="translated">某些转换会在使用时更快地执行<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>，并且其他人将执行更快地使用时<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</source>
          <target state="translated">如果性能考虑，我们建议使用以确定将您的环境中更好地执行每种方法进行试验。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that can process an XPath query.</source>
          <target state="translated">一个可以处理 XPath 查询的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to be used by <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>.</source>
          <target state="translated">一个将由 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 使用的 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 创建一个 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> enables more efficient XPath expression processing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 可以使 XPath 表达式的处理变得更高效。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> that can process XPath queries.</source>
          <target state="translated">一个可以处理 XPath 查询的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>You cannot edit the XML tree using the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> that is returned by this method.</source>
          <target state="translated">无法编辑 XML 树使用<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>此方法返回。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.CanEdit%2A&gt;</ph> property returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.CanEdit%2A&gt;</ph> 属性返回 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>You cannot create an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> for a <ph id="ph2">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> node.</source>
          <target state="translated">无法创建<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>为<ph id="ph2">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>节点。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>Document types do not participate in the XPath data model.</source>
          <target state="translated">在 XPath 数据模型未参与文档类型。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>Namespace declarations are reported from left to right.</source>
          <target state="translated">从左到右报告 Namespace 声明。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>In contrast, for <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> namespaces are reported from right to left.</source>
          <target state="translated">相反，对于<ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>命名空间报告从右到左。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>This is conformant behavior because namespace declarations are not ordered in the XPath data model.</source>
          <target state="translated">这是一致的行为，因为命名空间声明在 XPath 数据模型中不按顺序排列。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>The method <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.MoveToId%2A&gt;</ph> is not supported for navigators that are returned by this method.</source>
          <target state="translated">该方法<ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.MoveToId%2A&gt;</ph>不支持此方法返回的导航器。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>If you use an <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph> with this method to create the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>, you will get better performance when evaluating XPath expressions.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph>使用此方法以创建<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>，计算 XPath 表达式时，将获得更好的性能。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Xml.XPath.Extensions">
          <source>Evaluates an XPath expression.</source>
          <target state="translated">计算 XPath 表达式。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</source>
          <target state="translated">尽管 XML XPath 语言 1.0 建议中未指定返回的集合的顺序，但此扩展方法按文档顺序返回节点。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Note that nodes are returned in document order even when you use a reverse axis, such as <ph id="ph1">`preceding-sibling`</ph> or <ph id="ph2">`ancestor-or-self`</ph>.</source>
          <target state="translated">请注意，即使你使用反向轴，例如，节点将按文档顺序返回<ph id="ph1">`preceding-sibling`</ph>或<ph id="ph2">`ancestor-or-self`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，XPath 表达式将在其上计算。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">一个包含 XPath 表达式的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>Evaluates an XPath expression.</source>
          <target state="translated">计算 XPath 表达式。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>An object that can contain a <ph id="ph1">&lt;see langword="bool" /&gt;</ph>, a <ph id="ph2">&lt;see langword="double" /&gt;</ph>, a <ph id="ph3">&lt;see langword="string" /&gt;</ph>, or an <ph id="ph4">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">一个可以包含 <ph id="ph1">&lt;see langword="bool" /&gt;</ph>、<ph id="ph2">&lt;see langword="double" /&gt;</ph>、<ph id="ph3">&lt;see langword="string" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>If the collection is an enumeration of elements or attributes, you can use the <ph id="ph1">`Cast`</ph> operator to get a collection of <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.</source>
          <target state="translated">如果集合是元素或属性的一个枚举，则可以使用<ph id="ph1">`Cast`</ph>运算符来获取的集合<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>或<ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</source>
          <target state="translated">尽管 XML XPath 语言 1.0 建议中未指定返回的集合的顺序，但此扩展方法按文档顺序返回节点。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>Note that nodes are returned in document order even when you use a reverse axis, such as <ph id="ph1">`preceding-sibling`</ph> or <ph id="ph2">`ancestor-or-self`</ph>.</source>
          <target state="translated">请注意，即使你使用反向轴，例如，节点将按文档顺序返回<ph id="ph1">`preceding-sibling`</ph>或<ph id="ph2">`ancestor-or-self`</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>The following example creates a small XML tree with an attribute, then uses the <ph id="ph1">&lt;xref:System.Xml.XPath.Extensions.XPathEvaluate%2A&gt;</ph> method to retrieve the attribute.</source>
          <target state="translated">下面的示例创建一个小型 XML 树具有一个属性，然后使用<ph id="ph1">&lt;xref:System.Xml.XPath.Extensions.XPathEvaluate%2A&gt;</ph>方法来检索该属性。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，XPath 表达式将在其上计算。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">一个包含 XPath 表达式的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">一个用于解析 XPath 表达式中命名空间前缀的 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Evaluates an XPath expression, resolving namespace prefixes using the specified <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">计算 XPath 表达式，使用指定的 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 解析命名空间前缀。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>An object that contains the result of evaluating the expression.</source>
          <target state="translated">一个包含表达式计算结果的对象。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The object can be a <ph id="ph1">&lt;see langword="bool" /&gt;</ph>, a <ph id="ph2">&lt;see langword="double" /&gt;</ph>, a <ph id="ph3">&lt;see langword="string" /&gt;</ph>, or an <ph id="ph4">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated">该对象可以为 <ph id="ph1">&lt;see langword="bool" /&gt;</ph>、<ph id="ph2">&lt;see langword="double" /&gt;</ph>、<ph id="ph3">&lt;see langword="string" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>You can use this method to evaluate XPath expressions that contain namespace prefixes.</source>
          <target state="translated">此方法可用于计算 XPath 表达式包含命名空间前缀。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</source>
          <target state="translated">尽管 XML XPath 语言 1.0 建议中未指定返回的集合的顺序，但此扩展方法按文档顺序返回节点。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Note that nodes are returned in document order even when you use a reverse axis, such as <ph id="ph1">`preceding-sibling`</ph> or <ph id="ph2">`ancestor-or-self`</ph>.</source>
          <target state="translated">请注意，即使你使用反向轴，例如，节点将按文档顺序返回<ph id="ph1">`preceding-sibling`</ph>或<ph id="ph2">`ancestor-or-self`</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The following example creates an XML tree that contains a namespace.</source>
          <target state="translated">下面的示例创建包含命名空间的 XML 树。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It uses an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to read the XML document.</source>
          <target state="translated">它使用 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 来读取 XML 文档。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It then gets an <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph> from the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, and an <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> from the <ph id="ph4">&lt;xref:System.Xml.XmlNameTable&gt;</ph>.</source>
          <target state="translated">然后获取 <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph> 中的 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 中的 <ph id="ph4">&lt;xref:System.Xml.XmlNameTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> when selecting an element.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>选择某个元素时。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="T:System.Xml.XPath.Extensions">
          <source>Selects an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> using a XPath expression.</source>
          <target state="translated">使用 XPath 表达式选择 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，XPath 表达式将在其上计算。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">一个包含 XPath 表达式的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>Selects an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> using a XPath expression.</source>
          <target state="translated">使用 XPath 表达式选择 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, or null.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，或者 null。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>The following example creates a small XML tree and uses <ph id="ph1">&lt;xref:System.Xml.XPath.Extensions.XPathSelectElement%2A&gt;</ph> to select a single element.</source>
          <target state="translated">下面的示例创建一个小型 XML 树，并使用<ph id="ph1">&lt;xref:System.Xml.XPath.Extensions.XPathSelectElement%2A&gt;</ph>选择单个元素。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，XPath 表达式将在其上计算。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">一个包含 XPath 表达式的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">一个用于解析 XPath 表达式中命名空间前缀的 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Selects an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> using a XPath expression, resolving namespace prefixes using the specified <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">使用 XPath 表达式选择 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，并使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 解析命名空间前缀。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, or null.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，或者 null。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>You can use this method to evaluate XPath expressions that contain namespace prefixes.</source>
          <target state="translated">此方法可用于计算 XPath 表达式包含命名空间前缀。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The following example creates an XML tree that contains a namespace.</source>
          <target state="translated">下面的示例创建包含命名空间的 XML 树。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It uses an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to read the XML document.</source>
          <target state="translated">它使用 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 来读取 XML 文档。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It then gets an <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph> from the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, and an <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> from the <ph id="ph4">&lt;xref:System.Xml.XmlNameTable&gt;</ph>.</source>
          <target state="translated">然后获取 <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph> 中的 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 中的 <ph id="ph4">&lt;xref:System.Xml.XmlNameTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> when selecting an element.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>选择某个元素时。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="T:System.Xml.XPath.Extensions">
          <source>Selects a collection of elements using an XPath expression.</source>
          <target state="translated">使用 XPath 表达式选择一个元素集合。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</source>
          <target state="translated">尽管 XML XPath 语言 1.0 建议中未指定返回的集合的顺序，但此扩展方法按文档顺序返回节点。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XPath.Extensions">
          <source>Note that nodes are returned in document order even when you use a reverse axis, such as <ph id="ph1">`preceding-sibling`</ph> or <ph id="ph2">`ancestor-or-self`</ph>.</source>
          <target state="translated">请注意，即使你使用反向轴，例如，节点将按文档顺序返回<ph id="ph1">`preceding-sibling`</ph>或<ph id="ph2">`ancestor-or-self`</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，XPath 表达式将在其上计算。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">一个包含 XPath 表达式的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>Selects a collection of elements using an XPath expression.</source>
          <target state="translated">使用 XPath 表达式选择一个元素集合。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the selected elements.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，它包含选定元素。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</source>
          <target state="translated">尽管 XML XPath 语言 1.0 建议中未指定返回的集合的顺序，但此扩展方法按文档顺序返回节点。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>Note that nodes are returned in document order even when you use a reverse axis, such as <ph id="ph1">`preceding-sibling`</ph> or <ph id="ph2">`ancestor-or-self`</ph>.</source>
          <target state="translated">请注意，即使你使用反向轴，例如，节点将按文档顺序返回<ph id="ph1">`preceding-sibling`</ph>或<ph id="ph2">`ancestor-or-self`</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>The following example creates a small XML tree and uses <ph id="ph1">&lt;xref:System.Xml.XPath.Extensions.XPathSelectElements%2A&gt;</ph> to select a set of elements.</source>
          <target state="translated">下面的示例创建一个小型 XML 树，并使用 <ph id="ph1">&lt;xref:System.Xml.XPath.Extensions.XPathSelectElements%2A&gt;</ph> 选择一组元素。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>，XPath 表达式将在其上计算。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">一个包含 XPath 表达式的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">一个用于解析 XPath 表达式中命名空间前缀的 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">使用 XPath 表达式选择一个元素集合，并使用指定的 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 解析命名空间前缀。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the selected elements.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>，它包含选定元素。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>You can use this method to evaluate XPath expressions that contain namespace prefixes.</source>
          <target state="translated">此方法可用于计算 XPath 表达式包含命名空间前缀。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</source>
          <target state="translated">尽管 XML XPath 语言 1.0 建议中未指定返回的集合的顺序，但此扩展方法按文档顺序返回节点。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Note that nodes are returned in document order even when you use a reverse axis, such as <ph id="ph1">`preceding-sibling`</ph> or <ph id="ph2">`ancestor-or-self`</ph>.</source>
          <target state="translated">请注意，即使你使用反向轴，例如，节点将按文档顺序返回<ph id="ph1">`preceding-sibling`</ph>或<ph id="ph2">`ancestor-or-self`</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>This example creates an XML tree that contains a namespace.</source>
          <target state="translated">此示例创建包含命名空间的 XML 树。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It uses an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to read the XML document.</source>
          <target state="translated">它使用 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 来读取 XML 文档。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It then gets an <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph> from the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, and an <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> from the <ph id="ph4">&lt;xref:System.Xml.XmlNameTable&gt;</ph>.</source>
          <target state="translated">然后获取 <ph id="ph1">&lt;xref:System.Xml.XmlNameTable&gt;</ph> 中的 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 和 <ph id="ph3">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 中的 <ph id="ph4">&lt;xref:System.Xml.XmlNameTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> when selecting the list of elements.</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>时选择的元素的列表。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>