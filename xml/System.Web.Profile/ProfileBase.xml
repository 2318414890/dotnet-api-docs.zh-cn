<Type Name="ProfileBase" FullName="System.Web.Profile.ProfileBase">
  <TypeSignature Language="C#" Value="public class ProfileBase : System.Configuration.SettingsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileBase extends System.Configuration.SettingsBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileBase&#xA;Inherits SettingsBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileBase : System::Configuration::SettingsBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0eb7d-101">提供对配置文件属性值和信息的非类型化访问。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-101">Provides untyped access to profile property values and information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-102">ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件使用的类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-102">ASP.NET uses the <xref:System.Web.Profile.ProfileBase> class to create the class used for the user profile.</span></span> <span data-ttu-id="0eb7d-103">ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，它继承自<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-103">When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class.</span></span> <span data-ttu-id="0eb7d-104">强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-104">Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section.</span></span> <span data-ttu-id="0eb7d-105">强类型化访问器`ProfileCommon`类调用<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>和<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法<xref:System.Web.Profile.ProfileBase>基类，以检索并分别将配置文件设置属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-105">The strongly typed accessors of the `ProfileCommon` class call the <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> and <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> methods of the <xref:System.Web.Profile.ProfileBase> base class to retrieve and set profile property values, respectively.</span></span> <span data-ttu-id="0eb7d-106">实例`ProfileCommon`类设置的值为<xref:System.Web.HttpContext.Profile%2A>ASP.NET 应用程序的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-106">An instance of the `ProfileCommon` class is set as the value of the <xref:System.Web.HttpContext.Profile%2A> property for the ASP.NET application.</span></span>  
  
 <span data-ttu-id="0eb7d-107">若要创建 ASP.NET 应用程序中的用户配置文件的实例，建议你使用<xref:System.Web.Profile.ProfileBase.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-107">To create an instance of a user profile in an ASP.NET application, it is recommended that you use the <xref:System.Web.Profile.ProfileBase.Create%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-108">下面的代码示例演示指定包含的用户配置文件的 Web.config 文件`ZipCode`类型的属性`string`和`RecentSearchList`类型的属性<xref:System.Collections.Specialized.StringCollection>。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-108">The following code example shows a Web.config file that specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>.</span></span> <span data-ttu-id="0eb7d-109">生成<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>将具有强类型化访问器为每个指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-109">The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.</span></span>  
  
```  
<configuration>  
  <system.web>  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="SqlProvider" >  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="RecentSearchList"  
          type="System.Collections.Specialized.StringCollection"  
          serializeAs="Xml"  
          allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="0eb7d-110">下面的代码示例演示的 ASP.NET 页，读取并将设置`ZipCode`为用户配置文件指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-110">The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile.</span></span> <span data-ttu-id="0eb7d-111">然后再尝试运行此代码，将提供程序设置默认值为`AspNetSqlProvider`中网站的 ASP.NET 配置设置。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-111">Before attempting to run this code, set the provider to the default `AspNetSqlProvider` in the ASP.NET configuration settings for the Web site.</span></span>  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 <span data-ttu-id="0eb7d-112">下面的代码示例定义继承自的类<xref:System.Web.Profile.ProfileBase>类创建自定义配置文件。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-112">The following code example defines a class that inherits from the <xref:System.Web.Profile.ProfileBase> class to create a custom profile.</span></span> <span data-ttu-id="0eb7d-113">自定义配置文件的类型中指定`inherits`的应用程序的 Web.config 文件中的配置元素的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-113">The type of the custom profile is specified in the `inherits` attribute of the  configuration element in the Web.config file for an application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0eb7d-114">此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-114">This example contains a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0eb7d-115">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0eb7d-116">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-116">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="0eb7d-117">你可以创建继承自的自定义配置文件实现<see cref="T:System.Web.Profile.ProfileBase" />抽象类，并定义用户配置文件未指定配置元素中的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-117">You can create a custom profile implementation that inherits from the <see cref="T:System.Web.Profile.ProfileBase" /> abstract class and defines properties for the user profile that are not specified in the  configuration element.</span></span> <span data-ttu-id="0eb7d-118">你可以在 Web.config 文件中指定自定义用户配置文件类型<see langword="inherits" />配置元素，如下面的示例中所示的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-118">You can specify a custom user-profile type in the Web.config file with the <see langword="inherits" /> attribute of the  configuration element, as shown in the following example.</span></span> <span data-ttu-id="0eb7d-119">代码<c>EmployeeProfile</c>类包括在本主题的示例部分中。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-119">The code for the <c>EmployeeProfile</c> class is included in the Example section of this topic.</span></span>  
  
```  
&lt;profile inherits="Samples.AspNet.Profile.EmployeeProfile"  
  defaultProvider="SqlProvider"&gt;  
  &lt;providers&gt;  
    &lt;clear /&gt;  
    &lt;add  
      name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"   
      connectionStringName="SqlServices"   
      description="SQL Profile Provider for Sample"/&gt;   
    &lt;add  
      name="EmployeeInfoProvider"  
      type="System.Web.Profile.SqlProfileProvider"   
      connectionStringName="SqlServices"   
      description="SQL Profile Provider for Employee Info"/&gt;   
  &lt;/providers&gt;  
  
  &lt;properties&gt;  
    &lt;add name="GarmentSize" /&gt;  
  &lt;/properties&gt;  
&lt;/profile&gt;  
```</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eb7d-120">创建 <see cref="T:System.Web.Profile.ProfileBase" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-120">Creates an instance of the <see cref="T:System.Web.Profile.ProfileBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-121">ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件使用的类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-121">ASP.NET uses the <xref:System.Web.Profile.ProfileBase> class to create the class used for the user profile.</span></span> <span data-ttu-id="0eb7d-122">ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，它继承自<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-122">When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class.</span></span> <span data-ttu-id="0eb7d-123">强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-123">Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section.</span></span> <span data-ttu-id="0eb7d-124">强类型化访问器`ProfileCommon`类调用<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>和<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法<xref:System.Web.Profile.ProfileBase>基类，以检索并分别将配置文件设置属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-124">The strongly typed accessors of the `ProfileCommon` class call the <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> and <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> methods of the <xref:System.Web.Profile.ProfileBase> base class to retrieve and set profile property values, respectively.</span></span> <span data-ttu-id="0eb7d-125">实例`ProfileCommon`类设置的值为<xref:System.Web.HttpContext.Profile%2A>ASP.NET 应用程序的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-125">An instance of the `ProfileCommon` class is set as the value of the <xref:System.Web.HttpContext.Profile%2A> property for the ASP.NET application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0eb7d-126">用于生成存储中的类的基类<xref:System.Web.HttpContext.Profile%2A>可以使用重写属性`inherits`节的配置文件的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-126">The base class used to generate the class stored in the <xref:System.Web.HttpContext.Profile%2A> property can be overridden using the `inherits` attribute of the  section of the configuration file.</span></span> <span data-ttu-id="0eb7d-127">在这种情况下将指定的自定义类继承自<xref:System.Web.Profile.ProfileBase>基类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-127">In this case you would specify a custom class that inherits from the <xref:System.Web.Profile.ProfileBase> base class.</span></span>  
  
 <span data-ttu-id="0eb7d-128">此构造函数不是应用程序代码中使用。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-128">This constructor is not intended to be used from application code.</span></span> <span data-ttu-id="0eb7d-129">若要创建的用户配置文件的实例，使用<xref:System.Web.Profile.ProfileBase.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-129">To create an instance of a user profile, use the <xref:System.Web.Profile.ProfileBase.Create%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-130">下面的 Web.config 文件指定用户配置文件包含`ZipCode`类型的属性`string`和`RecentSearchList`类型的属性<xref:System.Collections.Specialized.StringCollection>。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-130">The following Web.config file specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>.</span></span> <span data-ttu-id="0eb7d-131">生成<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>将具有强类型化访问器为每个指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-131">The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.</span></span>  
  
```  
<configuration>  
   <connectionStrings>  
       <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
   </connectionStrings>  
  
  <system.web>  
   <anonymousIdentification enabled="true" />  
  
   <profile defaultProvider="SqlProvider" >  
     <providers>  
       <add  
         name="SqlProvider"  
         connectionStringName="SqlServices"  
         applicationName="ProfileBaseApplication"  
         type="System.Web.Profile.SqlProfileProvider" />  
     </providers>  
  
     <properties>  
       <add name="ZipCode" allowAnonymous="true" />  
       <add name="RecentSearchList"  
            type="System.Collections.Specialized.StringCollection"  
            serializeAs="Xml"  
            allowAnonymous="true" />  
      </properties>  
    </profile>  
   </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="0eb7d-132">下面的 ASP.NET 页读取并设置`ZipCode`为用户配置文件指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-132">The following ASP.NET page reads and sets the `ZipCode` property specified for the user profile.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0eb7d-133">此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-133">This example contains a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0eb7d-134">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-134">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0eb7d-135">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-135">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><span data-ttu-id="0eb7d-136">Web.config 文件的节中的 <see langword="enabled" /> 特性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-136">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="0eb7d-137">未能创建在 Web.config 文件的节中指定的属性类型。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-137">A property type specified in the  section of the Web.config file could not be created.</span></span>  
  
 <span data-ttu-id="0eb7d-138">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-138">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-139">将 Web.config 文件的节中某个属性的 <see langword="allowAnonymous" /> 特性设置为 <see langword="true" />，并将元素的 <see langword="enabled" /> 特性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-139">The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0eb7d-140">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-140">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-141">将 Web.config 文件节中某个属性的 <see langword="serializeAs" /> 特性设置为 <see cref="F:System.Configuration.SettingsSerializeAs.Binary" />，指定的 <see langword="type" /> 的 <see cref="P:System.Type.IsSerializable" /> 属性将返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-141">The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0eb7d-142">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-142">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-143">未能在 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 集合中找到使用配置文件属性的 <see langword="provider" /> 特性指定的提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-143">The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.</span></span>  
  
 <span data-ttu-id="0eb7d-144">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-144">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-145">未能找到为配置文件属性指定的 <see langword="type" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-145">The <see langword="type" /> specified for a profile property could not be found.</span></span>  
  
 <span data-ttu-id="0eb7d-146">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-146">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-147">使用与基类中的属性名称匹配的名称指定配置文件属性，基类在节的 <see langword="inherits" /> 特性中指定。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-147">A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eb7d-148">创建用户配置文件的实例。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-148">Creates an instance of a user profile.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username"><span data-ttu-id="0eb7d-149">要为其创建配置文件的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-149">The name of the user to create a profile for.</span></span></param>
        <summary><span data-ttu-id="0eb7d-150">ASP.NET 使用它为指定的用户名创建配置文件的一个实例。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-150">Used by ASP.NET to create an instance of a profile for the specified user name.</span></span></summary>
        <returns><span data-ttu-id="0eb7d-151">表示指定用户的配置文件的 <see cref="T:System.Web.Profile.ProfileBase" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-151">An <see cref="T:System.Web.Profile.ProfileBase" /> that represents the profile for the specified user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-152"><xref:System.Web.Profile.ProfileBase.Create%2A>方法创建和初始化新的配置文件实例，并可用于使用自定义配置文件的应用程序对象，或管理在非 ASP.NET 环境中的用户配置文件。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-152">The <xref:System.Web.Profile.ProfileBase.Create%2A> method creates and initializes a new profile instance and is useful for applications that use a custom profile object or manage user profiles in a non-ASP.NET environment.</span></span>  
  
 <span data-ttu-id="0eb7d-153">此重载<xref:System.Web.Profile.ProfileBase.Create%2A>方法假定指定的用户名称是已验证的用户。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-153">This overload of the <xref:System.Web.Profile.ProfileBase.Create%2A> method assumes that the specified user name is an authenticated user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-154">下面的代码示例创建自定义配置文件对象的实例，设置一个属性，并将该配置文件保存到数据源。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-154">The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.</span></span>  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><span data-ttu-id="0eb7d-155">Web.config 文件的节中的 <see langword="enabled" /> 特性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-155">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="0eb7d-156">当前承载权限级别低于 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-156">The current hosting permission level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</span></span></exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="0eb7d-157">未能创建在 Web.config 文件的节中指定的属性类型。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-157">A property type specified in the  section of the Web.config file could not be created.</span></span>  
  
 <span data-ttu-id="0eb7d-158">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-158">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-159">将 Web.config 文件的节中某个属性的 <see langword="allowAnonymous" /> 特性设置为 <see langword="true" />，并将元素的 <see langword="enabled" /> 特性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-159">The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0eb7d-160">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-160">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-161">将 Web.config 文件节中某个属性的 <see langword="serializeAs" /> 特性设置为 <see cref="F:System.Configuration.SettingsSerializeAs.Binary" />，指定的 <see langword="type" /> 的 <see cref="P:System.Type.IsSerializable" /> 属性将返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-161">The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0eb7d-162">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-162">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-163">未能在 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 集合中找到使用配置文件属性的 <see langword="provider" /> 特性指定的提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-163">The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.</span></span>  
  
 <span data-ttu-id="0eb7d-164">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-164">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-165">未能找到为配置文件属性指定的 <see langword="type" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-165">The <see langword="type" /> specified for a profile property could not be found.</span></span>  
  
 <span data-ttu-id="0eb7d-166">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-166">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-167">使用与基类中的属性名称匹配的名称指定配置文件属性，基类在节的 <see langword="inherits" /> 特性中指定。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-167">A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String, isAuthenticated As Boolean) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username, bool isAuthenticated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username"><span data-ttu-id="0eb7d-168">要为其创建配置文件的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-168">The name of the user to create a profile for.</span></span></param>
        <param name="isAuthenticated">
          <span data-ttu-id="0eb7d-169"><see langword="true" /> 指示用户是经过身份验证的用户；<see langword="false" /> 指示用户是匿名用户。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-169"><see langword="true" /> to indicate the user is authenticated; <see langword="false" /> to indicate the user is anonymous.</span></span></param>
        <summary><span data-ttu-id="0eb7d-170">ASP.NET 使用它为指定的用户名创建配置文件的一个实例。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-170">Used by ASP.NET to create an instance of a profile for the specified user name.</span></span> <span data-ttu-id="0eb7d-171">带有一个参数，用来指示用户是经过身份验证的用户还是匿名用户。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-171">Takes a parameter indicating whether the user is authenticated or anonymous.</span></span></summary>
        <returns><span data-ttu-id="0eb7d-172">表示指定用户的配置文件的 <see cref="T:System.Web.Profile.ProfileBase" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-172">A <see cref="T:System.Web.Profile.ProfileBase" /> object that represents the profile for the specified user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-173"><xref:System.Web.Profile.ProfileBase.Create%2A>方法创建和初始化新的配置文件实例，并可用于使用自定义配置文件的应用程序对象，或管理在非 ASP.NET 环境中的用户配置文件。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-173">The <xref:System.Web.Profile.ProfileBase.Create%2A> method creates and initializes a new profile instance and is useful for applications that use a custom profile object or manage user profiles in a non-ASP.NET environment.</span></span>  
  
 <span data-ttu-id="0eb7d-174">此重载<xref:System.Web.Profile.ProfileBase.Create%2A>方法可以用于创建某个已经过身份验证的用户或匿名用户的配置文件。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-174">This overload of the <xref:System.Web.Profile.ProfileBase.Create%2A> method can be used to create a profile for an authenticated user or an anonymous user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-175">下面的代码示例创建自定义配置文件对象的实例，设置一个属性，并将该配置文件保存到数据源。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-175">The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.</span></span>  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#2)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><span data-ttu-id="0eb7d-176">Web.config 文件的节中的 <see langword="enabled" /> 特性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-176">The <see langword="enabled" /> attribute of the  section of the Web.config file is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="0eb7d-177">当前承载权限级别低于 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-177">The current hosting permission level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</span></span></exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="0eb7d-178">未能创建在 Web.config 文件的节中指定的属性类型。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-178">A property type specified in the  section of the Web.config file could not be created.</span></span>  
  
 <span data-ttu-id="0eb7d-179">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-179">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-180">将 Web.config 文件的节中某个属性的 <see langword="allowAnonymous" /> 特性设置为 <see langword="true" />，并将元素的 <see langword="enabled" /> 特性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-180">The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0eb7d-181">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-181">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-182">将 Web.config 文件节中某个属性的 <see langword="serializeAs" /> 特性设置为 <see cref="F:System.Configuration.SettingsSerializeAs.Binary" />，指定的 <see langword="type" /> 的 <see cref="P:System.Type.IsSerializable" /> 属性将返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-182">The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0eb7d-183">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-183">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-184">未能在 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 集合中找到使用配置文件属性的 <see langword="provider" /> 特性指定的提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-184">The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.</span></span>  
  
 <span data-ttu-id="0eb7d-185">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-185">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-186">未能找到为配置文件属性指定的 <see langword="type" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-186">The <see langword="type" /> specified for a profile property could not be found.</span></span>  
  
 <span data-ttu-id="0eb7d-187">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-187">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-188">使用与基类中的属性名称匹配的名称指定配置文件属性，基类在节的 <see langword="inherits" /> 特性中指定。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-188">A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfileGroup">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProfileGroup (groupName As String) As ProfileGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Profile::ProfileGroupBase ^ GetProfileGroup(System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileGroupBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName"><span data-ttu-id="0eb7d-189">属性组的名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-189">The name of the group of properties.</span></span></param>
        <summary><span data-ttu-id="0eb7d-190">获取按组名标识的属性组。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-190">Gets a group of properties identified by a group name.</span></span></summary>
        <returns><span data-ttu-id="0eb7d-191">利用指定组名进行配置的属性组的 <see cref="T:System.Web.Profile.ProfileGroupBase" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-191">A <see cref="T:System.Web.Profile.ProfileGroupBase" /> object for a group of properties configured with the specified group name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-192">配置文件属性可以分为组，以便更好地组织。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-192">Profile properties can be separated into groups for better organization.</span></span> <span data-ttu-id="0eb7d-193"><xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A>属性可以用于检索一组属性按组名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-193">The <xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A> property can be used to retrieve a group of properties by the group name.</span></span> <span data-ttu-id="0eb7d-194">此外可以通过指定组名称作为的成员访问组中的配置文件属性`Profile`每页上提供的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-194">You can also access a profile property in a group by specifying the group name as a member of the `Profile` property available on each page.</span></span> <span data-ttu-id="0eb7d-195">例如，`ZipCode`配置文件是的成员的属性`Address`无法使用访问配置文件组`Profile.Address.ZipCode`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-195">For example, the `ZipCode` profile property that is a member of the `Address` profile group could be accessed using `Profile.Address.ZipCode`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-196">下面的 Web.config 文件指定包含具有的组名称的属性组的用户配置文件`Address`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-196">The following Web.config file specifies a user profile that contains group of properties with a group name of `Address`.</span></span> <span data-ttu-id="0eb7d-197">为生成的分组的属性<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>将前面是组名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-197">The grouped properties generated for the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will be preceded by the group name.</span></span> <span data-ttu-id="0eb7d-198">例如 `Profile.Address.Street`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-198">For example, `Profile.Address.Street`.</span></span>  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
    </authorization>  
  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear />  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"   
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          applicationName="MyApplication" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <add  
          name="SqlProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          type="System.Web.Profile.SqlProfileProvider" />  
  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <group name="Address">  
          <add name="Street" />  
          <add name="City" />  
          <add name="State" />  
          <add name="CountryOrRegion" />  
        </group>  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="0eb7d-199">下面的 ASP.NET 页读取，并设置为用户配置文件指定的分组的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-199">The following ASP.NET page reads and sets the grouped properties specified for the user profile.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0eb7d-200">此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-200">This example contains a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0eb7d-201">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-201">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0eb7d-202">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-202">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><span data-ttu-id="0eb7d-203">未在配置节中找到指定的配置文件属性组名。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-203">The specified profile property group name was not found in the  configuration section.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="0eb7d-204">配置文件属性的名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-204">The name of the profile property.</span></span></param>
        <summary><span data-ttu-id="0eb7d-205">获取配置文件属性的值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-205">Gets the value of a profile property.</span></span></summary>
        <returns><span data-ttu-id="0eb7d-206">指定的配置文件属性的值，类型化为 <see langword="object" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-206">The value of the specified profile property, typed as <see langword="object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-207">ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件使用的类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-207">ASP.NET uses the <xref:System.Web.Profile.ProfileBase> class to create the class used for the user profile.</span></span> <span data-ttu-id="0eb7d-208">ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，它继承自<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-208">When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class.</span></span> <span data-ttu-id="0eb7d-209">强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-209">Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section.</span></span> <span data-ttu-id="0eb7d-210">强类型化访问器`ProfileCommon`类调用<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>方法来检索从非类型化的值<xref:System.Web.Profile.ProfileProvider>，生成的访问器，然后强制转换为指定类型和返回作为属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-210">The strongly typed accessors of the `ProfileCommon` class call the <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> method to retrieve untyped values from the <xref:System.Web.Profile.ProfileProvider> that the generated accessor then casts as the specified type and returns as the property value.</span></span>  
  
 <span data-ttu-id="0eb7d-211">你可以使用<xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>方法来按名称检索你的应用程序的用户配置文件的属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-211">You can use the <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> method to retrieve property values of the user profile for your application by name.</span></span> <span data-ttu-id="0eb7d-212">返回的值都是非类型化，并且必须强制转换为检索时的特定对象类型。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-212">Returned values are untyped and must be cast as the specific object type when retrieved.</span></span> <span data-ttu-id="0eb7d-213">对于配置文件属性值的强类型访问，你可以属性按名称访问为每一页上提供的配置文件属性的成员等`Profile.CustomerAddress`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-213">For strongly typed access to profile property values, you can access the property by name as a member of the Profile property available on each page, for example, `Profile.CustomerAddress`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-214">下面的代码示例演示的 ASP.NET 页，读取并将设置`ZipCode`为用户配置文件指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-214">The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile.</span></span> <span data-ttu-id="0eb7d-215">指定用户配置文件的属性的 Web.config 文件的示例，请参阅提供的示例<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-215">For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0eb7d-216">此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-216">This example contains a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0eb7d-217">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-217">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0eb7d-218">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-218">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><span data-ttu-id="0eb7d-219">尝试为匿名配置文件中 <see langword="allowAnonymous" /> 特性为 <see langword="false" /> 的属性设置一个属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-219">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException"><span data-ttu-id="0eb7d-220">没有为当前配置文件定义的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-220">There are no properties defined for the current profile.</span></span>  
  
 <span data-ttu-id="0eb7d-221">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-221">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-222">当前配置文件中不存在指定的配置文件属性名。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-222">The specified profile property name does not exist in the current profile.</span></span>  
  
 <span data-ttu-id="0eb7d-223">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-223">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-224">指定的配置文件属性的提供程序不能识别所指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-224">The provider for the specified profile property did not recognize the specified property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (username As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::String ^ username, bool isAuthenticated);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username"><span data-ttu-id="0eb7d-225">要为其初始化配置文件的用户的名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-225">The name of the user to initialize the profile for.</span></span></param>
        <param name="isAuthenticated">
          <span data-ttu-id="0eb7d-226"><see langword="true" /> 指示用户是经过身份验证的用户；<see langword="false" /> 指示用户是匿名用户。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-226"><see langword="true" /> to indicate the user is authenticated; <see langword="false" /> to indicate the user is anonymous.</span></span></param>
        <summary><span data-ttu-id="0eb7d-227">初始化当前用户的配置文件属性值和信息。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-227">Initializes the profile property values and information for the current user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-228">此方法不适于在您的代码中使用。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-228">This method is not intended to be used from your code.</span></span> <span data-ttu-id="0eb7d-229">使用之一<xref:System.Web.Profile.ProfileBase.Create%2A>重载来创建用户配置文件的实例。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-229">Use one of the <xref:System.Web.Profile.ProfileBase.Create%2A> overloads to create an instance of the user profile.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eb7d-230">获取一个指示用户配置文件是否用于匿名用户的值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-230">Gets a value indicating whether the user profile is for an anonymous user.</span></span></summary>
        <value>
          <span data-ttu-id="0eb7d-231">如果用户配置文件是用于匿名用户，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-231"><see langword="true" /> if the user profile is for an anonymous user; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-232">使用配置部分启用匿名访问的用户配置文件和`allowAnonymous`用于指定配置文件属性的配置元素的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-232">Anonymous access to the user profile is enabled using the  configuration section and the `allowAnonymous` attribute of the  configuration element used to specify profile properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eb7d-233">获取一个值，该值表明是否修改了任何配置文件属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-233">Gets a value indicating whether any of the profile properties have been modified.</span></span></summary>
        <value>
          <span data-ttu-id="0eb7d-234">如果修改了任何配置文件属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-234"><see langword="true" /> if any of the profile properties have been modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-235"><xref:System.Web.Profile.ProfileBase.IsDirty%2A>在过程配置文件提供程序可以使用属性<xref:System.Configuration.SettingsBase.Save%2A>方法来确定属性是否组成基元类型、 字符串或<xref:System.DateTime>已更改对象。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-235">The <xref:System.Web.Profile.ProfileBase.IsDirty%2A> property can be used by a profile provider during the <xref:System.Configuration.SettingsBase.Save%2A> method to determine whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed.</span></span> <span data-ttu-id="0eb7d-236">更改的属性然后更新配置文件提供者在<xref:System.Configuration.SettingsBase.Save%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-236">Changed properties are then updated by the profile provider in the <xref:System.Configuration.SettingsBase.Save%2A> method.</span></span> <span data-ttu-id="0eb7d-237"><xref:System.Configuration.SettingsBase.Save%2A>自动在调用方法的末尾页执行如果<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性是 `true`</span><span class="sxs-lookup"><span data-stu-id="0eb7d-237">The <xref:System.Configuration.SettingsBase.Save%2A> method is automatically called at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is `true`</span></span>  
  
 <span data-ttu-id="0eb7d-238">在中调用的配置文件提供<xref:System.Configuration.SettingsBase.Save%2A>方法显式无法确定与自定义类类型或复杂类型，例如集合、 配置文件属性是否已更改。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-238">A profile provider called in the <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a profile property with a custom class type or a complex type, such as a collection, has changed.</span></span> <span data-ttu-id="0eb7d-239">你可以使用<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件可确定是否已修改的自定义对象，并可继续使用自动保存已修改的对象还是要取消自动保存，如果任何对象进行了不修改。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-239">You can use the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event to determine whether a custom object has been modified and to continue with the automatic save for modified objects or cancel the automatic save if no objects have been modified.</span></span> <span data-ttu-id="0eb7d-240">默认行为<xref:System.Web.Profile.ProfileBase>类是设置<xref:System.Web.Profile.ProfileBase.IsDirty%2A>属性`true`访问属性的自定义或复杂类型的第一次属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-240">The default behavior of the <xref:System.Web.Profile.ProfileBase> class is to set the <xref:System.Web.Profile.ProfileBase.IsDirty%2A> property to `true` for properties that are of a custom or complex type the first time the property is accessed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="0eb7d-241">配置文件属性的名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-241">The name of the profile property.</span></span></param>
        <summary><span data-ttu-id="0eb7d-242">获取或设置按属性名进行索引的配置文件属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-242">Gets or sets a profile property value indexed by the property name.</span></span></summary>
        <value><span data-ttu-id="0eb7d-243">指定的配置文件属性的值，类型化为 <see langword="object" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-243">The value of the specified profile property, typed as <see langword="object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-244">此属性可用于检索或按名称设置为你的应用程序的用户配置文件的属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-244">You can use this property to retrieve or set the property values of the user profile for your application by name.</span></span> <span data-ttu-id="0eb7d-245">返回的值被类型化为`object`并且必须强制转换为检索时的特定对象类型。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-245">Returned values are typed as `object` and must be cast as the specific object type when retrieved.</span></span> <span data-ttu-id="0eb7d-246">对于配置文件属性值的强类型访问，你可以访问属性按名称作为的成员`Profile`属性可在每个页面，例如， `Profile.CustomerAddress`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-246">For strongly typed access to profile property values, you can access the property by name as a member of the `Profile` property available on each page, for example, `Profile.CustomerAddress`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-247">下面的代码示例通过将绑定列出的用户配置文件中的属性名称<xref:System.Configuration.SettingsProperty.Name%2A>从静态属性<xref:System.Web.Profile.ProfileBase.Properties%2A>集合<xref:System.Configuration.SettingsProperty>对象添加到<xref:System.Web.UI.WebControls.GridView>控件。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-247">The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static <xref:System.Web.Profile.ProfileBase.Properties%2A> collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="0eb7d-248">所选的属性值通过名称使用<xref:System.Web.Profile.ProfileBase.Item%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-248">The selected property value is retrieved by name using the <xref:System.Web.Profile.ProfileBase.Item%2A> collection.</span></span> <span data-ttu-id="0eb7d-249">指定用户配置文件的属性的 Web.config 文件的示例，请参阅提供的示例<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-249">For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><span data-ttu-id="0eb7d-250">尝试为匿名配置文件中 <see langword="allowAnonymous" /> 特性为 <see langword="false" /> 的属性设置一个属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-250">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException"><span data-ttu-id="0eb7d-251">没有为当前配置文件定义的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-251">There are no properties defined for the current profile.</span></span>  
  
 <span data-ttu-id="0eb7d-252">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-252">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-253">当前配置文件中不存在指定的配置文件属性名。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-253">The specified profile property name does not exist in the current profile.</span></span>  
  
 <span data-ttu-id="0eb7d-254">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-254">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-255">指定的配置文件属性的提供程序不能识别所指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-255">The provider for the specified profile property did not recognize the specified property.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException"><span data-ttu-id="0eb7d-256">尝试设置标记为只读的属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-256">An attempt was made to set a property value that was marked as read-only.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException"><span data-ttu-id="0eb7d-257">尝试使用不兼容的类型给属性赋值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-257">An attempt was made to assign a value to a property using an incompatible type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastActivityDate">
      <MemberSignature Language="C#" Value="public DateTime LastActivityDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastActivityDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastActivityDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastActivityDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eb7d-258">获取最近一次读取或修改配置文件的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-258">Gets the most recent date and time that the profile was read or modified.</span></span></summary>
        <value><span data-ttu-id="0eb7d-259">默认提供程序最近一次读取或修改配置文件的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-259">The most recent date and time that the profile was read or modified by the default provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-260">此属性的值只能由默认配置文件提供程序进行修改。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-260">This property value is only modified by the default profile provider.</span></span> <span data-ttu-id="0eb7d-261">由提供程序不是默认配置文件提供程序对配置文件属性所做的更改不会影响的值<xref:System.Web.Profile.ProfileBase.LastActivityDate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-261">Changes made to profile properties by a provider other than the default profile provider do not affect the value of the <xref:System.Web.Profile.ProfileBase.LastActivityDate%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedDate">
      <MemberSignature Language="C#" Value="public DateTime LastUpdatedDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastUpdatedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastUpdatedDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eb7d-262">获取最近一次修改配置文件的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-262">Gets the most recent date and time that the profile was modified.</span></span></summary>
        <value><span data-ttu-id="0eb7d-263">默认提供程序最近一次修改配置文件的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-263">The most recent date and time that the profile was modified by the default provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-264">此属性的值只能由默认配置文件提供程序进行修改。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-264">This property value is only modified by the default profile provider.</span></span> <span data-ttu-id="0eb7d-265">由提供程序不是默认配置文件提供程序对配置文件属性所做的更改不会影响的值<xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-265">Changes made to profile properties by a provider other than the default profile provider do not affect the value of the <xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eb7d-266">获取配置文件中每个属性的 <see cref="T:System.Configuration.SettingsProperty" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-266">Gets a collection of <see cref="T:System.Configuration.SettingsProperty" /> objects for each property in the profile.</span></span></summary>
        <value><span data-ttu-id="0eb7d-267">应用程序配置文件中每个属性的 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 对象的 <see cref="T:System.Configuration.SettingsProperty" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-267">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> of <see cref="T:System.Configuration.SettingsProperty" /> objects for each property in the profile for the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-268">此属性可用于获取有关配置应用程序，包括属性名称和类型的配置文件属性的信息。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-268">You can use this property to get information about the profile properties configured for an application, including property names and types.</span></span> <span data-ttu-id="0eb7d-269">你还可以引用<xref:System.Web.Profile.ProfileProvider>每个属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-269">You can also reference the <xref:System.Web.Profile.ProfileProvider> of each property.</span></span> <span data-ttu-id="0eb7d-270">A<xref:System.Web.Profile.ProfileProvider>管理存储和检索的数据源的属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-270">A <xref:System.Web.Profile.ProfileProvider> manages storage and retrieval of property values to and from the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-271">下面的代码示例通过将绑定列出的用户配置文件中的属性名称<xref:System.Configuration.SettingsProperty.Name%2A>从静态属性<xref:System.Web.Profile.ProfileBase.Properties%2A>集合<xref:System.Configuration.SettingsProperty>对象添加到<xref:System.Web.UI.WebControls.GridView>控件。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-271">The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static <xref:System.Web.Profile.ProfileBase.Properties%2A> collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="0eb7d-272">所选的属性值通过名称使用<xref:System.Web.Profile.ProfileBase.Item%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-272">The selected property value is retrieved by name using the <xref:System.Web.Profile.ProfileBase.Item%2A> collection.</span></span> <span data-ttu-id="0eb7d-273">指定用户配置文件的属性的 Web.config 文件的示例，请参阅提供的示例<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-273">For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="0eb7d-274">未能创建在 Web.config 文件的节中指定的属性类型。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-274">A property type specified in the  section of the Web.config file could not be created.</span></span>  
  
 <span data-ttu-id="0eb7d-275">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-275">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-276">将 Web.config 文件的节中某个属性的 <see langword="allowAnonymous" /> 特性设置为 <see langword="true" />，并将元素的 <see langword="enabled" /> 特性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-276">The <see langword="allowAnonymous" /> attribute for a property in the  section of the Web.config file is set to <see langword="true" /> and the <see langword="enabled" /> attribute of the  element is set to <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0eb7d-277">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-277">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-278">将 Web.config 文件节中某个属性的 <see langword="serializeAs" /> 特性设置为 <see cref="F:System.Configuration.SettingsSerializeAs.Binary" />，指定的 <see langword="type" /> 的 <see cref="P:System.Type.IsSerializable" /> 属性将返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-278">The <see langword="serializeAs" /> attribute for a property in the  section of the Web.config file is set to <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> and the <see cref="P:System.Type.IsSerializable" /> property of the specified <see langword="type" /> returns <see langword="false" />.</span></span>  
  
 <span data-ttu-id="0eb7d-279">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-279">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-280">未能在 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 集合中找到使用配置文件属性的 <see langword="provider" /> 特性指定的提供程序名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-280">The name of a provider specified using the <see langword="provider" /> attribute of a profile property could not be found in the <see cref="P:System.Web.Profile.ProfileManager.Providers" /> collection.</span></span>  
  
 <span data-ttu-id="0eb7d-281">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-281">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-282">未能找到为配置文件属性指定的 <see langword="type" />。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-282">The <see langword="type" /> specified for a profile property could not be found.</span></span>  
  
 <span data-ttu-id="0eb7d-283">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-283">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-284">使用与基类中的属性名称匹配的名称指定配置文件属性，基类在节的 <see langword="inherits" /> 特性中指定。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-284">A profile property was specified with a name that matches a property name on the base class specified in the <see langword="inherits" /> attribute of the  section.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eb7d-285">用已更改的配置文件属性值更新配置文件数据源。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-285">Updates the profile data source with changed profile property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-286"><xref:System.Web.Profile.ProfileBase.Save%2A>方法将修改后的配置文件属性值写入到数据源。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-286">The <xref:System.Web.Profile.ProfileBase.Save%2A> method writes modified profile property values to the data source.</span></span> <span data-ttu-id="0eb7d-287">配置文件提供程序执行更新可减少的数据源中的活动数量时，才<xref:System.Web.Profile.ProfileBase.IsDirty%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-287">The profile provider can reduce the amount of activity at the data source by performing updates only when the <xref:System.Web.Profile.ProfileBase.IsDirty%2A> property is set to `true`.</span></span> <span data-ttu-id="0eb7d-288">这是默认值的大小写<xref:System.Web.Profile.SqlProfileProvider>。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-288">This is the case for the default <xref:System.Web.Profile.SqlProfileProvider>.</span></span> <span data-ttu-id="0eb7d-289">后<xref:System.Web.Profile.ProfileBase.Save%2A>方法已保存到数据源中的属性值<xref:System.Web.Profile.ProfileBase.IsDirty%2A>设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-289">After the <xref:System.Web.Profile.ProfileBase.Save%2A> method has saved the property values to the data source, <xref:System.Web.Profile.ProfileBase.IsDirty%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="0eb7d-290">你可以使用<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件实现自定义逻辑，用于确定是否已修改与自定义的类型或复杂类型的配置文件属性和继续自动保存已修改的对象或如果没有对象具有取消自动保存已修改。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-290">You can use the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event to implement custom logic that determines whether a profile property with a custom type or a complex type has been modified and continue with the automatic save for modified objects or cancel the automatic save if no objects have been modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="0eb7d-291">要设置的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-291">The name of the property to set.</span></span></param>
        <param name="propertyValue"><span data-ttu-id="0eb7d-292">要分配给属性的值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-292">The value to assign to the property.</span></span></param>
        <summary><span data-ttu-id="0eb7d-293">设置配置文件属性的值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-293">Sets the value of a profile property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-294">ASP.NET 使用<xref:System.Web.Profile.ProfileBase>类，以创建用户配置文件使用的类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-294">ASP.NET uses the <xref:System.Web.Profile.ProfileBase> class to create the class used for the user profile.</span></span> <span data-ttu-id="0eb7d-295">ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，它继承自<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-295">When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class.</span></span> <span data-ttu-id="0eb7d-296">强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-296">Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section.</span></span> <span data-ttu-id="0eb7d-297">强类型化访问器`ProfileCommon`类调用<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法可以传递属性值复制到<xref:System.Web.Profile.ProfileProvider>要存储在数据源。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-297">The strongly typed accessors of the `ProfileCommon` class call the <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> method to pass property values to the <xref:System.Web.Profile.ProfileProvider> to be stored at the data source.</span></span>  
  
 <span data-ttu-id="0eb7d-298">你可以使用<xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>方法来按名称指定你的应用程序的用户配置文件中的属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-298">You can use the <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> method to assign property values in the user profile for your application by name.</span></span> <span data-ttu-id="0eb7d-299">值为非类型化，并在运行时，不是编译时将执行类型检查。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-299">Values are untyped, and type checking will be done at run time, not compile time.</span></span> <span data-ttu-id="0eb7d-300">对于配置文件属性值的强类型访问，你可以访问属性按名称作为的成员`Profile`属性可在每一页上，例如， `Profile.CustomerAddress`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-300">For strongly typed access to profile property values, you can access the property by name as a member of the `Profile` property that is available on each page, for example, `Profile.CustomerAddress`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eb7d-301">下面的代码示例演示的 ASP.NET 页，读取并将设置`ZipCode`为用户配置文件指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-301">The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile.</span></span> <span data-ttu-id="0eb7d-302">指定用户配置文件的属性的 Web.config 文件的示例，请参阅提供的示例<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-302">For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0eb7d-303">此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-303">This example contains a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0eb7d-304">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-304">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0eb7d-305">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-305">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><span data-ttu-id="0eb7d-306">尝试为匿名配置文件中 <see langword="allowAnonymous" /> 特性为 <see langword="false" /> 的属性设置一个属性值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-306">An attempt was made to set a property value on an anonymous profile where the property's <see langword="allowAnonymous" /> attribute is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException"><span data-ttu-id="0eb7d-307">没有为当前配置文件定义的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-307">There are no properties defined for the current profile.</span></span>  
  
 <span data-ttu-id="0eb7d-308">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-308">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-309">当前配置文件中不存在指定的配置文件属性名。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-309">The specified profile property name does not exist in the current profile.</span></span>  
  
 <span data-ttu-id="0eb7d-310">或</span><span class="sxs-lookup"><span data-stu-id="0eb7d-310">-or-</span></span>  
  
 <span data-ttu-id="0eb7d-311">指定的配置文件属性的提供程序不能识别所指定的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-311">The provider for the specified profile property did not recognize the specified property.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException"><span data-ttu-id="0eb7d-312">尝试设置标记为只读的属性的值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-312">An attempt was made to set a value value on a property that was marked as read-only.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException"><span data-ttu-id="0eb7d-313">尝试使用不兼容的类型给属性赋值。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-313">An attempt was made to assign a value to a property using an incompatible type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eb7d-314">获取该配置文件的用户名。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-314">Gets the user name for the profile.</span></span></summary>
        <value><span data-ttu-id="0eb7d-315">配置文件的用户名，或分配给配置文件的匿名用户标识符。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-315">The user name for the profile or the anonymous-user identifier assigned to the profile.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eb7d-316"><xref:System.Web.Profile.ProfileBase.UserName%2A>属性返回的身份验证的用户配置文件关联的名称，或者如果分配到配置文件的匿名用户标识符<xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-316">The <xref:System.Web.Profile.ProfileBase.UserName%2A> property returns either the name of the authenticated user that the profile is associated with or the anonymous user identifier assigned to the profile if the <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="0eb7d-317">使用配置部分启用匿名访问的用户配置文件和`allowAnonymous`用于指定配置文件属性的配置元素的属性。</span><span class="sxs-lookup"><span data-stu-id="0eb7d-317">Anonymous access to the user profile is enabled using the  configuration section and the `allowAnonymous` attribute of the  configuration element used to specify profile properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>