<Type Name="ProfileManager" FullName="System.Web.Profile.ProfileManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d316e918242c38115920903b957e932e77d0a164" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ProfileManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理用户配置文件数据和设置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 配置文件用于存储和检索数据源，如数据库中的用户设置。 访问用户配置文件时使用的<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>。 使用配置文件提供程序管理配置文件信息和属性值。  
  
 <xref:System.Web.Profile.ProfileManager>类用于管理配置文件设置、 用户配置文件，搜索和删除不再使用的用户配置文件。 <xref:System.Web.Profile.ProfileManager>类提供静态方法和属性，可通过引用访问<xref:System.Web.Profile.ProfileManager>应用程序代码中的类。 有关示例，请参阅本主题中的示例部分和其他示例主题中的成员<xref:System.Web.Profile.ProfileManager>类。  
  
 默认情况下，所有 ASP.NET 应用程序禁用的用户配置文件。 若要启用的用户配置文件，设置`enabled`为 true，如下面的示例中所示的配置元素的属性。  
  
```  
<configuration>  
  <system.web>  
    <profile enabled="true" />  
  </system.web>  
</configuration>  
```  
  
 有关用户配置文件的详细信息，请参阅[ASP.NET 配置文件属性概述](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d)。  
  
 配置文件提供程序用于存储和检索用户配置文件中的属性。 .NET Framework 包括<xref:System.Web.Profile.SqlProfileProvider>为 SQL Server 数据库中存储用户配置文件属性的类。 A<xref:System.Web.Profile.SqlProfileProvider>实例名为`AspNetSqlProvider`作为默认配置文件提供程序的计算机配置中指定。 `AspNetSqlProvider`实例连接到本地的 Web 服务器上的 SQL Server 数据库。 你可以指定<xref:System.Web.Profile.SqlProfileProvider>，将连接到其他 SQL Server 作为默认配置文件提供程序使用的配置元素和`defaultProvider`配置元素，如下面的示例中所示的属性。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 下面的代码示例演示使用的 ASP.NET 页<xref:System.Web.Profile.ProfileManager>类来管理不活动配置文件。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDynamicProfileProperty">
      <MemberSignature Language="C#" Value="public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDynamicProfileProperty(class System.Web.Configuration.ProfilePropertySettings property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDynamicProfileProperty (property As ProfilePropertySettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDynamicProfileProperty(System::Web::Configuration::ProfilePropertySettings ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Web.Configuration.ProfilePropertySettings" />
      </Parameters>
      <Docs>
        <param name="property">要添加的属性设置。</param>
        <summary>以编程方式添加配置文件属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法在功能上等效于添加到属性`profile`配置文件节。 要调用此方法以添加配置文件属性，必须进行调用的方法将标有中<xref:System.Web.PreApplicationStartMethodAttribute>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要存储和检索其配置文件信息的应用程序的名称。</summary>
        <value>要存储和检索其配置文件信息的应用程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager>使用<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>与不同的应用程序相关联的个人资料信息属性。 这使多个应用程序能够使用相同的数据库来存储用户信息而不会遇到重复的用户之间的冲突。 多个 ASP.NET 应用程序可以通过指定相同的值中使用相同的用户数据库<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性。 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>可以以编程方式设置属性或可以在其进行设置以声明方式的 Web 应用程序的配置文件使用`applicationName`属性。  
  
 如果没有为指定值`applicationName`属性在 Web 应用的配置文件，则.NET Framework 附带的配置文件提供程序使用<xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>ASP.NET 应用程序的属性值。 对于非 ASP.NET 应用程序，默认值是<xref:System.Diagnostics.ProcessModule.ModuleName%2A>属性值，不含文件扩展名。  
  
 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性可公开<xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=nameWithType>的默认配置文件提供程序的属性。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，它们可能配置一个不同的应用程序名称。 若要访问配置文件提供者不是默认的提供程序的应用程序名称，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性和访问<xref:System.Configuration.SettingsProvider.ApplicationName%2A>直接的提供程序的属性。  
  
> [!CAUTION]
>  因为一个默认配置文件提供程序实例用于所有服务的请求<xref:System.Web.HttpApplication>对象，您可以有多个请求并发执行，并尝试设置<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性值。 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性不是线程安全的多个写操作，并不断变化<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性值可能会导致多个用户的应用程序的意外行为。 建议你避免编写代码，用户可设置<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性除非需要它。 应用程序的示例设置<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性可能需要是管理应用程序管理多个应用程序的配置文件数据。 此类应用程序应为单用户应用程序和不是 Web 应用程序。  
  
   
  
## Examples  
 下面的配置文件摘录 ASP.NET 应用程序的 Web.config 文件的部分中显示的元素。 它将应用程序的默认配置文件提供程序设置为<xref:System.Web.Profile.SqlProfileProvider>实例并设置<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>到`MyApplication`。  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
  <add name="SqlProvider"  
    type="System.Web.Profile.SqlProfileProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public static bool AutomaticSaveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutomaticSaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutomaticSaveEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否将在 ASP.NET 页执行结束时自动保存用户配置文件。</summary>
        <value>
          如果在 ASP.NET 页执行结束时自动保存用户配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性指示是否为应用程序启用的用户配置文件的自动保存。 如果启用了自动保存，<xref:System.Web.Profile.ProfileModule>对象引发<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件并调用<xref:System.Web.Profile.ProfileBase.Save%2A>方法期间<xref:System.Web.HttpApplication.EndRequest>末尾的 ASP.NET 页执行的事件。  
  
 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性使用设置`automaticSaveEnabled`的 ASP.NET 应用程序的 Web.config 文件中的元素的属性。  
  
   
  
## Examples  
 下面的配置文件摘录 ASP.NET 应用程序的 Web.config 文件的部分中显示的元素。 它指定到的应用程序的默认配置文件提供程序<xref:System.Web.Profile.SqlProfileProvider>实例并设置`automaticSaveEnabled`属性设为`true`。  
  
```  
<profile enabled="true"  
  automaticSaveEnabled="true"  
  defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">在不具有起码的 <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" /> 权限的情况下尝试获取 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 属性值。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，指定是删除匿名配置文件、经过身份验证的配置文件还是同时删除这两种类型的配置文件。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>删除上次活动日期和时间出现在指定日期和时间之前的用户配置文件数据。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A>方法用于从指定的应用程序的数据源中删除未使用的配置文件数据`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索的配置文件，所有与配置文件<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`删除参数值。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A>方法调用<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，不会删除其他数据源中的配置文件信息。 若要删除非活动管理的配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例演示管理处于非活动状态的配置文件的 ASP.NET 页。 提供了一个按钮，以删除所有配置文件指定的天数已未使用，因此被视为处于非活动状态。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfile">
      <MemberSignature Language="C#" Value="public static bool DeleteProfile (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteProfile(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfile (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteProfile(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要删除的配置文件的用户名。</param>
        <summary>从数据源中删除指定用户名的配置文件。</summary>
        <returns>
          如果找到并删除了用户配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>方法将删除所有配置文件信息和对指定的用户配置文件的属性`username`从指定的数据源<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>方法调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>要执行删除操作的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则它们不会删除。 若要删除由配置文件提供者不是默认的提供程序的配置文件属性，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例演示管理处于非活动状态的配置文件的 ASP.NET 页。 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>当选中一个配置文件时要删除调用方法。 是否将配置文件视为非活动状态基于为指定的日期`userInactiveSinceDate`参数值传递给<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteProfilecs.aspx#10)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteProfilevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 为空字符串 ("") 或者包含一个逗号。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从数据源中删除提供的一系列配置文件的配置文件属性和信息。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要删除的配置文件的用户名字符串数组。</param>
        <summary>删除提供的一系列用户名的配置文件属性和信息。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法指定的应用程序的数据源中删除所有配置文件信息和属性指定配置文件的<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性。 若要删除的配置文件列表指定为的用户名称的字符串数组。 如果配置文件属性和信息中的用户名称的数据源中存在`usernames`参数，它们在被删除。  
  
 返回值可能与指定的数组的长度不同`usernames`。 这指示指定的数组中的配置文件的一些`usernames`了已从数据存储区中删除。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则它们不会删除。 若要删除由配置文件提供者不是默认的提供程序的配置文件属性，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例演示管理处于非活动状态的配置文件的 ASP.NET 页。 A<xref:System.Web.UI.WebControls.GridView>控件将显示返回的非活动配置文件。 每一行<xref:System.Web.UI.WebControls.GridView>控件包含一个按钮，从通过调用数据源中删除该行的配置文件<xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernames" /> 的长度为零。  
  
 \- 或 -  
  
 <paramref name="usernames" /> 中的一个项目是空字符串 ("") 或包含逗号。  
  
 \- 或 -  
  
 <paramref name="usernames" /> 中的两个或更多个项目具有相同的值。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernames" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <paramref name="usernames" /> 中的一个项目为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含要删除的配置文件的配置文件信息。</param>
        <summary>从数据源中删除提供的一系列配置文件的配置文件属性和信息。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法指定的应用程序的数据源中删除所有配置文件信息和属性指定配置文件的<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性。 使用指定的配置文件，以删除列表<xref:System.Web.Profile.ProfileInfoCollection>作为传递`profiles`参数。 A<xref:System.Web.Profile.ProfileInfoCollection>可以从返回<xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>， <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>， <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>，和<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法。  
  
 请注意，返回的值可能与不同<xref:System.Web.Profile.ProfileInfoCollection.Count%2A>为所提供的值<xref:System.Web.Profile.ProfileInfoCollection>。 这指示在指定的配置文件的一些<xref:System.Web.Profile.ProfileInfoCollection>了已从数据存储区中删除。  
  
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=nameWithType>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则它们不会删除。 若要删除由配置文件提供者不是默认的提供程序的配置文件属性，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例允许用户使用的配置文件中搜索<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>和<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法。 然后，用户可以删除对的调用返回的配置文件<xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="profiles" /> 的 <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> 值为零。  
  
 \- 或 -  
  
 <paramref name="profiles" /> 中的一个 <see cref="T:System.Web.Profile.ProfileInfo" /> 对象具有一个为空字符串 ("") 或包含逗号的 <see cref="P:System.Web.Profile.ProfileInfo.UserName" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profiles" /> 为 <see langword="null" />。  
  
 \- 或 -  
  
 <paramref name="profiles" /> 中的一个 <see cref="T:System.Web.Profile.ProfileInfo" /> 对象具有一个为 <see langword="null" /> 的 <see cref="P:System.Web.Profile.ProfileInfo.UserName" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否为应用程序启用用户配置文件。</summary>
        <value>
          如果启用了用户配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为应用程序中使用启用的用户配置文件`enabled`配置元素的属性。  
  
   
  
## Examples  
 下面的代码示例显示 ASP.NET 应用程序 Web.config 文件中，已启用的用户配置文件的部分中的元素。  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInactiveProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索配置文件的配置文件信息，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前，并且配置文件的用户名与指定的名称匹配。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>检索所有配置文件的配置文件信息，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前，而且配置文件的用户名与指定的名称匹配。</summary>
        <returns>包含不活动配置文件的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，这些不活动配置文件中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法用于检索指定的应用程序的所有未使用的用户配置文件的配置文件信息`applicationName`配置文件中的属性。 此方法将仅检索为其配置文件的用户名匹配所提供的配置文件`usernameToMatch`参数值。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索的配置文件，所有与配置文件<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`返回参数值。  
  
 你可以检索此信息使用的重载，以数据页<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>采用其他方法`pageIndex`和`pageSize`参数。  
  
> [!NOTE]
>  配置文件提供程序可能支持的通配符字符`usernameToMatch`参数。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>类支持的通配符字符`usernameToMatch`参数。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=nameWithType>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序管理的非活动配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例允许用户提供`usernameToMatch`值和<xref:System.Web.Profile.ProfileAuthenticationOption>枚举值和检索配置文件的任何匹配的配置文件信息。 此示例允许用户指定是否返回仅处于非活动状态的配置文件。 如果用户指定仅为非活动配置文件，<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法是调用; 否则为<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>调用方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 为空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 值之一，指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回这两种类型的配置文件。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <param name="pageIndex">要返回的结果页的索引。 <c>pageIndex</c> 是从零开始的。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>以分页数据的形式检索一些配置文件的配置文件信息，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前，而且配置文件的用户名与指定的名称匹配。</summary>
        <returns>包含不活动配置文件的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，这些不活动配置文件中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法用于检索由指定的应用程序的未使用的用户配置文件的配置文件信息`applicationName`配置文件中的属性。 此方法将仅检索为其在用户名与匹配所提供的配置文件`usernameToMatch`参数值。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索配置文件中，任何配置文件返回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`参数值。  
  
 返回的结果<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数<xref:System.Web.Profile.ProfileInfo>对象中返回<xref:System.Web.Profile.ProfileInfoCollection>集合。 `pageIndex`参数标识要返回的结果页; 0 标识的第一页。 `totalRecords`参数是`out`参数设置为已配置的非活动状态的用户配置文件的总数`applicationName`，具体取决`authenticationOption`和`userInactiveSinceDate`参数。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值为 1`pageSize`为 5，<xref:System.Web.Profile.ProfileInfoCollection>返回将包含通过第 10 个非活动状态的配置文件的第六个。 `totalRecords`参数将设置为 13。  
  
 请注意，配置文件提供程序可能支持的通配符字符`usernameToMatch`参数。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>类支持的通配符字符`usernameToMatch`参数。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序管理的非活动配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例允许用户提供`usernameToMatch`值和<xref:System.Web.Profile.ProfileAuthenticationOption>值并检索任何匹配的配置文件的配置文件信息。 该示例允许用户指定是否以独占方式返回处于非活动状态的配置文件。 如果用户指定仅为非活动配置文件，<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法是调用; 否则为<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>调用方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 为空字符串 ("")。  
  
 \- 或 -  
  
 <paramref name="pageIndex" /> 小于零。  
  
 \- 或 -  
  
 <paramref name="pageSize" /> 小于 1。  
  
 \- 或 -  
  
 <paramref name="pageIndex" /> 和 <paramref name="pageSize" /> 的乘积大于 <see cref="F:System.Int32.MaxValue" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索用户名与指定名称匹配的配置文件的配置文件信息。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <summary>检索用户名与指定名称匹配的配置文件的所有配置文件信息。</summary>
        <returns>包含配置文件中的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，其中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>方法返回的所有配置文件信息为其在用户名与匹配所提供的列表`usernameToMatch`已配置的参数值<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性值。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。  
  
 你可以检索的数据使用的重载，以页中的用户配置文件的配置文件信息<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>采用其他方法`pageIndex`和`pageSize`参数。  
  
 请注意，配置文件提供程序可能支持的通配符字符`usernameToMatch`参数。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>类支持的通配符字符`usernameToMatch`参数。  
  
 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>方法调用<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例允许用户提供`usernameToMatch`值和<xref:System.Web.Profile.ProfileAuthenticationOption>枚举值和检索配置文件的任何匹配的配置文件信息。 该示例允许用户指定是否以独占方式返回处于非活动状态的配置文件。 如果用户指定仅为非活动配置文件，<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法是调用; 否则为<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>调用方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 为空字符串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="pageIndex">要返回的结果页的索引。 <c>pageIndex</c> 是从零开始的。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>以分页数据的形式检索用户名与指定名称匹配的配置文件的配置文件信息。</summary>
        <returns>包含配置文件中的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，其中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法返回为其配置文件的用户名匹配所提供的配置文件信息的列表`usernameToMatch`已配置的参数值<xref:System.Web.Profile.ProfileManager.ApplicationName%2A>。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。  
  
 请注意，配置文件提供程序可能支持的通配符字符`usernameToMatch`参数。 例如，<xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>方法<xref:System.Web.Profile.SqlProfileProvider>类支持的通配符字符`usernameToMatch`参数。  
  
 返回的结果<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数<xref:System.Web.Profile.ProfileInfo>对象中返回<xref:System.Web.Profile.ProfileInfoCollection>。 `pageIndex`参数标识要返回; 的结果页零标识的第一页。 `totalRecords`参数是`out`参数设置为用于通过指定的应用程序处于非活动状态的用户配置文件的总数`applicationName`特性在配置文件中，根据所提供`authenticationOption`。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值为 1`pageSize`为 5，<xref:System.Web.Profile.ProfileInfoCollection>返回将包含通过第 10 个配置文件的第六个。 `totalRecords`参数将设置为 13。  
  
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例允许用户提供`usernameToMatch`值和<xref:System.Web.Profile.ProfileAuthenticationOption>和检索配置文件的任何匹配的配置文件信息。 该示例允许用户指定是否以独占方式返回处于非活动状态的配置文件。 如果用户指定仅为非活动配置文件，<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法是调用; 否则为<xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>调用方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 为空字符串 ("")。  
  
 \- 或 -  
  
 <paramref name="pageIndex" /> 小于零。  
  
 \- 或 -  
  
 <paramref name="pageSize" /> 小于 1。  
  
 \- 或 -  
  
 <paramref name="pageIndex" /> 和 <paramref name="pageSize" /> 的乘积大于 <see cref="F:System.Int32.MaxValue" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllInactiveProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索配置文件的用户配置文件数据，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>对于上次活动日期与指定的日期和时间相同或在其之前的配置文件，检索它们的所有用户配置文件数据。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含有关不活动的配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法用于从指定的应用程序的所有未使用的用户配置文件的数据源中检索配置文件信息`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索配置文件中，任何配置文件返回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`参数值。  
  
 你可以检索处于非活动状态的用户配置文件使用的重载，以数据页的配置文件信息<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>采用其他方法`pageIndex`和`pageSize`参数。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法调用<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序管理的未使用配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例演示管理处于非活动状态的配置文件的 ASP.NET 页。 提供了一个按钮，以删除所有非活动状态的配置文件。 是否将配置文件视为非活动状态基于为指定的日期`userInactiveSinceDate`参数。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfiles2cs.aspx#7)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfiles2vb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <param name="pageIndex">要返回的结果页的索引。 <c>pageIndex</c> 是从零开始的。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>对于上次活动日期与指定的日期和时间相同或在其之前的用户配置文件，检索它们的 <see cref="T:System.Web.Profile.ProfileInfo" /> 对象的页面。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含有关不活动的配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法用于从指定的应用程序的未使用的用户配置文件的数据源中检索配置文件信息`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索配置文件中，任何配置文件返回具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况之前指定`userInactiveSinceDate`参数值。  
  
 返回的结果<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数<xref:System.Web.Profile.ProfileInfo>对象中返回<xref:System.Web.Profile.ProfileInfoCollection>。 `pageIndex`参数标识要返回; 的结果页零标识的第一页。 `totalRecords`参数是`out`参数设置为已配置的非活动状态的用户配置文件的总数`applicationName`，具体取决`authenticationOption`和`userInactiveSinceDate`参数。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值是指具有`pageSize`为 5，<xref:System.Web.Profile.ProfileInfoCollection>返回将包含通过第 10 个非活动状态的配置文件的第六个。 `totalRecords`参数将设置为 13。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法调用<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例演示管理处于非活动状态的配置文件的 ASP.NET 网页。 提供了一个按钮，以删除所有非活动状态的配置文件。 是否将配置文件视为非活动状态基于为指定的日期`userInactiveSinceDate`参数。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在数据源中检索配置文件的用户配置文件数据。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <summary>在数据源中检索配置文件的用户配置文件数据。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含数据源中所有配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>方法用于从指定的应用程序的数据源中检索配置文件信息`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。  
  
 你可以检索的页面<xref:System.Web.Profile.ProfileInfo>为用户配置文件使用的重载，以对象<xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>采用其他方法`pageIndex`和`pageSize`参数。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>方法调用<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例显示所有已配置的配置文件的配置文件信息`applicationName`。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="pageIndex">要返回的结果页的索引。 <c>pageIndex</c> 是从零开始的。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>检索用户配置文件数据的页面。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含数据源中所有配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>方法用于从指定的应用程序的数据源中检索配置文件信息`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。  
  
 返回的结果<xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>受到`pageIndex`和`pageSize`参数。 `pageSize`参数标识的最大数<xref:System.Web.Profile.ProfileInfo>对象中返回<xref:System.Web.Profile.ProfileInfoCollection>。 `pageIndex`参数标识要返回; 的结果页零标识的第一页。 `totalRecords`参数是`out`参数设置为已配置的非活动状态的用户配置文件的总数`applicationName`，将根据所提供`authenticationOption`。 例如，如果有 13 个用户配置的`applicationName`，和`pageIndex`值是指具有`pageSize`为 5，<xref:System.Web.Profile.ProfileInfoCollection>返回将包含通过第 10 个配置文件的第六个。 `totalRecords`参数将设置为 13。  
  
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>方法调用<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>的默认配置文件提供程序的方法。 使用指定的默认配置文件提供`defaultProvider`配置元素的属性。 如果用户配置文件包含管理的配置文件提供者不是默认的提供程序的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供者不是默认的提供程序的配置文件，获取对使用配置文件提供程序的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>属性并调用<xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>的提供程序直接的方法。  
  
   
  
## Examples  
 下面的代码示例显示所有已配置的配置文件的配置文件信息`applicationName`数据页。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" /> 对象，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>获取上次活动日期与指定日期相同或在其之前的配置文件的数目。</summary>
        <returns>数据源中上次活动日期出现在指定日期和时间之前的配置文件的数量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A>方法用于从指定的应用程序的数据源检索的所有未使用的用户配置文件计数`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。 搜索的配置文件，所有配置文件将计算具有<xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>发生这种情况是日期或之前指定`userInactiveSinceDate`参数值。  
  
   
  
## Examples  
 下面的代码示例允许用户查看和删除基于搜索条件的活动和非活动配置文件的信息。 使用的结果显示的非活动状态的配置文件计数<xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A>方法。  
  
> [!IMPORTANT]
>  此示例包含一个接受用户输入，这是一个潜在的安全威胁的文本框。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfProfiles (authenticationOption As ProfileAuthenticationOption) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">
          <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <summary>获取数据源中的配置文件数量。</summary>
        <returns>数据源中的配置文件数量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.GetNumberOfProfiles%2A>方法用于从指定的应用程序的数据源检索的所有用户配置文件计数`applicationName`配置文件中的属性。 使用`authenticationOption`参数来指定是否希望仅匿名配置文件，仅当身份验证配置文件或要搜索的所有配置文件。  
  
   
  
## Examples  
 下面的代码示例显示所有已配置的配置文件的配置文件信息`applicationName`，并返回配置文件数。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As ProfileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProvider ^ Provider { System::Web::Profile::ProfileProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对应用程序的默认配置文件提供程序的引用。</summary>
        <value>应用程序的默认配置文件提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.Provider%2A>属性使您能够直接引用应用程序的默认配置文件提供程序。 这通常用于访问自定义配置文件提供程序的成员，它们不属于<xref:System.Web.Profile.ProfileProvider>抽象基类。  
  
   
  
## Examples  
 下面的代码示例列出默认配置文件提供程序的属性。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providercs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">在不具有起码的 <see cref="P:System.Web.Profile.ProfileManager.Provider" /> 权限的情况下尝试获取 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 属性值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As ProfileProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProviderCollection ^ Providers { System::Web::Profile::ProfileProviderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 ASP.NET 应用程序的配置文件提供程序的集合。</summary>
        <value>为 ASP.NET 应用程序配置的配置文件提供程序的 <see cref="T:System.Web.Profile.ProfileProviderCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileManager.Providers%2A>属性引用所有启用应用程序的配置文件提供程序，包括提供程序添加的计算机配置中，并在所有的 Web.config 文件中添加提供程序。 你可以控制哪些配置文件提供程序可用于在配置文件中使用部分中的元素的应用程序。 例如，下面的 Web.config 文件中删除父配置文件中指定的配置文件提供程序，并将添加<xref:System.Web.Profile.SqlProfileProvider>为应用程序配置文件提供程序的实例。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile enabled="true" defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 指定时部分中，你必须指定默认提供程序通过设置`defaultProvider`属性。 如果未在 Web.config 文件中指定一个部分，将使用计算机配置中的值与<xref:System.Web.Profile.SqlProfileProvider>名为 AspNetSqlProvider 实例则在建立作为默认的提供程序。  
  
 你可以获取的提供程序的强类型化的引用<xref:System.Web.Profile.ProfileManager.Providers%2A>编制索引按名称的配置文件提供程序，然后将它强制转换为所需的类型的集合。  
  
   
  
## Examples  
 下面的代码示例列出了为应用程序和它们各自的类型启用的提供程序。  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providerscs.aspx#9)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providersvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">在不具有起码的 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 权限的情况下尝试获取 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 属性值。</exception>
      </Docs>
    </Member>
  </Members>
</Type>