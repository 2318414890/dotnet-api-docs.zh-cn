<Type Name="ProfileModule" FullName="System.Web.Profile.ProfileModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec1c2259b1472edf29b8e1c9176eb64b118bc79a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProfileModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProfileModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProfileModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type ProfileModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>管理用户配置文件和配置文件事件的创建。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 启用用户配置文件后，ASP.NET 使用<xref:System.Web.Profile.ProfileModule>创建用户配置文件并将其存储在<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>。  
  
 <xref:System.Web.Profile.ProfileModule>公开可以处理在你的应用程序中配置身份验证的以下事件：  
  
-   <xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件，将配置文件设置从的匿名配置文件迁移到经过身份验证配置文件，当匿名用户登录时。  
  
-   <xref:System.Web.Profile.ProfileModule.Personalize>事件，以自定义用户配置文件的创建方式。  
  
-   <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件，来控制时的用户配置文件的保存方式<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性设置为`true`。  
  
 有关启用的用户配置文件的信息，请参阅[配置文件元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)。  
  
   
  
## Examples  
 下面的示例演示启用匿名标识和支持匿名用户的配置文件属性的 Web.config 文件。  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 下面的代码示例演示<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>ASP.NET 应用程序的 Global.asax 文件中包含的事件。 <xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件将配置文件属性值中的匿名配置文件复制到当前用户的配置文件。  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Profile.ProfileModule" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数不应从应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。 <xref:System.Web.HttpApplication>调用<xref:System.Web.Profile.ProfileModule>构造函数来创建<xref:System.Web.Profile.ProfileModule>应用程序。 <xref:System.Web.Profile.ProfileModule>应用程序配置中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="profileModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Web.Profile.ProfileModule" /> 使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不应从应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。 <xref:System.Web.HttpApplication>创建并初始化<xref:System.Web.Profile.ProfileModule>应用程序和调用<xref:System.Web.Profile.ProfileModule.Dispose%2A>方法释放的对象时。 <xref:System.Web.Profile.ProfileModule>应用程序配置中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="profileModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">当前应用程序。</param>
        <summary>在创建 <see cref="T:System.Web.Profile.ProfileModule" /> 对象时调用初始化代码。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不应从应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。 <xref:System.Web.HttpApplication>调用<xref:System.Web.Profile.ProfileModule.Init%2A>方法在创建时<xref:System.Web.Profile.ProfileModule>应用程序。 <xref:System.Web.Profile.ProfileModule>应用程序配置中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateAnonymous">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.MigrateAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MigrateAnonymous As ProfileMigrateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileMigrateEventHandler ^ MigrateAnonymous;" />
      <MemberSignature Language="F#" Value="member this.MigrateAnonymous : System.Web.Profile.ProfileMigrateEventHandler " Usage="member this.MigrateAnonymous : System.Web.Profile.ProfileMigrateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileMigrateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当配置文件的匿名用户登录时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以访问<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件<xref:System.Web.Profile.ProfileModule>通过使用 ASP.NET 应用程序的 Global.asax 文件中类`Profile_MigrateAnonymous`全局事件，如本主题的示例中所示。  
  
 你可以使用<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件复制配置文件属性值从匿名配置文件到经过身份验证配置文件以匿名方式使用你的应用程序的用户登录时。  
  
 ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，它继承自<xref:System.Web.Profile.ProfileBase>类。 强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。 A`GetProfile`方法使你能够检索`ProfileCommon`对象基于用户名称。 你可以使用`GetProfile`要检索的匿名配置文件的属性值的当前、 经过身份验证配置文件的方法。 然后，匿名属性值可以复制到经过身份验证的用户的当前配置文件中。  
  
   
  
## Examples  
 下面的示例演示启用匿名标识和支持匿名用户的配置文件属性的 Web.config 文件。  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 下面的代码示例演示<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>ASP.NET 应用程序的 Global.asax 文件中包含的事件。 <xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件将配置文件属性值中的匿名配置文件复制到当前用户的配置文件。  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Personalize">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileEventHandler Personalize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileEventHandler Personalize" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.Personalize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Personalize As ProfileEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileEventHandler ^ Personalize;" />
      <MemberSignature Language="F#" Value="member this.Personalize : System.Web.Profile.ProfileEventHandler " Usage="member this.Personalize : System.Web.Profile.ProfileEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在创建用户配置文件之前发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileModule.Personalize>期间引发事件<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType>事件。 你可以访问<xref:System.Web.Profile.ProfileModule.Personalize>事件<xref:System.Web.Profile.ProfileModule>ASP.NET 应用程序使用的 Global.asax 文件中类`Profile_Personalize`全局事件，如本主题的示例中所示。  
  
 你可以使用<xref:System.Web.Profile.ProfileModule.Personalize>事件指定自定义用户配置文件。 如果<xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType>为指定的属性值<xref:System.Web.Profile.ProfileEventHandler>事件处理程序<xref:System.Web.Profile.ProfileModule.Personalize>事件设置为一个值，不是`null`时<xref:System.Web.Profile.ProfileModule.Personalize>事件即结束，则<xref:System.Web.Profile.ProfileModule>将使用的指定的值<xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType>属性的值作为<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>。  
  
   
  
## Examples  
 下面的代码示例演示<xref:System.Web.Profile.ProfileModule.Personalize>在应用程序的 Global.asax 文件中声明事件。 事件代码加载基于角色的成员资格用户的用户配置文件。  
  
 [!code-csharp[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/CS/global.asax#12)]
 [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/VB/global.asax#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileAutoSaving">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProfileAutoSaving As ProfileAutoSaveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileAutoSaveEventHandler ^ ProfileAutoSaving;" />
      <MemberSignature Language="F#" Value="member this.ProfileAutoSaving : System.Web.Profile.ProfileAutoSaveEventHandler " Usage="member this.ProfileAutoSaving : System.Web.Profile.ProfileAutoSaveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileAutoSaveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在启用自动配置文件保存的情况下在页面执行结束时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>引发事件的页执行末尾如果<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=nameWithType>属性是`true`。 你可以访问<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件<xref:System.Web.Profile.ProfileModule>ASP.NET 应用程序使用的 Global.asax 文件中类`Profile_ProfileAutoSaving`全局事件，如本主题的示例中所示。  
  
 <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=nameWithType>方法检查<xref:System.Configuration.SettingsPropertyValue.IsDirty%2A>每个属性值<xref:System.Configuration.SettingsPropertyValue>中的用户配置文件，以确定属性是否组成基元类型、 字符串或<xref:System.DateTime>已更改对象。 <xref:System.Configuration.SettingsBase.Save%2A>方法无法明确确定是否已更改的自定义类。 你可以使用<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件来确定是否已更改自定义对象，然后请继续进行自动将保存已修改的对象或取消自动保存，如果任何对象进行了不修改。  
  
 若要取消保存操作的自动配置文件，请设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性`false`中<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件; 否则，设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性`true`。  
  
 可能有多个订阅服务器到<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件。 <xref:System.Web.Profile.ProfileModule>将使用最后一个值，<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性设置为。 因此，建议显式设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>中的属性<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件是否要取消或继续进行自动保存，因为你可能需要覆盖以前的订户设置的值。  
  
   
  
## Examples  
 下面的代码示例演示<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>ASP.NET 应用程序的 Global.asax 文件中包含的事件。  
  
 [!code-csharp[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/CS/global.asax#11)]
 [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/VB/global.asax#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>