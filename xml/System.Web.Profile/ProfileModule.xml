<Type Name="ProfileModule" FullName="System.Web.Profile.ProfileModule">
  <TypeSignature Language="C#" Value="public sealed class ProfileModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProfileModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProfileModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileModule sealed : System::Web::IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0bef2-101">管理用户配置文件和配置文件事件的创建。</span><span class="sxs-lookup"><span data-stu-id="0bef2-101">Manages the creation of the user profile and profile events.</span></span> <span data-ttu-id="0bef2-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="0bef2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bef2-103">启用用户配置文件后，ASP.NET 使用<xref:System.Web.Profile.ProfileModule>创建用户配置文件并将其存储在<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="0bef2-103">When the user profile is enabled, ASP.NET uses the <xref:System.Web.Profile.ProfileModule> to create the user profile and store it in the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>.</span></span>  
  
 <span data-ttu-id="0bef2-104"><xref:System.Web.Profile.ProfileModule>公开可以处理在你的应用程序中配置身份验证的以下事件：</span><span class="sxs-lookup"><span data-stu-id="0bef2-104">The <xref:System.Web.Profile.ProfileModule> exposes the following events you can handle to configure authentication in your application:</span></span>  
  
-   <span data-ttu-id="0bef2-105"><xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件，将配置文件设置从的匿名配置文件迁移到经过身份验证配置文件，当匿名用户登录时。</span><span class="sxs-lookup"><span data-stu-id="0bef2-105">The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event, to migrate profile settings from an anonymous profile to an authenticated profile when an anonymous user logs in.</span></span>  
  
-   <span data-ttu-id="0bef2-106"><xref:System.Web.Profile.ProfileModule.Personalize>事件，以自定义用户配置文件的创建方式。</span><span class="sxs-lookup"><span data-stu-id="0bef2-106">The <xref:System.Web.Profile.ProfileModule.Personalize> event, to customize how the user profile is created.</span></span>  
  
-   <span data-ttu-id="0bef2-107"><xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件，来控制时的用户配置文件的保存方式<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="0bef2-107">The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, to control how the user profile is saved when the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="0bef2-108">有关启用的用户配置文件的信息，请参阅[配置文件元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)。</span><span class="sxs-lookup"><span data-stu-id="0bef2-108">For information about enabling the user profile, see [profile Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bef2-109">下面的示例演示启用匿名标识和支持匿名用户的配置文件属性的 Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-109">The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.</span></span>  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="0bef2-110">下面的代码示例演示<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>ASP.NET 应用程序的 Global.asax 文件中包含的事件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-110">The following code example shows the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event included in the Global.asax file for an ASP.NET application.</span></span> <span data-ttu-id="0bef2-111"><xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件将配置文件属性值中的匿名配置文件复制到当前用户的配置文件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-111">The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event copies profile property values from the anonymous profile to the profile for the current user.</span></span>  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0bef2-112">初始化 <see cref="T:System.Web.Profile.ProfileModule" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0bef2-112">Initializes a new instance of the <see cref="T:System.Web.Profile.ProfileModule" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bef2-113">此构造函数不应从应用程序代码中调用。</span><span class="sxs-lookup"><span data-stu-id="0bef2-113">This constructor is not intended to be called from application code.</span></span>  
  
 <span data-ttu-id="0bef2-114"><xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。</span><span class="sxs-lookup"><span data-stu-id="0bef2-114">An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started.</span></span> <span data-ttu-id="0bef2-115"><xref:System.Web.HttpApplication>调用<xref:System.Web.Profile.ProfileModule>构造函数来创建<xref:System.Web.Profile.ProfileModule>应用程序。</span><span class="sxs-lookup"><span data-stu-id="0bef2-115">The <xref:System.Web.HttpApplication> calls the <xref:System.Web.Profile.ProfileModule> constructor to create the <xref:System.Web.Profile.ProfileModule> for the application.</span></span> <span data-ttu-id="0bef2-116"><xref:System.Web.Profile.ProfileModule>应用程序配置中指定。</span><span class="sxs-lookup"><span data-stu-id="0bef2-116">The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0bef2-117">释放由 <see cref="T:System.Web.Profile.ProfileModule" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="0bef2-117">Releases all resources used by the <see cref="T:System.Web.Profile.ProfileModule" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bef2-118">此方法不应从应用程序代码中调用。</span><span class="sxs-lookup"><span data-stu-id="0bef2-118">This method is not intended to be called from application code.</span></span>  
  
 <span data-ttu-id="0bef2-119"><xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。</span><span class="sxs-lookup"><span data-stu-id="0bef2-119">An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started.</span></span> <span data-ttu-id="0bef2-120"><xref:System.Web.HttpApplication>创建并初始化<xref:System.Web.Profile.ProfileModule>应用程序和调用<xref:System.Web.Profile.ProfileModule.Dispose%2A>方法释放的对象时。</span><span class="sxs-lookup"><span data-stu-id="0bef2-120">The <xref:System.Web.HttpApplication> creates and initializes the <xref:System.Web.Profile.ProfileModule> for the application and calls the <xref:System.Web.Profile.ProfileModule.Dispose%2A> method when the object is released.</span></span> <span data-ttu-id="0bef2-121"><xref:System.Web.Profile.ProfileModule>应用程序配置中指定。</span><span class="sxs-lookup"><span data-stu-id="0bef2-121">The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app"><span data-ttu-id="0bef2-122">当前应用程序。</span><span class="sxs-lookup"><span data-stu-id="0bef2-122">The current application.</span></span></param>
        <summary><span data-ttu-id="0bef2-123">在创建 <see cref="T:System.Web.Profile.ProfileModule" /> 对象时调用初始化代码。</span><span class="sxs-lookup"><span data-stu-id="0bef2-123">Calls initialization code when a <see cref="T:System.Web.Profile.ProfileModule" /> object is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bef2-124">此方法不应从应用程序代码中调用。</span><span class="sxs-lookup"><span data-stu-id="0bef2-124">This method is not intended to be called from application code.</span></span>  
  
 <span data-ttu-id="0bef2-125"><xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。</span><span class="sxs-lookup"><span data-stu-id="0bef2-125">An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started.</span></span> <span data-ttu-id="0bef2-126"><xref:System.Web.HttpApplication>调用<xref:System.Web.Profile.ProfileModule.Init%2A>方法在创建时<xref:System.Web.Profile.ProfileModule>应用程序。</span><span class="sxs-lookup"><span data-stu-id="0bef2-126">The <xref:System.Web.HttpApplication> calls the <xref:System.Web.Profile.ProfileModule.Init%2A> method when it creates the <xref:System.Web.Profile.ProfileModule> for the application.</span></span> <span data-ttu-id="0bef2-127"><xref:System.Web.Profile.ProfileModule>应用程序配置中指定。</span><span class="sxs-lookup"><span data-stu-id="0bef2-127">The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateAnonymous">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.MigrateAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MigrateAnonymous As ProfileMigrateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileMigrateEventHandler ^ MigrateAnonymous;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileMigrateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bef2-128">当配置文件的匿名用户登录时发生。</span><span class="sxs-lookup"><span data-stu-id="0bef2-128">Occurs when the anonymous user for a profile logs in.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bef2-129">你可以访问<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件<xref:System.Web.Profile.ProfileModule>通过使用 ASP.NET 应用程序的 Global.asax 文件中类`Profile_MigrateAnonymous`全局事件，如本主题的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="0bef2-129">You can access the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application by using the `Profile_MigrateAnonymous` global event, as shown in the example for this topic.</span></span>  
  
 <span data-ttu-id="0bef2-130">你可以使用<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件复制配置文件属性值从匿名配置文件到经过身份验证配置文件以匿名方式使用你的应用程序的用户登录时。</span><span class="sxs-lookup"><span data-stu-id="0bef2-130">You can use the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event to copy profile property values from an anonymous profile to an authenticated profile when a user who has been anonymously using your application logs in.</span></span>  
  
 <span data-ttu-id="0bef2-131">ASP.NET 具有启用了用户配置文件的应用程序启动时，创建类型的新类`ProfileCommon`，它继承自<xref:System.Web.Profile.ProfileBase>类。</span><span class="sxs-lookup"><span data-stu-id="0bef2-131">When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class.</span></span> <span data-ttu-id="0bef2-132">强类型化访问器添加到`ProfileCommon`配置节中定义的每个属性的类。</span><span class="sxs-lookup"><span data-stu-id="0bef2-132">Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section.</span></span> <span data-ttu-id="0bef2-133">A`GetProfile`方法使你能够检索`ProfileCommon`对象基于用户名称。</span><span class="sxs-lookup"><span data-stu-id="0bef2-133">A `GetProfile` method enables you to retrieve a `ProfileCommon` object based on a user name.</span></span> <span data-ttu-id="0bef2-134">你可以使用`GetProfile`要检索的匿名配置文件的属性值的当前、 经过身份验证配置文件的方法。</span><span class="sxs-lookup"><span data-stu-id="0bef2-134">You can use the `GetProfile` method of the current, authenticated profile to retrieve the property values of the anonymous profile.</span></span> <span data-ttu-id="0bef2-135">然后，匿名属性值可以复制到经过身份验证的用户的当前配置文件中。</span><span class="sxs-lookup"><span data-stu-id="0bef2-135">The anonymous property values can then be copied to the current profile for the authenticated user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bef2-136">下面的示例演示启用匿名标识和支持匿名用户的配置文件属性的 Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-136">The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.</span></span>  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="0bef2-137">下面的代码示例演示<xref:System.Web.Profile.ProfileModule.MigrateAnonymous>ASP.NET 应用程序的 Global.asax 文件中包含的事件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-137">The following code example shows the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event included in the Global.asax file for an ASP.NET application.</span></span> <span data-ttu-id="0bef2-138"><xref:System.Web.Profile.ProfileModule.MigrateAnonymous>事件将配置文件属性值中的匿名配置文件复制到当前用户的配置文件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-138">The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event copies profile property values from the anonymous profile to the profile for the current user.</span></span>  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Personalize">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileEventHandler Personalize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileEventHandler Personalize" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.Personalize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Personalize As ProfileEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileEventHandler ^ Personalize;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bef2-139">在创建用户配置文件之前发生。</span><span class="sxs-lookup"><span data-stu-id="0bef2-139">Occurs before the user profile is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bef2-140"><xref:System.Web.Profile.ProfileModule.Personalize>期间引发事件<xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-140">The <xref:System.Web.Profile.ProfileModule.Personalize> event is raised during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="0bef2-141">你可以访问<xref:System.Web.Profile.ProfileModule.Personalize>事件<xref:System.Web.Profile.ProfileModule>ASP.NET 应用程序使用的 Global.asax 文件中类`Profile_Personalize`全局事件，如本主题的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="0bef2-141">You can access the <xref:System.Web.Profile.ProfileModule.Personalize> event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_Personalize` global event as shown in the example for this topic.</span></span>  
  
 <span data-ttu-id="0bef2-142">你可以使用<xref:System.Web.Profile.ProfileModule.Personalize>事件指定自定义用户配置文件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-142">You can use the <xref:System.Web.Profile.ProfileModule.Personalize> event to specify a custom user profile.</span></span> <span data-ttu-id="0bef2-143">如果<xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType>为指定的属性值<xref:System.Web.Profile.ProfileEventHandler>事件处理程序<xref:System.Web.Profile.ProfileModule.Personalize>事件设置为一个值，不是`null`时<xref:System.Web.Profile.ProfileModule.Personalize>事件即结束，则<xref:System.Web.Profile.ProfileModule>将使用的指定的值<xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType>属性的值作为<xref:System.Web.HttpContext.Profile%2A>属性的当前<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="0bef2-143">If the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType> property value specified for the <xref:System.Web.Profile.ProfileEventHandler> event handler for the <xref:System.Web.Profile.ProfileModule.Personalize> event is set to a value that is not `null` when the <xref:System.Web.Profile.ProfileModule.Personalize> event ends, then the <xref:System.Web.Profile.ProfileModule> will use the specified value of the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType> property as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bef2-144">下面的代码示例演示<xref:System.Web.Profile.ProfileModule.Personalize>在应用程序的 Global.asax 文件中声明事件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-144">The following code example shows the <xref:System.Web.Profile.ProfileModule.Personalize> event declared in the Global.asax file for an application.</span></span> <span data-ttu-id="0bef2-145">事件代码加载基于角色的成员资格用户的用户配置文件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-145">The event code loads a user profile for a user based on role membership.</span></span>  
  
 [!code-csharp[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/CS/global.asax#12)]
 [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/VB/global.asax#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileAutoSaving">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProfileAutoSaving As ProfileAutoSaveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileAutoSaveEventHandler ^ ProfileAutoSaving;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileAutoSaveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bef2-146">在启用自动配置文件保存的情况下在页面执行结束时发生。</span><span class="sxs-lookup"><span data-stu-id="0bef2-146">Occurs at the end of page execution if automatic profile saving is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bef2-147"><xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>引发事件的页执行末尾如果<xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=nameWithType>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="0bef2-147">The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=nameWithType> property is `true`.</span></span> <span data-ttu-id="0bef2-148">你可以访问<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件<xref:System.Web.Profile.ProfileModule>ASP.NET 应用程序使用的 Global.asax 文件中类`Profile_ProfileAutoSaving`全局事件，如本主题的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="0bef2-148">You can access the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_ProfileAutoSaving` global event, as shown in the example for this topic.</span></span>  
  
 <span data-ttu-id="0bef2-149"><xref:System.Configuration.SettingsBase.Save%2A?displayProperty=nameWithType>方法检查<xref:System.Configuration.SettingsPropertyValue.IsDirty%2A>每个属性值<xref:System.Configuration.SettingsPropertyValue>中的用户配置文件，以确定属性是否组成基元类型、 字符串或<xref:System.DateTime>已更改对象。</span><span class="sxs-lookup"><span data-stu-id="0bef2-149">The <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=nameWithType> method checks the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile to determine whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed.</span></span> <span data-ttu-id="0bef2-150"><xref:System.Configuration.SettingsBase.Save%2A>方法无法明确确定是否已更改的自定义类。</span><span class="sxs-lookup"><span data-stu-id="0bef2-150">The <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed.</span></span> <span data-ttu-id="0bef2-151">你可以使用<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件来确定是否已更改自定义对象，然后请继续进行自动将保存已修改的对象或取消自动保存，如果任何对象进行了不修改。</span><span class="sxs-lookup"><span data-stu-id="0bef2-151">You can use the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event to determine whether a custom object has been changed and then either to continue with the automatic save for modified objects or to cancel the automatic save if no objects have been modified.</span></span>  
  
 <span data-ttu-id="0bef2-152">若要取消保存操作的自动配置文件，请设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性`false`中<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件; 否则，设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="0bef2-152">To cancel the automatic profile save operation, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `false` in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event; otherwise, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="0bef2-153">可能有多个订阅服务器到<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-153">There may be multiple subscribers to the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event.</span></span> <span data-ttu-id="0bef2-154"><xref:System.Web.Profile.ProfileModule>将使用最后一个值，<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>属性设置为。</span><span class="sxs-lookup"><span data-stu-id="0bef2-154">The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to.</span></span> <span data-ttu-id="0bef2-155">因此，建议显式设置<xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>中的属性<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件是否要取消或继续进行自动保存，因为你可能需要覆盖以前的订户设置的值。</span><span class="sxs-lookup"><span data-stu-id="0bef2-155">As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bef2-156">下面的代码示例演示<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>ASP.NET 应用程序的 Global.asax 文件中包含的事件。</span><span class="sxs-lookup"><span data-stu-id="0bef2-156">The following code example shows the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event included in the Global.asax file for an ASP.NET application.</span></span>  
  
 [!code-csharp[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/CS/global.asax#11)]
 [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/VB/global.asax#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>