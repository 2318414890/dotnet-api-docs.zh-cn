<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81b5a3e89e9b3612a1c3455764f65be3243d8145" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48600198" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <TypeSignature Language="F#" Value="type ServiceDomain = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许由 <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> 和 <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> 标识的代码段在其自身的上下文中运行，其行为如同在此上下文中创建的对象上调用的方法。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>方法中对使用环绕代码，然后可以使用 COM + 服务。 对的调用之间包含的代码<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>在其自己的上下文中运行和的行为就像它是一样的上下文中创建的对象上调用的方法。 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>对可以嵌套。 由用户负责确保调用对会平衡，以便每次调用<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>匹配的以前调用<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberSignature Language="F#" Value="static member Enter : System.EnterpriseServices.ServiceConfig -&gt; unit" Usage="System.EnterpriseServices.ServiceDomain.Enter cfg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">一个 <see cref="T:System.EnterpriseServices.ServiceConfig" />，它包含要在包含代码中使用的服务的配置信息。</param>
        <summary>创建由 <see cref="T:System.EnterpriseServices.ServiceConfig" /> 对象指定的上下文，并将其推至上下文堆栈，使之成为当前上下文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> 首先创建配置为指定的上下文<xref:System.EnterpriseServices.ServiceConfig>作为传递的对象`cfg`参数。 如果出现的方法调用，客户端和服务器端上的策略会触发。 新的上下文然后推送到上下文堆栈上，并将成为当前上下文。 由于它们高效的设计和，因为无线程封送处理涉及，使用<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>和<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>涉及大大减少了开销相比的等效方法调用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">当前平台不支持 <see cref="T:System.EnterpriseServices.ServiceConfig" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberSignature Language="F#" Value="static member Leave : unit -&gt; System.EnterpriseServices.TransactionStatus" Usage="System.EnterpriseServices.ServiceDomain.Leave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>触发服务器端的策略，随后触发客户端的策略，如同一个方法调用正在返回。 然后，当前上下文被弹出上下文堆栈，调用 <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> 时正在运行的上下文成为当前的上下文。</summary>
        <returns><see cref="T:System.EnterpriseServices.TransactionStatus" /> 值之一。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">当前平台不支持 <see cref="T:System.EnterpriseServices.ServiceConfig" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>