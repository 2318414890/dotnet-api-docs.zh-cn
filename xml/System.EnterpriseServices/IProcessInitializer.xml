<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df86bb08c407981061c5f560771139f0ca5535e6" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53463759" /></Metadata><TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>支持 COM 组件启动或关闭时可调用的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现<xref:System.EnterpriseServices.IProcessInitializer>接口方法上的服务组件如果你想要运行初始化或关闭代码时服务器进程 (Dllhost.exe) 启动或关闭，分别。  
  
 COM + 提供了`Startup`和`Shutdown`Dllhost.exe 开始和结束时的事件。 此功能，安装 COM + 服务器应用程序 （称为服务器组件以后） 来运行自定义初始化和清理代码中的任何 COM + 组件。 实现每个组件的实例<xref:System.EnterpriseServices.IProcessInitializer>界面将创建和存储过程的持续时间并在启动和关闭过程中调用接口方法上。 实现上时<xref:System.EnterpriseServices.ServicedComponent>，该组件，注册期间`InitializesServerApplication`中的参数`COMAdminCatalogObject`内组件集合设置为`true`。  
  
 使用`Startup`和`Shutdown`事件，可以初始化资源，创建连接，初始化共享数据，并运行清理代码。 但是，您必须访问是特定于 COM +，因为尚未创建服务器组件的实例的状态。 此外中的代码`Startup`和`Shutdown`事件应尽可能快地返回，因为系统等待 90 秒仅针对 Dllhost.exe 进行准备，以便接受激活，则在系统启动进程。 如果 Dllhost.exe 不发出信号，就可以在 90 秒内，系统会结束该进程;因此，所有的初始化处理需要在此时限内完成。 参与初始化每个服务器组件必须支持<xref:System.EnterpriseServices.IProcessInitializer>接口。 在 DllHost.exe 启动 COM + 创建请求调用此服务的所有服务器组件`QueryInterface`有关<xref:System.EnterpriseServices.IProcessInitializer>接口，并调用<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>函数。 同样，当 DllHost.exe 进程关闭的情况下，它将调用<xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>函数对这些以前存储的接口指针。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>执行关闭操作。 关闭 Dllhost.exe 时被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> 不在故障快速报警或其他灾难性的关闭事件期间调用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">在 Microsoft Windows XP 中，一个指向 <see langword="IUnknown" /> COM 组件启动接口的指针。 在 Microsoft Windows 2000 中，该参数始终为 <see langword="null" />。</param>
        <summary>在启动时执行初始化。 启动 Dllhost.exe 时被调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所引用的对象`punkProcessControl`实现<xref:System.EnterpriseServices.IProcessInitControl>接口。 <xref:System.EnterpriseServices.IProcessInitControl> 支持的单一方法<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>。  
  
 中的初始化代码<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>可以调用<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>，超时时间设置为等于的启动组件发生超时之前剩余的秒数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>