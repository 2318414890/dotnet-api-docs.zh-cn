<Type Name="InterfaceQueuingAttribute" FullName="System.EnterpriseServices.InterfaceQueuingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e496996eda2dd312d714b923bf5f0be33f4643be" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55422674" /></Metadata><TypeSignature Language="C#" Value="public sealed class InterfaceQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InterfaceQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.InterfaceQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InterfaceQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InterfaceQueuingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InterfaceQueuingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c6a45-101">为标记的接口启用队列支持。</span><span class="sxs-lookup"><span data-stu-id="c6a45-101">Enables queuing support for the marked interface.</span></span> <span data-ttu-id="c6a45-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="c6a45-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a45-103">此接口上的调用将使用消息队列进行排队。</span><span class="sxs-lookup"><span data-stu-id="c6a45-103">Calls on this interface will be queued using Message Queuing.</span></span>  
  
 <span data-ttu-id="c6a45-104">若要将接口标记为已排队，请将此特性应用于使用以下语法的界面： `[InterfaceQueuing]`。</span><span class="sxs-lookup"><span data-stu-id="c6a45-104">To mark an interface as queued, apply this attribute to the interface using the following syntax: `[InterfaceQueuing]`.</span></span>  
  
 <span data-ttu-id="c6a45-105">排队的接口的成员方法必须满足的要求排队的方法调用，例如，没有`out`或`ref`参数。</span><span class="sxs-lookup"><span data-stu-id="c6a45-105">The member methods of a queued interface must fulfill the requirements for queued method calls, such as having no `out` or `ref` parameters.</span></span>  
  
 <span data-ttu-id="c6a45-106">有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="c6a45-106">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6a45-107">下面的代码示例演示如何使用`InterfaceQueuingAttribute`属性。</span><span class="sxs-lookup"><span data-stu-id="c6a45-107">The following code example shows how to use the `InterfaceQueuingAttribute` attribute.</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#2)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#2)]  
  
 <span data-ttu-id="c6a45-108">下面的代码示例演示如何将 COM + 应用程序标记为在编译时使用排队`ApplicationQueuing`属性，并通过设置启用 COM + 侦听器`QueueListenerEnabled`为 true</span><span class="sxs-lookup"><span data-stu-id="c6a45-108">The following code example shows how to mark a COM+ application as queued at compile time by using the `ApplicationQueuing` attribute, and enable the COM+ listener by setting the `QueueListenerEnabled` to true</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#1)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#1)]  
  
 <span data-ttu-id="c6a45-109">下面的代码示例演示如何使用`BindToMoniker`运行排队的名字对象，以获取记录器的实例调用的方法，将记录，并强制记录器对象，以便将消息发送到队列的版本。</span><span class="sxs-lookup"><span data-stu-id="c6a45-109">The following code example shows how to use `BindToMoniker` to run the queued moniker, to get an instance of the recorder, call the method that will be recorded, and force the release of the recorder object, to send the message to the queue.</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponentclientclass.cpp#0)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponentclientclass.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c6a45-110">初始化 <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> 类的新实例，并启用队列支持。</span><span class="sxs-lookup"><span data-stu-id="c6a45-110">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, enabling queuing support.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6a45-111">初始化 <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> 类的新实例，并将 <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> 和 <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> 属性设置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="c6a45-111">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class setting the <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> and <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> properties to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a45-112">下表显示的实例的初始属性值<xref:System.EnterpriseServices.InterfaceQueuingAttribute>。</span><span class="sxs-lookup"><span data-stu-id="c6a45-112">The following table shows initial property values for an instance of <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
|<span data-ttu-id="c6a45-113">Property</span><span class="sxs-lookup"><span data-stu-id="c6a45-113">Property</span></span>|<span data-ttu-id="c6a45-114">值</span><span class="sxs-lookup"><span data-stu-id="c6a45-114">Value</span></span>|  
|--------------|-----------|  
|<span data-ttu-id="c6a45-115">已启用</span><span class="sxs-lookup"><span data-stu-id="c6a45-115">Enabled</span></span>|`true`|  
|<span data-ttu-id="c6a45-116">接口</span><span class="sxs-lookup"><span data-stu-id="c6a45-116">Interface</span></span>|`null`|  
  
   
  
## Examples  
 <span data-ttu-id="c6a45-117">下面的代码示例创建一个新<xref:System.EnterpriseServices.InterfaceQueuingAttribute>。</span><span class="sxs-lookup"><span data-stu-id="c6a45-117">The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute(bool enabled);" />
      <MemberSignature Language="F#" Value="new System.EnterpriseServices.InterfaceQueuingAttribute : bool -&gt; System.EnterpriseServices.InterfaceQueuingAttribute" Usage="new System.EnterpriseServices.InterfaceQueuingAttribute enabled" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled"><span data-ttu-id="c6a45-118">若要启用队列支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c6a45-118"><see langword="true" /> to enable queuing support; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c6a45-119">初始化 <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> 类的新实例，并可以选择禁用队列支持。</span><span class="sxs-lookup"><span data-stu-id="c6a45-119">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, optionally disabling queuing support.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c6a45-120">下面的代码示例创建一个新<xref:System.EnterpriseServices.InterfaceQueuingAttribute>。</span><span class="sxs-lookup"><span data-stu-id="c6a45-120">The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6a45-121">获取或设置一个值，该值指示是否启用队列支持。</span><span class="sxs-lookup"><span data-stu-id="c6a45-121">Gets or sets a value indicating whether queuing support is enabled.</span></span></summary>
        <value><span data-ttu-id="c6a45-122">如果启用队列支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c6a45-122"><see langword="true" /> if queuing support is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c6a45-123">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c6a45-123">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6a45-124">此属性对应于`Queuing-Enabled`COM + 中的属性。</span><span class="sxs-lookup"><span data-stu-id="c6a45-124">This property corresponds to the `Queuing-Enabled` property in COM+.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="public string Interface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Interface" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberSignature Language="VB.NET" Value="Public Property Interface As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Interface { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Interface : string with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6a45-125">获取或设置在其上启用队列的接口的名称。</span><span class="sxs-lookup"><span data-stu-id="c6a45-125">Gets or sets the name of the interface on which queuing is enabled.</span></span></summary>
        <value><span data-ttu-id="c6a45-126">在其上启用队列的接口的名称。</span><span class="sxs-lookup"><span data-stu-id="c6a45-126">The name of the interface on which queuing is enabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>