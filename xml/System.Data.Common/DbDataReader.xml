<Type Name="DbDataReader" FullName="System.Data.Common.DbDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf08d655e4863a892691d51998089f8cea12239d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39923372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataReader extends System.MarshalByRefObject implements class System.Collections.IEnumerable, class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDataReader, IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataReader abstract : MarshalByRefObject, IDisposable, System::Collections::IEnumerable, System::Data::IDataReader" />
  <TypeSignature Language="F#" Value="type DbDataReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDataReader&#xA;    interface IEnumerable&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDataReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0d911-101">从数据源读取行的一个只进流。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d911-101">Reads a forward-only stream of rows from a data source.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-102">初始化 <see cref="T:System.Data.Common.DbDataReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-102">Initializes a new instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="dbDataReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-103">关闭 <see cref="T:System.Data.Common.DbDataReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-103">Closes the <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public abstract int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Common.DbDataReader.Depth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-104">获取一个值，该值指示当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-104">Gets a value indicating the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d911-105">当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-105">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-106">最外面的表的深度为零。</span><span class="sxs-lookup"><span data-stu-id="0d911-106">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-107">释放 <see cref="T:System.Data.Common.DbDataReader" /> 使用的资源并调用 <see cref="M:System.Data.SqlClient.SqlDataReader.Close" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-107">Releases the resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and calls <see cref="M:System.Data.SqlClient.SqlDataReader.Close" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dbDataReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-108">释放由 <see cref="T:System.Data.Common.DbDataReader" /> 类的当前实例占用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-108">Releases all resources used by the current instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-109">在完成使用 `Dispose` 后，应调用 <xref:System.Data.Common.DbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="0d911-109">Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>.</span></span> <span data-ttu-id="0d911-110">`Dispose` 方法使 <xref:System.Data.Common.DbDataReader> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="0d911-110">The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state.</span></span> <span data-ttu-id="0d911-111">在调用`Dispose`，必须释放对所有引用<xref:System.Data.Common.DbDataReader>这样垃圾回收器才能收回内存的<xref:System.Data.Common.DbDataReader>占用。</span><span class="sxs-lookup"><span data-stu-id="0d911-111">After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying.</span></span>  
  
 <span data-ttu-id="0d911-112">有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-112">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d911-113">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.Data.Common.DbDataReader>。</span><span class="sxs-lookup"><span data-stu-id="0d911-113">Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>.</span></span> <span data-ttu-id="0d911-114">否则，在垃圾回收器调用 <xref:System.Data.Common.DbDataReader> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="0d911-114">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0d911-115">若要释放托管资源和非托管资源，则为 <see langword="true" />；若要仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-115">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-116">释放由 <see cref="T:System.Data.Common.DbDataReader" /> 使用的托管资源，还可以选择释放非托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-116">Releases the managed resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and optionally releases the unmanaged resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-117">此方法调用 <xref:System.Data.SqlClient.SqlDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="0d911-117">This method calls <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public abstract int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Common.DbDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-118">获取当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-118">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d911-119">当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-119">The number of columns in the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-120">包括隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="0d911-120">Includes hidden fields.</span></span> <span data-ttu-id="0d911-121">使用 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> 可排除隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="0d911-121">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0d911-122">没有对 SQL Server 实例的当前连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-122">There is no current connection to an instance of SQL Server.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public abstract bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetBoolean : int -&gt; bool" Usage="dbDataReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-123">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-123">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-124">获取指定列的布尔值形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-124">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-125">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-125">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-126">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-126">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public abstract byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetByte : int -&gt; byte" Usage="dbDataReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-127">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-127">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-128">获取指定列的字节形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-128">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-129">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-129">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-130">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-130">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytes(int32 ordinal, int64 dataOffset, unsigned int8[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (ordinal As Integer, dataOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetBytes(int ordinal, long dataOffset, cli::array &lt;System::Byte&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dbDataReader.GetBytes (ordinal, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-131">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-131">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataOffset">
          <span data-ttu-id="0d911-132">行中的索引，从其开始读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-132">The index within the row from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="0d911-133">作为数据复制目标的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-133">The buffer into which to copy the data.</span>
          </span>
        </param>
        <param name="bufferOffset">
          <span data-ttu-id="0d911-134">具有作为数据复制目标的缓冲区的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-134">The index with the buffer to which the data will be copied.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0d911-135">最多读取的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-135">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-136">从指定列读取一个字节流（从 <paramref name="dataOffset" /> 指示的位置开始），读到缓冲区中（从 <paramref name="bufferOffset" /> 指示的位置开始）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-136">Reads a stream of bytes from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-137">读取的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-137">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-138">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-138">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public abstract char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetChar : int -&gt; char" Usage="dbDataReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-139">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-139">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-140">获取指定列的单个字符串形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-140">Gets the value of the specified column as a single character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-141">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-141">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-142">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-142">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetChars(int32 ordinal, int64 dataOffset, char[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (ordinal As Integer, dataOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetChars(int ordinal, long dataOffset, cli::array &lt;char&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dbDataReader.GetChars (ordinal, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-143">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-143">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataOffset">
          <span data-ttu-id="0d911-144">行中的索引，从其开始读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-144">The index within the row from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="0d911-145">作为数据复制目标的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-145">The buffer into which to copy the data.</span>
          </span>
        </param>
        <param name="bufferOffset">
          <span data-ttu-id="0d911-146">具有作为数据复制目标的缓冲区的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-146">The index with the buffer to which the data will be copied.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0d911-147">最多读取的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-147">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-148">从指定列读取一个字符流，从 <paramref name="dataOffset" /> 指示的位置开始，读到缓冲区中，从 <paramref name="bufferOffset" /> 指示的位置开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-148">Reads a stream of characters from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-149">读取的实际字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-149">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbDataReader ^ GetData(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetData : int -&gt; System.Data.Common.DbDataReader" Usage="dbDataReader.GetData ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-150">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-150">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-151">返回被请求的列序号的 <see cref="T:System.Data.Common.DbDataReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-151">Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-152">
            <see cref="T:System.Data.Common.DbDataReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-152">A <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public abstract string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDataTypeName : int -&gt; string" Usage="dbDataReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-153">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-153">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-154">获取指定列的数据类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-154">Gets name of the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-155">表示数据类型的名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-155">A string representing the name of the data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetDataTypes(String connectiongString) {       
   using (SqlConnection conn = new SqlConnection(connectiongString)) {  
      String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]";  
      using (DbCommand command = new SqlCommand(queryString, conn)) {  
         conn.Open();               
         using (DbDataReader reader = command.ExecuteReader()) {  
            for (Int32 i = 0; i < reader.FieldCount; i++) {  
               Console.WriteLine("ColumnName:{0,-15}DataType:{1,-15}",reader.GetName(i),reader.GetDataTypeName(i));  
            }  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-156">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-156">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDateTime : int -&gt; DateTime" Usage="dbDataReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-157">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-157">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-158">获取指定列的 <see cref="T:System.DateTime" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-158">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-159">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-159">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-160">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-160">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDbDataReader : int -&gt; System.Data.Common.DbDataReader&#xA;override this.GetDbDataReader : int -&gt; System.Data.Common.DbDataReader" Usage="dbDataReader.GetDbDataReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-161">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-161">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-162">返回被请求的列序号的 <see cref="T:System.Data.Common.DbDataReader" /> 对象，可以使用提供程序特定的实现对该对象进行重写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-162">Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal that can be overridden with a provider-specific implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-163">
            <see cref="T:System.Data.Common.DbDataReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-163">A <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public abstract decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDecimal : int -&gt; decimal" Usage="dbDataReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-164">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-164">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-165">获取指定列的 <see cref="T:System.Decimal" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-165">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-166">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-166">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-167">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-167">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public abstract double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDouble : int -&gt; double" Usage="dbDataReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-168">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-168">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-169">获取指定列的双精度浮点数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-169">Gets the value of the specified column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-170">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-170">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-171">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-171">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dbDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-172">返回一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-172">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-173">一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-173">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-174">尽管此方法可用于检索的显式构造函数，但在语言中支持的显式**foreach**构造，它是直接以循环访问数据读取器中的行中使用循环构造简单得多。</span><span class="sxs-lookup"><span data-stu-id="0d911-174">Although you can use this method to retrieve an explicit constructor, in languages that support an explicit **foreach** construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 <span data-ttu-id="0d911-175">如果你实现此方法，则应返回的新实例<xref:System.Data.Common.DbEnumerator>，或确保在枚举器返回<xref:System.Data.IDataRecord>对象。</span><span class="sxs-lookup"><span data-stu-id="0d911-175">If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public abstract Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldType : int -&gt; Type" Usage="dbDataReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-176">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-176">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-177">获取指定列的数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-177">Gets the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-178">指定列的数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-178">The data type of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-179">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-179">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetFieldValue&lt;T&gt; (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetFieldValue&lt;T&gt;(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldValue(Of T) (ordinal As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual T GetFieldValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : int -&gt; 'T&#xA;override this.GetFieldValue : int -&gt; 'T" Usage="dbDataReader.GetFieldValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0d911-180">同步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-180">Synchronously gets the value of the specified column as a type.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="0d911-181">要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-181">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-182">同步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-182">Synchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-183">要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-183">The column to be retrieved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-184">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-184">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-185">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-185">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-186">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-186">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-187">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-187">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="0d911-188">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-188">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="0d911-189">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-189">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="0d911-190">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-190">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-191">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-191">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-192">
            <paramref name="T" /> 与 SQL Server 返回的类型不匹配或无法进行强制转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-192">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFieldValueAsync&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-193">异步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-193">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-194">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-194">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldValueAsync(Of T) (ordinal As Integer) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetFieldValueAsync : int -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="dbDataReader.GetFieldValueAsync ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0d911-195">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-195">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="0d911-196">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-196">The type of the value to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-197">异步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-197">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-198">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-198">The type of the value to be returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-199">`T` 可以是以下类型之一：</span><span class="sxs-lookup"><span data-stu-id="0d911-199">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="0d911-200">Boolean</span><span class="sxs-lookup"><span data-stu-id="0d911-200">Boolean</span></span>|<span data-ttu-id="0d911-201">Byte</span><span class="sxs-lookup"><span data-stu-id="0d911-201">Byte</span></span>|<span data-ttu-id="0d911-202">Char</span><span class="sxs-lookup"><span data-stu-id="0d911-202">Char</span></span>|<span data-ttu-id="0d911-203">DateTime</span><span class="sxs-lookup"><span data-stu-id="0d911-203">DateTime</span></span>|  
|<span data-ttu-id="0d911-204">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="0d911-204">DateTimeOffset</span></span>|<span data-ttu-id="0d911-205">Decimal</span><span class="sxs-lookup"><span data-stu-id="0d911-205">Decimal</span></span>|<span data-ttu-id="0d911-206">Double</span><span class="sxs-lookup"><span data-stu-id="0d911-206">Double</span></span>|<span data-ttu-id="0d911-207">Float</span><span class="sxs-lookup"><span data-stu-id="0d911-207">Float</span></span>|  
|<span data-ttu-id="0d911-208">Guid</span><span class="sxs-lookup"><span data-stu-id="0d911-208">Guid</span></span>|<span data-ttu-id="0d911-209">Int16</span><span class="sxs-lookup"><span data-stu-id="0d911-209">Int16</span></span>|<span data-ttu-id="0d911-210">Int32</span><span class="sxs-lookup"><span data-stu-id="0d911-210">Int32</span></span>|<span data-ttu-id="0d911-211">Int64</span><span class="sxs-lookup"><span data-stu-id="0d911-211">Int64</span></span>|  
|<span data-ttu-id="0d911-212">字符串</span><span class="sxs-lookup"><span data-stu-id="0d911-212">String</span></span>||||  
  
 <span data-ttu-id="0d911-213">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-213">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-214">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-214">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-215">数据检索期间，<see cref="T:System.Data.Common.DbDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-215">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-216">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-216">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="0d911-217">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-217">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="0d911-218">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-218">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="0d911-219">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-219">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-220">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-220">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-221">
            <paramref name="T" /> 与数据源返回的类型不匹配或无法进行强制转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-221">
              <paramref name="T" /> doesn’t match the type returned by the data source  or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int ordinal, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 ordinal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int ordinal, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;&#xA;override this.GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="dbDataReader.GetFieldValueAsync (ordinal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0d911-222">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-222">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="0d911-223">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-223">The type of the value to be returned.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0d911-224">取消指示，用于对应该取消操作的通知进行传播。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-224">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="0d911-225">此构造函数不对取消做保证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-225">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="0d911-226">设置为 <see langword="CancellationToken.None" /> 将此方法等效于 <see cref="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-226">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="0d911-227">返回任务必须标记为已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-227">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-228">异步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-228">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-229">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-229">The type of the value to be returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-230">`T` 可以是以下类型之一：</span><span class="sxs-lookup"><span data-stu-id="0d911-230">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="0d911-231">Boolean</span><span class="sxs-lookup"><span data-stu-id="0d911-231">Boolean</span></span>|<span data-ttu-id="0d911-232">Byte</span><span class="sxs-lookup"><span data-stu-id="0d911-232">Byte</span></span>|<span data-ttu-id="0d911-233">Char</span><span class="sxs-lookup"><span data-stu-id="0d911-233">Char</span></span>|<span data-ttu-id="0d911-234">DateTime</span><span class="sxs-lookup"><span data-stu-id="0d911-234">DateTime</span></span>|  
|<span data-ttu-id="0d911-235">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="0d911-235">DateTimeOffset</span></span>|<span data-ttu-id="0d911-236">Decimal</span><span class="sxs-lookup"><span data-stu-id="0d911-236">Decimal</span></span>|<span data-ttu-id="0d911-237">Double</span><span class="sxs-lookup"><span data-stu-id="0d911-237">Double</span></span>|<span data-ttu-id="0d911-238">Float</span><span class="sxs-lookup"><span data-stu-id="0d911-238">Float</span></span>|  
|<span data-ttu-id="0d911-239">Guid</span><span class="sxs-lookup"><span data-stu-id="0d911-239">Guid</span></span>|<span data-ttu-id="0d911-240">Int16</span><span class="sxs-lookup"><span data-stu-id="0d911-240">Int16</span></span>|<span data-ttu-id="0d911-241">Int32</span><span class="sxs-lookup"><span data-stu-id="0d911-241">Int32</span></span>|<span data-ttu-id="0d911-242">Int64</span><span class="sxs-lookup"><span data-stu-id="0d911-242">Int64</span></span>|  
|<span data-ttu-id="0d911-243">字符串</span><span class="sxs-lookup"><span data-stu-id="0d911-243">String</span></span>||||  
  
 <span data-ttu-id="0d911-244">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-244">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-245">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-245">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-246">数据检索期间，<see cref="T:System.Data.Common.DbDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-246">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-247">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-247">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="0d911-248">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-248">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="0d911-249">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-249">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="0d911-250">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-250">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-251">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-251">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-252">
            <paramref name="T" /> 与数据源返回的类型不匹配或无法进行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-252">
              <paramref name="T" /> doesn’t match the type returned by the data source or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public abstract float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFloat : int -&gt; single" Usage="dbDataReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-253">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-253">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-254">获取指定列的单精度浮点数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-254">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-255">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-255">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-256">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-256">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public abstract Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetGuid : int -&gt; Guid" Usage="dbDataReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-257">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-257">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-258">获取指定列的全局唯一标识符 (GUID) 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-258">Gets the value of the specified column as a globally-unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-259">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-259">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-260">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-260">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public abstract short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt16 : int -&gt; int16" Usage="dbDataReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-261">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-261">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-262">获取指定列的 16 位有符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-262">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-263">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-263">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-264">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-264">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public abstract int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt32 : int -&gt; int" Usage="dbDataReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-265">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-265">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-266">获取指定列的 32 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-266">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-267">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-267">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetCredits(String connectiongString) {  
   using (SqlConnection conn = new SqlConnection(connectiongString)) {  
      String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]";   
      using (DbCommand command = new SqlCommand(queryString, conn)) {  
         conn.Open();   
         using (DbDataReader reader = command.ExecuteReader()) {  
            while (reader.Read()) {  
               // Credits column is the integer column, and you can use the GetInt32 method                        
               // to return a 32-bit signed integer.                       
               Console.WriteLine("Course:{0,-15} Credits:{1}",reader[1],reader.GetInt32(2));   
            }  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-268">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-268">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public abstract long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt64 : int -&gt; int64" Usage="dbDataReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-269">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-269">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-270">以 64 位有符号整数的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-270">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-271">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-271">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-272">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-272">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public abstract string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetName : int -&gt; string" Usage="dbDataReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-273">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-273">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-274">给定了从零开始的列序号时，获取列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-274">Gets the name of the column, given the zero-based column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-275">指定列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-275">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public abstract int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOrdinal : string -&gt; int" Usage="dbDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0d911-276">列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-276">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-277">给定列名称时，获取列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-277">Gets the column ordinal given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-278">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-278">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-279">指定的名称不是有效的列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-279">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public virtual Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificFieldType : int -&gt; Type&#xA;override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dbDataReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-280">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-280">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-281">返回指定列的提供程序特定的字段类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-281">Returns the provider-specific field type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-282">描述指定列的数据类型的 <see cref="T:System.Type" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-282">The <see cref="T:System.Type" /> object that describes the data type of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public virtual object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificValue : int -&gt; obj&#xA;override this.GetProviderSpecificValue : int -&gt; obj" Usage="dbDataReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-283">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-283">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-284">获取指定列的作为 <see cref="T:System.Object" /> 的实例的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-284">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-285">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-285">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-286">若要确定特定类型的返回的对象，请使用<xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>。</span><span class="sxs-lookup"><span data-stu-id="0d911-286">To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public virtual int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificValues : obj[] -&gt; int&#xA;override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dbDataReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="0d911-287">要将特性列复制到其中的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-287">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-288">获取集合中当前行的所有提供程序特定的特性列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-288">Gets all provider-specific attribute columns in the collection for the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-289">数组中 <see cref="T:System.Object" /> 的实例的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-289">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable&#xA;override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dbDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-290">返回一个 <see cref="T:System.Data.DataTable" />，它描述 <see cref="T:System.Data.Common.DbDataReader" /> 的列元数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-290">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Common.DbDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-291">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-291">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-292">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 是关闭的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-292">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetStream (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStream (ordinal As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetStream(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetStream : int -&gt; System.IO.Stream&#xA;override this.GetStream : int -&gt; System.IO.Stream" Usage="dbDataReader.GetStream ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-293">检索作为 <see cref="T:System.IO.Stream" /> 的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-293">Retrieves data as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-294">检索作为 <see cref="T:System.IO.Stream" /> 的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-294">Retrieves data as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-295">返回的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-295">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-296"><xref:System.Data.Common.DbDataReader.GetStream%2A> 仅支持检索的值可以转换为字节数组。</span><span class="sxs-lookup"><span data-stu-id="0d911-296"><xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays.</span></span>  
  
 <span data-ttu-id="0d911-297">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-297">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-298">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-298">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-299">数据检索期间，<see cref="T:System.Data.Common.DbDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-299">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-300">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-300">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="0d911-301">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-301">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="0d911-302">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-302">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="0d911-303">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-303">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-304">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-304">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-305">返回的类型不属于以下类型之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-305">The returned type was not one of the types below:</span>
          </span>
          <span data-ttu-id="0d911-306">-   binary</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-306">-   binary</span>
          </span>
          <span data-ttu-id="0d911-307">-   image</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-307">-   image</span>
          </span>
          <span data-ttu-id="0d911-308">-   varbinary</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-308">-   varbinary</span>
          </span>
          <span data-ttu-id="0d911-309">-   udt</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-309">-   udt</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public abstract string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetString : int -&gt; string" Usage="dbDataReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-310">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-310">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-311">获取指定列的作为 <see cref="T:System.String" /> 的实例的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-311">Gets the value of the specified column as an instance of <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-312">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-312">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-313">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-313">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public virtual System.IO.TextReader GetTextReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextReader GetTextReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTextReader (ordinal As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::TextReader ^ GetTextReader(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetTextReader : int -&gt; System.IO.TextReader&#xA;override this.GetTextReader : int -&gt; System.IO.TextReader" Usage="dbDataReader.GetTextReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-314">检索作为 <see cref="T:System.IO.TextReader" /> 的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-314">Retrieves data as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-315">检索作为 <see cref="T:System.IO.TextReader" /> 的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-315">Retrieves data as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-316">返回的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-316">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-317"><xref:System.Data.Common.DbDataReader.GetTextReader%2A> 仅支持检索的值可以转换为字符数组 （字符串）。</span><span class="sxs-lookup"><span data-stu-id="0d911-317"><xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings).</span></span>  
  
 <span data-ttu-id="0d911-318">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-318">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-319">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-319">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-320">数据检索期间，<see cref="T:System.Data.Common.DbDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-320">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-321">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-321">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="0d911-322">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-322">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="0d911-323">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-323">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="0d911-324">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-324">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-325">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-325">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0d911-326">返回的类型不属于以下类型之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-326">The returned type was not one of the types below:</span>
          </span>
          <span data-ttu-id="0d911-327">-   char</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-327">-   char</span>
          </span>
          <span data-ttu-id="0d911-328">-   nchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-328">-   nchar</span>
          </span>
          <span data-ttu-id="0d911-329">-   ntext</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-329">-   ntext</span>
          </span>
          <span data-ttu-id="0d911-330">-   nvarchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-330">-   nvarchar</span>
          </span>
          <span data-ttu-id="0d911-331">-   text</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-331">-   text</span>
          </span>
          <span data-ttu-id="0d911-332">-   varchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-332">-   varchar</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; obj" Usage="dbDataReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-333">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-333">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-334">获取指定列的作为 <see cref="T:System.Object" /> 的实例的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-334">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-335">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-335">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : obj[] -&gt; int" Usage="dbDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="0d911-336">要将特性列复制到其中的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-336">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-337">使用当前行的列值来填充对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-337">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-338">数组中 <see cref="T:System.Object" /> 的实例的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-338">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public abstract bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Common.DbDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-339">获取一个值，它指示此 <see cref="T:System.Data.Common.DbDataReader" /> 是否包含一个或多个行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-339">Gets a value that indicates whether this <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d911-340">如果 <see cref="T:System.Data.Common.DbDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-340">
              <see langword="true" /> if the <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public abstract bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Common.DbDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-341">获取一个值，该值指示 <see cref="T:System.Data.Common.DbDataReader" /> 是否已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-341">Gets a value indicating whether the <see cref="T:System.Data.Common.DbDataReader" /> is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d911-342">如果 <see cref="T:System.Data.Common.DbDataReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-342">
              <see langword="true" /> if the <see cref="T:System.Data.Common.DbDataReader" /> is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-343">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 是关闭的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-343">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0d911-344">
            <para>此属性和<see cref="P:System.Data.Common.DbDataReader.RecordsAffected" />应实现读取器关闭时返回一个值。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-344">
              <para>This property and <see cref="P:System.Data.Common.DbDataReader.RecordsAffected" /> should be implemented to return a value when the reader is closed.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public abstract bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNull : int -&gt; bool" Usage="dbDataReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-345">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-345">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-346">获取一个值，该值指示列中是否包含不存在的或已丢失的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-346">Gets a value that indicates whether the column contains nonexistent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-347">如果指定的列与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-347">
              <see langword="true" /> if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-348">调用此方法来检查前调用的类型化的 null 列值 get 方法 (例如， <xref:System.Data.Common.DbDataReader.GetByte%2A>， <xref:System.Data.Common.DbDataReader.GetChar%2A>，依次类推) 以避免引发错误。</span><span class="sxs-lookup"><span data-stu-id="0d911-348">Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDBNullAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-349">
            <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" /> 的异步版本，其获取指示列是否包含不存在或缺失值的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-349">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNullAsync (ordinal As Integer) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.IsDBNullAsync : int -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.IsDBNullAsync ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-350">从零开始的要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-350">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-351">
            <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" /> 的异步版本，其获取指示列是否包含不存在或缺失值的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-351">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-352">如果指定的列值与 <see langword="true" /> 等效，则为 <see langword="DBNull" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-352">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-353">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-353">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-354">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-354">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-355">数据检索期间，<see cref="T:System.Data.Common.DbDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-355">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-356">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-356">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="0d911-357">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-357">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="0d911-358">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-358">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="0d911-359">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-359">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-360">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-360">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 ordinal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int ordinal, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.IsDBNullAsync (ordinal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-361">从零开始的要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-361">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="0d911-362">取消指示，用于对应该取消操作的通知进行传播。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-362">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="0d911-363">此构造函数不对取消做保证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-363">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="0d911-364">设置为 <see langword="CancellationToken.None" /> 将此方法等效于 <see cref="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-364">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="0d911-365">返回任务必须标记为已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-365">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-366">
            <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" /> 的异步版本，其获取指示列是否包含不存在或缺失值的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-366">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
          <span data-ttu-id="0d911-367">可选地，发送操作应取消的注明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-367">Optionally, sends a notification that operations should be cancelled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-368">如果指定的列值与 <see langword="true" /> 等效，则为 <see langword="DBNull" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-368">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-369">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-369">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0d911-370">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-370">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-371">数据检索期间，<see cref="T:System.Data.Common.DbDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-371">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="0d911-372">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-372">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="0d911-373">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-373">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="0d911-374">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-374">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="0d911-375">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-375">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-376">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-376">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-377">获取指定列的作为 <see cref="T:System.Object" /> 实例的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-377">Gets the value of a specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Common.DbDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-378">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-378">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-379">获取指定列的作为 <see cref="T:System.Object" /> 的实例的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-379">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d911-380">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-380">The value of the specified column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-381">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-381">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Common.DbDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0d911-382">列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-382">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-383">获取指定列的作为 <see cref="T:System.Object" /> 的实例的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-383">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d911-384">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-384">The value of the specified column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0d911-385">未找到具有指定名称的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-385">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public abstract bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="dbDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-386">读取批处理语句的结果时，使读取器前进到下一个结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-386">Advances the reader to the next result when reading the results of a batch of statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-387">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-387">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-388">此方法可用于处理向数据提供程序提交一批语句后返回的多个结果集。</span><span class="sxs-lookup"><span data-stu-id="0d911-388">This method allows you to process multiple result sets returned when a batch is submitted to the data provider.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextResultAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-389">实现一个 <see cref="M:System.Data.Common.DbDataReader.NextResult" /> 的异步版本，但阻塞调用线程时同步返回一个任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-389">Implements the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />, but returns a Task synchronously, blocking the calling thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-390">有关异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-390">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResultAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResultAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync();" />
      <MemberSignature Language="F#" Value="member this.NextResultAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.NextResultAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-391">
            <see cref="M:System.Data.Common.DbDataReader.NextResult" /> 的异步版本，读取批处理语句的结果时，将读取器推进到下一个结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-391">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />, which advances the reader to the next result when reading the results of a batch of statements.</span>
          </span>
          <span data-ttu-id="0d911-392">通过 CancellationToken.None 调用 <see cref="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-392">Invokes <see cref="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" /> with CancellationToken.None.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-393">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-393">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-394">有关异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-394">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="0d911-395">执行命令文本时出现的一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-395">An error occurred while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.NextResultAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="0d911-396">取消指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-396">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-397">这是 <see cref="M:System.Data.Common.DbDataReader.NextResult" /> 的异步版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-397">This is the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />.</span>
          </span>
          <span data-ttu-id="0d911-398">提供程序应使用合适的实现进行重写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-398">Providers should override with an appropriate implementation.</span>
          </span>
          <span data-ttu-id="0d911-399">可选择性忽略 <paramref name="cancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-399">The <paramref name="cancellationToken" /> may optionally be ignored.</span>
          </span>
          <span data-ttu-id="0d911-400">默认实现调用同步 <see cref="M:System.Data.Common.DbDataReader.NextResult" /> 方法并返回已完成任务，以便阻止调用线程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-400">The default implementation invokes the synchronous <see cref="M:System.Data.Common.DbDataReader.NextResult" /> method and returns a completed task, blocking the calling thread.</span>
          </span>
          <span data-ttu-id="0d911-401">如果传递到已取消 <paramref name="cancellationToken" />，则默认实现将返回已取消的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-401">The default implementation will return a cancelled task if passed an already cancelled <paramref name="cancellationToken" />.</span>
          </span>
          <span data-ttu-id="0d911-402">
            <see cref="M:System.Data.Common.DbDataReader.NextResult" /> 引发的异常将通过任务异常属性传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-402">Exceptions thrown by <see cref="M:System.Data.Common.DbDataReader.NextResult" /> will be communicated via the returned Task Exception property.</span>
          </span>
          <span data-ttu-id="0d911-403">当返回任务还未完成时， DbDataReader 对象的其他方法和属性不应调用 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-403">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-404">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-404">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-405">有关异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-405">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="0d911-406">执行命令文本时出现的一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-406">An error occurred while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="dbDataReader.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-407">将读取器前进到结果集中的下一个记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-407">Advances the reader to the next record in a result set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-408">如果存在多个行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-408">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-409">数据读取器的默认位置处于第一条记录之前。</span><span class="sxs-lookup"><span data-stu-id="0d911-409">The default position of a data reader is before the first record.</span></span> <span data-ttu-id="0d911-410">因此，您必须调用<xref:System.Data.Common.DbDataReader.Read%2A>才能开始访问数据。</span><span class="sxs-lookup"><span data-stu-id="0d911-410">Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-411">实现一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 的异步版本，但阻塞调用线程时同步返回一个任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-411">Implements the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />, but returns a Task synchronously, blocking the calling thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-412">有关异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-412">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d911-413">
            <see cref="M:System.Data.Common.DbDataReader.Read" />的异步版本，将读取器前移到结果集的下一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-413">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />, which advances the reader to the next record in a result set.</span>
          </span>
          <span data-ttu-id="0d911-414">此方法通过 CancellationToken.None 调用 <see cref="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-414">This method invokes <see cref="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" /> with CancellationToken.None.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-415">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-415">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-416">有关异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-416">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="0d911-417">执行命令文本时出现的一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-417">An error occurred while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="0d911-418">取消指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-418">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-419">这是 <see cref="M:System.Data.Common.DbDataReader.Read" /> 的异步版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-419">This is the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />.</span>
          </span>
          <span data-ttu-id="0d911-420">提供程序应使用合适的实现进行重写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-420">Providers should override with an appropriate implementation.</span>
          </span>
          <span data-ttu-id="0d911-421">可选择性忽略的 cancellationToken。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-421">The cancellationToken may optionally be ignored.</span>
          </span>
          <span data-ttu-id="0d911-422">默认实现调用同步 <see cref="M:System.Data.Common.DbDataReader.Read" /> 方法并返回已完成任务，以便阻止调用线程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-422">The default implementation invokes the synchronous <see cref="M:System.Data.Common.DbDataReader.Read" /> method and returns a completed task, blocking the calling thread.</span>
          </span>
          <span data-ttu-id="0d911-423">如果传递到已取消的取消标记，则默认实现将返回已取消的 cancellationToken。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-423">The default implementation will return a cancelled task if passed an already cancelled cancellationToken.</span>
          </span>
          <span data-ttu-id="0d911-424">Read 引发的异常将通过返回的任务异常属性传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-424">Exceptions thrown by Read will be communicated via the returned Task Exception property.</span>
          </span>
          <span data-ttu-id="0d911-425">在返回的任务完成前，不要调用 <see langword="DbDataReader" /> 对象的其他方法和属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-425">Do not invoke other methods and properties of the <see langword="DbDataReader" /> object until the returned Task is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-426">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-426">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-427">有关异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="0d911-427">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="0d911-428">执行命令文本时出现的一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-428">An error occurred while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public abstract int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Common.DbDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-429">通过执行 SQL 语句获取更改、插入或删除的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-429">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d911-430">更改、插入或删除的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-430">The number of rows changed, inserted, or deleted.</span>
          </span>
          <span data-ttu-id="0d911-431">对于 SELECT 语句为 -1；如果没影响任何行或该语句失败，则为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-431">-1 for SELECT statements; 0 if no rows were affected or the statement failed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-432">`RecordsAffected`读取所有行并在关闭之前未设置属性`DataReader`。</span><span class="sxs-lookup"><span data-stu-id="0d911-432">The `RecordsAffected` property is not set until all rows are read and you close the `DataReader`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0d911-433">
            <para>此属性和<see cref="P:System.Data.Common.DbDataReader.IsClosed" />应实现读取器关闭时返回一个值。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-433">
              <para>This property and <see cref="P:System.Data.Common.DbDataReader.IsClosed" /> should be implemented to return a value when the reader is closed.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataReader.Close">
      <MemberSignature Language="C#" Value="void IDataReader.Close ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.IDataReader.Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataReader#Close" />
      <MemberSignature Language="VB.NET" Value="Sub Close () Implements IDataReader.Close" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.IDataReader.Close() = System::Data::IDataReader::Close;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataReader.GetSchemaTable">
      <MemberSignature Language="C#" Value="System.Data.DataTable IDataReader.GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.DataTable System.Data.IDataReader.GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Function GetSchemaTable () As DataTable Implements IDataReader.GetSchemaTable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::DataTable ^ System.Data.IDataReader.GetSchemaTable() = System::Data::IDataReader::GetSchemaTable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (ordinal As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int ordinal) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="0d911-434">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-434">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d911-435">有关此成员的说明，请参见 <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-435">For a description of this member, see <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d911-436">在字段指向更多的远程结构化数据时使用的 <see cref="T:System.Data.IDataReader" /> 的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-436">An instance of <see cref="T:System.Data.IDataReader" /> to be used when the field points to more remote structured data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-437">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0d911-437">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0d911-438">它只能在 <xref:System.Data.Common.DbDataReader> 实例强制转换为 <xref:System.Data.IDataRecord> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0d911-438">It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public virtual int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.Common.DbDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d911-439">获取 <see cref="T:System.Data.Common.DbDataReader" /> 中未隐藏的字段的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-439">Gets the number of fields in the <see cref="T:System.Data.Common.DbDataReader" /> that are not hidden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d911-440">未隐藏的字段的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d911-440">The number of fields that are not hidden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d911-441">此值用于确定 <xref:System.Data.Common.DbDataReader> 中的可见字段的数目。</span><span class="sxs-lookup"><span data-stu-id="0d911-441">This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible.</span></span> <span data-ttu-id="0d911-442">例如，对分部主键执行 SELECT 将以隐藏字段的形式返回该键的其余部分。</span><span class="sxs-lookup"><span data-stu-id="0d911-442">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="0d911-443">隐藏的字段始终追加在可见字段之后。</span><span class="sxs-lookup"><span data-stu-id="0d911-443">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>