<Type Name="DbCommandBuilder" FullName="System.Data.Common.DbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bfb54f7b76a4739f53cb9e965eb71e14aa89733" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbCommandBuilder : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandBuilder extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbCommandBuilder&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbCommandBuilder abstract : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="95387-101">自动生成用于协调 <see cref="T:System.Data.DataSet" /> 的更改与关联数据库的单表命令。</span>
      <span class="sxs-lookup">
        <span data-stu-id="95387-101">Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      </span>
      <span data-ttu-id="95387-102">这是一个只能被继承的抽象类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="95387-102">This is an abstract class that can only be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-103"><xref:System.Data.Common.DbCommandBuilder>类为提供程序编写者创建其自己命令生成器方便而提供。</span><span class="sxs-lookup"><span data-stu-id="95387-103">The <xref:System.Data.Common.DbCommandBuilder> class is provided for the convenience of provider writers creating their own command builders.</span></span> <span data-ttu-id="95387-104">通过继承此类，开发人员可以在其自己的代码中实现提供程序特定的行为。</span><span class="sxs-lookup"><span data-stu-id="95387-104">By inheriting from this class, developers can implement provider specific behavior in their own code.</span></span>  
  
 <span data-ttu-id="95387-105"><xref:System.Data.Common.DbDataAdapter>不会自动生成所需进行对帐对所做更改的 SQL 语句<xref:System.Data.DataSet>与关联的数据源。</span><span class="sxs-lookup"><span data-stu-id="95387-105">The <xref:System.Data.Common.DbDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated data source.</span></span> <span data-ttu-id="95387-106">但是，你可以创建<xref:System.Data.Common.DbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>属性<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-106">However, you can create a <xref:System.Data.Common.DbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Common.DbDataAdapter>.</span></span> <span data-ttu-id="95387-107">然后，你未设置任何其他 SQL 语句都由<xref:System.Data.Common.DbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="95387-107">Then, any additional SQL statements that you do not set are generated by the <xref:System.Data.Common.DbCommandBuilder>.</span></span>  
  
 <span data-ttu-id="95387-108"><xref:System.Data.Common.DbCommandBuilder>将自己注册为侦听器<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>事件每当你设置<xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="95387-108">The <xref:System.Data.Common.DbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> property.</span></span> <span data-ttu-id="95387-109">你可以仅将一个相关联<xref:System.Data.Common.DbDataAdapter>或<xref:System.Data.Common.DbCommandBuilder>与每个其他对象一次。</span><span class="sxs-lookup"><span data-stu-id="95387-109">You can only associate one <xref:System.Data.Common.DbDataAdapter> or <xref:System.Data.Common.DbCommandBuilder> object with each other at one time.</span></span>  
  
 <span data-ttu-id="95387-110">若要生成 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbCommandBuilder>使用<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>要自动检索所需的元数据集属性。</span><span class="sxs-lookup"><span data-stu-id="95387-110">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.Common.DbCommandBuilder> uses the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically.</span></span> <span data-ttu-id="95387-111">如果你更改<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>已 （例如，在第一个更新中） 中检索的元数据后，应调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法来更新元数据。</span><span class="sxs-lookup"><span data-stu-id="95387-111">If you change the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> after the metadata has been retrieved (for example, after the first update), you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
 <span data-ttu-id="95387-112">`SelectCommand` 还必须至少返回一个主键或唯一列。</span><span class="sxs-lookup"><span data-stu-id="95387-112">The `SelectCommand` must also return at least one primary key or unique column.</span></span> <span data-ttu-id="95387-113">如果不存在，请<xref:System.InvalidOperationException>则会生成异常，并不会生成命令。</span><span class="sxs-lookup"><span data-stu-id="95387-113">If none exist, an <xref:System.InvalidOperationException> exception is generated, and the commands are not generated.</span></span>  
  
 <span data-ttu-id="95387-114"><xref:System.Data.Common.DbCommandBuilder>还使用<xref:System.Data.Common.DbCommand.Connection%2A>， <xref:System.Data.Common.DbCommand.CommandTimeout%2A>，和<xref:System.Data.Common.DbCommand.Transaction%2A>属性引用的<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-114">The <xref:System.Data.Common.DbCommandBuilder> also uses the <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, and <xref:System.Data.Common.DbCommand.Transaction%2A> properties referenced by the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="95387-115">用户应调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果修改了任何这些属性，或如果<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>本身被替换。</span><span class="sxs-lookup"><span data-stu-id="95387-115">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if any of these properties are modified, or if the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> itself is replaced.</span></span> <span data-ttu-id="95387-116">否则为<xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>， <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>，和<xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>属性保留其以前的值。</span><span class="sxs-lookup"><span data-stu-id="95387-116">Otherwise the <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="95387-117">如果调用<xref:System.ComponentModel.Component.Dispose%2A>、<xref:System.Data.Common.DbCommandBuilder>与解除关联<xref:System.Data.Common.DbDataAdapter>，并且不再使用所生成的命令。</span><span class="sxs-lookup"><span data-stu-id="95387-117">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.Common.DbCommandBuilder> is disassociated from the <xref:System.Data.Common.DbDataAdapter>, and the generated commands are no longer used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95387-118">初始化从 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类继承的类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-118">Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow row, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ row, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="95387-119">要将附加修改应用到的 <see cref="T:System.Data.Common.DbParameter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-119">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="95387-120">来自由 <see cref="T:System.Data.DataRow" /> 提供的架构表的 <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-120">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="95387-121">生成的命令的类型；INSERT、UPDATE 或 DELETE。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-121">The type of command being generated; INSERT, UPDATE or DELETE.</span>
          </span>
        </param>
        <param name="whereClause">
          <span data-ttu-id="95387-122">如果参数是 update 或 delete WHERE 子句的一部分，则为 <see langword="true" />；如果是 insert 或 update 值的一部分，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-122">
              <see langword="true" /> if the parameter is part of the update or delete WHERE clause, <see langword="false" /> if it is part of the insert or update values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-123">允许 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的提供程序实现处理附加参数属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-123">Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-124">此方法允许的实现<xref:System.Data.Common.DbCommandBuilder>类来处理特定于提供程序的参数属性。</span><span class="sxs-lookup"><span data-stu-id="95387-124">This method allows an implementation of the <xref:System.Data.Common.DbCommandBuilder> class to handle provider-specific parameter properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95387-125">对于 <see cref="T:System.Data.Common.CatalogLocation" /> 类的实例，设置或获取 <see cref="T:System.Data.Common.DbCommandBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95387-126">
            <see cref="T:System.Data.Common.CatalogLocation" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-126">A <see cref="T:System.Data.Common.CatalogLocation" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public virtual string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95387-127">设置或获取一个字符串，该字符串用作 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的目录分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95387-128">一个字符串，指示用于 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的目录分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-128">A string indicating the catalog separator for use with an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictOption">
      <MemberSignature Language="C#" Value="public virtual System.Data.ConflictOption ConflictOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConflictOption ConflictOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConflictOption As ConflictOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConflictOption ConflictOption { System::Data::ConflictOption get(); void set(System::Data::ConflictOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConflictOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95387-129">指定哪个 <see cref="T:System.Data.ConflictOption" /> 将由 <see cref="T:System.Data.Common.DbCommandBuilder" /> 使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-129">Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95387-130">返回描述此 <see cref="T:System.Data.ConflictOption" /> 行为的 <see cref="T:System.Data.Common.DbCommandBuilder" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-130">Returns one of the <see cref="T:System.Data.ConflictOption" /> values describing the behavior of this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbDataAdapter ^ DataAdapter { System::Data::Common::DbDataAdapter ^ get(); void set(System::Data::Common::DbDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95387-131">获取或设置自动为其生成 Transact-SQL 语句的一个 <see cref="T:System.Data.Common.DbDataAdapter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-131">Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95387-132">
            <see cref="T:System.Data.Common.DbDataAdapter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-132">A <see cref="T:System.Data.Common.DbDataAdapter" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-133"><xref:System.Data.Common.DbCommandBuilder>将自己注册为侦听器<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>由生成的事件<xref:System.Data.Common.DbDataAdapter>此属性中指定。</span><span class="sxs-lookup"><span data-stu-id="95387-133">The <xref:System.Data.Common.DbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Common.DbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="95387-134">当你创建的新实例<xref:System.Data.Common.DbCommandBuilder>，任何现有<xref:System.Data.Common.DbCommandBuilder>与此关联<xref:System.Data.Common.DbDataAdapter>释放。</span><span class="sxs-lookup"><span data-stu-id="95387-134">When you create a new instance of <xref:System.Data.Common.DbCommandBuilder>, any existing <xref:System.Data.Common.DbCommandBuilder> associated with this <xref:System.Data.Common.DbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="95387-135">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-135">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-136">释放由 <see cref="T:System.Data.Common.DbCommandBuilder" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-136">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-137">此方法称为由公共<xref:System.Data.Common.DbCommandBuilder.Dispose%2A>方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="95387-137">This method is called by the public <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method and the `Finalize` method.</span></span> <span data-ttu-id="95387-138"><xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 调用受保护<xref:System.Data.Common.DbCommandBuilder.Dispose%2A>方法释放参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="95387-138"><xref:System.Data.Common.DbCommandBuilder.Dispose%2A> invokes the protected <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="95387-139">`Finalize` 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="95387-139">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="95387-140">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Data.Common.DbCommandBuilder> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="95387-140">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Data.Common.DbCommandBuilder> references.</span></span> <span data-ttu-id="95387-141">此方法调用每个引用对象的 <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="95387-141">This method invokes the <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="95387-142">
              <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95387-142">
                <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="95387-143">重写 <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /> 时，请注意不要引用在以前调用 <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> 时已释放的对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95387-143">When overriding <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />.</span>
            </span>
            <span data-ttu-id="95387-144">有关如何实现详细信息<see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95387-144">For more information about how to implement <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="95387-145">有关详细信息<see langword="Dispose" />和<see langword="Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="95387-145">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95387-146">获取在数据源中执行删除操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-146">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-147">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-147">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-148">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-148">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-149">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>和修改关联的命令文本中，然后上显式设置<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-149">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the associated command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-150">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-150">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-151">否则为<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-151">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-152">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-152">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="95387-153">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="95387-153">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="95387-154">如果重载的版本的<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>你可以通过提供一个布尔值，指定此行为可能会导致<xref:System.Data.Common.DbCommandBuilder>生成通过传递改为根据列名称的参数`True`。</span><span class="sxs-lookup"><span data-stu-id="95387-154">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> allows you to specify this behavior by supplying a Boolean value, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead by passing `True`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95387-155">获取在数据源中执行删除操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-155">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-156">自动生成的、执行删除操作所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-156">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-157">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-157">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-158">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-158">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-159">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>和修改命令文本中，然后上显式设置<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-159">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-160">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-160">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-161">否则为<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-161">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-162">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-162">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="95387-163">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-163">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="95387-164">如果为 <see langword="false" />，则生成 @p1、@p2，以此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-164">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-165">获取对数据源执行删除操作所必需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象，可选择使用列作为参数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-165">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-166">自动生成的、执行删除操作所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-166">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-167">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-167">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-168">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-168">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-169">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>和修改命令文本中，然后上显式设置<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-169">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-170">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-170">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-171">否则为<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-171">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-172">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-172">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="95387-173">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="95387-173">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="95387-174">传递`true`为`useColumnsForParameterNames`参数使你可以强制<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</span><span class="sxs-lookup"><span data-stu-id="95387-174">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="95387-175">仅当满足以下条件，此操作将成功。</span><span class="sxs-lookup"><span data-stu-id="95387-175">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="95387-176"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</span><span class="sxs-lookup"><span data-stu-id="95387-176">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="95387-177">生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</span><span class="sxs-lookup"><span data-stu-id="95387-177">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="95387-178">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="95387-178">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95387-179">获取在数据源中执行插入操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-179">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-180">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>方法为信息性或故障排除目的，因为它返回的文本<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-180">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-181">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-181">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-182">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>和修改命令文本，然后上显式设置该<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-182">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-183">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-183">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-184">否则为<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-184">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-185">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-185">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="95387-186">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="95387-186">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="95387-187">如果重载的版本的<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>允许你指定此行为，你可能会导致<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</span><span class="sxs-lookup"><span data-stu-id="95387-187">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> allows you to specify this behavior, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95387-188">获取在数据源中执行插入操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-188">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-189">自动生成的、执行插入操作所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-189">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-190">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>方法为信息性或故障排除目的，因为它返回的文本<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-190">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-191">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-191">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-192">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>和修改命令文本中，然后上显式设置<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-192">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-193">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-193">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-194">否则为<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-194">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-195">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-195">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="95387-196">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-196">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="95387-197">如果为 <see langword="false" />，则生成 @p1、@p2，以此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-197">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-198">获取对数据源执行插入操作所必需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象，可选择使用列作为参数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-198">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-199">自动生成的、执行插入操作所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-199">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-200">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>方法为信息性或故障排除目的，因为它返回的文本<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-200">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-201">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-201">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-202">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>和修改命令文本中，然后上显式设置<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-202">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-203">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-203">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-204">否则为<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-204">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-205">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-205">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="95387-206">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="95387-206">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="95387-207">传递`true`为`useColumnsForParameterNames`参数使你可以强制<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</span><span class="sxs-lookup"><span data-stu-id="95387-207">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="95387-208">基于列名称的参数生成成功仅当满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="95387-208">Generation of the parameters based on column names succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="95387-209"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</span><span class="sxs-lookup"><span data-stu-id="95387-209">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="95387-210">生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</span><span class="sxs-lookup"><span data-stu-id="95387-210">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="95387-211">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="95387-211">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParameterName">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95387-212">返回指定参数的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-212">Returns the name of the specified parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">
          <span data-ttu-id="95387-213">作为参数名的一部分而包含的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-213">The number to be included as part of the parameter's name..</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-214">以 @p*#* 格式返回指定参数的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-214">Returns the name of the specified parameter in the format of @p*#*.</span>
          </span>
          <span data-ttu-id="95387-215">在生成自定义命令生成器时使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-215">Use when building a custom command builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-216">参数名，其中包含作为参数名的一部分而附加的指定数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-216">The name of the parameter with the specified number appended as part of the parameter name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="95387-217">参数的部分名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-217">The partial name of the parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-218">给定部分参数名，返回完整参数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-218">Returns the full parameter name, given the partial parameter name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-219">对应于所请求的部分参数名的完整参数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-219">The full parameter name corresponding to the partial parameter name requested.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">
          <span data-ttu-id="95387-220">作为参数名的一部分而包含的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-220">The number to be included as part of the parameter's name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-221">返回该参数在关联的 SQL 语句中的占位符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-221">Returns the placeholder for the parameter in the associated SQL statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-222">附加了指定数字的参数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-222">The name of the parameter with the specified number appended.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-223">此方法仅供用于构建自定义命令生成器的提供程序编写器。</span><span class="sxs-lookup"><span data-stu-id="95387-223">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand sourceCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchemaTable (sourceCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ sourceCommand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="sourceCommand">
          <span data-ttu-id="95387-224">要为其检索对应架构表的 <see cref="T:System.Data.Common.DbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-224">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-225">返回 <see cref="T:System.Data.Common.DbCommandBuilder" /> 的架构表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-225">Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-226">表示特定 <see cref="T:System.Data.DataTable" /> 的架构的 <see cref="T:System.Data.Common.DbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-226">A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-227">此方法仅供用于构建自定义命令生成器的提供程序编写器。</span><span class="sxs-lookup"><span data-stu-id="95387-227">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95387-228">获取在数据源中执行更新操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-228">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-229">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-229">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-230">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-230">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-231">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>和修改命令文本中，然后上显式设置<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-231">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-232">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-232">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-233">否则为<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-233">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-234">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-234">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="95387-235">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="95387-235">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="95387-236">如果重载的版本的<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>允许你指定此行为，你可能会导致<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</span><span class="sxs-lookup"><span data-stu-id="95387-236">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> allows you to specify this behavior, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95387-237">获取在数据源中执行更新操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-237">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-238">自动生成的、执行更新所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-238">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-239">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-239">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-240">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-240">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-241">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>和修改命令文本中，然后上显式设置<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-241">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-242">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-242">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-243">否则为<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-243">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-244">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-244">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="95387-245">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-245">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="95387-246">如果为 <see langword="false" />，则生成 @p1、@p2，以此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-246">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-247">获取对数据源执行更新操作所必需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象，可选择使用列作为参数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-247">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-248">自动生成的、执行更新所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-248">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-249">应用程序可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.Common.DbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="95387-249">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="95387-250">你还可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="95387-250">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="95387-251">例如，你可能会调用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>和修改命令文本，然后上显式设置该<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-251">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="95387-252">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="95387-252">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="95387-253">否则为<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-253">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="95387-254">SQL 语句是第一个当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="95387-254">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="95387-255">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="95387-255">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="95387-256">传递`true`为`useColumnsForParameterNames`参数使你可以强制<xref:System.Data.Common.DbCommandBuilder>生成改为根据列名称的参数。</span><span class="sxs-lookup"><span data-stu-id="95387-256">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="95387-257">基于列名称的参数生成成功仅当满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="95387-257">Generation of the parameters based on column names succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="95387-258"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</span><span class="sxs-lookup"><span data-stu-id="95387-258">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="95387-259">生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</span><span class="sxs-lookup"><span data-stu-id="95387-259">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="95387-260">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="95387-260">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="95387-261">由命令生成器用于对应的 insert、update 或 delete 命令的 <see cref="T:System.Data.Common.DbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-261">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-262">重置 <see cref="P:System.Data.Common.DbCommand.CommandTimeout" /> 上的 <see cref="P:System.Data.Common.DbCommand.Transaction" />、<see cref="P:System.Data.Common.DbCommand.CommandType" />、<see cref="T:System.Data.UpdateRowSource" /> 和 <see cref="T:System.Data.Common.DbCommand" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-262">Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-263">用于每个 insert、update 或 delete 操作的 <see cref="T:System.Data.Common.DbCommand" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-263">A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation.</span>
          </span>
          <span data-ttu-id="95387-264">传入一个 null 值将允许 <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> 方法根据与 <see cref="T:System.Data.Common.DbCommand" /> 关联的 Select 命令创建 <see cref="T:System.Data.Common.DbCommandBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-264">Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-265">此方法仅供用于构建自定义命令生成器的提供程序编写器。</span><span class="sxs-lookup"><span data-stu-id="95387-265">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="95387-266">不带引号的原始标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-266">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-267">以正确的目录大小写给定一个不带引号的标识符，返回该标识符的带引号的正确形式，包括正确转义该标识符中嵌入的任何引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-267">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-268">带引号的标识符版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-268">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="95387-269">该标识符中嵌入的引号已正确转义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-269">Embedded quotes within the identifier are properly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public virtual string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95387-270">获取或设置指定其名称包含空格或保留标记等字符的数据库对象（例如，表或列）时使用的开始字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-270">Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95387-271">要使用的起始字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-271">The beginning character or characters to use.</span>
          </span>
          <span data-ttu-id="95387-272">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-272">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-273">某些数据源可能具有可以包含空格、 逗号、 分号等字符的对象。</span><span class="sxs-lookup"><span data-stu-id="95387-273">Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</span></span> <span data-ttu-id="95387-274">若要适应此功能，使用<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>和<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>属性以指定分隔符，如左的括号和右括号封装的对象名称。</span><span class="sxs-lookup"><span data-stu-id="95387-274">To accommodate this capability, use the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95387-275">虽然不能更改<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>或<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>属性插入、 更新或删除生成命令，可以将其设置更改后调用`Update`方法<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-275">Although you cannot change the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> or <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95387-276">当生成 Insert、Update 或 Delete 命令后，不能更改此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-276">This property cannot be changed after an insert, update, or delete command has been generated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public virtual string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95387-277">获取或设置一个或多个结束字符，供指定其名称中包含空格或保留标记等字符的数据库对象（例如，表或列）时使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-277">Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95387-278">要使用的结束字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-278">The ending character or characters to use.</span>
          </span>
          <span data-ttu-id="95387-279">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-279">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-280">某些数据源可能具有可以包含空格、 逗号、 分号等字符的对象。</span><span class="sxs-lookup"><span data-stu-id="95387-280">Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</span></span> <span data-ttu-id="95387-281">若要适应此功能，使用<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>和<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>属性以指定分隔符，如左的括号和右括号封装的对象名称。</span><span class="sxs-lookup"><span data-stu-id="95387-281">To accommodate this capability, use the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95387-282">虽然不能更改<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>或<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>属性插入、 更新或删除生成命令，可以将其设置更改后调用`Update`方法<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="95387-282">Although you cannot change the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> or <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95387-283">清除与此 <see cref="T:System.Data.Common.DbCommandBuilder" /> 关联的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-283">Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-284">调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法可以有效地删除所有<xref:System.Data.Common.DbCommand>引用对象<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>，</span><span class="sxs-lookup"><span data-stu-id="95387-284">Calling the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method effectively removes all the <xref:System.Data.Common.DbCommand> objects referred to by the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,</span></span>  
  
 <span data-ttu-id="95387-285"><xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,</span><span class="sxs-lookup"><span data-stu-id="95387-285"><xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,</span></span>  
  
 <span data-ttu-id="95387-286"><xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> 和</span><span class="sxs-lookup"><span data-stu-id="95387-286"><xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, and</span></span>  
  
 <span data-ttu-id="95387-287"><xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="95387-287"><xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RowUpdatingHandler(class System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RowUpdatingHandler (rowUpdatingEvent As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RowUpdatingHandler(System::Data::Common::RowUpdatingEventArgs ^ rowUpdatingEvent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowUpdatingEvent" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowUpdatingEvent">
          <span data-ttu-id="95387-288">包含关于该事件的信息的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-288">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-289">添加 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 事件的事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-289">Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public virtual string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95387-290">获取或设置要用作架构标识符和任何其他标识符之间的分隔符的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-290">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95387-291">要用作架构分隔符的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-291">The character to be used as the schema separator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-292">通常情况下，数据库服务器通过将架构名称与具有某些字符标识符分离指示标识符的架构。</span><span class="sxs-lookup"><span data-stu-id="95387-292">Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</span></span> <span data-ttu-id="95387-293">例如，SQL Server 使用了一个冒号，如创建完整的标识符**人员： CustomerName**，其中"Person"是架构名称，"CustomerName"是的标识符。</span><span class="sxs-lookup"><span data-stu-id="95387-293">For example, SQL Server uses a colon, creating complete identifiers such as **Person:CustomerName**, where "Person" is the schema name and "CustomerName" is the identifier.</span></span> <span data-ttu-id="95387-294">设置此属性允许开发人员修改此行为。</span><span class="sxs-lookup"><span data-stu-id="95387-294">Setting this property allows developers to modify this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllValues">
      <MemberSignature Language="C#" Value="public bool SetAllValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetAllValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SetAllValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetAllValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95387-295">指定 update 语句中是包含所有列值还是仅包含更改的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-295">Specifies whether all column values in an update statement are included or only changed ones.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95387-296">如果 <see cref="T:System.Data.Common.DbCommandBuilder" /> 生成的 UPDATE 语句包含所有列，则为 <see langword="true" />；如果它仅包含更改的列，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-296">
              <see langword="true" /> if the UPDATE statement generated by the <see cref="T:System.Data.Common.DbCommandBuilder" /> includes all columns; <see langword="false" /> if it includes only changed columns.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-297">生成的 UPDATE 语句<xref:System.Data.Common.DbCommandBuilder>可能包括有关所有列的更新信息也可以包括仅其值已更改，这些列的信息。</span><span class="sxs-lookup"><span data-stu-id="95387-297">The UPDATE statement generated by a <xref:System.Data.Common.DbCommandBuilder> can include update information about all the columns, or it can include information only about those columns whose values have changed.</span></span> <span data-ttu-id="95387-298">设置<xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A>属性`true`是否或不更改其值将导致生成的 UPDATE 语句，以包括所有列。</span><span class="sxs-lookup"><span data-stu-id="95387-298">Setting the <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> property to `true` causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="95387-299">要用于更新的 <see cref="T:System.Data.Common.DbDataAdapter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-299">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-300">注册 <see cref="T:System.Data.Common.DbCommandBuilder" /> 以处理 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 的 <see cref="T:System.Data.Common.DbDataAdapter" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-300">Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95387-301">此方法仅供用于构建自定义命令生成器的提供程序编写器。</span><span class="sxs-lookup"><span data-stu-id="95387-301">This method is intended for use by provider writers building a custom command builder.</span></span> <span data-ttu-id="95387-302">当新<xref:System.Data.Common.DbDataAdapter>添加到<xref:System.Data.Common.DbCommandBuilder>，也会为的 DbDataAdapter 注册**RowUpdating**事件。</span><span class="sxs-lookup"><span data-stu-id="95387-302">When a new <xref:System.Data.Common.DbDataAdapter> is added to the <xref:System.Data.Common.DbCommandBuilder>, it is registered for the DbDataAdapter's **RowUpdating** event.</span></span> <span data-ttu-id="95387-303">如果具有相同再次调用此方法<xref:System.Data.Common.DbDataAdapter>、<xref:System.Data.Common.DbCommandBuilder>是为该 DbDataAdapter 注销**RowUpdating**事件。</span><span class="sxs-lookup"><span data-stu-id="95387-303">If this method is called again with the same <xref:System.Data.Common.DbDataAdapter>, the <xref:System.Data.Common.DbCommandBuilder> is unregistered for that DbDataAdapter's **RowUpdating** event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="95387-304">其嵌入引号将被移除的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-304">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95387-305">给定一个带引号的标识符，返回该标识符的不带引号的正确形式，包括正确地取消转义该标识符中嵌入的任何引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-305">Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95387-306">不带引号的标识符，其中嵌入的引号已正确进行取消转义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="95387-306">The unquoted identifier, with embedded quotes properly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>