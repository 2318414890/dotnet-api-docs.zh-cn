<Type Name="DbProviderServices" FullName="System.Data.Common.DbProviderServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce0d0df986ee3200f4eb6f71535ee4608a56f099" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbProviderServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbProviderServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbProviderServices" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbProviderServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbProviderServices abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9d963-101">用于生成命令定义的工厂；用该对象的类型作为程序提供工厂中的 IServiceProvider.GetService 方法参数；</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d963-101">The factory for building command definitions; use the type of this object as the argument to the IServiceProvider.GetService method on the provider factory;</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d963-102">这里不会更新任何内容；请不要在这里添加材料。</span><span class="sxs-lookup"><span data-stu-id="9d963-102">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbProviderServices ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbProviderServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d963-103">初始化 <see cref="T:System.Data.Common.DbProviderServices" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-103">Initializes a new instance of the <see cref="T:System.Data.Common.DbProviderServices" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCommandDefinition">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d963-104">从指定的命令定义创建命令定义对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-104">Creates a command definition object from the specified command definition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommandDefinition (commandTree As DbCommandTree) As DbCommandDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommandDefinition ^ CreateCommandDefinition(System::Data::Common::CommandTrees::DbCommandTree ^ commandTree);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="commandTree">
          <span data-ttu-id="9d963-105">命令树。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-105">The command tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-106">从命令树创建命令定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-106">Creates command definition from command tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-107">已创建的命令定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-107">The created command definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.DbCommand prototype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.DbCommand prototype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCommandDefinition (prototype As DbCommand) As DbCommandDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::Common::DbCommandDefinition ^ CreateCommandDefinition(System::Data::Common::DbCommand ^ prototype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prototype" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="prototype">
          <span data-ttu-id="9d963-108">用于创建命令定义的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-108">The command used to create command definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-109">创建使用指定命令的命令定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-109">Creates a command definition that uses a specified command.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-110">使用指定命令的已创建命令定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-110">The created command definition that uses a specified command.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.DbProviderManifest providerManifest, System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.DbProviderManifest providerManifest, class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommandDefinition (providerManifest As DbProviderManifest, commandTree As DbCommandTree) As DbCommandDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommandDefinition ^ CreateCommandDefinition(System::Data::Common::DbProviderManifest ^ providerManifest, System::Data::Common::CommandTrees::DbCommandTree ^ commandTree);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifest" Type="System.Data.Common.DbProviderManifest" />
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="providerManifest">
          <span data-ttu-id="9d963-111">该清单</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-111">The manifest.</span>
          </span>
        </param>
        <param name="commandTree">
          <span data-ttu-id="9d963-112">命令树。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-112">The command tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-113">从指定的程序清单和命令树创建命令定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-113">Creates command definition from specified manifest andcommand tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-114">已创建的命令定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-114">The created command definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-115">需要创建到不存在的数据库的连接并用由 storeItemCollection 参数指示的存储对象进行填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-115">Connection to a non-existent database that needs to be created and populated with the store objects indicated with the storeItemCollection parameter.</span>
          </span>
        </param>
        <param name="commandTimeout">
          <span data-ttu-id="9d963-116">创建数据库所需的任何命令的执行超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-116">Execution timeout for any commands needed to create the database.</span>
          </span>
        </param>
        <param name="storeItemCollection">
          <span data-ttu-id="9d963-117">创建脚本所应基于的所有存储项的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-117">The collection of all store items based on which the script should be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-118">创建由连接指示的数据库和架构对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-118">Creates a database indicated by connection and creates schema objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseScript">
      <MemberSignature Language="C#" Value="public string CreateDatabaseScript (string providerManifestToken, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string CreateDatabaseScript(string providerManifestToken, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateDatabaseScript(System::String ^ providerManifestToken, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifestToken" Type="System.String" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="providerManifestToken">
          <span data-ttu-id="9d963-119">标识目标版本的提供程序清单标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-119">The provider manifest token identifying the target version.</span>
          </span>
        </param>
        <param name="storeItemCollection">
          <span data-ttu-id="9d963-120">数据库的结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-120">The structure of the database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-121">基于 StoreItemCollection 参数的内容并针对与提供程序清单标记相对应的数据库版本生成数据定义语言（创建架构对象（表、主键、外键）的 DDL 脚本）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-121">Generates a data definition langauge (DDL script that creates schema objects (tables, primary keys, foreign keys) based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-122">基于 StoreItemCollection 参数的内容并针对与提供程序清单标记相对应的数据库版本创建架构对象的 DDL 脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-122">A DDL script that creates schema objects based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommandDefinition">
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.DbCommandDefinition CreateDbCommandDefinition (System.Data.Common.DbProviderManifest providerManifest, System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommandDefinition CreateDbCommandDefinition(class System.Data.Common.DbProviderManifest providerManifest, class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateDbCommandDefinition (providerManifest As DbProviderManifest, commandTree As DbCommandTree) As DbCommandDefinition" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::DbCommandDefinition ^ CreateDbCommandDefinition(System::Data::Common::DbProviderManifest ^ providerManifest, System::Data::Common::CommandTrees::DbCommandTree ^ commandTree);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifest" Type="System.Data.Common.DbProviderManifest" />
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="providerManifest">
          <span data-ttu-id="9d963-123">以前从存储提供程序检索到的提供程序清单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-123">Provider manifest previously retrieved from the store provider.</span>
          </span>
        </param>
        <param name="commandTree">
          <span data-ttu-id="9d963-124">语句的命令目录树。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-124">Command tree for the statement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-125">为指定的提供程序清单和命令目录树创建命令定义对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-125">Creates a command definition object for the specified provider manifest and command tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-126">可执行的命令定义对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-126">An executable command definition object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-127">到某个数据库的连接，该数据库是否存在可通过此方法进行验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-127">Connection to a database whose existence is verified by this method.</span>
          </span>
        </param>
        <param name="commandTimeout">
          <span data-ttu-id="9d963-128">确定数据库是否存在所需的任何命令的执行超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-128">Execution timeout for any commands needed to determine the existence of the database.</span>
          </span>
        </param>
        <param name="storeItemCollection">
          <span data-ttu-id="9d963-129">通过此方法确定其是否存在的数据库中包含的所有存储项的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-129">The collection of all store items contained in the database whose existence is determined by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-130">返回一个值，该值指示服务器上是否存在给定数据库以及是否创建了 storeItemCollection 中包含的架构对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-130">Returns a value indicating whether a given database exists on the server and whether schema objects contained in the storeItemCollection have been created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-131">如果提供程序仅基于连接就可推导数据库，则为 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-131">True if the provider can deduce the database only based on the connection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbCreateDatabase">
      <MemberSignature Language="C#" Value="protected virtual void DbCreateDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DbCreateDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DbCreateDatabase(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-132">需要创建到不存在的数据库的连接并用由 storeItemCollection 参数指示的存储对象进行填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-132">Connection to a non-existent database that needs to be created and populated with the store objects indicated with the storeItemCollection parameter.</span>
          </span>
        </param>
        <param name="commandTimeout">
          <span data-ttu-id="9d963-133">创建数据库所需的任何命令的执行超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-133">Execution timeout for any commands needed to create the database.</span>
          </span>
        </param>
        <param name="storeItemCollection">
          <span data-ttu-id="9d963-134">创建脚本所应基于的所有存储项的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-134">The collection of all store items based on which the script should be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-135">创建一个由连接指示的数据库并且基于 StoreItemCollection 的内容创建架构对象（表、主键、外键）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-135">Creates a database indicated by connection and creates schema objects (tables, primary keys, foreign keys) based on the contents of a StoreItemCollection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbCreateDatabaseScript">
      <MemberSignature Language="C#" Value="protected virtual string DbCreateDatabaseScript (string providerManifestToken, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string DbCreateDatabaseScript(string providerManifestToken, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ DbCreateDatabaseScript(System::String ^ providerManifestToken, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifestToken" Type="System.String" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="providerManifestToken">
          <span data-ttu-id="9d963-136">标识目标版本的提供程序清单标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-136">The provider manifest token identifying the target version.</span>
          </span>
        </param>
        <param name="storeItemCollection">
          <span data-ttu-id="9d963-137">数据库的结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-137">The structure of the database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-138">基于 StoreItemCollection 参数的内容并针对与提供程序清单标记相对应的数据库版本生成数据定义语言（创建架构对象（表、主键、外键）的 DDL 脚本）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-138">Generates a data definition langauge (DDL script that creates schema objects (tables, primary keys, foreign keys) based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-139">基于 StoreItemCollection 参数的内容并针对与提供程序清单标记相对应的数据库版本创建架构对象的 DDL 脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-139">A DDL script that creates schema objects based on the contents of the StoreItemCollection parameter and targeted for the version of the database corresponding to the provider manifest token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbDatabaseExists">
      <MemberSignature Language="C#" Value="protected virtual bool DbDatabaseExists (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DbDatabaseExists(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DbDatabaseExists(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-140">到某个数据库的连接，该数据库是否存在可通过此方法进行验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-140">Connection to a database whose existence is verified by this method.</span>
          </span>
        </param>
        <param name="commandTimeout">
          <span data-ttu-id="9d963-141">确定数据库是否存在所需的任何命令的执行超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-141">Execution timeout for any commands needed to determine the existence of the database.</span>
          </span>
        </param>
        <param name="storeItemCollection">
          <span data-ttu-id="9d963-142">通过此方法确定其是否存在的数据库的结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-142">The structure of the database whose existence is determined by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-143">返回一个值，该值指示服务器上是否存在给定数据库以及是否创建了 storeItemCollection 中包含的架构对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-143">Returns a value indicating whether a given database exists on the server and whether schema objects contained in the storeItemCollection have been created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-144">如果数据库由连接指示并且存在 storeItemCollection 参数，则为 <see langword="True" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-144">
              <see langword="True" /> if the database indicated by the connection and the storeItemCollection parameter exists; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbDeleteDatabase">
      <MemberSignature Language="C#" Value="protected virtual void DbDeleteDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DbDeleteDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DbDeleteDatabase(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-145">到某个需要删除的现有数据库的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-145">Connection to an existing database that needs to be deleted.</span>
          </span>
        </param>
        <param name="commandTimeout">
          <span data-ttu-id="9d963-146">删除数据库所需的任何命令的执行超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-146">Execution timeout for any commands needed to delete the database.</span>
          </span>
        </param>
        <param name="storeItemCollection">
          <span data-ttu-id="9d963-147">要删除的数据库的结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-147">The structure of the database to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-148">删除数据库的存储项集合中指定的所有存储对象以及数据库本身。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-148">Deletes all store objects specified in the store item collection from the database and the database itself.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbGetSpatialServices">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Spatial.DbSpatialServices DbGetSpatialServices (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Spatial.DbSpatialServices DbGetSpatialServices(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DbGetSpatialServices (manifestToken As String) As DbSpatialServices" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Spatial::DbSpatialServices ^ DbGetSpatialServices(System::String ^ manifestToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">
          <span data-ttu-id="9d963-149">与提供程序清单关联的标记信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-149">The token information associated with the provider manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-150">为 <see cref="T:System.Data.Common.DbProviderServices" /> 获取空间服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-150">Gets the spatial services for the <see cref="T:System.Data.Common.DbProviderServices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-151">空间服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-151">The spatial services.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase(System::Data::Common::DbConnection ^ connection, Nullable&lt;int&gt; commandTimeout, System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-152">到某个需要删除的现有数据库的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-152">Connection to an existing database that needs to be deleted.</span>
          </span>
        </param>
        <param name="commandTimeout">
          <span data-ttu-id="9d963-153">删除数据库所需的任何命令的执行超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-153">Execution timeout for any commands needed to delete the database.</span>
          </span>
        </param>
        <param name="storeItemCollection">
          <span data-ttu-id="9d963-154">要删除的数据库的结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-154">The structure of the database to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-155">删除数据库的存储项集合中指定的所有存储对象以及数据库本身。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-155">Deletes all store objects specified in the store item collection from the database and the database itself.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderManifest">
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.DbProviderManifest GetDbProviderManifest (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderManifest GetDbProviderManifest(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDbProviderManifest (manifestToken As String) As DbProviderManifest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::DbProviderManifest ^ GetDbProviderManifest(System::String ^ manifestToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderManifest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">
          <span data-ttu-id="9d963-156">与提供程序清单关联的标记信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-156">The token information associated with the provider manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-157">在派生类中重写时，返回一个派生自 DbProviderManifest 的类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-157">When overridden in a derived class, returns an instance of a class that derives from the DbProviderManifest.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-158">表示提供程序清单的 DbProviderManifest 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-158">A DbProviderManifest object that represents the provider manifest.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderManifestToken">
      <MemberSignature Language="C#" Value="protected abstract string GetDbProviderManifestToken (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetDbProviderManifestToken(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDbProviderManifestToken (connection As DbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetDbProviderManifestToken(System::Data::Common::DbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-159">到提供程序的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-159">Connection to provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-160">返回给定连接的提供程序清单标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-160">Returns provider manifest token given a connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-161">指定连接的提供程序清单标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-161">The provider manifest token for the specified connection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbSpatialDataReader">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Spatial.DbSpatialDataReader GetDbSpatialDataReader (System.Data.Common.DbDataReader fromReader, string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Spatial.DbSpatialDataReader GetDbSpatialDataReader(class System.Data.Common.DbDataReader fromReader, string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbSpatialDataReader (fromReader As DbDataReader, manifestToken As String) As DbSpatialDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Spatial::DbSpatialDataReader ^ GetDbSpatialDataReader(System::Data::Common::DbDataReader ^ fromReader, System::String ^ manifestToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromReader">
          <span data-ttu-id="9d963-162">空间数据所来自的读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-162">The reader where the spatial data came from.</span>
          </span>
        </param>
        <param name="manifestToken">
          <span data-ttu-id="9d963-163">与提供程序清单关联的标记信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-163">The token information associated with the provider manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-164">为 <see cref="T:System.Data.Common.DbProviderServices" /> 获取空间数据读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-164">Gets the spatial data reader for the <see cref="T:System.Data.Common.DbProviderServices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-165">空间数据读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-165">The spatial data reader.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetProviderFactory (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetProviderFactory(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProviderFactory (connection As DbConnection) As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::DbProviderFactory ^ GetProviderFactory(System::Data::Common::DbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-166">要使用的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-166">The connection to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-167">检索基于指定 DbConnection 的 DbProviderFactory。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-167">Retrieves the DbProviderFactory based on the specified DbConnection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-168">要检索的 DbProviderFactory。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-168">The retrieved DbProviderFactory.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderManifest">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbProviderManifest GetProviderManifest (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbProviderManifest GetProviderManifest(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProviderManifest (manifestToken As String) As DbProviderManifest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbProviderManifest ^ GetProviderManifest(System::String ^ manifestToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderManifest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">
          <span data-ttu-id="9d963-169">与提供程序清单关联的标记信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-169">The token information associated with the provider manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-170">使用指定的版本信息返回提供程序清单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-170">Returns the provider manifest by using the specified version information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-171">使用指定版本信息的提供程序清单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-171">The provider manifest by using the specified version information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderManifestToken">
      <MemberSignature Language="C#" Value="public string GetProviderManifestToken (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetProviderManifestToken(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProviderManifestToken (connection As DbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetProviderManifestToken(System::Data::Common::DbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-172">到提供程序的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-172">Connection to provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-173">返回提供程序清单标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-173">Returns provider manifest token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-174">提供程序清单标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-174">The provider manifest token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderServices">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderServices GetProviderServices (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderServices GetProviderServices(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProviderServices (connection As DbConnection) As DbProviderServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::DbProviderServices ^ GetProviderServices(System::Data::Common::DbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="9d963-175">到提供程序的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-175">Connection to provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-176">返回给定连接的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-176">Returns providers given a connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-177">基于指定连接实例化 <see cref="T:System.Data.Common.DbProviderServices" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-177">The <see cref="T:System.Data.Common.DbProviderServices" /> instanced based on the specified connection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpatialDataReader">
      <MemberSignature Language="C#" Value="public System.Data.Spatial.DbSpatialDataReader GetSpatialDataReader (System.Data.Common.DbDataReader fromReader, string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Spatial.DbSpatialDataReader GetSpatialDataReader(class System.Data.Common.DbDataReader fromReader, string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpatialDataReader (fromReader As DbDataReader, manifestToken As String) As DbSpatialDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Spatial::DbSpatialDataReader ^ GetSpatialDataReader(System::Data::Common::DbDataReader ^ fromReader, System::String ^ manifestToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromReader">
          <span data-ttu-id="9d963-178">空间数据所来自的读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-178">The reader where the spatial data came from.</span>
          </span>
        </param>
        <param name="manifestToken">
          <span data-ttu-id="9d963-179">与提供程序清单关联的标记信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-179">The token information associated with the provider manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-180">为 <see cref="T:System.Data.Common.DbProviderServices" /> 获取空间数据读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-180">Gets the spatial data reader for the <see cref="T:System.Data.Common.DbProviderServices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-181">空间数据读取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-181">The spatial data reader.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpatialServices">
      <MemberSignature Language="C#" Value="public System.Data.Spatial.DbSpatialServices GetSpatialServices (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Spatial.DbSpatialServices GetSpatialServices(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetSpatialServices(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpatialServices (manifestToken As String) As DbSpatialServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Spatial::DbSpatialServices ^ GetSpatialServices(System::String ^ manifestToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">
          <span data-ttu-id="9d963-182">与提供程序清单关联的标记信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-182">The token information associated with the provider manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-183">为 <see cref="T:System.Data.Common.DbProviderServices" /> 获取空间服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-183">Gets the spatial services for the <see cref="T:System.Data.Common.DbProviderServices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d963-184">空间服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-184">The spatial services.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDbParameterValue">
      <MemberSignature Language="C#" Value="protected virtual void SetDbParameterValue (System.Data.Common.DbParameter parameter, System.Data.Metadata.Edm.TypeUsage parameterType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDbParameterValue(class System.Data.Common.DbParameter parameter, class System.Data.Metadata.Edm.TypeUsage parameterType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDbParameterValue (parameter As DbParameter, parameterType As TypeUsage, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDbParameterValue(System::Data::Common::DbParameter ^ parameter, System::Data::Metadata::Edm::TypeUsage ^ parameterType, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="parameterType" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="9d963-185">参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-185">The parameter.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="9d963-186">参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-186">The type of the parameter.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d963-187">参数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-187">The value of the parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d963-188">设置 <see cref="T:System.Data.Common.DbProviderServices" /> 的参数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d963-188">Sets the parameter values for the <see cref="T:System.Data.Common.DbProviderServices" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>