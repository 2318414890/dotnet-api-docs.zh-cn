<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbEnumerator.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51bde5ae17b68c87de51dbd180afb527c0932b925.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bde5ae17b68c87de51dbd180afb527c0932b925</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbEnumerator">
          <source>Exposes the <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph> method, which supports a simple iteration over a collection by a .NET Framework data provider.</source>
          <target state="translated">公开 <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph> 方法，该方法支持 .NET Framework 数据提供程序对集合进行简单的迭代。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> class is implemented by a .NET Framework data provider to provide data binding support.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph>类实现由.NET Framework 数据提供程序提供数据绑定支持。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>By design, the <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> object is intended for use with only one resultset.</source>
          <target state="translated">按照设计，<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph>对象打算用于只有一个结果集。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</source>
          <target state="translated">例如，如果在执行批处理语句包含两个 SQL SELECT 语句返回不同的架构，第二个语句可能会不返回整个架构。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>To avoid this situation, obtain a <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> for each resultset, and then call the <ph id="ph2">`NextResult`</ph> method of a .NET Framework data provider DataReader object.</source>
          <target state="translated">若要避免这种情况下，获取<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph>然后调用每个结果集，以及<ph id="ph2">`NextResult`</ph>的.NET Framework 数据提供程序 DataReader 对象的方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbEnumerator">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">要对其进行循环访问的 DataReader。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class with the give n data reader.</source>
          <target state="translated">使用给定的数据读取器初始化 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> through which to iterate.</source>
          <target state="translated">要通过其进行循环访问的 <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> 初始化 <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">要对其进行循环访问的 DataReader。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to automatically close the DataReader after iterating through its data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要在循环访问 DataReader 的数据后将其自动关闭，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</source>
          <target state="translated">使用指定的读取器初始化 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> 类的新实例，并表示在循环访问读取器的数据后是否将其自动关闭。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> through which to iterate.</source>
          <target state="translated">要通过其进行循环访问的 <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to automatically close the <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> after iterating through its data; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要在循环访问 <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> 的数据后将其自动关闭，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph>, and indicates whether to automatically close the <ph id="ph3">&lt;see langword="DataReader" /&gt;</ph> after iterating through its data.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> 初始化 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> 类的新实例，并指示在循环访问 <ph id="ph3">&lt;see langword="DataReader" /&gt;</ph> 的数据后是否将其自动关闭。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>Gets the current element in the collection.</source>
          <target state="translated">获取集合中的当前元素。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>The current element in the collection.</source>
          <target state="translated">集合中的当前元素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">创建一个枚举器或<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>必须调用来枚举器向前移动到集合，然后再读取的值的第一个元素<ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>; 否则为<ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>是不确定的。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> returned false, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> 如果最后一次调用到也会引发异常<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>返回 false，指示集合的末尾。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator and consecutive calls to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> 不会移动的位置的枚举器和对连续调用<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>之前返回同一对象<ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> generates an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复，并且下一个调用<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>生成<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> returns the element to which it is set, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>即使枚举数已经无效，则返回它设置的元素。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">枚举器位于集合中第一个元素之前或最后一个元素之后。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">将枚举数推进到集合的下一个元素。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">如果枚举数已成功地推进到下一个元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果枚举数传递到集合的末尾，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>After an enumerator is created or after a call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, an enumerator is positioned before the first element of the collection, and the first call to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> moves the enumerator over the first element of the collection.</source>
          <target state="translated">创建一个枚举器之后或在调用<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>，枚举数定位在集合中，并且首次调用的第一个元素之前<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>将枚举器移到集合的第一个元素上。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>After the end of the collection is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> return false until <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">集合的末尾传递，因为在后续调用后<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>返回 false 直到<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复，并且下一个调用<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>引发<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">集合在枚举器创建后被修改。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复，并且下一个调用<ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>引发<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">集合在枚举器创建后被修改。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>