<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbProviderManifest.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58c008e4bfddf96aba54188248cd025d2fb32c73a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c008e4bfddf96aba54188248cd025d2fb32c73a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbProviderManifest">
          <source>Metadata Interface for all CLR types types</source>
          <target state="translated">所有 CLR 类型 types 元数据接口</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbProviderManifest">
          <source>No content here will be updated; please do not add material here.</source>
          <target state="translated">这里不会更新任何内容；请不要在这里添加材料。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderManifest" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderManifest" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition">
          <source>Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion.</source>
          <target state="translated">为获取 ConceptualSchemaDefinitionVersion 而传递给 GetInformation 的值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3">
          <source>Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion3.</source>
          <target state="translated">为获取 ConceptualSchemaDefinitionVersion3 而传递给 GetInformation 的值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)">
          <source>The argument to be escaped.</source>
          <target state="translated">要转义的参数。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)">
          <source>Provider writers should override this method to return the argument with the wildcards and the escape character escaped.</source>
          <target state="translated">提供程序编写人员应重写此方法，以返回带有已转义的通配符和转义符的参数。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)">
          <source>This method is only used if SupportsEscapingLikeArgument returns true.</source>
          <target state="translated">如果 SupportsEscapingLikeArgument 返回 true，则只使用此方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)">
          <source>The argument with the wildcards and the escape character escaped.</source>
          <target state="translated">带有已转义的通配符和转义符的参数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)">
          <source>The type of the information to return.</source>
          <target state="translated">要返回的信息的类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)">
          <source>When overridden in a derived class, this method returns provider-specific information.</source>
          <target state="translated">在派生类中重写时，此方法返回特定于提供程序的信息。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)">
          <source>The XmlReader object that represents the mapping to the underlying data store catalog.</source>
          <target state="translated">表示基础数据存储区目录的映射的 XmlReader 对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
          <source>The TypeUsage instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.</source>
          <target state="translated">TypeUsage 实例，它描述了要映射到 EDM 类型的存储类型以及该类型的一组 Facet。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
          <source>When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.</source>
          <target state="translated">在派生类中重写时，此方法将指定的存储类型以及该类型的一组 Facet 映射到 EDM 类型。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.TypeUsage" /&gt;</ph> instance that describes an EDM type and a set of facets for that type.</source>
          <target state="translated">描述 EDM 类型以及该类型的一组 Facet的 <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.TypeUsage" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
          <source>The EDM type to return the facet description for.</source>
          <target state="translated">要返回 Facet 描述的 EDM 类型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
          <source>Returns the FacetDescription objects for a particular type.</source>
          <target state="translated">返回特定类型的 FacetDescription 对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
          <source>The FacetDescription objects for the specified EDM type.</source>
          <target state="translated">用于指定的 EDM 类型的 FacetDescription 对象。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)">
          <source>The type of the information to return.</source>
          <target state="translated">要返回的信息的类型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)">
          <source>Gets the provider-specific information.</source>
          <target state="translated">获取特定于提供程序的信息。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)">
          <source>The provider-specific information.</source>
          <target state="translated">特定于提供程序的信息。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetStoreFunctions">
          <source>When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.</source>
          <target state="translated">在派生类中重写时，返回提供程序清单支持的 EDM 函数的集合。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetStoreFunctions">
          <source>A collection of EDM functions.</source>
          <target state="translated">EDM 函数的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
          <source>The TypeUsage instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.</source>
          <target state="translated">TypeUsage 实例，它描述了要映射到存储类型的EDM 类型以及该类 Facet。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
          <source>When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.</source>
          <target state="translated">在派生类中重写时，此方法将指定的 EDM 类型以及该类型的一组 Facet 映射到存储类型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
          <source>The TypeUsage instance that describes a storage type and a set of facets for that type.</source>
          <target state="translated">TypeUsage 实例，它描述了存储类型以及该类型的一组 Facet。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetStoreTypes">
          <source>When overridden in a derived class, returns the set of primitive types supported by the data source.</source>
          <target state="translated">在派生类中重写时，返回数据源支持的一组基元类型。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.GetStoreTypes">
          <source>The set of types supported by the data source.</source>
          <target state="translated">数据源支持的一组类型。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbProviderManifest.NamespaceName">
          <source>Gets the namespace used by this provider manifest.</source>
          <target state="translated">获取此提供程序清单使用的命名空间。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbProviderManifest.NamespaceName">
          <source>The namespace used by this provider manifest.</source>
          <target state="translated">此提供程序清单使用的命名空间。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinition">
          <source>Value to pass to GetInformation to get the StoreSchemaDefinitionVersion.</source>
          <target state="translated">为获取 StoreSchemaDefinitionVersion 而传递给 GetInformation 的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3">
          <source>Value to pass to GetInformation to get the StoreSchemaDefinitionVersion3.</source>
          <target state="translated">为获取 StoreSchemaDefinitionVersion3 而传递给 GetInformation 的值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Data.Common.DbProviderManifest.StoreSchemaMapping">
          <source>Value to pass to GetInformation to get the StoreSchemaMappingVersion.</source>
          <target state="translated">为获取存储架构映射信息而传递给 GetInformation 的值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3">
          <source>Value to pass to GetInformation to get the StoreSchemaMappingVersion3.</source>
          <target state="translated">为获取 StoreSchemaMappingVersion3 而传递给 GetInformation 的值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
          <source>If the provider supports escaping, the character that would be used as the escape character.</source>
          <target state="translated">如果提供程序支持转义，则为要用作转义符的字符。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
          <source>Indicates if the provider supports escaping strings to be used as patterns in a Like expression.</source>
          <target state="translated">指示提供程序是否支持在 Like 表达式中使用转义字符串作为模式。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此提供程序支持在 Like 表达式中使用转义字符串作为模式，则为 <ph id="ph1">&lt;see langword="True" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>