<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3db191c839c8f56032f735e1fccf95a42edd36ef" /><Meta Name="ms.sourcegitcommit" Value="0609891c89ddaa91e4c02970acb00072fcc29baf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/13/2019" /><Meta Name="ms.locfileid" Value="65558332" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="25b4d-101">帮助实现 <see cref="T:System.Data.IDbDataAdapter" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="25b4d-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="25b4d-102"><see cref="T:System.Data.Common.DbDataAdapter" /> 的继承类实现了一组功能以提供强类型，但是继承了完全实现 DataAdapter 所需的大部分功能。</span><span class="sxs-lookup"><span data-stu-id="25b4d-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-103"><xref:System.Data.Common.DbDataAdapter>类继承自<xref:System.Data.Common.DataAdapter>类，并实现<xref:System.Data.IDbDataAdapter>接口。</span><span class="sxs-lookup"><span data-stu-id="25b4d-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="25b4d-104">它可帮助实现的类**DataAdapter**设计用于关系数据库。</span><span class="sxs-lookup"><span data-stu-id="25b4d-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="25b4d-105">应用程序不会创建的实例<xref:System.Data.Common.DbDataAdapter>类直接，但创建从其继承的类的实例。</span><span class="sxs-lookup"><span data-stu-id="25b4d-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="25b4d-106">继承的类<xref:System.Data.Common.DbDataAdapter>必须实现继承的成员，且通常定义其他成员来添加特定于提供程序的功能。</span><span class="sxs-lookup"><span data-stu-id="25b4d-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="25b4d-107">例如，<xref:System.Data.Common.DbDataAdapter>类定义<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性，并<xref:System.Data.Common.DbDataAdapter>类定义的八个重载<xref:System.Data.IDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="25b4d-108">依次<xref:System.Data.OleDb.OleDbDataAdapter>类继承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，并且还定义了两个重载的<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>采取 ADO 记录集对象作为参数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-109">继承自<see cref="T:System.Data.Common.DbDataAdapter" />类中，我们建议你实现以下构造函数：</span><span class="sxs-lookup"><span data-stu-id="25b4d-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="25b4d-110">项</span><span class="sxs-lookup"><span data-stu-id="25b4d-110">Item</span></span> 
 </term><description> <span data-ttu-id="25b4d-111">描述</span><span class="sxs-lookup"><span data-stu-id="25b4d-111">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="25b4d-112">*Prv*DataAdapter()</span><span class="sxs-lookup"><span data-stu-id="25b4d-112">*Prv*DataAdapter()</span></span> 
 </term><description> <span data-ttu-id="25b4d-113">初始化的新实例*Prv*DataAdapter 类。</span><span class="sxs-lookup"><span data-stu-id="25b4d-113">Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="25b4d-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span><span class="sxs-lookup"><span data-stu-id="25b4d-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span> 
 </term><description> <span data-ttu-id="25b4d-115">初始化的新实例*Prv*DataAdapter 类与指定的 SQL SELECT 语句一起使用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-115">Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="25b4d-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span><span class="sxs-lookup"><span data-stu-id="25b4d-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span> 
 </term><description> <span data-ttu-id="25b4d-117">初始化的新实例*Prv*DataAdapter 类使用的 SQL SELECT 语句和连接字符串。</span><span class="sxs-lookup"><span data-stu-id="25b4d-117">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="25b4d-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span><span class="sxs-lookup"><span data-stu-id="25b4d-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span> 
 </term><description> <span data-ttu-id="25b4d-119">初始化的新实例*Prv*DataAdapter 类的一个 SQL SELECT 语句和一个*Prv*连接对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-119">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="25b4d-120">若要将升级.NET Framework 数据提供程序之间的一致性，应命名窗体中的继承类*Prv*DataAdapter，其中*Prv*是提供给特定的.NET 中的所有类的统一前缀Framework 数据提供程序命名空间。</span><span class="sxs-lookup"><span data-stu-id="25b4d-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="25b4d-121">例如，"Sql"是前缀<see cref="T:System.Data.SqlClient.SqlDataAdapter" />类中**System.Data.SqlClient**命名空间。</span><span class="sxs-lookup"><span data-stu-id="25b4d-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-122">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-122">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-123">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-123">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25b4d-124">初始化 <see langword="DataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="25b4d-124">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-125">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-125">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25b4d-126">初始化 DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="25b4d-126">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-127">创建的实例时<xref:System.Data.Common.DbDataAdapter>，以下的读/写属性设置为以下的初始值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-127">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="25b4d-128">属性</span><span class="sxs-lookup"><span data-stu-id="25b4d-128">Properties</span></span>|<span data-ttu-id="25b4d-129">初始值</span><span class="sxs-lookup"><span data-stu-id="25b4d-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="25b4d-130">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="25b4d-131">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-131">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="25b4d-132">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-132">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="25b4d-133">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-133">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="25b4d-134">可以更改任何这些属性通过单独调用属性的值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-134">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-135">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-135">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-136">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-136">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="25b4d-137">一个<see langword="DataAdapter" />用来创建新对象<see langword="DataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-137">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="25b4d-138">初始化的新实例<see langword="DataAdapter" />从相同类型的现有对象的类。</span><span class="sxs-lookup"><span data-stu-id="25b4d-138">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-139">此重载<xref:System.Data.Common.DbDataAdapter>构造函数专供.NET Framework 数据提供程序时实现类似的构造函数用于在克隆的实现。</span><span class="sxs-lookup"><span data-stu-id="25b4d-139">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-140">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-140">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-141">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-141">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="25b4d-142"><see cref="T:System.Data.IDbCommand" />将添加到批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-142">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="25b4d-143">添加<see cref="T:System.Data.IDbCommand" />对当前批。</span><span class="sxs-lookup"><span data-stu-id="25b4d-143">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="25b4d-144">然后再添加批处理中的命令数<see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-144">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-145">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-145">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="25b4d-146">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="25b4d-146">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="25b4d-147">适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-147">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-148">此方法受到保护，专为使用.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-148">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="25b4d-149">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户将命令添加到批次。</span><span class="sxs-lookup"><span data-stu-id="25b4d-149">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-150">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-150">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-151">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-151">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25b4d-152">移除所有<see cref="T:System.Data.IDbCommand" />批处理中的对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-152">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-153">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-153">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="25b4d-154">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="25b4d-154">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="25b4d-155">适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-155">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-156">此方法受到保护，专为使用.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-156">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="25b4d-157">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户在批处理中删除所有命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-157">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-158">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-158">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-159">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-159">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="25b4d-160"><see cref="T:System.Data.DataRow" />用于更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-160">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="25b4d-161"><see cref="T:System.Data.IDbCommand" />过程中执行<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-161">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="25b4d-162">该命令是否更新、 插入、 删除或 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-162">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="25b4d-163">一个 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-163">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="25b4d-164">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="25b4d-164">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="25b4d-165"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="25b4d-165">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-166">重写时<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-166">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-167">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-167">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="25b4d-168"><see cref="T:System.Data.DataRow" />更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-168">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="25b4d-169"><see cref="T:System.Data.IDbCommand" />过程中执行<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-169">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="25b4d-170">该命令是否更新、 插入、 删除或 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-170">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="25b4d-171">一个 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-171">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="25b4d-172">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="25b4d-172">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="25b4d-173"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="25b4d-173">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-174">重写时<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-174">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-175">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-175">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-176">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-176">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-177">使用的默认名称<see cref="T:System.Data.Common.DataAdapter" />对象用于表映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-177">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-178">"表"是默认使用<xref:System.Data.Common.DataAdapter>对象用于表映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-178">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="25b4d-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 是当应用程序添加一个表映射，以与一起使用时<xref:System.Data.Common.DbDataAdapter.Fill%2A>，但未指定<xref:System.Data.DataTable>名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-180">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-180">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-181">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-181">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-182">获取或设置用于从数据集中删除记录的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-182">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="25b4d-183"><see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />来删除已删除的行在数据集中的数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-183">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-184">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>自动生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-184">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-185">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-185">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-186">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-186">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-187">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-187">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-188">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-188">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="25b4d-189">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="25b4d-190">释放由 <see cref="T:System.Data.Common.DbDataAdapter" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-190">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-191">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-191">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-192">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-192">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25b4d-193">执行当前批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-193">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="25b4d-194">从批处理中的最后一个命令返回的值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-194">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-195">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-195">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="25b4d-196">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="25b4d-196">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-197">此方法受到保护，专为使用.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-197">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="25b4d-198">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户执行的批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-198">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="25b4d-199">此方法的实现将在适配器中的命令合并到一个批处理中，然后执行的批处理并返回批处理的返回值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-199">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-200">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-200">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-201">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-201">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-202">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-202">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25b4d-203">填充<see cref="T:System.Data.DataSet" />或<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-203">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-204">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-204">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-205">一个<see cref="T:System.Data.DataSet" />要用记录填充，如有必要，架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-205">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="25b4d-206">添加或刷新中的行<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-206">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-207">已成功添加到或刷新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-207">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="25b4d-208">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-208">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-209"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-209">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="25b4d-210"><xref:System.Data.IDbConnection>与 select 命令相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-210">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-211">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-211">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="25b4d-212">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-212">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-213">如果填充数据表时遇到错误或异常，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="25b4d-213">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="25b4d-214">中止运算的余数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-214">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="25b4d-215">如果命令不返回任何行，则没有表将添加到<xref:System.Data.DataSet>，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-215">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="25b4d-216">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"、"*columnname*2""*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-216">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-217">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-217">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="25b4d-218">当指定的查询返回多个结果时，在结果集中返回查询的每个行被置于一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-218">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="25b4d-219">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-219">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="25b4d-220">如果处理 insert 查询跟 select 查询，将不返回行，为查询创建没有表，因为创建选择查询的表是名为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-220">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="25b4d-221">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-221">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-222">当使用 SELECT 语句来填充<xref:System.Data.DataSet>返回多项结果，如批处理 SQL 语句，如果其中一个结果包含错误，所有后续结果将跳过，并且不会添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-222">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="25b4d-223">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="25b4d-223">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="25b4d-224">SQL 语句应该与第一次用于填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-224">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="25b4d-225">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="25b4d-225">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="25b4d-226">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<xref:System.Data.DataTable>对应于<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-226">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-227">主键信息可能会设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>的属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-227">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="25b4d-228">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-228">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-229">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-229">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="25b4d-230">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-230">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-231">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-231">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-232">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-232">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-233">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-233">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-234">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-234">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="25b4d-235">名称<see cref="T:System.Data.DataTable" />要用于表映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-235">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="25b4d-236">添加或刷新指定范围中的行<see cref="T:System.Data.DataSet" />以匹配数据源使用<see cref="T:System.Data.DataTable" />名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-236">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="25b4d-237">已成功添加到或刷新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-237">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="25b4d-238">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-238">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用从数据源指定由关联的 SELECT 语句检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="25b4d-240">与 SELECT 语句关联的连接对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-240">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-241">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-241">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-242">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-242">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-243"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="25b4d-243">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="25b4d-244">创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-244">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="25b4d-245">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="25b4d-245">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="25b4d-246">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-246">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-247">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-247">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="25b4d-248">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-248">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="25b4d-249">重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataTable`如参数仅获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-249">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="25b4d-250">使用的重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataSet`作为参数，以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-250">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="25b4d-251"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="25b4d-251">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="25b4d-252">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="25b4d-252">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="25b4d-253">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-253">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="25b4d-254">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-254">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="25b4d-255">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="25b4d-255">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="25b4d-256">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-256">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="25b4d-257">可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-257">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-258">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="25b4d-258">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="25b4d-259">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-259">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-260">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-260">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-261">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-261">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="25b4d-262">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-262">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-263">处理返回多个结果的实现的批处理 SQL 语句时<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>对于.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-263">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-264">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-264">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-265">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保护并专供.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-265">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-266">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-266">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-267">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-267">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-268">一个<see cref="T:System.Data.DataSet" />要用记录填充，如有必要，架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-268">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="25b4d-269">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-269">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="25b4d-270">添加或刷新中的行<see cref="T:System.Data.DataSet" />以匹配中使用数据源的那些<see cref="T:System.Data.DataSet" />和<see cref="T:System.Data.DataTable" />名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-270">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="25b4d-271">已成功添加到或刷新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-271">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="25b4d-272">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-272">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="25b4d-274"><xref:System.Data.IDbConnection>与 select 命令相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-274">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-275">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-275">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-276">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-276">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-277">如果命令不返回任何行，则没有表将添加到<xref:System.Data.DataSet>，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-277">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="25b4d-278">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-278">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="25b4d-279">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-279">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="25b4d-280">当指定的查询返回多个结果时，每个结果集被置于一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-280">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-281">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-281">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="25b4d-282">因为没有在创建表的查询的不返回行，如果要处理插入查询跟 select 查询的 select 查询创建的表将命名为"表"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-282">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="25b4d-283">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-283">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-284"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="25b4d-284">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="25b4d-285">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="25b4d-285">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="25b4d-286">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-286">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="25b4d-287">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-287">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="25b4d-288">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="25b4d-288">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="25b4d-289">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-289">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="25b4d-290">如果填充数据表时遇到错误或异常，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="25b4d-290">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="25b4d-291">中止运算的余数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-291">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="25b4d-292">SELECT 语句用于填充<xref:System.Data.DataSet>返回多个结果，例如一批 SQL 语句，要注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="25b4d-292">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="25b4d-293">如果其中一个结果包含错误，所有后续结果被跳过且未添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-293">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="25b4d-294">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="25b4d-294">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="25b4d-295">SQL 语句应该与第一次用于填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-295">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="25b4d-296">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="25b4d-296">The **Key** column information must be present.</span></span> <span data-ttu-id="25b4d-297">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<xref:System.Data.DataTable>对应于<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-297">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-298">主键信息可能会设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>的属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-298">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="25b4d-299">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-300">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="25b4d-301">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-302">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-303">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-304">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填充<xref:System.Data.DataSet>与类别表中的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-304">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="25b4d-305">此示例假定你已创建<xref:System.Data.OleDb.OleDbDataAdapter>和一个<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-305">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="25b4d-306">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-306">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-307">重写时<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-307">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-308">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-308">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-309">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-309">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="25b4d-310">一个<see cref="T:System.Data.DataTable" />要用记录填充，如有必要，架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-310">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="dataReader"><span data-ttu-id="25b4d-311"><see cref="T:System.Data.IDataReader" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-311">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <summary><span data-ttu-id="25b4d-312">添加或刷新中的行<see cref="T:System.Data.DataTable" />以匹配使用指定的数据源中的那些<see cref="T:System.Data.DataTable" />和<see cref="T:System.Data.IDataReader" />名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-312">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" /> and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="25b4d-313">已成功添加到或刷新中的行数<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-313">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="25b4d-314">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-314">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="25b4d-315">一个<see cref="T:System.Data.DataTable" />要用记录填充，如有必要，架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-315">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="25b4d-316">用于从数据源检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-316">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="25b4d-317"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-317">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="25b4d-318">添加或刷新中的行<see cref="T:System.Data.DataTable" />以匹配使用指定的数据源中的那些<see cref="T:System.Data.DataTable" />，<see cref="T:System.Data.IDbCommand" />和<see cref="T:System.Data.CommandBehavior" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-318">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-319">已成功添加到或刷新中的行数<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-319">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="25b4d-320">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-320">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-321"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用从数据源指定由关联的 SELECT 语句检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-321">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="25b4d-322">与 SELECT 语句关联的连接对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-322">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-323">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-323">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="25b4d-324">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-324">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-325"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到指定的目标<xref:System.Data.DataTable>对象中<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="25b4d-325">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="25b4d-326">创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-326">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="25b4d-327">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="25b4d-327">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="25b4d-328">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-328">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-329">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-329">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="25b4d-330">重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataTable`如参数仅获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-330">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="25b4d-331">使用的重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataSet`作为参数，以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-331">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="25b4d-332">可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-332">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-333">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="25b4d-333">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="25b4d-334">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-334">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-335">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-335">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-336">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-336">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="25b4d-337">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-337">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-338">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-338">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-339">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-339">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-340">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保护并专供.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-340">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-341">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-341">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-342">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-342">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="25b4d-343">要开始的从零开始记录数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-343">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="25b4d-344">要检索的记录数目上限。</span><span class="sxs-lookup"><span data-stu-id="25b4d-344">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="25b4d-345"><see cref="T:System.Data.DataTable" />要从数据源填充对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-345">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="25b4d-346">添加或刷新中的行<see cref="T:System.Data.DataTable" />以匹配数据源指定的记录从开始，一直检索到指定的最大数目的记录中。</span><span class="sxs-lookup"><span data-stu-id="25b4d-346">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="25b4d-347">已成功添加到或刷新中的行数<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-347">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="25b4d-348">此值不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-348">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-349"><xref:System.Data.Common.DataAdapter.Fill%2A>方法使用从数据源指定由关联的 SELECT 语句检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-349">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="25b4d-350">与 SELECT 语句关联的连接对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-350">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-351">如果连接已关闭之前<xref:System.Data.Common.DataAdapter.Fill%2A>是调用，它会打开用于检索数据，并再将其关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-351">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="25b4d-352">如果连接已打开之前<xref:System.Data.Common.DataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-352">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-353"><xref:System.Data.Common.DataAdapter.Fill%2A>然后，操作将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="25b4d-353">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="25b4d-354">创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-354">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="25b4d-355">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="25b4d-355">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="25b4d-356">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-356">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-357">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-357">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="25b4d-358">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-358">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="25b4d-359">如果数据适配器在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-359">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="25b4d-360">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-360">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="25b4d-361">当多个结果集添加到<xref:System.Data.DataSet>，每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-361">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-362">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-362">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="25b4d-363">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-363">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-364">当使用 SELECT 语句来填充<xref:System.Data.DataSet>返回多个结果，如批处理 SQL 语句，如果其中一个结果包含错误，所有后续结果被跳过且未添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-364">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="25b4d-365">可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-365">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-366">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="25b4d-366">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="25b4d-367">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-367">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-368">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-368">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-369">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-369">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-370">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-370">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-371">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-371">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-372">一个<see cref="T:System.Data.DataSet" />要用记录填充，如有必要，架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-372">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="25b4d-373">要开始的从零开始记录数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-373">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="25b4d-374">要检索的记录数目上限。</span><span class="sxs-lookup"><span data-stu-id="25b4d-374">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="25b4d-375">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-375">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="25b4d-376">添加或刷新指定范围中的行<see cref="T:System.Data.DataSet" />以匹配中使用数据源的那些<see cref="T:System.Data.DataSet" />和<see cref="T:System.Data.DataTable" />名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="25b4d-377">已成功添加到或刷新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-377">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="25b4d-378">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-378">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-379">一个`maxRecords`0 的值获取后开始记录发现的所有记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-379">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="25b4d-380">如果`maxRecords`大于的剩余行数只返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="25b4d-380">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="25b4d-381">如果相应的 select 命令是一个语句返回多个结果<xref:System.Data.Common.DbDataAdapter.Fill%2A>仅适用`maxRecords`到第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-381">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="25b4d-382"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-382">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="25b4d-383"><xref:System.Data.IDbConnection>与 SELECT 语句相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-383">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-384">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-384">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="25b4d-385">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-385">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-386">如果命令不返回任何行，则没有表将添加到<xref:System.Data.DataSet>，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-386">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="25b4d-387">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-387">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-388">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-388">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="25b4d-389">当指定的查询返回多个结果时，每个结果集被置于一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-389">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-390">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-390">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="25b4d-391">因为没有在创建表的查询的不返回行，如果处理 insert 查询跟 select 查询的 select 查询创建的表名为"表"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-391">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="25b4d-392">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-392">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-393"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="25b4d-393">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="25b4d-394">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="25b4d-394">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="25b4d-395">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-395">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="25b4d-396">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-396">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="25b4d-397">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="25b4d-397">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="25b4d-398">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-398">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="25b4d-399">如果填充数据表时遇到错误或异常，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="25b4d-399">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="25b4d-400">中止运算的余数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-400">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="25b4d-401">SELECT 语句用于填充<xref:System.Data.DataSet>返回多项结果，如批处理 SQL 语句，要注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="25b4d-401">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="25b4d-402">处理一批 SQL 语句，从多个结果时`maxRecords`仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-402">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="25b4d-403">这同样适用的包含章节结果 （.NET Framework 数据提供程序用于 OLE DB 仅） 的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-403">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="25b4d-404">受限制的最高级别结果`maxRecords`，但会在所有子行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-404">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="25b4d-405">如果其中一个结果包含错误，所有后续结果被跳过且未添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-405">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="25b4d-406">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="25b4d-406">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="25b4d-407">SQL 语句应该与第一次用于填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-407">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="25b4d-408">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="25b4d-408">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="25b4d-409">如果存在主键信息，则将进行协调，只能出现一次在任何重复的行<xref:System.Data.DataTable>对应于<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-409">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-410">主键信息可能会设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>的属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-410">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="25b4d-411">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-411">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-412">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-412">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="25b4d-413">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-413">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-414">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-414">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-415">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-415">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-416">`DataSet`将不包含多个所指示的记录数`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-416">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="25b4d-417">但是，由该查询生成整个结果集仍从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="25b4d-417">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-418">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填充<xref:System.Data.DataSet>15 行，从开始在第 10，行**类别**表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-418">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="25b4d-419">此示例假定你已创建<xref:System.Data.OleDb.OleDbDataAdapter>和一个<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-419">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="25b4d-420"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-420">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-421">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-421">The source table is invalid.</span></span>  
  
<span data-ttu-id="25b4d-422">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-422">-or-</span></span> 
<span data-ttu-id="25b4d-423">连接无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-423">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="25b4d-424">找不到连接。</span><span class="sxs-lookup"><span data-stu-id="25b4d-424">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="25b4d-425"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="25b4d-425">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="25b4d-426">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-426">-or-</span></span> 
<span data-ttu-id="25b4d-427"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="25b4d-427">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-428">重写时<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-428">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-429">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-429">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-430">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-430">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="srcTable" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="startRecord" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-431">一个<see cref="T:System.Data.DataSet" />要用记录填充，如有必要，架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-431">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="25b4d-432">名称<see cref="T:System.Data.DataTable" />要用于表映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-432">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <param name="dataReader"><span data-ttu-id="25b4d-433"><see cref="T:System.Data.IDataReader" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-433">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <param name="startRecord"><span data-ttu-id="25b4d-434">要开始的从零开始记录数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-434">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="25b4d-435">要检索的记录数目上限。</span><span class="sxs-lookup"><span data-stu-id="25b4d-435">The maximum number of records to retrieve.</span></span></param>
        <summary><span data-ttu-id="25b4d-436">添加或刷新指定范围中的行<see cref="T:System.Data.DataSet" />以匹配中使用数据源的那些<see cref="T:System.Data.DataSet" />， <see cref="T:System.Data.DataTable" />，和<see cref="T:System.Data.IDataReader" />名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-436">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" />, <see cref="T:System.Data.DataTable" />, and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="25b4d-437">已成功添加到或刷新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-437">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="25b4d-438">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-438">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startRecord" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="25b4d-439"><see cref="T:System.Data.DataTable" />要从数据源填充对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-439">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="25b4d-440">要开始的从零开始记录数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-440">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="25b4d-441">要检索的记录数目上限。</span><span class="sxs-lookup"><span data-stu-id="25b4d-441">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="25b4d-442"><see cref="T:System.Data.IDbCommand" />执行以填充<see cref="T:System.Data.DataTable" />对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-442">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="25b4d-443"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-443">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="25b4d-444">添加或刷新指定范围中的行<see cref="T:System.Data.DataSet" />以匹配中使用数据源的那些<see cref="T:System.Data.DataSet" />和<see cref="T:System.Data.DataTable" />名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-444">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="25b4d-445">添加到或数据表中的数据刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-445">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-446">一个`maxRecords`0 的值获取后开始记录发现的所有记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-446">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="25b4d-447">如果`maxRecords`大于的剩余行数仅返回了剩余行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="25b4d-447">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="25b4d-448"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-448">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="25b4d-449"><xref:System.Data.IDbConnection>与 SELECT 语句相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-449">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-450">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-450">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-451">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-451">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-452">如果命令不返回任何行，则没有表将添加到<xref:System.Data.DataSet>，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-452">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="25b4d-453">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-453">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-454">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-454">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="25b4d-455">当指定的查询返回多个结果时，每个结果集被置于一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-455">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-456">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-456">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="25b4d-457">因为没有在创建表的查询的不返回行，如果要处理插入查询跟 select 查询的 select 查询创建的表将命名为"表"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-457">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="25b4d-458">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-458">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-459"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="25b4d-459">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="25b4d-460">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="25b4d-460">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="25b4d-461">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-461">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="25b4d-462">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-462">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="25b4d-463">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="25b4d-463">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="25b4d-464">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-464">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="25b4d-465">如果填充数据表时遇到错误或异常，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="25b4d-465">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="25b4d-466">中止运算的余数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-466">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="25b4d-467">SELECT 语句用于填充<xref:System.Data.DataTable>对象返回多个结果，如一批 SQL 语句被注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="25b4d-467">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="25b4d-468">处理一批 SQL 语句，从多个结果时`maxRecords`仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-468">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="25b4d-469">这同样适用的包含章节结果 （.NET Framework 数据提供程序用于 OLE DB 仅） 的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-469">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="25b4d-470">受限制的最高级别结果`maxRecords`，但会在所有子行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-470">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="25b4d-471">如果其中一个结果包含错误，将跳过所有后续结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-471">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-472">`DataSet`将不包含多个所指示的记录数`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-472">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="25b4d-473">但是，由该查询生成整个结果集仍从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="25b4d-473">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="25b4d-474"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-474">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-475">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-475">The source table is invalid.</span></span>  
  
<span data-ttu-id="25b4d-476">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-476">-or-</span></span> 
<span data-ttu-id="25b4d-477">连接无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-477">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="25b4d-478">找不到连接。</span><span class="sxs-lookup"><span data-stu-id="25b4d-478">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="25b4d-479"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="25b4d-479">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="25b4d-480">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-480">-or-</span></span> 
<span data-ttu-id="25b4d-481"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="25b4d-481">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-482">重写时<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-482">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-483">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-483">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-484">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-484">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-485">一个<see cref="T:System.Data.DataSet" />要用记录填充，如有必要，架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-485">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="25b4d-486">要开始的从零开始记录数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-486">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="25b4d-487">要检索的记录数目上限。</span><span class="sxs-lookup"><span data-stu-id="25b4d-487">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="25b4d-488">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-488">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="25b4d-489">用于从数据源检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-489">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="25b4d-490"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-490">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="25b4d-491">添加或刷新指定范围中的行<see cref="T:System.Data.DataSet" />以匹配数据源使用<see cref="T:System.Data.DataSet" />和源的表名称、 命令字符串以及命令行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-491">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="25b4d-492">已成功添加到或刷新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-492">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="25b4d-493">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-493">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-494"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用从数据源指定由关联的 SELECT 语句检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-494">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="25b4d-495">与 SELECT 语句关联的连接对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-495">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-496">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-496">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-497">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-497">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-498"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="25b4d-498">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="25b4d-499">创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-499">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="25b4d-500">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="25b4d-500">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="25b4d-501">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-501">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-502">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-502">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="25b4d-503">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-503">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-504">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-504">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="25b4d-505">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-505">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-506"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="25b4d-506">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="25b4d-507">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="25b4d-507">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="25b4d-508">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-508">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="25b4d-509">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-509">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="25b4d-510">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="25b4d-510">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="25b4d-511">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-511">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="25b4d-512">可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-512">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-513">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="25b4d-513">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="25b4d-514">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-514">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-515">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-515">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-516">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-516">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="25b4d-517">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-517">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-518">处理返回多个结果的实现的批处理 SQL 语句时<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>对于.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-519">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-519">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="25b4d-520"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="25b4d-520">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="25b4d-521">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-521">-or-</span></span> 
<span data-ttu-id="25b4d-522"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="25b4d-522">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-523">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保护并专供.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-523">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-524">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-524">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-525">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-525">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-526">获取或设置用于填充数据适配器的命令的行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-526">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="25b4d-527"><see cref="T:System.Data.CommandBehavior" />用于填充数据适配器的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-527">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-528">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-528">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-529">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-529">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-530">当填充操作过程中发生错误时返回。</span><span class="sxs-lookup"><span data-stu-id="25b4d-530">Returned when an error occurs during a fill operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25b4d-531">将添加<see cref="T:System.Data.DataTable" />到<see cref="T:System.Data.DataSet" />和配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-531">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-532">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-532">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-533">要插入架构的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-533">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="25b4d-534"><see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-534">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="25b4d-535">将名为“Table”的 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" />，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-535">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-536">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="25b4d-536">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-537">此方法从数据源使用检索的架构信息<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-537">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="25b4d-538">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-538">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-539">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="25b4d-539">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="25b4d-540"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-540"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="25b4d-541">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="25b4d-541">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="25b4d-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="25b4d-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="25b4d-543">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-543">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="25b4d-544">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="25b4d-544">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="25b4d-545">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-545">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="25b4d-546">如果返回主键列和唯一列，主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-546">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-547">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="25b4d-547">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="25b4d-548">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-548">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="25b4d-549">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="25b4d-549">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="25b4d-550">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-550">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="25b4d-551">过程中使用主键信息<xref:System.Data.Common.DbDataAdapter.Fill%2A>来查找和替换的键列匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-551">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="25b4d-552">如果这不是所需的行为，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>而无需请求架构信息。</span><span class="sxs-lookup"><span data-stu-id="25b4d-552">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="25b4d-553">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-553">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-554">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-554">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="25b4d-555">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-555">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-556">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-556">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="25b4d-557">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-557">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-558"><xref:System.Data.IDbConnection>与 select 命令相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-558">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="25b4d-559">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-559">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-560">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-560">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-561">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-561">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-562">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-562">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="25b4d-563">当使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server 的.NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-563">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="25b4d-564">用户应注意的潜在的负面影响，例如通过使用 SET FMTONLY ON 语句会相互干扰。</span><span class="sxs-lookup"><span data-stu-id="25b4d-564">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="25b4d-565">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-565">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="25b4d-566">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>与在架构中，并返回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-566">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-567">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="25b4d-567">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-568">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-568">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="25b4d-569">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-569">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="25b4d-570"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-570">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="25b4d-571">根据指定的 <see cref="T:System.Data.SchemaType" /> 配置指定 <see cref="T:System.Data.DataTable" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-571">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-572">一个 <see cref="T:System.Data.DataTable" />，其中包含从数据源返回的架构信息。</span><span class="sxs-lookup"><span data-stu-id="25b4d-572">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-573"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-573">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="25b4d-574">与关联的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-574">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-575">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-575">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-576">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-576">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-577">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作返回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-577">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="25b4d-578">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="25b4d-578">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="25b4d-579"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-579"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="25b4d-580">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="25b4d-580">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="25b4d-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="25b4d-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="25b4d-582">如果<xref:System.Data.DataTable.PrimaryKey%2A>已为定义`DataTable`，或`DataTable`包含的数据，`PrimaryKey`未设置属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-582">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="25b4d-583">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-583">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="25b4d-584">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="25b4d-584">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="25b4d-585">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但`PrimaryKey`未设置属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-585">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="25b4d-586">如果返回主键列和唯一列，主键列用作主键列`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-586">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="25b4d-587">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="25b4d-587">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="25b4d-588">此过程可能需要几个往返于服务器。</span><span class="sxs-lookup"><span data-stu-id="25b4d-588">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="25b4d-589">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-589">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="25b4d-590">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="25b4d-590">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="25b4d-591">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-591">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="25b4d-592">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-592">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-593">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-593">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="25b4d-594">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-594">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-595">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-595">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="25b4d-596">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-596">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="25b4d-598">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-598">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-599">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-599">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-600">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-600">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="25b4d-601">当使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server 的.NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-601">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="25b4d-602">用户应注意的潜在的负面影响，例如通过使用 SET FMTONLY ON 语句会相互干扰。</span><span class="sxs-lookup"><span data-stu-id="25b4d-602">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="25b4d-603">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-603">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="25b4d-604">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>与在架构中，并返回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-604">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-605">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="25b4d-605">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-606">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-606">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-607">要插入架构的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-607">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="25b4d-608"><see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-608">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="25b4d-609">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-609">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="25b4d-610">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-610">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-611">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="25b4d-611">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-612">此方法从数据源使用检索的架构信息<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-612">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="25b4d-613">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-614">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="25b4d-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="25b4d-615"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="25b4d-616">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="25b4d-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="25b4d-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="25b4d-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="25b4d-618">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="25b4d-619">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="25b4d-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="25b4d-620">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="25b4d-621">如果返回主键列和唯一列，主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-622">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="25b4d-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="25b4d-623">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="25b4d-624">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="25b4d-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="25b4d-625">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-625">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="25b4d-626">过程中使用主键信息<xref:System.Data.Common.DbDataAdapter.Fill%2A>来查找和替换的键列匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-626">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="25b4d-627">如果这不是所需的行为，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>而无需请求架构信息。</span><span class="sxs-lookup"><span data-stu-id="25b4d-627">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="25b4d-628">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-628">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-629">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-629">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="25b4d-630">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-630">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-631">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-631">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="25b4d-632">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-632">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-633"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="25b4d-633">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="25b4d-634">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="25b4d-634">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="25b4d-635">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-635">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="25b4d-636">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-636">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="25b4d-637">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="25b4d-637">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="25b4d-638">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-638">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="25b4d-639"><xref:System.Data.IDbConnection>与 select 命令相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-639">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="25b4d-640">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-640">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-641">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-641">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-642">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-642">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-643">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-643">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="25b4d-644">当使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server 的.NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-644">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="25b4d-645">用户应注意的潜在的负面影响，例如通过使用 SET FMTONLY ON 语句会相互干扰。</span><span class="sxs-lookup"><span data-stu-id="25b4d-645">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="25b4d-646">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-646">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="25b4d-647">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>与在架构中，并返回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-647">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="25b4d-648">找不到从中获取架构的源表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-648">A source table from which to get the schema could not be found.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-649">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="25b4d-649">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-650">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-650">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="25b4d-651">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-651">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="25b4d-652"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-652">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="25b4d-653">用于从数据源检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-653">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="25b4d-654"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-654">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="25b4d-655">配置指定的架构的架构<see cref="T:System.Data.DataTable" />根据指定<see cref="T:System.Data.SchemaType" />，命令字符串，并<see cref="T:System.Data.CommandBehavior" />值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-655">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="25b4d-656">A 的<see cref="T:System.Data.DataTable" />从数据源返回的对象，包含架构信息。</span><span class="sxs-lookup"><span data-stu-id="25b4d-656">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-657"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-657">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="25b4d-658">与关联的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-658">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-659">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-659">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-660">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-660">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-661">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-661">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-662">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="25b4d-662">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="25b4d-663"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-663"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="25b4d-664">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="25b4d-664">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="25b4d-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="25b4d-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="25b4d-666">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-666">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="25b4d-667">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="25b4d-667">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="25b4d-668">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-668">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="25b4d-669">如果返回主键列和唯一列，主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-669">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-670">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="25b4d-670">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="25b4d-671">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-671">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="25b4d-672">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="25b4d-672">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="25b4d-673">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-673">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="25b4d-674">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-674">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-675">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-675">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="25b4d-676">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-676">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-677">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-677">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="25b4d-678">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-678">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="25b4d-680">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-680">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-681">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-681">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-682">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-682">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="25b4d-683">当使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server 的.NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-683">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="25b4d-684">用户应注意的潜在的负面影响，例如通过使用 SET FMTONLY ON 语句会相互干扰。</span><span class="sxs-lookup"><span data-stu-id="25b4d-684">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="25b4d-685">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-685">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-686">此实现<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受到保护并专供.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-686">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-687">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-687">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-688">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-688">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-689">要用数据源中的架构填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-689">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="25b4d-690"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-690">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="25b4d-691">用于从数据源检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-691">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="25b4d-692">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-692">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="25b4d-693"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-693">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="25b4d-694">将添加<see cref="T:System.Data.DataTable" />到指定<see cref="T:System.Data.DataSet" />并配置架构以匹配基于指定数据源中的<see cref="T:System.Data.SchemaType" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-694">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-695">一个数组<see cref="T:System.Data.DataTable" />从数据源返回包含架构信息的对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-695">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-696"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-696">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="25b4d-697">与关联的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="25b4d-697">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="25b4d-698">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="25b4d-698">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="25b4d-699">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="25b4d-699">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="25b4d-700">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-700">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-701">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="25b4d-701">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="25b4d-702"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-702"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="25b4d-703">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="25b4d-703">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="25b4d-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="25b4d-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="25b4d-705">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-705">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="25b4d-706">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="25b4d-706">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="25b4d-707">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-707">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="25b4d-708">如果返回主键列和唯一列，主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-708">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-709">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="25b4d-709">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="25b4d-710">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-710">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="25b4d-711">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="25b4d-711">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="25b4d-712">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-712">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="25b4d-713">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="25b4d-713">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="25b4d-714">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="25b4d-714">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="25b4d-715">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="25b4d-715">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="25b4d-716">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-716">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="25b4d-717">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="25b4d-717">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="25b4d-718"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="25b4d-718">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="25b4d-719">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="25b4d-719">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="25b4d-720">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-720">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="25b4d-721">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-721">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="25b4d-722">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="25b4d-722">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="25b4d-723">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-723">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="25b4d-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="25b4d-725">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-725">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-726">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-726">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="25b4d-727">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-727">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="25b4d-728">当使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server 的.NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-728">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="25b4d-729">用户应注意的潜在的负面影响，例如通过使用 SET FMTONLY ON 语句会相互干扰。</span><span class="sxs-lookup"><span data-stu-id="25b4d-729">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="25b4d-730">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-730">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-731">此实现<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受到保护并专供.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-731">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-732">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-732">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-733">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-733">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="25b4d-734">要从中检索参数的命令的索引。</span><span class="sxs-lookup"><span data-stu-id="25b4d-734">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="25b4d-735">该命令中的参数的索引。</span><span class="sxs-lookup"><span data-stu-id="25b4d-735">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="25b4d-736">返回<see cref="T:System.Data.IDataParameter" />从当前批处理中的命令之一。</span><span class="sxs-lookup"><span data-stu-id="25b4d-736">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="25b4d-737">指定的 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-737">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-738">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-738">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="25b4d-739">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="25b4d-739">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="25b4d-740">适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-740">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-741">此方法受到保护，专为使用.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-741">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="25b4d-742">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户执行的批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-742">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="25b4d-743">实现使用<paramref name="commandIdentifier" />提供用于查找请求的命令，然后使用<paramref name="parameterIndex" />提供用于查找请求的参数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-743">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="25b4d-744">例如，<paramref name="commandIdentifier" />为 0 和<paramref name="parameterIndex" />0 的批处理中的第一个命令返回的第一个参数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-744">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-745">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-745">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-746">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-746">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="error" Type="System.Exception" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="25b4d-747">在批处理中的单个命令的从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="25b4d-747">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="25b4d-748">在批处理中指定的命令在数据存储区中受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-748">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="25b4d-749"><see cref="T:System.Exception" />指定命令的执行过程中引发。</span><span class="sxs-lookup"><span data-stu-id="25b4d-749">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="25b4d-750">返回<see langword="null" />(<see langword="Nothing" />在 Visual Basic 中) 如果不引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-750">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="25b4d-751">返回较大的批处理更新内的单次更新尝试有关的信息。</span><span class="sxs-lookup"><span data-stu-id="25b4d-751">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="25b4d-752">更大的批处理更新内的单次更新尝试有关的信息。</span><span class="sxs-lookup"><span data-stu-id="25b4d-752">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-753">支持批处理更新逻辑的数据提供程序必须覆盖上一系列的虚拟方法<xref:System.Data.Common.DbDataAdapter>类。</span><span class="sxs-lookup"><span data-stu-id="25b4d-753">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="25b4d-754">`GetBatchedRecordsAffected` 表示一个虚拟方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-754">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="25b4d-755">`DbDataAdapter`依赖于类`GetBatchedRecordsAffected`若要确定批处理内的单次更新尝试成功与否，因此它可以将标记每个相应<xref:System.Data.DataRow>相应地。</span><span class="sxs-lookup"><span data-stu-id="25b4d-755">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-756">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-756">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25b4d-757">获取执行的 SQL SELECT 语句时由用户设置的参数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-757">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="25b4d-758">一个数组<see cref="T:System.Data.IDataParameter" />由用户设置对象包含的参数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-758">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-759">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-759">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25b4d-760">初始化用于批处理<see cref="T:System.Data.Common.DbDataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-760">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-761">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-761">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="25b4d-762">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="25b4d-762">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="25b4d-763">适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-763">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-764">此方法受到保护，专为使用.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-764">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="25b4d-765">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-765">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="25b4d-766">此方法使类可以初始化支持批处理所需的任何资源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-766">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="25b4d-767">例如，类可以分配用于保存批处理中的命令集的数据结构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-767">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-768">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-768">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-769">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-769">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-770">获取或设置用于将新记录插入到数据源的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-770">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="25b4d-771">一个<see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />中数据集的新行的数据源中插入记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-771">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-772">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.IDbDataAdapter.InsertCommand%2A>将自动生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-772">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-773">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-773">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-774">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-774">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-775">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-775">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-776">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-776">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="25b4d-777">事件的数据。</span><span class="sxs-lookup"><span data-stu-id="25b4d-777">The data for the event.</span></span></param>
        <summary><span data-ttu-id="25b4d-778">引发 <see cref="E:System.Data.Common.DataAdapter.FillError" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-778">Raises the <see cref="E:System.Data.Common.DataAdapter.FillError" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="25b4d-779">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-779">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="25b4d-780">引发<see langword="RowUpdated" />的.NET Framework 数据提供程序的事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-780">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-781">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-781">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="25b4d-782">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-782">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-783">重写时<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-783">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-784">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-784">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-785">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-785">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="25b4d-786">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-786">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="25b4d-787">引发<see langword="RowUpdating" />的.NET Framework 数据提供程序的事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-787">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-788">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-788">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="25b4d-789">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-789">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-790">重写时<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />在派生类中，请确保调用基类<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-790">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-791">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-791">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-792">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-792">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-793">获取或设置用于选择数据源中的记录的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-793">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="25b4d-794">一个<see cref="T:System.Data.IDbCommand" />的过程中使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />从放入数据集中的数据源选择记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-794">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="25b4d-795">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-795">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-796">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-796">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-797">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-797">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-798">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-798">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-799">获取或设置用于从数据集中删除记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-799">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="25b4d-800"><see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />来删除已删除的行在数据集中的数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-800">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-801">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="25b4d-801">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25b4d-802">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-802">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="25b4d-803">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-803">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-804">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-804">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-805">获取或设置用于将新记录插入到数据源的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-805">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="25b4d-806"><see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />中数据集的新行的数据源中插入记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-806">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-807">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="25b4d-807">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25b4d-808">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-808">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="25b4d-809">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-809">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-810">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-810">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-811">获取或设置用于在数据源中选择记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-811">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="25b4d-812"><see cref="T:System.Data.IDbCommand" />的过程中使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />从放入数据集中的数据源选择记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-812">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-813">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="25b4d-813">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25b4d-814">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-814">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="25b4d-815">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-815">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-816">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-816">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-817">获取或设置用于更新数据源中的记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="25b4d-817">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="25b4d-818"><see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />数据集中已修改的行的数据源中更新记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-818">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-819">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="25b4d-819">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25b4d-820">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-820">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="25b4d-821">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-821">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-822">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-822">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25b4d-823">创建作为当前实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-823">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="25b4d-824">作为此实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-824">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-825">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="25b4d-825">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="25b4d-826">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-826">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="25b4d-827">有关详细信息，请参阅 <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-827">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-828">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-828">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25b4d-829">结束用于批处理<see cref="T:System.Data.Common.DbDataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-829">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-830">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-830">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="25b4d-831">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="25b4d-831">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="25b4d-832">适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="25b4d-832">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="25b4d-833">此方法受到保护，专为使用.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="25b4d-833">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="25b4d-834">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-834">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="25b4d-835">此方法使类能够释放的分配以支持批处理的任何资源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-835">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="25b4d-836">例如，类可以释放包含命令批处理中的数据结构。</span><span class="sxs-lookup"><span data-stu-id="25b4d-836">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-837">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-837">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-838">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-838">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25b4d-839">通过为每个插入、 更新或已删除的行中的执行相应的 INSERT、 UPDATE 或 DELETE 语句来更新数据库中的值<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-839">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-840">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-840">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="25b4d-841">一个数组<see cref="T:System.Data.DataRow" />用于更新数据源的对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-841">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="25b4d-842">通过为每个插入、 更新或已删除的指定数组中的行执行相应的 INSERT、 UPDATE 或 DELETE 语句来更新数据库中的值<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-842">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-843">已成功更新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-843">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-844">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="25b4d-844">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-845">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-845">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-846">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-846">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="25b4d-847">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>情况下，必须控制语句类型 （例如，插入更新之前） 的序列中的方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-847">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="25b4d-848">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-848">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="25b4d-849">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-849">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="25b4d-850">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-850">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="25b4d-851">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="25b4d-851">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="25b4d-852">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-852">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-853">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-853">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="25b4d-854"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-854">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="25b4d-855"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-855">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="25b4d-856">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-856">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="25b4d-857">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-857">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="25b4d-858">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="25b4d-858">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="25b4d-859">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="25b4d-859">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="25b4d-860">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-860">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="25b4d-861">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-861">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="25b4d-862">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-862">The command executes.</span></span>  
  
4.  <span data-ttu-id="25b4d-863">如果该命令设置为`FirstReturnedRecord`，第一个返回结果放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-863">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="25b4d-864">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-864">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="25b4d-865">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-865">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="25b4d-866">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-866"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="25b4d-867">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="25b4d-867">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="25b4d-868">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="25b4d-868">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="25b4d-869">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-869">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="25b4d-870">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-870">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="25b4d-871">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-871">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="25b4d-872">枚举值</span><span class="sxs-lookup"><span data-stu-id="25b4d-872">Enumeration value</span></span>|<span data-ttu-id="25b4d-873">执行操作</span><span class="sxs-lookup"><span data-stu-id="25b4d-873">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="25b4d-874">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-874">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="25b4d-875">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-875">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="25b4d-876">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-876">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="25b4d-877">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-877">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="25b4d-878">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-878">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="25b4d-879">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-879">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="25b4d-880">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="25b4d-880">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="25b4d-881">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-881">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-882">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-882">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="25b4d-883">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-883">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="25b4d-884">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-884">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="25b4d-885">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-885">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-886">下面的示例使用派生的类， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-886">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25b4d-887"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-887">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-888">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-888">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="25b4d-889">不<see cref="T:System.Data.DataRow" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-889">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="25b4d-890">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-890">-or-</span></span> 
<span data-ttu-id="25b4d-891">不<see cref="T:System.Data.DataTable" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-891">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="25b4d-892">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-892">-or-</span></span> 
<span data-ttu-id="25b4d-893">不<see cref="T:System.Data.DataSet" />存在要用作源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-893">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="25b4d-894">尝试执行 INSERT、 UPDATE 或 DELETE 语句导致没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="25b4d-894">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-895">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-895">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-896">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-896">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-897">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-897">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-898"><see cref="T:System.Data.DataSet" />用于更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-898">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="25b4d-899">通过为每个插入、 更新或已删除的行中指定执行相应的 INSERT、 UPDATE 或 DELETE 语句来更新数据库中的值<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-899">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-900">已成功更新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-900">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-901">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="25b4d-901">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-902">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-902">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-903">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-903">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="25b4d-904">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>情况下，必须控制语句类型 （例如，插入更新之前） 的序列中的方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-904">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="25b4d-905">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-905">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="25b4d-906">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-906">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="25b4d-907">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-907">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="25b4d-908">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="25b4d-908">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="25b4d-909">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-909">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-910">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-910">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="25b4d-911"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-911">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="25b4d-912"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-912">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="25b4d-913">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-913">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="25b4d-914">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-914">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="25b4d-915">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="25b4d-915">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="25b4d-916">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="25b4d-916">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="25b4d-917">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-917">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="25b4d-918">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-918">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="25b4d-919">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-919">The command executes.</span></span>  
  
4.  <span data-ttu-id="25b4d-920">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-920">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="25b4d-921">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-921">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="25b4d-922">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-922">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="25b4d-923">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-923"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="25b4d-924">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="25b4d-924">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="25b4d-925">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="25b4d-925">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="25b4d-926">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-926">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="25b4d-927">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-927">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="25b4d-928">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-928">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="25b4d-929">枚举值</span><span class="sxs-lookup"><span data-stu-id="25b4d-929">Enumeration value</span></span>|<span data-ttu-id="25b4d-930">执行操作</span><span class="sxs-lookup"><span data-stu-id="25b4d-930">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="25b4d-931">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-931">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="25b4d-932">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-932">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="25b4d-933">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-933">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="25b4d-934">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-934">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="25b4d-935">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-935">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="25b4d-936">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-936">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="25b4d-937">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="25b4d-937">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="25b4d-938">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-938">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-939">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-939">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="25b4d-940">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-940">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="25b4d-941">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-941">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="25b4d-942">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-942">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-943">下面的示例使用派生的类， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-943">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-944">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-944">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="25b4d-945">尝试执行 INSERT、 UPDATE 或 DELETE 语句导致没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="25b4d-945">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-946">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-946">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-947">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-947">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-948">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-948">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="25b4d-949"><see cref="T:System.Data.DataTable" />用于更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-949">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="25b4d-950">通过为每个插入、 更新或已删除的行中指定执行相应的 INSERT、 UPDATE 或 DELETE 语句来更新数据库中的值<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-950">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="25b4d-951">已成功更新中的行数<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-951">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-952">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="25b4d-952">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-953">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-953">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-954">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-954">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="25b4d-955">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>情况下，必须控制语句类型 （例如，插入更新之前） 的序列中的方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-955">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="25b4d-956">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-956">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="25b4d-957">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-957">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="25b4d-958">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-958">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="25b4d-959">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="25b4d-959">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="25b4d-960">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-960">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-961">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-961">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="25b4d-962"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-962">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="25b4d-963"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-963">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="25b4d-964">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-964">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="25b4d-965">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-965">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="25b4d-966">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="25b4d-966">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="25b4d-967">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="25b4d-967">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="25b4d-968">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-968">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="25b4d-969">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-969">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="25b4d-970">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-970">The command executes.</span></span>  
  
4.  <span data-ttu-id="25b4d-971">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-971">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="25b4d-972">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-972">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="25b4d-973">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-973">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="25b4d-974">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-974"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="25b4d-975">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="25b4d-975">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="25b4d-976">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="25b4d-976">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="25b4d-977">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-977">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="25b4d-978">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-978">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="25b4d-979">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-979">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="25b4d-980">枚举值</span><span class="sxs-lookup"><span data-stu-id="25b4d-980">Enumeration value</span></span>|<span data-ttu-id="25b4d-981">执行操作</span><span class="sxs-lookup"><span data-stu-id="25b4d-981">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="25b4d-982">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-982">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="25b4d-983">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-983">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="25b4d-984">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-984">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="25b4d-985">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-985">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="25b4d-986">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-986">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="25b4d-987">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-987">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="25b4d-988">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="25b4d-988">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="25b4d-989">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-989">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-990">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-990">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="25b4d-991">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-991">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="25b4d-992">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-992">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="25b4d-993">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-993">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-994">下面的示例使用派生的类， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-994">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25b4d-995"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-995">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-996">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-996">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="25b4d-997">不<see cref="T:System.Data.DataRow" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-997">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="25b4d-998">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-998">-or-</span></span> 
<span data-ttu-id="25b4d-999">不<see cref="T:System.Data.DataTable" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-999">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="25b4d-1000">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-1000">-or-</span></span> 
<span data-ttu-id="25b4d-1001">不<see cref="T:System.Data.DataSet" />存在要用作源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1001">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="25b4d-1002">尝试执行 INSERT、 UPDATE 或 DELETE 语句导致没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1002">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-1003">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1003">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-1004">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1004">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-1005">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-1005">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="25b4d-1006">一个数组<see cref="T:System.Data.DataRow" />用于更新数据源的对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1006">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="25b4d-1007"><see cref="P:System.Data.IDataAdapter.TableMappings" />集合使用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1007">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="25b4d-1008">通过为每个插入、 更新或已删除的行中指定的数组执行相应的 INSERT、 UPDATE 或 DELETE 语句来更新数据库中的值<see cref="T:System.Data.DataSet" />对象。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1008">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="25b4d-1009">已成功更新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1009">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-1010">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="25b4d-1010">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-1011">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1011">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-1012">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1012">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="25b4d-1013">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>情况下，必须控制语句类型 （例如，插入更新之前） 的序列中的方法。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1013">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="25b4d-1014">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1014">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="25b4d-1015">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1015">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="25b4d-1016">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1016">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="25b4d-1017">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1017">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="25b4d-1018">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1018">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-1019">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1019">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="25b4d-1020"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1020">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="25b4d-1021"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1021">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="25b4d-1022">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1022">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="25b4d-1023">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1023">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="25b4d-1024">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1024">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="25b4d-1025">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="25b4d-1025">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="25b4d-1026">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1026">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="25b4d-1027">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1027">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="25b4d-1028">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1028">The command executes.</span></span>  
  
4.  <span data-ttu-id="25b4d-1029">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1029">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="25b4d-1030">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1030">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="25b4d-1031">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1031">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="25b4d-1032">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1032"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="25b4d-1033">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1033">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="25b4d-1034">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1034">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="25b4d-1035">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1035">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="25b4d-1036">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1036">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="25b4d-1037">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1037">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="25b4d-1038">枚举值</span><span class="sxs-lookup"><span data-stu-id="25b4d-1038">Enumeration value</span></span>|<span data-ttu-id="25b4d-1039">执行操作</span><span class="sxs-lookup"><span data-stu-id="25b4d-1039">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="25b4d-1040">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1040">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="25b4d-1041">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1041">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="25b4d-1042">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1042">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="25b4d-1043">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1043">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="25b4d-1044">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1044">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="25b4d-1045">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1045">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="25b4d-1046">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1046">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="25b4d-1047">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1047">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-1048">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1048">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="25b4d-1049">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1049">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="25b4d-1050">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1050">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="25b4d-1051">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1051">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25b4d-1052"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1052">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-1053">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1053">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="25b4d-1054">不<see cref="T:System.Data.DataRow" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1054">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="25b4d-1055">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-1055">-or-</span></span> 
<span data-ttu-id="25b4d-1056">不<see cref="T:System.Data.DataTable" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1056">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="25b4d-1057">或</span><span class="sxs-lookup"><span data-stu-id="25b4d-1057">-or-</span></span> 
<span data-ttu-id="25b4d-1058">不<see cref="T:System.Data.DataSet" />存在要用作源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1058">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="25b4d-1059">尝试执行 INSERT、 UPDATE 或 DELETE 语句导致没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1059">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-1060">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1060">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-1061">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1061">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-1062">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-1062">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="25b4d-1063"><see cref="T:System.Data.DataSet" />要用于更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1063">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="25b4d-1064">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1064">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="25b4d-1065">通过为具有指定名称 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1065">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="25b4d-1066">已成功更新中的行数<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1066">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-1067">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="25b4d-1067">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-1068">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1068">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="25b4d-1069">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1069">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="25b4d-1070">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>方法在其中你必须控制语句类型的序列的情况下 （例如，在更新之前插入）。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1070">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="25b4d-1071">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1071">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="25b4d-1072">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1072">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="25b4d-1073">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1073">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="25b4d-1074">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1074">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="25b4d-1075">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1075">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-1076">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1076">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="25b4d-1077"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1077">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="25b4d-1078">具有相同名称但不同的情况下，多个表中的存在时`DataSet`，<xref:System.Data.Common.DbDataAdapter.Update%2A>执行区分大小写比较，以找到相应的表，并产生异常，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1078">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="25b4d-1079">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1079">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="25b4d-1080">如果<xref:System.Data.Common.DbDataAdapter.Update%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1080">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="25b4d-1081">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1081">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="25b4d-1082">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1082">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="25b4d-1083"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1083">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="25b4d-1084"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1084">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="25b4d-1085">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1085">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="25b4d-1086">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1086">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="25b4d-1087">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1087">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="25b4d-1088">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="25b4d-1088">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="25b4d-1089">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1089">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="25b4d-1090">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1090">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="25b4d-1091">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1091">The command executes.</span></span>  
  
4.  <span data-ttu-id="25b4d-1092">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1092">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="25b4d-1093">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1093">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="25b4d-1094">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1094">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="25b4d-1095">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1095"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="25b4d-1096">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1096">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="25b4d-1097">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1097">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="25b4d-1098">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1098">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="25b4d-1099">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1099">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="25b4d-1100">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1100">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="25b4d-1101">枚举值</span><span class="sxs-lookup"><span data-stu-id="25b4d-1101">Enumeration value</span></span>|<span data-ttu-id="25b4d-1102">执行操作</span><span class="sxs-lookup"><span data-stu-id="25b4d-1102">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="25b4d-1103">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1103">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="25b4d-1104">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1104">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="25b4d-1105">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1105">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="25b4d-1106">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1106">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="25b4d-1107">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1107">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="25b4d-1108">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1108">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="25b4d-1109">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1109">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="25b4d-1110">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1110">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25b4d-1111">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1111">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="25b4d-1112">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1112">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="25b4d-1113">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1113">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="25b4d-1114">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1114">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-1115">下面的示例使用派生的类， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1115">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25b4d-1116"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1116">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="25b4d-1117">源表无效。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1117">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="25b4d-1118">尝试执行 INSERT、 UPDATE 或 DELETE 语句导致没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1118">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-1119">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1119">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-1120">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1120">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-1121">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-1121">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-1122">获取或设置一个值，启用或禁用批处理支持，并指定可以在批处理中执行的命令数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1122">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="25b4d-1123">要处理的每批行数。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1123">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="25b4d-1124">值是</span><span class="sxs-lookup"><span data-stu-id="25b4d-1124">Value is</span></span> 
 </term><description> <span data-ttu-id="25b4d-1125">效果</span><span class="sxs-lookup"><span data-stu-id="25b4d-1125">Effect</span></span> 
 </description></listheader><item><term> <span data-ttu-id="25b4d-1126">0</span><span class="sxs-lookup"><span data-stu-id="25b4d-1126">0</span></span> 
 </term><description> <span data-ttu-id="25b4d-1127">批大小没有任何限制。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1127">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="25b4d-1128">1</span><span class="sxs-lookup"><span data-stu-id="25b4d-1128">1</span></span> 
 </term><description> <span data-ttu-id="25b4d-1129">禁用批量更新。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1129">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="25b4d-1130">&gt; 1</span><span class="sxs-lookup"><span data-stu-id="25b4d-1130">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="25b4d-1131">使用批处理的发送更改<see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />操作一次。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1131">Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="25b4d-1132">当设置为 1 以外的值，与相关联的所有命令<see cref="T:System.Data.Common.DbDataAdapter" />必须具有其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />属性设置为**None**或**OutputParameters**。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1132">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="25b4d-1133">否则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1133">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-1134">使用<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>属性来更新数据源中的更改与<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1134">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="25b4d-1135">如果数据访问接口支持批处理，这可以通过减少到服务器的往返次数来提高应用程序性能。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1135">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="25b4d-1136">在 ADO.NET 2.0 中，此属性被支持的.NET 数据提供程序适用于 SQL Server (SqlClient) 和 Oracle (OracleClient)。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1136">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="25b4d-1137">执行极大的批处理会降低性能。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1137">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="25b4d-1138">因此，在实现应用程序前应进行测试以得到最佳的批大小。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1138">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="25b4d-1139"><xref:System.ArgumentOutOfRangeException>如果的值设置为一个数字，将引发小于零。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1139">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-1140">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1140">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-1141">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1141">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-1142">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-1142">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25b4d-1143">获取或设置用于更新数据源中的记录的命令。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1143">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="25b4d-1144">一个<see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />数据集中已修改的行的数据源中更新记录。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1144">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b4d-1145">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>将自动生成。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1145">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25b4d-1146">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="25b4d-1146">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="25b4d-1147">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1147">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="25b4d-1148">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="25b4d-1148">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="25b4d-1149">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="25b4d-1149">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>