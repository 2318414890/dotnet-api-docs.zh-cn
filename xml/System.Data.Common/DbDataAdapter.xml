<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="03946-101">帮助实现 <see cref="T:System.Data.IDbDataAdapter" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="03946-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="03946-102"><see cref="T:System.Data.Common.DbDataAdapter" /> 的继承类实现了一组功能以提供强类型，但是继承了完全实现 DataAdapter 所需的大部分功能。</span><span class="sxs-lookup"><span data-stu-id="03946-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-103"><xref:System.Data.Common.DbDataAdapter>类继承自<xref:System.Data.Common.DataAdapter>类并实现<xref:System.Data.IDbDataAdapter>接口。</span><span class="sxs-lookup"><span data-stu-id="03946-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="03946-104">它可帮助实现的类**DataAdapter**专用于关系数据库。</span><span class="sxs-lookup"><span data-stu-id="03946-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="03946-105">应用程序不会创建的实例<xref:System.Data.Common.DbDataAdapter>类直接，但创建从它继承的类的实例。</span><span class="sxs-lookup"><span data-stu-id="03946-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="03946-106">继承的类<xref:System.Data.Common.DbDataAdapter>必须实现继承的成员，且通常定义其他成员来添加提供程序特定的功能。</span><span class="sxs-lookup"><span data-stu-id="03946-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="03946-107">例如，<xref:System.Data.Common.DbDataAdapter>类定义<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性，与<xref:System.Data.Common.DbDataAdapter>类定义的八个重载<xref:System.Data.IDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="03946-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="03946-108">反过来，<xref:System.Data.OleDb.OleDbDataAdapter>类继承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，并还定义了两个其他重载<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>它们采用 ADO 记录集对象作为参数。</span><span class="sxs-lookup"><span data-stu-id="03946-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="03946-109">继承自<see cref="T:System.Data.Common.DbDataAdapter" />类，我们建议你实现以下构造函数：</span><span class="sxs-lookup"><span data-stu-id="03946-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span>  
  
 <span data-ttu-id="03946-110"><list type="table"><listheader><term> 项</span><span class="sxs-lookup"><span data-stu-id="03946-110"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="03946-111"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="03946-111"></term><description> Description</span></span>  
  
 <span data-ttu-id="03946-112"></description></listheader><item><term> *Prv*DataAdapter()</span><span class="sxs-lookup"><span data-stu-id="03946-112"></description></listheader><item><term> *Prv*DataAdapter()</span></span>  
  
 <span data-ttu-id="03946-113"></term><description> 初始化的新实例*Prv*DataAdapter 类。</span><span class="sxs-lookup"><span data-stu-id="03946-113"></term><description> Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 <span data-ttu-id="03946-114"></description></item><item><term> *Prv*DataAdapter (*Prv*命令*selectCommand*)</span><span class="sxs-lookup"><span data-stu-id="03946-114"></description></item><item><term> *Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span>  
  
 <span data-ttu-id="03946-115"></term><description> 初始化的新实例*Prv*DataAdapter 类与指定的 SQL SELECT 语句一起使用。</span><span class="sxs-lookup"><span data-stu-id="03946-115"></term><description> Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 <span data-ttu-id="03946-116"></description></item><item><term> *Prv*DataAdapter (字符串*selectCommandText*，字符串*selectConnectionString*)</span><span class="sxs-lookup"><span data-stu-id="03946-116"></description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span>  
  
 <span data-ttu-id="03946-117"></term><description> 初始化的新实例*Prv*DataAdapter 类替换 SQL SELECT 语句和连接字符串。</span><span class="sxs-lookup"><span data-stu-id="03946-117"></term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 <span data-ttu-id="03946-118"></description></item><item><term> *Prv*DataAdapter (字符串*selectCommandText*， *Prv*连接*selectConnection*)</span><span class="sxs-lookup"><span data-stu-id="03946-118"></description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span>  
  
 <span data-ttu-id="03946-119"></term><description> 初始化的新实例*Prv*DataAdapter 类使用的 SQL SELECT 语句和*Prv*连接对象。</span><span class="sxs-lookup"><span data-stu-id="03946-119"></term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="03946-120">若要将提升.NET Framework 数据提供程序之间的一致性，您应命名窗体中的继承类*Prv*DataAdapter，其中*Prv*是为特定的.NET 中的所有类提供的统一前缀Framework 数据提供程序命名空间。</span><span class="sxs-lookup"><span data-stu-id="03946-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="03946-121">例如，"Sql"是前缀<see cref="T:System.Data.SqlClient.SqlDataAdapter" />类**System.Data.SqlClient**命名空间。</span><span class="sxs-lookup"><span data-stu-id="03946-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03946-122">初始化 <see langword="DataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="03946-122">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03946-123">初始化 DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="03946-123">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-124">当你创建的实例<xref:System.Data.Common.DbDataAdapter>，以下的读/写属性设置为以下的初始值。</span><span class="sxs-lookup"><span data-stu-id="03946-124">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="03946-125">属性</span><span class="sxs-lookup"><span data-stu-id="03946-125">Properties</span></span>|<span data-ttu-id="03946-126">初始值</span><span class="sxs-lookup"><span data-stu-id="03946-126">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="03946-127">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="03946-127">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="03946-128">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="03946-128">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="03946-129">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="03946-129">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="03946-130">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="03946-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="03946-131">你可以更改任何通过单独属性调用这些属性的值。</span><span class="sxs-lookup"><span data-stu-id="03946-131">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="03946-132">用于创建新 <see langword="DataAdapter" /> 的 <see langword="DataAdapter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="03946-132">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="03946-133">从同一类型的现有对象中初始化 <see langword="DataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="03946-133">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-134">此重载<xref:System.Data.Common.DbDataAdapter>构造函数旨在使用.NET Framework 数据提供程序实现在克隆的实现中使用的类似构造函数时。</span><span class="sxs-lookup"><span data-stu-id="03946-134">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="03946-135">要添加到批处理的 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="03946-135">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="03946-136">向当前批处理添加 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="03946-136">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="03946-137">添加 <see cref="T:System.Data.IDbCommand" /> 之前批处理中的命令数。</span><span class="sxs-lookup"><span data-stu-id="03946-137">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-138">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="03946-138">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="03946-139">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-139">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="03946-140">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-140">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-141">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-141">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="03946-142">如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户将命令添加到一批。</span><span class="sxs-lookup"><span data-stu-id="03946-142">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03946-143">从批处理中移除所有 <see cref="T:System.Data.IDbCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="03946-143">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-144">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="03946-144">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="03946-145">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-145">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="03946-146">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-146">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-147">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-147">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="03946-148">如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户从一批中删除所有命令。</span><span class="sxs-lookup"><span data-stu-id="03946-148">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="03946-149">用于更新数据源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="03946-149">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="03946-150">在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="03946-150">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="03946-151">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-151">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="03946-152"><see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="03946-152">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="03946-153">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="03946-153">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="03946-154"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="03946-154">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-155">在重写<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="03946-155">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="03946-156">更新数据源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="03946-156">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="03946-157">要在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="03946-157">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="03946-158">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-158">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="03946-159"><see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="03946-159">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="03946-160">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="03946-160">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="03946-161"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="03946-161">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-162">在重写<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="03946-162">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-163"><see cref="T:System.Data.Common.DataAdapter" /> 对象用于表映射的默认名称。</span><span class="sxs-lookup"><span data-stu-id="03946-163">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-164">"表"是使用默认名称<xref:System.Data.Common.DataAdapter>表映射的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-164">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="03946-165"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 是当应用程序将添加要用于表映射<xref:System.Data.Common.DbDataAdapter.Fill%2A>，但未指定<xref:System.Data.DataTable>名称。</span><span class="sxs-lookup"><span data-stu-id="03946-165"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-166">获取或设置用于从数据集中删除记录的命令。</span><span class="sxs-lookup"><span data-stu-id="03946-166">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="03946-167"><see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="03946-167">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-168">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>自动生成。</span><span class="sxs-lookup"><span data-stu-id="03946-168">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-169">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="03946-169">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="03946-170">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="03946-170"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="03946-171">释放由 <see cref="T:System.Data.Common.DbDataAdapter" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="03946-171">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03946-172">执行当前批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-172">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="03946-173">从批处理中的最后一个命令返回的值。</span><span class="sxs-lookup"><span data-stu-id="03946-173">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-174">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="03946-174">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="03946-175">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-175">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-176">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-176">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="03946-177">如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户执行一个批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-177">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="03946-178">此方法的实现将适配器中的命令合并到一个批处理，然后执行的批处理，并且返回批处理的返回值。</span><span class="sxs-lookup"><span data-stu-id="03946-178">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03946-179">填充 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-179">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-180">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-180">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="03946-181">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行。</span><span class="sxs-lookup"><span data-stu-id="03946-181">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="03946-182">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-182">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="03946-183">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="03946-183">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-184"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="03946-184">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="03946-185"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-185">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-186">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-186">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="03946-187">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-187">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-188">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="03946-188">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="03946-189">该操作的剩余部分将会中止。</span><span class="sxs-lookup"><span data-stu-id="03946-189">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="03946-190">如果命令不返回任何行，没有表将添加到<xref:System.Data.DataSet>，并且不引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="03946-190">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="03946-191">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的后续使用模式的列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-191">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-192">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-192">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="03946-193">当指定的查询返回多个结果时，返回查询的每个行的结果集被置于单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-193">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="03946-194">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="03946-194">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="03946-195">因为如果处理插入查询跟 select 查询，查询不返回行，创建没有表，创建了为 select 查询的表的名称为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="03946-195">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="03946-196">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-196">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-197">SELECT 语句用于填充<xref:System.Data.DataSet>多个结果，例如批处理 SQL 语句，如果其中一个结果包含错误，将返回所有的后续结果将被跳过并不会添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-197">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="03946-198">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="03946-198">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="03946-199">SQL 语句应匹配是最初用来填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-199">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="03946-200">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="03946-200">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="03946-201">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<xref:System.Data.DataTable>相对应的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-201">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-202">主键信息可能被设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-202">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="03946-203">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="03946-203">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-204">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="03946-204">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="03946-205">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-205">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-206">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-206">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-207">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-207">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="03946-208">用于表映射的 <see cref="T:System.Data.DataTable" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-208">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="03946-209">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行，以与使用 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-209">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="03946-210">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-210">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="03946-211">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="03946-211">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-212"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-212">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="03946-213">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-213">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-214">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-214">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-215">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-215">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-216"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作然后将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="03946-216">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="03946-217">在创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="03946-217">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="03946-218">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="03946-218">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="03946-219">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-219">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-220">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-220">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="03946-221">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-221">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="03946-222">重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataTable`如参数仅获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="03946-222">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="03946-223">使用的重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataSet`作为参数，以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="03946-223">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="03946-224"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-224">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="03946-225">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-225">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="03946-226">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-226">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="03946-227">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="03946-227">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="03946-228">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="03946-228">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="03946-229">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-229">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="03946-230">你可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-230">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-231">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="03946-231">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="03946-232">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-232">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-233">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="03946-233">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-234">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="03946-234">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="03946-235">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-235">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-236">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-236">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-237">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-237">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-238">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-238">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-239">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-239">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="03946-240">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-240">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="03946-241">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="03946-241">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="03946-242">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-242">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="03946-243">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="03946-243">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-244"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="03946-244">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="03946-245"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-245">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-246">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-246">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-247">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-247">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-248">如果命令不返回任何行，没有表将添加到<xref:System.Data.DataSet>，并且不引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="03946-248">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="03946-249">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-249">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="03946-250">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-250">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="03946-251">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-251">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-252">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="03946-252">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="03946-253">由于你可以像处理插入查询跟 select 查询，查询不返回行，创建没有表，表创建了为 select 查询将被命名为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="03946-253">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="03946-254">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-254">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-255"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-255">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="03946-256">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-256">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="03946-257">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-257">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="03946-258">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="03946-258">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="03946-259">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="03946-259">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="03946-260">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-260">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="03946-261">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="03946-261">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="03946-262">该操作的剩余部分将会中止。</span><span class="sxs-lookup"><span data-stu-id="03946-262">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="03946-263">SELECT 语句用于填充<xref:System.Data.DataSet>返回多个结果，如一批 SQL 语句中，注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="03946-263">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="03946-264">如果其中一个结果包含错误，跳过且不会添加到所有的后续结果<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-264">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="03946-265">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="03946-265">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="03946-266">SQL 语句应匹配是最初用来填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-266">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="03946-267">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="03946-267">The **Key** column information must be present.</span></span> <span data-ttu-id="03946-268">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<xref:System.Data.DataTable>相对应的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-268">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-269">主键信息可能被设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-269">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="03946-270">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="03946-270">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-271">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="03946-271">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="03946-272">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-272">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-273">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-273">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-274">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-274">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-275">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填充<xref:System.Data.DataSet>与从类别表的行。</span><span class="sxs-lookup"><span data-stu-id="03946-275">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="03946-276">此示例假定你已创建了<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-276">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="03946-277">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-277">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-278">在重写<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="03946-278">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="03946-279">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-279">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="03946-280">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-280">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="03946-281"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="03946-281">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="03946-282">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.IDbCommand" /> 和 <see cref="T:System.Data.CommandBehavior" /> 的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-282">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="03946-283">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-283">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="03946-284">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="03946-284">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-285"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-285">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="03946-286">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-286">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-287">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-287">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="03946-288">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-288">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-289"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作然后将行添加到指定目标<xref:System.Data.DataTable>对象在<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="03946-289">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="03946-290">在创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="03946-290">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="03946-291">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="03946-291">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="03946-292">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的后续列，使用模式名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-292">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-293">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-293">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="03946-294">重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataTable`如参数仅获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="03946-294">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="03946-295">使用的重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataSet`作为参数，以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="03946-295">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="03946-296">你可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-296">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-297">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="03946-297">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="03946-298">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-298">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-299">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="03946-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-300">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="03946-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="03946-301">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-302">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-303">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-304">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-304">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="03946-305">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="03946-305">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="03946-306">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="03946-306">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="03946-307">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="03946-307">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="03946-308">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与从指定的记录开始一直检索到指定的最大数目的记录的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-308">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="03946-309">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-309">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="03946-310">此值不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="03946-310">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-311"><xref:System.Data.Common.DataAdapter.Fill%2A>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-311">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="03946-312">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-312">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-313">如果之前连接关闭<xref:System.Data.Common.DataAdapter.Fill%2A>是调用，它将打开以检索数据，并且再将其关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-313">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="03946-314">如果连接是打开之前<xref:System.Data.Common.DataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-314">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-315"><xref:System.Data.Common.DataAdapter.Fill%2A>操作然后将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="03946-315">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="03946-316">在创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="03946-316">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="03946-317">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="03946-317">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="03946-318">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="03946-318">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-319">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="03946-319">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="03946-320">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-320">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="03946-321">如果数据适配器在填充时遇到重复的列<xref:System.Data.DataTable>，它会生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-321">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="03946-322">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-322">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="03946-323">多个结果集添加到时<xref:System.Data.DataSet>，每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-323">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-324">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="03946-324">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="03946-325">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-325">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-326">SELECT 语句用于填充<xref:System.Data.DataSet>返回多个结果，例如批处理 SQL 语句，如果其中一个结果包含错误，所有的后续结果会跳过并不添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-326">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="03946-327">你可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-327">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-328">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="03946-328">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="03946-329">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-329">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-330">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-330">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-331">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-331">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-332">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-332">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="03946-333">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="03946-333">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="03946-334">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="03946-334">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="03946-335">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-335">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="03946-336">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="03946-336">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="03946-337">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-337">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="03946-338">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="03946-338">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-339">A`maxRecords`值为 0 获取开始记录后找到的所有记录。</span><span class="sxs-lookup"><span data-stu-id="03946-339">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="03946-340">如果`maxRecords`大于剩余行的数量只返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="03946-340">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="03946-341">如果对应的 select 命令是一个语句返回多个结果，<xref:System.Data.Common.DbDataAdapter.Fill%2A>仅适用`maxRecords`到第一个结果。</span><span class="sxs-lookup"><span data-stu-id="03946-341">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="03946-342"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="03946-342">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="03946-343"><xref:System.Data.IDbConnection>与 SELECT 语句关联的对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-343">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-344">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-344">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="03946-345">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-345">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-346">如果命令不返回任何行，没有表将添加到<xref:System.Data.DataSet>，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="03946-346">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="03946-347">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的后续列，使用模式名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-347">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-348">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-348">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="03946-349">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-349">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-350">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="03946-350">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="03946-351">因为如果处理插入查询跟 select 查询，查询不返回行，创建没有表，创建了为 select 查询的表的名称为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="03946-351">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="03946-352">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-352">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-353"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-353">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="03946-354">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-354">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="03946-355">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-355">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="03946-356">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="03946-356">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="03946-357">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="03946-357">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="03946-358">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-358">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="03946-359">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="03946-359">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="03946-360">该操作的剩余部分将会中止。</span><span class="sxs-lookup"><span data-stu-id="03946-360">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="03946-361">SELECT 语句用于填充<xref:System.Data.DataSet>返回多个结果，例如批处理 SQL 语句，请注意下列情况：</span><span class="sxs-lookup"><span data-stu-id="03946-361">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="03946-362">处理批处理 SQL 语句中的多个结果时`maxRecords`仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="03946-362">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="03946-363">同样适用于包含章节结果 (.NET Framework Data Provider for OLE DB 仅) 的行。</span><span class="sxs-lookup"><span data-stu-id="03946-363">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="03946-364">受限制的最上层结果`maxRecords`，但会在所有子行。</span><span class="sxs-lookup"><span data-stu-id="03946-364">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="03946-365">如果其中一个结果包含错误，跳过且不会添加到所有的后续结果<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-365">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="03946-366">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="03946-366">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="03946-367">SQL 语句应匹配是最初用来填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-367">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="03946-368">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="03946-368">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="03946-369">如果存在主键信息，则将对帐任何重复的行，并只能出现一次在<xref:System.Data.DataTable>相对应的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-369">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-370">主键信息可能被设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-370">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="03946-371">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="03946-371">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-372">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="03946-372">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="03946-373">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-373">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-374">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-374">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-375">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-375">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-376">`DataSet`将不包含多个记录由数`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="03946-376">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="03946-377">但是，由查询生成的整个结果集是仍会从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="03946-377">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-378">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填充<xref:System.Data.DataSet>15 行，在第 10，行从开始**类别**表。</span><span class="sxs-lookup"><span data-stu-id="03946-378">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="03946-379">此示例假定你已创建了<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-379">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="03946-380"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="03946-380">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-381">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-381">The source table is invalid.</span></span>  
  
 <span data-ttu-id="03946-382">或</span><span class="sxs-lookup"><span data-stu-id="03946-382">-or-</span></span>  
  
 <span data-ttu-id="03946-383">连接无效。</span><span class="sxs-lookup"><span data-stu-id="03946-383">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="03946-384">未能找到连接。</span><span class="sxs-lookup"><span data-stu-id="03946-384">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03946-385"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="03946-385">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="03946-386">或</span><span class="sxs-lookup"><span data-stu-id="03946-386">-or-</span></span>  
  
 <span data-ttu-id="03946-387"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="03946-387">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-388">在重写<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="03946-388">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="03946-389">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="03946-389">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="03946-390">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="03946-390">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="03946-391">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="03946-391">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="03946-392">执行以填充 <see cref="T:System.Data.IDbCommand" /> 对象的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-392">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="03946-393"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="03946-393">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="03946-394">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="03946-394">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="03946-395">已在数据表中添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-395">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-396">A`maxRecords`值为 0 获取开始记录后找到的所有记录。</span><span class="sxs-lookup"><span data-stu-id="03946-396">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="03946-397">如果`maxRecords`大于剩余行数仅返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="03946-397">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="03946-398"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="03946-398">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="03946-399"><xref:System.Data.IDbConnection>与 SELECT 语句关联的对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-399">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-400">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-400">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-401">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-401">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-402">如果命令不返回任何行，没有表将添加到<xref:System.Data.DataSet>，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="03946-402">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="03946-403">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的后续列，使用模式名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-403">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-404">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-404">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="03946-405">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-405">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-406">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="03946-406">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="03946-407">由于你可以像处理插入查询跟 select 查询，查询不返回行，创建没有表，表创建了为 select 查询将被命名为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="03946-407">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="03946-408">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-408">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-409"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-409">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="03946-410">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-410">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="03946-411">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-411">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="03946-412">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="03946-412">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="03946-413">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="03946-413">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="03946-414">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-414">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="03946-415">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="03946-415">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="03946-416">该操作的剩余部分将会中止。</span><span class="sxs-lookup"><span data-stu-id="03946-416">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="03946-417">SELECT 语句用于填充<xref:System.Data.DataTable>对象返回多个结果，如一批 SQL 语句中，注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="03946-417">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="03946-418">处理批处理 SQL 语句中的多个结果时`maxRecords`仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="03946-418">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="03946-419">同样适用于包含章节结果 (.NET Framework Data Provider for OLE DB 仅) 的行。</span><span class="sxs-lookup"><span data-stu-id="03946-419">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="03946-420">受限制的最上层结果`maxRecords`，但会在所有子行。</span><span class="sxs-lookup"><span data-stu-id="03946-420">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="03946-421">如果其中一个结果包含错误，则跳过所有的后续结果。</span><span class="sxs-lookup"><span data-stu-id="03946-421">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-422">`DataSet`将不包含多个记录由数`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="03946-422">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="03946-423">但是，由查询生成的整个结果集是仍会从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="03946-423">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="03946-424"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="03946-424">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-425">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-425">The source table is invalid.</span></span>  
  
 <span data-ttu-id="03946-426">或</span><span class="sxs-lookup"><span data-stu-id="03946-426">-or-</span></span>  
  
 <span data-ttu-id="03946-427">连接无效。</span><span class="sxs-lookup"><span data-stu-id="03946-427">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="03946-428">未能找到连接。</span><span class="sxs-lookup"><span data-stu-id="03946-428">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03946-429"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="03946-429">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="03946-430">或</span><span class="sxs-lookup"><span data-stu-id="03946-430">-or-</span></span>  
  
 <span data-ttu-id="03946-431"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="03946-431">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-432">在重写<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="03946-432">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-433">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-433">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="03946-434">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="03946-434">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="03946-435">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="03946-435">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="03946-436">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-436">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="03946-437">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-437">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="03946-438"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="03946-438">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="03946-439">使用 <see cref="T:System.Data.DataSet" /> 和源表名称、命令字符串以及命令行为，在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新某些行以使它们与数据源中对应的行相一致。</span><span class="sxs-lookup"><span data-stu-id="03946-439">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="03946-440">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-440">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="03946-441">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="03946-441">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-442"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-442">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="03946-443">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-443">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-444">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-444">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-445">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-445">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-446"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作然后将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="03946-446">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="03946-447">在创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="03946-447">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="03946-448">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="03946-448">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="03946-449">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-449">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-450">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-450">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="03946-451">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-451">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-452">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="03946-452">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="03946-453">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-453">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-454"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-454">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="03946-455">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-455">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="03946-456">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-456">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="03946-457">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="03946-457">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="03946-458">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="03946-458">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="03946-459">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-459">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="03946-460">你可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-460">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-461">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="03946-461">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="03946-462">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-462">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-463">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="03946-463">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-464">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="03946-464">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="03946-465">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-465">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-466">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-466">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-467">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-467">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03946-468"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="03946-468">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="03946-469">或</span><span class="sxs-lookup"><span data-stu-id="03946-469">-or-</span></span>  
  
 <span data-ttu-id="03946-470"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="03946-470">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-471">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-471">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-472">获取或设置用于填充数据适配器的命令的行为。</span><span class="sxs-lookup"><span data-stu-id="03946-472">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="03946-473">用于填充数据适配器的命令的 <see cref="T:System.Data.CommandBehavior" />。</span><span class="sxs-lookup"><span data-stu-id="03946-473">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03946-474">将 <see cref="T:System.Data.DataTable" /> 添加到 <see cref="T:System.Data.DataSet" /> 中，并配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="03946-474">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-475">要将架构插入其中的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-475">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="03946-476"><see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span><span class="sxs-lookup"><span data-stu-id="03946-476">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="03946-477">将名为“Table”的 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="03946-477">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="03946-478">对添加到 <see cref="T:System.Data.DataTable" /> 中的 <see cref="T:System.Data.DataSet" /> 对象集合的引用。</span><span class="sxs-lookup"><span data-stu-id="03946-478">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-479">此方法从数据源使用检索的架构信息<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-479">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="03946-480">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-480">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-481">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="03946-481">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="03946-482"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-482"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="03946-483">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="03946-483">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="03946-484"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="03946-484"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="03946-485">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-485">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="03946-486">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="03946-486">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="03946-487">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="03946-487">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="03946-488">如果返回主键列和唯一列，将主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-488">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-489">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="03946-489">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="03946-490">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-490">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="03946-491">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="03946-491">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="03946-492">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="03946-492">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="03946-493">过程中使用主键信息<xref:System.Data.Common.DbDataAdapter.Fill%2A>来查找和替换其键的列相匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="03946-493">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="03946-494">如果这不是所需的行为，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-494">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="03946-495">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-495">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-496">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-496">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="03946-497">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-497">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-498">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="03946-498">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="03946-499">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-499">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-500"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须是有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="03946-500">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="03946-501">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-501">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-502">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-502">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-503">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-503">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-504">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-504">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="03946-505">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="03946-505">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="03946-506">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="03946-506">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="03946-507">有关更多信息，请参见“SQL Server 联机丛书”。</span><span class="sxs-lookup"><span data-stu-id="03946-507">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-508">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>架构，并返回与<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-508">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="03946-509">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-509">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="03946-510"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="03946-510">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="03946-511">根据指定的 <see cref="T:System.Data.DataTable" /> 配置指定 <see cref="T:System.Data.SchemaType" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="03946-511">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="03946-512">包含从数据源返回的架构信息的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-512">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-513"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-513">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="03946-514">与相关的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-514">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-515">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-515">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-516">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-516">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-517">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将返回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-517">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="03946-518">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="03946-518">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="03946-519"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-519"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="03946-520">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="03946-520">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="03946-521"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="03946-521"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="03946-522">如果<xref:System.Data.DataTable.PrimaryKey%2A>已为定义`DataTable`，或`DataTable`包含了数据以及`PrimaryKey`未设置属性。</span><span class="sxs-lookup"><span data-stu-id="03946-522">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="03946-523">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="03946-523">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="03946-524">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="03946-524">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="03946-525">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但`PrimaryKey`未设置属性。</span><span class="sxs-lookup"><span data-stu-id="03946-525">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="03946-526">如果返回主键列和唯一列，将主键列用作主键列`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="03946-526">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="03946-527">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="03946-527">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="03946-528">此过程可能需要几个到服务器的往返次数。</span><span class="sxs-lookup"><span data-stu-id="03946-528">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="03946-529">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-529">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="03946-530">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="03946-530">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="03946-531">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="03946-531">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="03946-532">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-532">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-533">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-533">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="03946-534">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-534">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-535">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="03946-535">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="03946-536">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-536">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-537"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="03946-537"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="03946-538">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-538">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-539">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-539">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-540">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-540">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="03946-541">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="03946-541">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="03946-542">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="03946-542">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="03946-543">有关更多信息，请参见“SQL Server 联机丛书”。</span><span class="sxs-lookup"><span data-stu-id="03946-543">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-544">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>架构，并返回与<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-544">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-545">要将架构插入其中的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-545">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="03946-546"><see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span><span class="sxs-lookup"><span data-stu-id="03946-546">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="03946-547">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-547">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="03946-548">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="03946-548">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="03946-549">对添加到 <see cref="T:System.Data.DataTable" /> 中的 <see cref="T:System.Data.DataSet" /> 对象集合的引用。</span><span class="sxs-lookup"><span data-stu-id="03946-549">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-550">此方法从数据源使用检索的架构信息<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-550">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="03946-551">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-551">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-552">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="03946-552">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="03946-553"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-553"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="03946-554">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="03946-554">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="03946-555"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="03946-555"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="03946-556">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-556">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="03946-557">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="03946-557">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="03946-558">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="03946-558">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="03946-559">如果返回主键列和唯一列，将主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-559">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-560">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="03946-560">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="03946-561">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-561">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="03946-562">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="03946-562">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="03946-563">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="03946-563">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="03946-564">过程中使用主键信息<xref:System.Data.Common.DbDataAdapter.Fill%2A>来查找和替换其键的列相匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="03946-564">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="03946-565">如果这不是所需的行为，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-565">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="03946-566">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-566">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-567">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-567">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="03946-568">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-568">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-569">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="03946-569">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="03946-570">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-570">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-571"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-571">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="03946-572">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-572">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="03946-573">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-573">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="03946-574">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="03946-574">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="03946-575">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="03946-575">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="03946-576">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-576">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="03946-577"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须是有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="03946-577">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="03946-578">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-578">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-579">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-579">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-580">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-580">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-581">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-581">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="03946-582">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="03946-582">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="03946-583">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="03946-583">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="03946-584">有关更多信息，请参见“SQL Server 联机丛书”。</span><span class="sxs-lookup"><span data-stu-id="03946-584">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-585">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>架构，并返回与<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-585">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03946-586">找不到从中获取架构的源表。</span><span class="sxs-lookup"><span data-stu-id="03946-586">A source table from which to get the schema could not be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="03946-587">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-587">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="03946-588"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="03946-588">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="03946-589">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-589">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="03946-590"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="03946-590">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="03946-591">根据指定的 <see cref="T:System.Data.DataTable" />、命令字符串以及 <see cref="T:System.Data.SchemaType" /> 值配置指定 <see cref="T:System.Data.CommandBehavior" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="03946-591">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="03946-592">包含从数据源返回的架构信息的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="03946-592">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-593"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-593">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="03946-594">与相关的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-594">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-595">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-595">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-596">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-596">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-597">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-597">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-598">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="03946-598">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="03946-599"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-599"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="03946-600">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="03946-600">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="03946-601"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="03946-601"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="03946-602">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-602">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="03946-603">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="03946-603">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="03946-604">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="03946-604">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="03946-605">如果返回主键列和唯一列，将主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-605">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-606">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="03946-606">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="03946-607">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-607">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="03946-608">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="03946-608">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="03946-609">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="03946-609">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="03946-610">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-610">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-611">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-611">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="03946-612">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-612">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-613">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="03946-613">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="03946-614">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-614">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-615"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="03946-615"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="03946-616">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-616">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-617">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-617">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-618">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-618">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="03946-619">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="03946-619">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="03946-620">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="03946-620">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="03946-621">有关更多信息，请参见“SQL Server 联机丛书”。</span><span class="sxs-lookup"><span data-stu-id="03946-621">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-622">此实现的<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-622">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-623">要用数据源中的架构填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-623">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="03946-624"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="03946-624">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="03946-625">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-625">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="03946-626">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-626">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="03946-627"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="03946-627">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="03946-628">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="03946-628">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="03946-629"><see cref="T:System.Data.DataTable" /> 对象的数组，这些对象包含从数据源返回的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-629">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-630"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-630">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="03946-631">与相关的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-631">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="03946-632">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="03946-632">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="03946-633">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="03946-633">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="03946-634">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-634">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-635">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="03946-635">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="03946-636"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-636"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="03946-637">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="03946-637">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="03946-638"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="03946-638"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="03946-639">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-639">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="03946-640">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="03946-640">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="03946-641">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="03946-641">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="03946-642">如果返回主键列和唯一列，将主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-642">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-643">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="03946-643">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="03946-644">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-644">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="03946-645">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="03946-645">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="03946-646">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="03946-646">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="03946-647">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="03946-647">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="03946-648">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="03946-648">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="03946-649">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="03946-649">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="03946-650">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="03946-650">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="03946-651">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="03946-651">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="03946-652"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-652">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="03946-653">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-653">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="03946-654">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-654">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="03946-655">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="03946-655">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="03946-656">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="03946-656">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="03946-657">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-657">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="03946-658"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="03946-658"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="03946-659">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-659">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-660">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="03946-660">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="03946-661">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="03946-661">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="03946-662">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="03946-662">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="03946-663">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="03946-663">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="03946-664">有关更多信息，请参见“SQL Server 联机丛书”。</span><span class="sxs-lookup"><span data-stu-id="03946-664">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-665">此实现的<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-665">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="03946-666">要从中检索参数的命令的索引。</span><span class="sxs-lookup"><span data-stu-id="03946-666">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="03946-667">命令内的参数的索引。</span><span class="sxs-lookup"><span data-stu-id="03946-667">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="03946-668">从当前批处理中的其中一个命令返回一个 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="03946-668">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="03946-669">指定的 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="03946-669">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-670">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="03946-670">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="03946-671">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-671">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="03946-672">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-672">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-673">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-673">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="03946-674">如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户执行一个批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-674">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="03946-675">实现使用<paramref name="commandIdentifier" />提供用于查找请求的命令，然后使用<paramref name="parameterIndex" />提供用于查找请求的参数。</span><span class="sxs-lookup"><span data-stu-id="03946-675">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="03946-676">例如，<paramref name="commandIdentifier" />为 0 和<paramref name="parameterIndex" />0 的批处理中的第一个命令返回的第一个参数。</span><span class="sxs-lookup"><span data-stu-id="03946-676">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="03946-677">该批次内单个命令的从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="03946-677">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="03946-678">数据存储区中受该批内的指定命令影响的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-678">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="03946-679">在执行指定命令期间引发的一个 <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="03946-679">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="03946-680">如果未引发任何异常，则返回 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="03946-680">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="03946-681">返回与较大的批处理更新内的单次更新尝试有关的信息。</span><span class="sxs-lookup"><span data-stu-id="03946-681">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="03946-682">与较大的批处理更新内的单次更新尝试有关的信息。</span><span class="sxs-lookup"><span data-stu-id="03946-682">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-683">数据提供程序支持批处理更新逻辑必须在上重写虚方法的一系列<xref:System.Data.Common.DbDataAdapter>类。</span><span class="sxs-lookup"><span data-stu-id="03946-683">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="03946-684">`GetBatchedRecordsAffected` 表示这些虚拟方法之一。</span><span class="sxs-lookup"><span data-stu-id="03946-684">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="03946-685">`DbDataAdapter`类依赖于`GetBatchedRecordsAffected`来确定某一批处理中的各次更新尝试成功与否，因此它可以将标记每个相应<xref:System.Data.DataRow>相应地。</span><span class="sxs-lookup"><span data-stu-id="03946-685">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03946-686">获取当执行 SQL SELECT 语句时由用户设置的参数。</span><span class="sxs-lookup"><span data-stu-id="03946-686">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="03946-687"><see cref="T:System.Data.IDataParameter" /> 对象的数组，这些对象包含由用户设置的参数。</span><span class="sxs-lookup"><span data-stu-id="03946-687">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03946-688">初始化 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-688">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-689">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="03946-689">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="03946-690">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-690">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="03946-691">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-691">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-692">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-692">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="03946-693">如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法。</span><span class="sxs-lookup"><span data-stu-id="03946-693">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="03946-694">此方法使类可以初始化支持批处理所需的任何资源。</span><span class="sxs-lookup"><span data-stu-id="03946-694">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="03946-695">例如，类可以分配用于保存命令集的批处理中的数据结构。</span><span class="sxs-lookup"><span data-stu-id="03946-695">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-696">获取或设置用于将新记录插入到数据源中的命令。</span><span class="sxs-lookup"><span data-stu-id="03946-696">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="03946-697">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源中。</span><span class="sxs-lookup"><span data-stu-id="03946-697">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-698">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>将自动生成。</span><span class="sxs-lookup"><span data-stu-id="03946-698">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-699">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="03946-699">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="03946-700">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="03946-700">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="03946-701">引发 .NET Framework 数据提供程序的 <see langword="RowUpdated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-701">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-702">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="03946-702">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="03946-703">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-703">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-704">在重写<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="03946-704">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="03946-705">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="03946-705">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="03946-706">引发 .NET Framework 数据提供程序的 <see langword="RowUpdating" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-706">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-707">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="03946-707">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="03946-708">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-708">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-709">在重写<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="03946-709">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-710">获取或设置用于在数据源中选择记录的命令。</span><span class="sxs-lookup"><span data-stu-id="03946-710">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="03946-711">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="03946-711">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="03946-712">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="03946-712">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-713">获取或设置用于从数据集中删除记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-713">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="03946-714"><see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="03946-714">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-715">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="03946-715">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="03946-716">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="03946-716">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="03946-717">有关详情，请参阅<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-717">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-718">获取或设置用于将新记录插入到数据源中的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-718">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="03946-719">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源。</span><span class="sxs-lookup"><span data-stu-id="03946-719">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-720">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="03946-720">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="03946-721">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="03946-721">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="03946-722">有关详情，请参阅<xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-722">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-723">获取或设置用于在数据源中选择记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-723">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="03946-724">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="03946-724">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-725">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="03946-725">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="03946-726">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="03946-726">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="03946-727">有关详情，请参阅<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-727">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-728">获取或设置用于更新数据源中的记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="03946-728">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="03946-729">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="03946-729">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-730">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="03946-730">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="03946-731">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="03946-731">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="03946-732">有关详情，请参阅<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-732">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03946-733">创建作为当前实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="03946-733">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="03946-734">作为此实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="03946-734">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-735">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="03946-735">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="03946-736">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="03946-736">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="03946-737">有关详情，请参阅<xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="03946-737">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03946-738">结束 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-738">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-739">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="03946-739">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="03946-740">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-740">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="03946-741">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-741">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="03946-742">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="03946-742">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="03946-743">如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法。</span><span class="sxs-lookup"><span data-stu-id="03946-743">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="03946-744">此方法使类可以释放任何分配的资源以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="03946-744">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="03946-745">例如，类可以释放批中能容纳命令的数据结构。</span><span class="sxs-lookup"><span data-stu-id="03946-745">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03946-746">通过为 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="03946-746">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="03946-747">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="03946-747">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="03946-748">通过为 <see cref="T:System.Data.DataSet" /> 中的指定数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="03946-748">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="03946-749"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-749">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-750">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="03946-750">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-751">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-751">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-752">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="03946-752">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="03946-753">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="03946-753">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="03946-754">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-754">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="03946-755">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-755">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="03946-756">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="03946-756">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="03946-757">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="03946-757">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="03946-758">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-758">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-759">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-759">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="03946-760"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="03946-760">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="03946-761"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-761">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="03946-762">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="03946-762">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="03946-763">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="03946-763">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="03946-764">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="03946-764">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="03946-765">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="03946-765">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="03946-766">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-766">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="03946-767">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-767">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="03946-768">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="03946-768">The command executes.</span></span>  
  
4.  <span data-ttu-id="03946-769">如果该命令设置为`FirstReturnedRecord`，第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-769">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="03946-770">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-770">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="03946-771">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-771">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="03946-772">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-772"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="03946-773">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="03946-773">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="03946-774">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="03946-774">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="03946-775">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-775">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="03946-776">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="03946-776">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="03946-777">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="03946-777">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="03946-778">枚举值</span><span class="sxs-lookup"><span data-stu-id="03946-778">Enumeration value</span></span>|<span data-ttu-id="03946-779">执行操作</span><span class="sxs-lookup"><span data-stu-id="03946-779">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="03946-780">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="03946-780">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="03946-781">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-781">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="03946-782">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="03946-782">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="03946-783">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-783">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="03946-784">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="03946-784">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="03946-785">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-785">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="03946-786">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="03946-786">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="03946-787">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="03946-787">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-788">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="03946-788">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="03946-789">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-789">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="03946-790">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-790">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="03946-791">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="03946-791">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-792">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="03946-792">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03946-793"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="03946-793">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-794">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-794">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="03946-795">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="03946-795">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="03946-796">或</span><span class="sxs-lookup"><span data-stu-id="03946-796">-or-</span></span>  
  
 <span data-ttu-id="03946-797">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-797">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="03946-798">或</span><span class="sxs-lookup"><span data-stu-id="03946-798">-or-</span></span>  
  
 <span data-ttu-id="03946-799">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-799">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="03946-800">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="03946-800">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-801">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-801">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="03946-802">通过为指定的 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="03946-802">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="03946-803"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-803">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-804">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="03946-804">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-805">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-805">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-806">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="03946-806">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="03946-807">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="03946-807">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="03946-808">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-808">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="03946-809">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-809">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="03946-810">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="03946-810">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="03946-811">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="03946-811">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="03946-812">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-812">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-813">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-813">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="03946-814"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="03946-814">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="03946-815"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-815">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="03946-816">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="03946-816">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="03946-817">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="03946-817">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="03946-818">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="03946-818">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="03946-819">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="03946-819">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="03946-820">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-820">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="03946-821">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-821">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="03946-822">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="03946-822">The command executes.</span></span>  
  
4.  <span data-ttu-id="03946-823">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-823">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="03946-824">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-824">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="03946-825">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-825">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="03946-826">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-826"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="03946-827">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="03946-827">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="03946-828">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="03946-828">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="03946-829">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-829">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="03946-830">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="03946-830">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="03946-831">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="03946-831">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="03946-832">枚举值</span><span class="sxs-lookup"><span data-stu-id="03946-832">Enumeration value</span></span>|<span data-ttu-id="03946-833">执行操作</span><span class="sxs-lookup"><span data-stu-id="03946-833">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="03946-834">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="03946-834">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="03946-835">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-835">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="03946-836">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="03946-836">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="03946-837">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-837">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="03946-838">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="03946-838">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="03946-839">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-839">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="03946-840">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="03946-840">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="03946-841">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="03946-841">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-842">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="03946-842">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="03946-843">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-843">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="03946-844">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-844">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="03946-845">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="03946-845">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-846">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="03946-846">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-847">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-847">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="03946-848">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="03946-848">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="03946-849">用于更新数据源的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-849">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="03946-850">通过为指定的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="03946-850">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="03946-851"><see cref="T:System.Data.DataTable" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-851">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-852">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="03946-852">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-853">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-853">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-854">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="03946-854">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="03946-855">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="03946-855">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="03946-856">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-856">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="03946-857">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-857">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="03946-858">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="03946-858">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="03946-859">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="03946-859">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="03946-860">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-860">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-861">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-861">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="03946-862"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="03946-862">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="03946-863"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-863">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="03946-864">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="03946-864">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="03946-865">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="03946-865">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="03946-866">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="03946-866">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="03946-867">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="03946-867">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="03946-868">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-868">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="03946-869">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-869">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="03946-870">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="03946-870">The command executes.</span></span>  
  
4.  <span data-ttu-id="03946-871">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-871">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="03946-872">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-872">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="03946-873">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-873">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="03946-874">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-874"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="03946-875">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="03946-875">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="03946-876">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="03946-876">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="03946-877">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-877">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="03946-878">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="03946-878">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="03946-879">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="03946-879">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="03946-880">枚举值</span><span class="sxs-lookup"><span data-stu-id="03946-880">Enumeration value</span></span>|<span data-ttu-id="03946-881">执行操作</span><span class="sxs-lookup"><span data-stu-id="03946-881">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="03946-882">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="03946-882">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="03946-883">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-883">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="03946-884">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="03946-884">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="03946-885">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-885">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="03946-886">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="03946-886">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="03946-887">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-887">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="03946-888">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="03946-888">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="03946-889">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="03946-889">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-890">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="03946-890">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="03946-891">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-891">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="03946-892">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-892">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="03946-893">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="03946-893">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-894">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="03946-894">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03946-895"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="03946-895">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-896">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-896">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="03946-897">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="03946-897">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="03946-898">或</span><span class="sxs-lookup"><span data-stu-id="03946-898">-or-</span></span>  
  
 <span data-ttu-id="03946-899">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-899">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="03946-900">或</span><span class="sxs-lookup"><span data-stu-id="03946-900">-or-</span></span>  
  
 <span data-ttu-id="03946-901">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-901">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="03946-902">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="03946-902">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="03946-903">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="03946-903">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="03946-904">要使用的 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="03946-904">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="03946-905">通过为指定的 <see cref="T:System.Data.DataSet" /> 对象数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="03946-905">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="03946-906"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-906">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-907">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="03946-907">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-908">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-908">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-909">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="03946-909">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="03946-910">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="03946-910">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="03946-911">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-911">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="03946-912">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-912">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="03946-913">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="03946-913">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="03946-914">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="03946-914">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="03946-915">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-915">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-916">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-916">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="03946-917"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="03946-917">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="03946-918"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-918">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="03946-919">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="03946-919">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="03946-920">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="03946-920">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="03946-921">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="03946-921">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="03946-922">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="03946-922">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="03946-923">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-923">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="03946-924">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-924">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="03946-925">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="03946-925">The command executes.</span></span>  
  
4.  <span data-ttu-id="03946-926">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-926">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="03946-927">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-927">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="03946-928">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-928">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="03946-929">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-929"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="03946-930">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="03946-930">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="03946-931">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="03946-931">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="03946-932">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-932">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="03946-933">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="03946-933">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="03946-934">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="03946-934">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="03946-935">枚举值</span><span class="sxs-lookup"><span data-stu-id="03946-935">Enumeration value</span></span>|<span data-ttu-id="03946-936">执行操作</span><span class="sxs-lookup"><span data-stu-id="03946-936">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="03946-937">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="03946-937">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="03946-938">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-938">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="03946-939">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="03946-939">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="03946-940">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-940">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="03946-941">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="03946-941">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="03946-942">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-942">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="03946-943">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="03946-943">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="03946-944">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="03946-944">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-945">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="03946-945">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="03946-946">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-946">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="03946-947">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-947">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="03946-948">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="03946-948">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03946-949"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="03946-949">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-950">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-950">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="03946-951">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="03946-951">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="03946-952">或</span><span class="sxs-lookup"><span data-stu-id="03946-952">-or-</span></span>  
  
 <span data-ttu-id="03946-953">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="03946-953">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="03946-954">或</span><span class="sxs-lookup"><span data-stu-id="03946-954">-or-</span></span>  
  
 <span data-ttu-id="03946-955">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-955">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="03946-956">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="03946-956">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="03946-957">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="03946-957">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="03946-958">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="03946-958">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="03946-959">通过为具有指定名称 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="03946-959">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="03946-960"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-960">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-961">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="03946-961">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-962">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="03946-962">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="03946-963">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="03946-963">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="03946-964">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>方法在其中你必须控制的语句类型序列的情况下 （例如，在更新之前插入）。</span><span class="sxs-lookup"><span data-stu-id="03946-964">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="03946-965">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-965">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="03946-966">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-966">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="03946-967">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="03946-967">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="03946-968">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="03946-968">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="03946-969">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-969">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-970">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="03946-970">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="03946-971"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="03946-971">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="03946-972">具有相同名称但不同情况下，多个表中的存在时`DataSet`，<xref:System.Data.Common.DbDataAdapter.Update%2A>执行区分大小写的比较，以查找相应的表，并生成异常，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="03946-972">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="03946-973">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-973">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="03946-974">如果<xref:System.Data.Common.DbDataAdapter.Update%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="03946-974">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="03946-975">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="03946-975">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="03946-976">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="03946-976">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="03946-977"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="03946-977">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="03946-978"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="03946-978">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="03946-979">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="03946-979">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="03946-980">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="03946-980">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="03946-981">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="03946-981">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="03946-982">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="03946-982">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="03946-983">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-983">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="03946-984">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-984">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="03946-985">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="03946-985">The command executes.</span></span>  
  
4.  <span data-ttu-id="03946-986">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-986">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="03946-987">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="03946-987">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="03946-988">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-988">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="03946-989">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-989"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="03946-990">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="03946-990">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="03946-991">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="03946-991">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="03946-992">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="03946-992">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="03946-993">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="03946-993">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="03946-994">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="03946-994">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="03946-995">枚举值</span><span class="sxs-lookup"><span data-stu-id="03946-995">Enumeration value</span></span>|<span data-ttu-id="03946-996">执行操作</span><span class="sxs-lookup"><span data-stu-id="03946-996">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="03946-997">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="03946-997">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="03946-998">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-998">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="03946-999">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="03946-999">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="03946-1000">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="03946-1000">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="03946-1001">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="03946-1001">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="03946-1002">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="03946-1002">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="03946-1003">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="03946-1003">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="03946-1004">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="03946-1004">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03946-1005">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="03946-1005">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="03946-1006">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="03946-1006">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="03946-1007">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="03946-1007">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="03946-1008">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="03946-1008">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-1009">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="03946-1009">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03946-1010"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="03946-1010">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="03946-1011">源表无效。</span><span class="sxs-lookup"><span data-stu-id="03946-1011">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="03946-1012">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="03946-1012">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-1013">获取或设置一个值，该值启用或禁用批处理支持，并且指定可在一次批处理中执行的命令的数量。</span><span class="sxs-lookup"><span data-stu-id="03946-1013">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="03946-1014">每个批处理要处理的行数。</span><span class="sxs-lookup"><span data-stu-id="03946-1014">The number of rows to process per batch.</span></span>  
  
 <span data-ttu-id="03946-1015"><list type="table"><listheader><term> 值是</span><span class="sxs-lookup"><span data-stu-id="03946-1015"><list type="table"><listheader><term> Value is</span></span>  
  
 <span data-ttu-id="03946-1016"></term><description> 效果</span><span class="sxs-lookup"><span data-stu-id="03946-1016"></term><description> Effect</span></span>  
  
 <span data-ttu-id="03946-1017"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="03946-1017"></description></listheader><item><term> 0</span></span>  
  
 <span data-ttu-id="03946-1018"></term><description> 批大小上没有任何限制。</span><span class="sxs-lookup"><span data-stu-id="03946-1018"></term><description> There is no limit on the batch size.</span></span>  
  
 <span data-ttu-id="03946-1019"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="03946-1019"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="03946-1020"></term><description> 禁用批量更新。</span><span class="sxs-lookup"><span data-stu-id="03946-1020"></term><description> Disables batch updating.</span></span>  
  
 <span data-ttu-id="03946-1021"></description></item><item><term> &gt; 1</span><span class="sxs-lookup"><span data-stu-id="03946-1021"></description></item><item><term> &gt; 1</span></span>  
  
 <span data-ttu-id="03946-1022"></term><description> 使用批发送更改<see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />一次的操作。</span><span class="sxs-lookup"><span data-stu-id="03946-1022"></term><description> Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="03946-1023">所有命令时将此值设置为 1 以外的值，与都关联<see cref="T:System.Data.Common.DbDataAdapter" />必须具有其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />属性设置为**无**或**输出参数**。</span><span class="sxs-lookup"><span data-stu-id="03946-1023">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="03946-1024">否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="03946-1024">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-1025">使用<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>属性来更新数据源中的更改与<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="03946-1025">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="03946-1026">如果数据访问接口支持批处理，这可以通过减少服务器的往返次数来提高应用程序性能。</span><span class="sxs-lookup"><span data-stu-id="03946-1026">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="03946-1027">在 ADO.NET 2.0 中，支持此属性是.NET 数据提供程序的 SQL Server (SqlClient) 和 Oracle (OracleClient)。</span><span class="sxs-lookup"><span data-stu-id="03946-1027">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="03946-1028">执行极大的批处理会降低性能。</span><span class="sxs-lookup"><span data-stu-id="03946-1028">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="03946-1029">因此，在实现应用程序前应进行测试以得到最佳的批大小。</span><span class="sxs-lookup"><span data-stu-id="03946-1029">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="03946-1030"><xref:System.ArgumentOutOfRangeException>如果的值设置为一个数字，将引发小于零。</span><span class="sxs-lookup"><span data-stu-id="03946-1030">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03946-1031">获取或设置用于更新数据源中的记录的命令。</span><span class="sxs-lookup"><span data-stu-id="03946-1031">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="03946-1032">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="03946-1032">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03946-1033">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>将自动生成。</span><span class="sxs-lookup"><span data-stu-id="03946-1033">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03946-1034">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="03946-1034">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>