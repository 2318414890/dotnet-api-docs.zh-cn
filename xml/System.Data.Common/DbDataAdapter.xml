<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8a3d500a6735097e918938a7e81a39c8837255f" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52255440" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bcdf2-101">帮助实现 <see cref="T:System.Data.IDbDataAdapter" /> 接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bcdf2-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      </span>
      <span data-ttu-id="bcdf2-102">
        <see cref="T:System.Data.Common.DbDataAdapter" /> 的继承类实现了一组功能以提供强类型，但是继承了完全实现 DataAdapter 所需的大部分功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bcdf2-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-103"><xref:System.Data.Common.DbDataAdapter>类继承自<xref:System.Data.Common.DataAdapter>类，并实现<xref:System.Data.IDbDataAdapter>接口。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="bcdf2-104">它可帮助实现的类**DataAdapter**设计用于关系数据库。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="bcdf2-105">应用程序不会创建的实例<xref:System.Data.Common.DbDataAdapter>类直接，但创建从其继承的类的实例。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="bcdf2-106">继承的类<xref:System.Data.Common.DbDataAdapter>必须实现继承的成员，且通常定义其他成员来添加特定于提供程序的功能。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="bcdf2-107">例如，<xref:System.Data.Common.DbDataAdapter>类定义<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性，并<xref:System.Data.Common.DbDataAdapter>类定义的八个重载<xref:System.Data.IDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="bcdf2-108">依次<xref:System.Data.OleDb.OleDbDataAdapter>类继承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，并且还定义了两个重载的<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>采取 ADO 记录集对象作为参数。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="bcdf2-109">继承自<see cref="T:System.Data.Common.DbDataAdapter" />类中，我们建议你实现以下构造函数：</span>
        <span class="sxs-lookup">
          <span data-stu-id="bcdf2-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span>
        </span>
        <list type="table">
          <listheader>
            <term>
              <span data-ttu-id="bcdf2-110">项</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-110">Item</span>
              </span>
            </term>
            <description>
              <span data-ttu-id="bcdf2-111">描述</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-111">Description</span>
              </span>
            </description>
          </listheader>
          <item>
            <term>
              <span data-ttu-id="bcdf2-112">*Prv*DataAdapter()</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-112">*Prv*DataAdapter()</span>
              </span>
            </term>
            <description>
              <span data-ttu-id="bcdf2-113">初始化的新实例*Prv*DataAdapter 类。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-113">Initializes a new instance of the *Prv*DataAdapter class.</span>
              </span>
            </description>
          </item>
          <item>
            <term>
              <span data-ttu-id="bcdf2-114">*Prv*DataAdapter (*Prv*命令*selectCommand*)</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span>
              </span>
            </term>
            <description>
              <span data-ttu-id="bcdf2-115">初始化的新实例*Prv*DataAdapter 类与指定的 SQL SELECT 语句一起使用。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-115">Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span>
              </span>
            </description>
          </item>
          <item>
            <term>
              <span data-ttu-id="bcdf2-116">*Prv*DataAdapter (字符串*selectCommandText*，字符串*selectConnectionString*)</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span>
              </span>
            </term>
            <description>
              <span data-ttu-id="bcdf2-117">初始化的新实例*Prv*DataAdapter 类使用的 SQL SELECT 语句和连接字符串。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-117">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span>
              </span>
            </description>
          </item>
          <item>
            <term>
              <span data-ttu-id="bcdf2-118">*Prv*DataAdapter (字符串*selectCommandText*， *Prv*连接*selectConnection*)</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span>
              </span>
            </term>
            <description>
              <span data-ttu-id="bcdf2-119">初始化的新实例*Prv*DataAdapter 类的一个 SQL SELECT 语句和一个*Prv*连接对象。</span>
              <span class="sxs-lookup">
                <span data-stu-id="bcdf2-119">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span>
              </span>
            </description>
          </item>
        </list>
        <span data-ttu-id="bcdf2-120">若要将升级.NET Framework 数据提供程序之间的一致性，应命名窗体中的继承类*Prv*DataAdapter，其中*Prv*是提供给特定的.NET 中的所有类的统一前缀Framework 数据提供程序命名空间。</span>
        <span class="sxs-lookup">
          <span data-stu-id="bcdf2-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span>
        </span>
        <span data-ttu-id="bcdf2-121">例如，"Sql"是前缀<see cref="T:System.Data.SqlClient.SqlDataAdapter" />类中**System.Data.SqlClient**命名空间。</span>
        <span class="sxs-lookup">
          <span data-stu-id="bcdf2-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span>
        </span>
      </para>
    </block>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
      <span data-ttu-id="bcdf2-122">DbProviderFactories (ADO.NET)</span>
      <span class="sxs-lookup">
        <span data-stu-id="bcdf2-122">DbProviderFactories (ADO.NET)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
      <span data-ttu-id="bcdf2-123">ADO.NET 概述</span>
      <span class="sxs-lookup">
        <span data-stu-id="bcdf2-123">ADO.NET Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-124">初始化 <see langword="DataAdapter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-124">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-125">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-125">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-126">初始化 DataAdapter 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-126">Initializes a new instance of a **DataAdapter** class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-127">创建的实例时<xref:System.Data.Common.DbDataAdapter>，以下的读/写属性设置为以下的初始值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-127">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="bcdf2-128">属性</span><span class="sxs-lookup"><span data-stu-id="bcdf2-128">Properties</span></span>|<span data-ttu-id="bcdf2-129">初始值</span><span class="sxs-lookup"><span data-stu-id="bcdf2-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="bcdf2-130">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="bcdf2-131">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-131">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="bcdf2-132">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-132">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="bcdf2-133">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-133">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="bcdf2-134">可以更改任何这些属性通过单独调用属性的值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-134">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-135">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-135">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-136">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-136">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="bcdf2-137">用于创建新 <see langword="DataAdapter" /> 的 <see langword="DataAdapter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-137">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-138">从同一类型的现有对象中初始化 <see langword="DataAdapter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-138">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-139">此重载<xref:System.Data.Common.DbDataAdapter>构造函数专供.NET Framework 数据提供程序时实现类似的构造函数用于在克隆的实现。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-139">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-140">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-140">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-141">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-141">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="bcdf2-142">要添加到批处理的 <see cref="T:System.Data.IDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-142">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-143">向当前批处理添加 <see cref="T:System.Data.IDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-143">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-144">添加 <see cref="T:System.Data.IDbCommand" /> 之前批处理中的命令数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-144">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-145">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-145">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bcdf2-146">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-146">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bcdf2-147">该适配器不支持批处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-147">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-148">此方法受到保护，专为使用.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-148">This method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
            <span data-ttu-id="bcdf2-149">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户将命令添加到批次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-149">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-150">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-150">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-151">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-151">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-152">从批处理中移除所有 <see cref="T:System.Data.IDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-152">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-153">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-153">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bcdf2-154">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-154">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bcdf2-155">该适配器不支持批处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-155">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-156">此方法受到保护，专为使用.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-156">This method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
            <span data-ttu-id="bcdf2-157">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户在批处理中删除所有命令。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-157">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-158">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-158">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-159">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-159">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="bcdf2-160">用于更新数据源的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-160">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="bcdf2-161">在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-161">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="bcdf2-162">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-162">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="bcdf2-163">
            <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-163">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-164">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-164">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-165">
            <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-165">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-166">重写时<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-166">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-167">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-167">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="bcdf2-168">更新数据源的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-168">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="bcdf2-169">要在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-169">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="bcdf2-170">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-170">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="bcdf2-171">
            <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-171">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-172">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-172">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-173">
            <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-173">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-174">重写时<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-174">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-175">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-175">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-176">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-176">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-177">
            <see cref="T:System.Data.Common.DataAdapter" /> 对象用于表映射的默认名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-177">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-178">"表"是默认使用<xref:System.Data.Common.DataAdapter>对象用于表映射。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-178">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="bcdf2-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 是当应用程序添加一个表映射，以与一起使用时<xref:System.Data.Common.DbDataAdapter.Fill%2A>，但未指定<xref:System.Data.DataTable>名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-180">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-180">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-181">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-181">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-182">获取或设置用于从数据集中删除记录的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-182">Gets or sets a command for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-183">
            <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-183">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-184">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>自动生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-184">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-185">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-185">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-186">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-186">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-187">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-187">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-188">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-188">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="bcdf2-189">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-189">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-190">释放由 <see cref="T:System.Data.Common.DbDataAdapter" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-190">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-191">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-191">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-192">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-192">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-193">执行当前批处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-193">Executes the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-194">从批处理中的最后一个命令返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-194">The return value from the last command in the batch.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-195">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-195">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bcdf2-196">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-196">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-197">此方法受到保护，专为使用.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-197">This method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
            <span data-ttu-id="bcdf2-198">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户执行的批处理。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-198">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span>
            </span>
            <span data-ttu-id="bcdf2-199">此方法的实现将在适配器中的命令合并到一个批处理中，然后执行的批处理并返回批处理的返回值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-199">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-200">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-200">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-201">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-201">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-202">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-202">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-203">填充 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-203">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-204">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-204">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-205">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-205">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-206">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-206">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-207">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-207">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="bcdf2-208">这不包括受不返回行的语句影响的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-208">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-209"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-209">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="bcdf2-210"><xref:System.Data.IDbConnection>与 select 命令相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-210">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-211">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-211">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="bcdf2-212">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-212">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-213">如果填充数据表时遇到错误或异常，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-213">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="bcdf2-214">中止运算的余数。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-214">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="bcdf2-215">如果命令不返回任何行，则没有表将添加到<xref:System.Data.DataSet>，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-215">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="bcdf2-216">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"、"*columnname*2""*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-216">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-217">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-217">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bcdf2-218">当指定的查询返回多个结果时，在结果集中返回查询的每个行被置于一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-218">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-219">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-219">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bcdf2-220">如果处理 insert 查询跟 select 查询，将不返回行，为查询创建没有表，因为创建选择查询的表是名为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-220">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="bcdf2-221">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-221">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-222">当使用 SELECT 语句来填充<xref:System.Data.DataSet>返回多项结果，如批处理 SQL 语句，如果其中一个结果包含错误，所有后续结果将跳过，并且不会添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-222">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="bcdf2-223">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-223">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="bcdf2-224">SQL 语句应该与第一次用于填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-224">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="bcdf2-225">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-225">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="bcdf2-226">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<xref:System.Data.DataTable>对应于<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-226">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-227">主键信息可能会设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>的属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-227">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bcdf2-228">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-228">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-229">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-229">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bcdf2-230">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-230">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-231">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-231">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-232">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-232">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-233">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-233">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-234">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-234">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="bcdf2-235">用于表映射的 <see cref="T:System.Data.DataTable" /> 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-235">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-236">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行，以与使用 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-236">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-237">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-237">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="bcdf2-238">这不包括受不返回行的语句影响的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-238">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用从数据源指定由关联的 SELECT 语句检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="bcdf2-240">与 SELECT 语句关联的连接对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-240">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-241">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-241">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-242">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-242">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-243"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-243">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="bcdf2-244">创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-244">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="bcdf2-245">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-245">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="bcdf2-246">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-246">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-247">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-247">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bcdf2-248">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-248">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="bcdf2-249">重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataTable`如参数仅获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-249">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="bcdf2-250">使用的重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataSet`作为参数，以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-250">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="bcdf2-251"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-251">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bcdf2-252">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-252">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bcdf2-253">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-253">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bcdf2-254">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-254">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bcdf2-255">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-255">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bcdf2-256">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-256">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bcdf2-257">可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-257">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-258">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-258">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="bcdf2-259">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-259">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-260">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-260">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-261">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-261">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bcdf2-262">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-262">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-263">处理返回多个结果的实现的批处理 SQL 语句时<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>对于.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-263">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-264">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-264">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-265">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保护并专供.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-265">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-266">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-266">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-267">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-267">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-268">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-268">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="bcdf2-269">用于表映射的源表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-269">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-270">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-270">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-271">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-271">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="bcdf2-272">这不包括受不返回行的语句影响的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-272">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="bcdf2-274"><xref:System.Data.IDbConnection>与 select 命令相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-274">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-275">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-275">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-276">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-276">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-277">如果命令不返回任何行，则没有表将添加到<xref:System.Data.DataSet>，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-277">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="bcdf2-278">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-278">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="bcdf2-279">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-279">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bcdf2-280">当指定的查询返回多个结果时，每个结果集被置于一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-280">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-281">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-281">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bcdf2-282">因为没有在创建表的查询的不返回行，如果要处理插入查询跟 select 查询的 select 查询创建的表将命名为"表"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-282">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="bcdf2-283">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-283">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-284"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-284">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bcdf2-285">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-285">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bcdf2-286">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-286">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bcdf2-287">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-287">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bcdf2-288">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-288">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bcdf2-289">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-289">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bcdf2-290">如果填充数据表时遇到错误或异常，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-290">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="bcdf2-291">中止运算的余数。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-291">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="bcdf2-292">SELECT 语句用于填充<xref:System.Data.DataSet>返回多个结果，例如一批 SQL 语句，要注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-292">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="bcdf2-293">如果其中一个结果包含错误，所有后续结果被跳过且未添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-293">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="bcdf2-294">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-294">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="bcdf2-295">SQL 语句应该与第一次用于填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-295">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="bcdf2-296">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-296">The **Key** column information must be present.</span></span> <span data-ttu-id="bcdf2-297">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<xref:System.Data.DataTable>对应于<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-297">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-298">主键信息可能会设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>的属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-298">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bcdf2-299">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-300">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bcdf2-301">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-302">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-303">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-304">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填充<xref:System.Data.DataSet>与类别表中的行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-304">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="bcdf2-305">此示例假定你已创建<xref:System.Data.OleDb.OleDbDataAdapter>和一个<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-305">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="bcdf2-306">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-306">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-307">重写时<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-307">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-308">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-308">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-309">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-309">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="bcdf2-310">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-310">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="bcdf2-311">用于从数据源中检索行的 SQL SELECT 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-311">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="bcdf2-312">
            <see cref="T:System.Data.CommandBehavior" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-312">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-313">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.IDbCommand" /> 和 <see cref="T:System.Data.CommandBehavior" /> 的数据源中的行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-313">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-314">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-314">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="bcdf2-315">这不包括受不返回行的语句影响的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-315">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-316"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用从数据源指定由关联的 SELECT 语句检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-316">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="bcdf2-317">与 SELECT 语句关联的连接对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-317">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-318">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-318">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="bcdf2-319">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-319">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-320"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到指定的目标<xref:System.Data.DataTable>对象中<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-320">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="bcdf2-321">创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-321">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="bcdf2-322">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-322">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="bcdf2-323">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-323">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-324">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-324">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bcdf2-325">重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataTable`如参数仅获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-325">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="bcdf2-326">使用的重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataSet`作为参数，以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-326">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="bcdf2-327">可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-327">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-328">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-328">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="bcdf2-329">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-329">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-330">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-330">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-331">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-331">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bcdf2-332">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-332">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-333">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-333">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-334">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-334">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-335">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保护并专供.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-335">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-336">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-336">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-337">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-337">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord">
          <span data-ttu-id="bcdf2-338">从其开始的从零开始的记录号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-338">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="bcdf2-339">要检索的最大记录数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-339">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="dataTables">
          <span data-ttu-id="bcdf2-340">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-340">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-341">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与从指定的记录开始一直检索到指定的最大数目的记录的数据源中的行匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-341">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-342">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-342">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="bcdf2-343">此值不包括受不返回行的语句影响的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-343">This value does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-344"><xref:System.Data.Common.DataAdapter.Fill%2A>方法使用从数据源指定由关联的 SELECT 语句检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-344">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="bcdf2-345">与 SELECT 语句关联的连接对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-345">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-346">如果连接已关闭之前<xref:System.Data.Common.DataAdapter.Fill%2A>是调用，它会打开用于检索数据，并再将其关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-346">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="bcdf2-347">如果连接已打开之前<xref:System.Data.Common.DataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-347">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-348"><xref:System.Data.Common.DataAdapter.Fill%2A>然后，操作将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-348">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="bcdf2-349">创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-349">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="bcdf2-350">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-350">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="bcdf2-351">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-351">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-352">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-352">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bcdf2-353">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-353">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="bcdf2-354">如果数据适配器在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-354">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="bcdf2-355">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-355">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bcdf2-356">当多个结果集添加到<xref:System.Data.DataSet>，每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-356">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-357">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-357">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bcdf2-358">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-358">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-359">当使用 SELECT 语句来填充<xref:System.Data.DataSet>返回多个结果，如批处理 SQL 语句，如果其中一个结果包含错误，所有后续结果被跳过且未添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-359">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="bcdf2-360">可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-360">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-361">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-361">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="bcdf2-362">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-362">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-363">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-363">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-364">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-364">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-365">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-365">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-366">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-366">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-367">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-367">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="bcdf2-368">从其开始的从零开始的记录号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-368">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="bcdf2-369">要检索的最大记录数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-369">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="bcdf2-370">用于表映射的源表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-370">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-371">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-371">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-372">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-372">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="bcdf2-373">这不包括受不返回行的语句影响的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-373">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-374">一个`maxRecords`0 的值获取后开始记录发现的所有记录。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-374">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="bcdf2-375">如果`maxRecords`大于的剩余行数只返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-375">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="bcdf2-376">如果相应的 select 命令是一个语句返回多个结果<xref:System.Data.Common.DbDataAdapter.Fill%2A>仅适用`maxRecords`到第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-376">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="bcdf2-377"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-377">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="bcdf2-378"><xref:System.Data.IDbConnection>与 SELECT 语句相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-378">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-379">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-379">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="bcdf2-380">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-380">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-381">如果命令不返回任何行，则没有表将添加到<xref:System.Data.DataSet>，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-381">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="bcdf2-382">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-382">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-383">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-383">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bcdf2-384">当指定的查询返回多个结果时，每个结果集被置于一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-384">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-385">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-385">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bcdf2-386">因为没有在创建表的查询的不返回行，如果处理 insert 查询跟 select 查询的 select 查询创建的表名为"表"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-386">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="bcdf2-387">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-387">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-388"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-388">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bcdf2-389">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-389">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bcdf2-390">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-390">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bcdf2-391">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-391">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bcdf2-392">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-392">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bcdf2-393">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-393">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bcdf2-394">如果填充数据表时遇到错误或异常，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-394">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="bcdf2-395">中止运算的余数。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-395">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="bcdf2-396">SELECT 语句用于填充<xref:System.Data.DataSet>返回多项结果，如批处理 SQL 语句，要注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-396">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="bcdf2-397">处理一批 SQL 语句，从多个结果时`maxRecords`仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-397">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="bcdf2-398">这同样适用的包含章节结果 （.NET Framework 数据提供程序用于 OLE DB 仅） 的行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-398">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="bcdf2-399">受限制的最高级别结果`maxRecords`，但会在所有子行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-399">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="bcdf2-400">如果其中一个结果包含错误，所有后续结果被跳过且未添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-400">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="bcdf2-401">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-401">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="bcdf2-402">SQL 语句应该与第一次用于填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-402">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="bcdf2-403">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-403">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="bcdf2-404">如果存在主键信息，则将进行协调，只能出现一次在任何重复的行<xref:System.Data.DataTable>对应于<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-404">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-405">主键信息可能会设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>的属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-405">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bcdf2-406">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-406">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-407">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-407">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bcdf2-408">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-408">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-409">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-409">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-410">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-410">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-411">`DataSet`将不包含多个所指示的记录数`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-411">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="bcdf2-412">但是，由该查询生成整个结果集仍从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-412">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-413">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填充<xref:System.Data.DataSet>15 行，从开始在第 10，行**类别**表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-413">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="bcdf2-414">此示例假定你已创建<xref:System.Data.OleDb.OleDbDataAdapter>和一个<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-414">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="bcdf2-415">
            <see cref="T:System.Data.DataSet" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-415">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-416">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-416">The source table is invalid.</span>
          </span>
          <span data-ttu-id="bcdf2-417">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-417">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-418">连接无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-418">The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bcdf2-419">未能找到连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-419">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bcdf2-420">
            <paramref name="startRecord" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-420">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="bcdf2-421">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-421">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-422">
            <paramref name="maxRecords" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-422">The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-423">重写时<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-423">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-424">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-424">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-425">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-425">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSet">To be added.</param>
        <param name="srcTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="startRecord">To be added.</param>
        <param name="maxRecords">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <span data-ttu-id="bcdf2-426">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-426">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="bcdf2-427">从其开始的从零开始的记录号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-427">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="bcdf2-428">要检索的最大记录数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-428">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="bcdf2-429">执行以填充 <see cref="T:System.Data.IDbCommand" /> 对象的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-429">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="bcdf2-430">
            <see cref="T:System.Data.CommandBehavior" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-430">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-431">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-431">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-432">已在数据表中添加或刷新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-432">The number of rows added to or refreshed in the data tables.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-433">一个`maxRecords`0 的值获取后开始记录发现的所有记录。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-433">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="bcdf2-434">如果`maxRecords`大于的剩余行数仅返回了剩余行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-434">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="bcdf2-435"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-435">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="bcdf2-436"><xref:System.Data.IDbConnection>与 SELECT 语句相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-436">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-437">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-437">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-438">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-438">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-439">如果命令不返回任何行，则没有表将添加到<xref:System.Data.DataSet>，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-439">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="bcdf2-440">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-440">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-441">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-441">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bcdf2-442">当指定的查询返回多个结果时，每个结果集被置于一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-442">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-443">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-443">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bcdf2-444">因为没有在创建表的查询的不返回行，如果要处理插入查询跟 select 查询的 select 查询创建的表将命名为"表"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-444">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="bcdf2-445">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-445">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-446"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-446">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bcdf2-447">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-447">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bcdf2-448">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-448">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bcdf2-449">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-449">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bcdf2-450">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-450">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bcdf2-451">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-451">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bcdf2-452">如果填充数据表时遇到错误或异常，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-452">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="bcdf2-453">中止运算的余数。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-453">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="bcdf2-454">SELECT 语句用于填充<xref:System.Data.DataTable>对象返回多个结果，如一批 SQL 语句被注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-454">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="bcdf2-455">处理一批 SQL 语句，从多个结果时`maxRecords`仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-455">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="bcdf2-456">这同样适用的包含章节结果 （.NET Framework 数据提供程序用于 OLE DB 仅） 的行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-456">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="bcdf2-457">受限制的最高级别结果`maxRecords`，但会在所有子行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-457">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="bcdf2-458">如果其中一个结果包含错误，将跳过所有后续结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-458">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-459">`DataSet`将不包含多个所指示的记录数`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-459">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="bcdf2-460">但是，由该查询生成整个结果集仍从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-460">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="bcdf2-461">
            <see cref="T:System.Data.DataSet" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-461">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-462">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-462">The source table is invalid.</span>
          </span>
          <span data-ttu-id="bcdf2-463">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-463">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-464">连接无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-464">The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bcdf2-465">未能找到连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-465">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bcdf2-466">
            <paramref name="startRecord" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-466">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="bcdf2-467">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-467">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-468">
            <paramref name="maxRecords" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-468">The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-469">重写时<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-469">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-470">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-470">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-471">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-471">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-472">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-472">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="bcdf2-473">从其开始的从零开始的记录号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-473">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="bcdf2-474">要检索的最大记录数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-474">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="bcdf2-475">用于表映射的源表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-475">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="bcdf2-476">用于从数据源中检索行的 SQL SELECT 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-476">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="bcdf2-477">
            <see cref="T:System.Data.CommandBehavior" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-477">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-478">使用 <see cref="T:System.Data.DataSet" /> 和源表名称、命令字符串以及命令行为，在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新某些行以使它们与数据源中对应的行相一致。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-478">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-479">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-479">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="bcdf2-480">这不包括受不返回行的语句影响的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-480">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-481"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法使用从数据源指定由关联的 SELECT 语句检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-481">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="bcdf2-482">与 SELECT 语句关联的连接对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-482">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-483">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-483">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-484">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-484">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-485"><xref:System.Data.Common.DbDataAdapter.Fill%2A>然后，操作将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-485">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="bcdf2-486">创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-486">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="bcdf2-487">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-487">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="bcdf2-488">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-488">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-489">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-489">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bcdf2-490">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-490">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-491">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-491">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bcdf2-492">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-492">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-493"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-493">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bcdf2-494">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-494">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bcdf2-495">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-495">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bcdf2-496">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-496">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bcdf2-497">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-497">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bcdf2-498">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-498">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bcdf2-499">可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法上多次相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-499">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-500">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-500">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="bcdf2-501">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-501">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-502">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-502">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-503">必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-503">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bcdf2-504">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-504">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-505">处理返回多个结果的实现的批处理 SQL 语句时<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>对于.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-505">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-506">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-506">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bcdf2-507">
            <paramref name="startRecord" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-507">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="bcdf2-508">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-508">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-509">
            <paramref name="maxRecords" /> 参数小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-509">The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-510">此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保护并专供.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-510">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-511">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-511">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-512">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-512">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-513">获取或设置用于填充数据适配器的命令的行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-513">Gets or sets the behavior of the command used to fill the data adapter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-514">用于填充数据适配器的命令的 <see cref="T:System.Data.CommandBehavior" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-514">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-515">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-515">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-516">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-516">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-517">将 <see cref="T:System.Data.DataTable" /> 添加到 <see cref="T:System.Data.DataSet" /> 中，并配置架构以匹配数据源中的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-517">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-518">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-518">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-519">要插入架构的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-519">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="bcdf2-520">
            <see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-520">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-521">将名为“Table”的 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" />，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-521">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-522">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-522">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-523">此方法从数据源使用检索的架构信息<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-523">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="bcdf2-524">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-524">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-525">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-525">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bcdf2-526"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-526"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bcdf2-527">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-527">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bcdf2-528"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-528"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bcdf2-529">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-529">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="bcdf2-530">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-530">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bcdf2-531">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-531">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="bcdf2-532">如果返回主键列和唯一列，主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-532">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-533">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-533">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="bcdf2-534">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-534">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bcdf2-535">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-535">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bcdf2-536">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-536">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bcdf2-537">过程中使用主键信息<xref:System.Data.Common.DbDataAdapter.Fill%2A>来查找和替换的键列匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-537">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="bcdf2-538">如果这不是所需的行为，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>而无需请求架构信息。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-538">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="bcdf2-539">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-539">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-540">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-540">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bcdf2-541">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-541">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-542">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-542">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bcdf2-543">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-543">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-544"><xref:System.Data.IDbConnection>与 select 命令相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-544">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="bcdf2-545">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-545">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-546">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-546">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-547">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-547">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-548">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-548">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bcdf2-549">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-549">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bcdf2-550">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-550">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bcdf2-551">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-551">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-552">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>与在架构中，并返回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-552">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-553">DbProviderFactories</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-553">DbProviderFactories</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-554">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-554">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="bcdf2-555">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-555">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="bcdf2-556">
            <see cref="T:System.Data.SchemaType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-556">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-557">根据指定的 <see cref="T:System.Data.SchemaType" /> 配置指定 <see cref="T:System.Data.DataTable" /> 的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-557">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-558">一个 <see cref="T:System.Data.DataTable" />，其中包含从数据源返回的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-558">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-559"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-559">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="bcdf2-560">与关联的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-560">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-561">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-561">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-562">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-562">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-563">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作返回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-563">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bcdf2-564">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-564">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bcdf2-565"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-565"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bcdf2-566">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-566">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bcdf2-567"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-567"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bcdf2-568">如果<xref:System.Data.DataTable.PrimaryKey%2A>已为定义`DataTable`，或`DataTable`包含的数据，`PrimaryKey`未设置属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-568">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="bcdf2-569">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-569">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="bcdf2-570">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-570">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bcdf2-571">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但`PrimaryKey`未设置属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-571">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="bcdf2-572">如果返回主键列和唯一列，主键列用作主键列`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-572">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="bcdf2-573">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-573">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="bcdf2-574">此过程可能需要几个往返于服务器。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-574">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="bcdf2-575">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-575">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bcdf2-576">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-576">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bcdf2-577">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-577">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bcdf2-578">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-578">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-579">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-579">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bcdf2-580">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-580">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-581">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-581">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bcdf2-582">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-582">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-583"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-583"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="bcdf2-584">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-584">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-585">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-585">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-586">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-586">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bcdf2-587">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-587">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bcdf2-588">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-588">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bcdf2-589">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-589">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-590">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>与在架构中，并返回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-590">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-591">DbProviderFactories</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-591">DbProviderFactories</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-592">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-592">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-593">要插入架构的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-593">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="bcdf2-594">
            <see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-594">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="bcdf2-595">用于表映射的源表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-595">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-596">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 配置架构以匹配数据源中的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-596">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-597">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-597">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-598">此方法从数据源使用检索的架构信息<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-598">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="bcdf2-599">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-599">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-600">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-600">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bcdf2-601"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-601"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bcdf2-602">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-602">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bcdf2-603"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-603"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bcdf2-604">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-604">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="bcdf2-605">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-605">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bcdf2-606">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-606">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="bcdf2-607">如果返回主键列和唯一列，主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-607">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-608">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-608">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="bcdf2-609">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-609">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bcdf2-610">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-610">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bcdf2-611">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-611">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bcdf2-612">过程中使用主键信息<xref:System.Data.Common.DbDataAdapter.Fill%2A>来查找和替换的键列匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-612">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="bcdf2-613">如果这不是所需的行为，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>而无需请求架构信息。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-613">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="bcdf2-614">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-614">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-615">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-615">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bcdf2-616">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-616">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-617">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-617">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bcdf2-618">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-618">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-619"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-619">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bcdf2-620">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-620">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bcdf2-621">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-621">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bcdf2-622">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-622">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bcdf2-623">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-623">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bcdf2-624">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-624">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bcdf2-625"><xref:System.Data.IDbConnection>与 select 命令相关联的对象必须是有效的但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-625">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="bcdf2-626">如果<xref:System.Data.IDbConnection>之前已关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-626">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-627">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-627">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-628">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-628">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-629">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-629">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bcdf2-630">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-630">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bcdf2-631">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-631">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bcdf2-632">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-632">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-633">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>与在架构中，并返回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-633">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bcdf2-634">找不到从中获取架构的源表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-634">A source table from which to get the schema could not be found.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-635">DbProviderFactories</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-635">DbProviderFactories</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-636">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-636">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="bcdf2-637">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-637">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="bcdf2-638">
            <see cref="T:System.Data.SchemaType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-638">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="bcdf2-639">用于从数据源中检索行的 SQL SELECT 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-639">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="bcdf2-640">
            <see cref="T:System.Data.CommandBehavior" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-640">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-641">根据指定的 <see cref="T:System.Data.DataTable" />、命令字符串以及 <see cref="T:System.Data.SchemaType" /> 值配置指定 <see cref="T:System.Data.CommandBehavior" /> 的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-641">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-642">包含从数据源返回的架构信息的 <see cref="T:System.Data.DataTable" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-642">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-643"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-643">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="bcdf2-644">与关联的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-644">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-645">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-645">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-646">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-646">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-647">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-647">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-648">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-648">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bcdf2-649"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-649"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bcdf2-650">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-650">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bcdf2-651"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-651"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bcdf2-652">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-652">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="bcdf2-653">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-653">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bcdf2-654">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-654">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="bcdf2-655">如果返回主键列和唯一列，主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-655">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-656">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-656">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="bcdf2-657">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-657">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bcdf2-658">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-658">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bcdf2-659">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-659">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bcdf2-660">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-660">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-661">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-661">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bcdf2-662">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-662">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-663">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-663">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bcdf2-664">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-664">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="bcdf2-666">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-666">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-667">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-667">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-668">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-668">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bcdf2-669">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-669">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bcdf2-670">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-670">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bcdf2-671">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-671">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-672">此实现<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受到保护并专供.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-672">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-673">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-673">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-674">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-674">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-675">要用数据源中的架构填充的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-675">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="bcdf2-676">
            <see cref="T:System.Data.SchemaType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-676">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="bcdf2-677">用于从数据源中检索行的 SQL SELECT 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-677">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="bcdf2-678">用于表映射的源表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-678">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="bcdf2-679">
            <see cref="T:System.Data.CommandBehavior" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-679">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-680">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-680">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-681">
            <see cref="T:System.Data.DataTable" /> 对象的数组，这些对象包含从数据源返回的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-681">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-682"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-682">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="bcdf2-683">与关联的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-683">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bcdf2-684">如果连接已关闭之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-684">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bcdf2-685">如果连接已打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-685">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bcdf2-686">一个<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-686">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-687">然后将添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>时它们的数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-687">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bcdf2-688"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-688"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bcdf2-689">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-689">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bcdf2-690"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据以下规则：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-690"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bcdf2-691">如果返回一个或多个主键列，那么<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，将其用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-691">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="bcdf2-692">如果返回没有主键列但唯一列，唯一的列用作主键，当且仅当所有唯一列不可为 null。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-692">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bcdf2-693">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-693">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="bcdf2-694">如果返回主键列和唯一列，主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-694">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-695">请注意主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据上述规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-695">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="bcdf2-696">如果一个唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的列的聚集索引中的名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-696">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bcdf2-697">若要返回的名称或主键列的名称，使用指定的主键索引名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-697">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bcdf2-698">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-698">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bcdf2-699">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的使用模式的后续列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-699">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bcdf2-700">如果传入的数据包含未命名的列，它们将放置<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-700">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bcdf2-701">当多个结果集添加到<xref:System.Data.DataSet>每个结果集放在一个单独的表。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-701">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bcdf2-702">其他结果集分别名为通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-702">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bcdf2-703">使用列和表名称的应用程序应确保不会不会发生冲突与这些命名模式。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-703">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bcdf2-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-704">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bcdf2-705">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>执行区分大小写比较，以找到相应的表，并创建一个新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-705">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bcdf2-706">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-706">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bcdf2-707">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-707">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bcdf2-708">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-708">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bcdf2-709">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-709">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bcdf2-710"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-710"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="bcdf2-711">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-711">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-712">当处理批处理 SQL 语句返回多个结果，实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB 的.NET Framework 数据提供程序检索架构信息只为第一个结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-712">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bcdf2-713">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-713">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bcdf2-714">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-714">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bcdf2-715">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-715">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bcdf2-716">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-716">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-717">此实现<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受到保护并专供.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-717">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-718">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-718">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-719">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-719">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="bcdf2-720">要从中检索参数的命令的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-720">The index of the command to retrieve the parameter from.</span>
          </span>
        </param>
        <param name="parameterIndex">
          <span data-ttu-id="bcdf2-721">命令内的参数的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-721">The index of the parameter within the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-722">从当前批处理中的其中一个命令返回一个 <see cref="T:System.Data.IDataParameter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-722">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-723">指定的 <see cref="T:System.Data.IDataParameter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-723">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-724">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-724">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bcdf2-725">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-725">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bcdf2-726">该适配器不支持批处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-726">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-727">此方法受到保护，专为使用.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-727">This method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
            <span data-ttu-id="bcdf2-728">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户执行的批处理。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-728">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span>
            </span>
            <span data-ttu-id="bcdf2-729">实现使用<paramref name="commandIdentifier" />提供用于查找请求的命令，然后使用<paramref name="parameterIndex" />提供用于查找请求的参数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-729">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span>
            </span>
            <span data-ttu-id="bcdf2-730">例如，<paramref name="commandIdentifier" />为 0 和<paramref name="parameterIndex" />0 的批处理中的第一个命令返回的第一个参数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-730">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-731">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-731">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-732">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-732">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" />
        <Parameter Name="error" Type="System.Exception" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="bcdf2-733">该批次内单个命令的从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-733">The zero-based column ordinal of the individual command within the batch.</span>
          </span>
        </param>
        <param name="recordsAffected">
          <span data-ttu-id="bcdf2-734">数据存储区中受该批内的指定命令影响的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-734">The number of rows affected in the data store by the specified command within the batch.</span>
          </span>
        </param>
        <param name="error">
          <span data-ttu-id="bcdf2-735">在执行指定命令期间引发的一个 <see cref="T:System.Exception" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-735">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          </span>
          <span data-ttu-id="bcdf2-736">如果未引发任何异常，则返回 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-736">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-737">返回与较大的批处理更新内的单次更新尝试有关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-737">Returns information about an individual update attempt within a larger batched update.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-738">与较大的批处理更新内的单次更新尝试有关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-738">Information about an individual update attempt within a larger batched update.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-739">支持批处理更新逻辑的数据提供程序必须覆盖上一系列的虚拟方法<xref:System.Data.Common.DbDataAdapter>类。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-739">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="bcdf2-740">`GetBatchedRecordsAffected` 表示一个虚拟方法。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-740">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="bcdf2-741">`DbDataAdapter`依赖于类`GetBatchedRecordsAffected`若要确定批处理内的单次更新尝试成功与否，因此它可以将标记每个相应<xref:System.Data.DataRow>相应地。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-741">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-742">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-742">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-743">获取当执行 SQL SELECT 语句时由用户设置的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-743">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-744">
            <see cref="T:System.Data.IDataParameter" /> 对象的数组，这些对象包含由用户设置的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-744">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-745">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-745">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-746">初始化 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-746">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-747">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-747">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bcdf2-748">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-748">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bcdf2-749">该适配器不支持批处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-749">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-750">此方法受到保护，专为使用.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-750">This method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
            <span data-ttu-id="bcdf2-751">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-751">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span>
            </span>
            <span data-ttu-id="bcdf2-752">此方法使类可以初始化支持批处理所需的任何资源。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-752">This method gives the class the opportunity to initialize any resources necessary to support batching.</span>
            </span>
            <span data-ttu-id="bcdf2-753">例如，类可以分配用于保存批处理中的命令集的数据结构。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-753">For example, a class may allocate a data structure to hold the set of commands in the batch.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-754">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-754">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-755">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-755">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-756">获取或设置用于将新记录插入到数据源中的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-756">Gets or sets a command used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-757">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-757">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-758">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.IDbDataAdapter.InsertCommand%2A>将自动生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-758">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-759">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-759">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-760">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-760">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-761">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-761">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-762">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-762">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bcdf2-763">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-763">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-764">引发 .NET Framework 数据提供程序的 <see langword="RowUpdated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-764">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-765">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-765">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcdf2-766">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-766">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-767">重写时<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />在派生类中，请务必调用基类的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-767">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-768">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-768">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-769">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-769">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bcdf2-770">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-770">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-771">引发 .NET Framework 数据提供程序的 <see langword="RowUpdating" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-771">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-772">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-772">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcdf2-773">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-773">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-774">重写时<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />在派生类中，请确保调用基类<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-774">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-775">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-775">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-776">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-776">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-777">获取或设置用于在数据源中选择记录的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-777">Gets or sets a command used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-778">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-778">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bcdf2-779">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-779">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-780">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-780">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-781">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-781">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-782">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-782">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-783">获取或设置用于从数据集中删除记录的 SQL 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-783">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-784">
            <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-784">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-785">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-785">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bcdf2-786">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-786">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="bcdf2-787">有关详情，请参阅<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-787">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-788">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-788">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-789">获取或设置用于将新记录插入到数据源中的 SQL 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-789">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-790">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-790">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-791">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-791">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bcdf2-792">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-792">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="bcdf2-793">有关详情，请参阅<xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-793">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-794">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-794">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-795">获取或设置用于在数据源中选择记录的 SQL 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-795">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-796">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-796">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-797">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-797">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bcdf2-798">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-798">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="bcdf2-799">有关详情，请参阅<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-799">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-800">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-800">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-801">获取或设置用于更新数据源中的记录的 SQL 语句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-801">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-802">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-802">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-803">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-803">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bcdf2-804">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-804">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="bcdf2-805">有关详情，请参阅<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-805">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-806">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-806">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-807">创建作为当前实例副本的新对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-807">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-808">作为此实例副本的新对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-808">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-809">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-809">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bcdf2-810">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-810">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="bcdf2-811">有关详情，请参阅<xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-811">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-812">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-812">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-813">结束 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-813">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-814">在中<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-814">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bcdf2-815">继承的类<xref:System.Data.Common.DbDataAdapter>重写此方法为批处理提供支持。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-815">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bcdf2-816">该适配器不支持批处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-816">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdf2-817">此方法受到保护，专为使用.NET Framework 数据提供程序。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-817">This method is protected and is designed for use by a .NET Framework data provider.</span>
            </span>
            <span data-ttu-id="bcdf2-818">如果继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-818">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span>
            </span>
            <span data-ttu-id="bcdf2-819">此方法使类能够释放的分配以支持批处理的任何资源。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-819">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span>
            </span>
            <span data-ttu-id="bcdf2-820">例如，类可以释放包含命令批处理中的数据结构。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdf2-820">For example, the class may deallocate the data structure that holds the commands in the batch.</span>
            </span>
          </para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-821">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-821">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-822">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-822">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-823">通过为 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-823">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-824">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-824">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="bcdf2-825">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-825">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-826">通过为 <see cref="T:System.Data.DataSet" /> 中的指定数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-826">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-827">
            <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-827">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-828">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bcdf2-828">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-829">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-829">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-830">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-830">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bcdf2-831">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>情况下，必须控制语句类型 （例如，插入更新之前） 的序列中的方法。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-831">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="bcdf2-832">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-832">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bcdf2-833">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-833">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bcdf2-834">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-834">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bcdf2-835">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-835">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bcdf2-836">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-836">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-837">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-837">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bcdf2-838"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-838">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bcdf2-839"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-839">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bcdf2-840">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-840">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bcdf2-841">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-841">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bcdf2-842">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-842">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bcdf2-843">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-843">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bcdf2-844">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-844">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bcdf2-845">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-845">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bcdf2-846">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-846">The command executes.</span></span>  
  
4.  <span data-ttu-id="bcdf2-847">如果该命令设置为`FirstReturnedRecord`，第一个返回结果放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-847">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bcdf2-848">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-848">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bcdf2-849">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-849">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bcdf2-850">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-850"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bcdf2-851">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-851">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bcdf2-852">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-852">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bcdf2-853">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-853">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bcdf2-854">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-854">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bcdf2-855">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-855">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bcdf2-856">枚举值</span><span class="sxs-lookup"><span data-stu-id="bcdf2-856">Enumeration value</span></span>|<span data-ttu-id="bcdf2-857">执行操作</span><span class="sxs-lookup"><span data-stu-id="bcdf2-857">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bcdf2-858">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-858">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bcdf2-859">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-859">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bcdf2-860">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-860">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bcdf2-861">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-861">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bcdf2-862">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-862">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bcdf2-863">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-863">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bcdf2-864">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-864">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bcdf2-865">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-865">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-866">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-866">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bcdf2-867">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-867">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bcdf2-868">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-868">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bcdf2-869">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-869">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-870">下面的示例使用派生的类， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-870">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bcdf2-871">
            <see cref="T:System.Data.DataSet" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-871">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-872">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-872">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="bcdf2-873">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-873">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="bcdf2-874">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-874">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-875">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-875">No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="bcdf2-876">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-876">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-877">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-877">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="bcdf2-878">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-878">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-879">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-879">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-880">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-880">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-881">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-881">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-882">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-882">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-883">通过为指定的 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-883">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-884">
            <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-884">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-885">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bcdf2-885">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-886">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-886">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-887">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-887">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bcdf2-888">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>情况下，必须控制语句类型 （例如，插入更新之前） 的序列中的方法。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-888">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="bcdf2-889">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-889">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bcdf2-890">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-890">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bcdf2-891">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-891">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bcdf2-892">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-892">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bcdf2-893">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-893">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-894">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-894">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bcdf2-895"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-895">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bcdf2-896"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-896">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bcdf2-897">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-897">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bcdf2-898">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-898">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bcdf2-899">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-899">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bcdf2-900">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-900">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bcdf2-901">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-901">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bcdf2-902">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-902">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bcdf2-903">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-903">The command executes.</span></span>  
  
4.  <span data-ttu-id="bcdf2-904">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-904">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bcdf2-905">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-905">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bcdf2-906">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-906">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bcdf2-907">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-907"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bcdf2-908">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-908">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bcdf2-909">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-909">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bcdf2-910">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-910">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bcdf2-911">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-911">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bcdf2-912">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-912">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bcdf2-913">枚举值</span><span class="sxs-lookup"><span data-stu-id="bcdf2-913">Enumeration value</span></span>|<span data-ttu-id="bcdf2-914">执行操作</span><span class="sxs-lookup"><span data-stu-id="bcdf2-914">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bcdf2-915">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-915">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bcdf2-916">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-916">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bcdf2-917">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-917">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bcdf2-918">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-918">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bcdf2-919">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-919">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bcdf2-920">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-920">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bcdf2-921">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-921">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bcdf2-922">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-922">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-923">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-923">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bcdf2-924">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-924">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bcdf2-925">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-925">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bcdf2-926">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-926">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-927">下面的示例使用派生的类， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-927">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-928">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-928">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="bcdf2-929">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-929">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-930">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-930">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-931">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-931">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-932">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-932">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="bcdf2-933">用于更新数据源的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-933">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-934">通过为指定的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-934">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-935">
            <see cref="T:System.Data.DataTable" /> 中成功更新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-935">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-936">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bcdf2-936">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-937">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-937">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-938">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-938">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bcdf2-939">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>情况下，必须控制语句类型 （例如，插入更新之前） 的序列中的方法。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-939">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="bcdf2-940">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-940">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bcdf2-941">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-941">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bcdf2-942">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-942">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bcdf2-943">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-943">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bcdf2-944">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-944">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-945">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-945">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bcdf2-946"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-946">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bcdf2-947"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-947">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bcdf2-948">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-948">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bcdf2-949">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-949">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bcdf2-950">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-950">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bcdf2-951">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-951">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bcdf2-952">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-952">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bcdf2-953">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-953">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bcdf2-954">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-954">The command executes.</span></span>  
  
4.  <span data-ttu-id="bcdf2-955">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-955">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bcdf2-956">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-956">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bcdf2-957">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-957">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bcdf2-958">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-958"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bcdf2-959">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-959">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bcdf2-960">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-960">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bcdf2-961">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-961">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bcdf2-962">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-962">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bcdf2-963">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-963">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bcdf2-964">枚举值</span><span class="sxs-lookup"><span data-stu-id="bcdf2-964">Enumeration value</span></span>|<span data-ttu-id="bcdf2-965">执行操作</span><span class="sxs-lookup"><span data-stu-id="bcdf2-965">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bcdf2-966">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-966">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bcdf2-967">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-967">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bcdf2-968">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-968">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bcdf2-969">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-969">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bcdf2-970">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-970">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bcdf2-971">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-971">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bcdf2-972">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-972">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bcdf2-973">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-973">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-974">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-974">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bcdf2-975">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-975">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bcdf2-976">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-976">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bcdf2-977">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-977">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-978">下面的示例使用派生的类， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-978">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bcdf2-979">
            <see cref="T:System.Data.DataSet" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-979">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-980">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-980">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="bcdf2-981">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-981">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="bcdf2-982">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-982">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-983">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-983">No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="bcdf2-984">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-984">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-985">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-985">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="bcdf2-986">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-986">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-987">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-987">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-988">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-988">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-989">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-989">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="bcdf2-990">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-990">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="bcdf2-991">要使用的 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-991">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-992">通过为指定的 <see cref="T:System.Data.DataSet" /> 对象数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-992">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-993">
            <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-993">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-994">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bcdf2-994">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-995">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-995">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-996">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-996">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bcdf2-997">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>情况下，必须控制语句类型 （例如，插入更新之前） 的序列中的方法。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-997">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="bcdf2-998">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-998">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bcdf2-999">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-999">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bcdf2-1000">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1000">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bcdf2-1001">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1001">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bcdf2-1002">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1002">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-1003">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1003">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bcdf2-1004"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1004">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bcdf2-1005"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1005">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bcdf2-1006">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1006">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bcdf2-1007">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1007">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bcdf2-1008">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1008">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bcdf2-1009">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1009">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bcdf2-1010">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1010">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bcdf2-1011">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1011">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bcdf2-1012">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1012">The command executes.</span></span>  
  
4.  <span data-ttu-id="bcdf2-1013">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1013">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bcdf2-1014">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1014">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bcdf2-1015">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1015">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bcdf2-1016">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1016"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bcdf2-1017">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1017">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bcdf2-1018">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1018">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bcdf2-1019">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1019">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bcdf2-1020">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1020">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bcdf2-1021">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1021">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bcdf2-1022">枚举值</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1022">Enumeration value</span></span>|<span data-ttu-id="bcdf2-1023">执行操作</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1023">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bcdf2-1024">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1024">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bcdf2-1025">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1025">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bcdf2-1026">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1026">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bcdf2-1027">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1027">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bcdf2-1028">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1028">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bcdf2-1029">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1029">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bcdf2-1030">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1030">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bcdf2-1031">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1031">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-1032">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1032">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bcdf2-1033">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1033">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bcdf2-1034">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1034">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bcdf2-1035">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1035">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bcdf2-1036">
            <see cref="T:System.Data.DataSet" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1036">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-1037">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1037">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="bcdf2-1038">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1038">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="bcdf2-1039">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1039">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-1040">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1040">No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="bcdf2-1041">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1041">-or-</span>
          </span>
          <span data-ttu-id="bcdf2-1042">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1042">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="bcdf2-1043">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1043">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-1044">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1044">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-1045">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1045">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-1046">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1046">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="bcdf2-1047">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1047">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="bcdf2-1048">用于表映射的源表的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1048">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdf2-1049">通过为具有指定名称 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1049">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdf2-1050">
            <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1050">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-1051">当应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1051">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-1052">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句后, 跟 INSERT 语句，并将另一个 DELETE 语句，由于中的行的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1052">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bcdf2-1053">应注意这些语句不会执行作为批处理过程;单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1053">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bcdf2-1054">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>方法在其中你必须控制语句类型的序列的情况下 （例如，在更新之前插入）。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1054">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="bcdf2-1055">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1055">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bcdf2-1056">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1056">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bcdf2-1057">但是，可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象来自动生成的单表更新的 SQL 语句，如果您设置`SelectCommand`的.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1057">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bcdf2-1058">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1058">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bcdf2-1059">此生成逻辑要求要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1059">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-1060">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1060">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bcdf2-1061"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>对象只是大小写的名称不同。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1061">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bcdf2-1062">具有相同名称但不同的情况下，多个表中的存在时`DataSet`，<xref:System.Data.Common.DbDataAdapter.Update%2A>执行区分大小写比较，以找到相应的表，并产生异常，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1062">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="bcdf2-1063">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1063">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="bcdf2-1064">如果<xref:System.Data.Common.DbDataAdapter.Update%2A>称为并<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1064">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bcdf2-1065">在此方案中，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1065">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bcdf2-1066">下面的 C# 代码演示此行为。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1066">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bcdf2-1067"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从之前执行更新的第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1067">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bcdf2-1068"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1068">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bcdf2-1069">将忽略返回任何其他行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1069">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bcdf2-1070">任何数据加载回后<xref:System.Data.DataSet>，则<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查已对帐<xref:System.Data.DataSet>行和任何输出参数返回的命令。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1070">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bcdf2-1071">已成功更新某一行后，将接受对该行更改。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1071">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bcdf2-1072">当使用<xref:System.Data.Common.DbDataAdapter.Update%2A>的执行顺序是按如下所示：</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1072">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bcdf2-1073">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1073">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bcdf2-1074">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1074">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bcdf2-1075">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1075">The command executes.</span></span>  
  
4.  <span data-ttu-id="bcdf2-1076">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1076">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bcdf2-1077">如果没有输出参数，它们将放置<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1077">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bcdf2-1078">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1078">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bcdf2-1079">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1079"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bcdf2-1080">与相关联的每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1080">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bcdf2-1081">参数映射到当前行通过`SourceColumn`并`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1081">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bcdf2-1082">`SourceColumn` 是指<xref:System.Data.DataTable>列的<xref:System.Data.Common.DbDataAdapter>以获得当前行的参数值的引用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1082">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bcdf2-1083">`SourceColumn` 在应用的任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1083">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bcdf2-1084">如果`SourceColumn`引用不存在的列，所执行的操作取决于下列任一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1084">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bcdf2-1085">枚举值</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1085">Enumeration value</span></span>|<span data-ttu-id="bcdf2-1086">执行操作</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1086">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bcdf2-1087">使用源列名称和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1087">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bcdf2-1088">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1088">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bcdf2-1089">当显式设置映射时，缺少映射的输入参数通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1089">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bcdf2-1090">一个<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1090">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bcdf2-1091">`SourceColumn`属性还用于将映射为输出值或输入/输出参数返回到`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1091">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bcdf2-1092">如果它所引用的列不存在，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1092">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bcdf2-1093">`SourceVersion`属性的.NET Framework 数据提供程序的`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1093">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bcdf2-1094">此功能通常用于包括检查存在开放式并发冲突的 UPDATE 语句的 WHERE 子句中的原始值。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1094">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcdf2-1095">如果更新某行时出错，将引发异常并执行更新的已停用。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1095">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bcdf2-1096">若要继续更新操作不会生成异常时遇到错误，请设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性设置为`true`然后才能调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1096">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bcdf2-1097">您还可能会响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1097">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bcdf2-1098">若要继续更新操作而不会生成内的异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>的属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1098">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-1099">下面的示例使用派生的类， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1099">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bcdf2-1100">
            <see cref="T:System.Data.DataSet" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1100">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcdf2-1101">源表无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1101">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="bcdf2-1102">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1102">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-1103">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1103">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-1104">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1104">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-1105">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1105">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-1106">获取或设置一个值，该值启用或禁用批处理支持，并且指定可在一次批处理中执行的命令的数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1106">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-1107">每个批处理要处理的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1107">The number of rows to process per batch.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="bcdf2-1108">值为</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bcdf2-1108">Value is</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="bcdf2-1109">效果</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bcdf2-1109">Effect</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="bcdf2-1110">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bcdf2-1110">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="bcdf2-1111">批大小没有限制。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bcdf2-1111">There is no limit on the batch size.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="bcdf2-1112">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bcdf2-1112">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="bcdf2-1113">禁用批量更新。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bcdf2-1113">Disables batch updating.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="bcdf2-1114">&gt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bcdf2-1114">&gt; 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="bcdf2-1115">更改是使用 <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> 操作的批处理一次性发送的。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="bcdf2-1115">Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span>
                </span>
              </description>
            </item>
          </list>
          <span data-ttu-id="bcdf2-1116">当设置为 1 以外的值，与相关联的所有命令<see cref="T:System.Data.Common.DbDataAdapter" />必须具有其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />属性设置为**None**或**OutputParameters**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1116">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span>
          </span>
          <span data-ttu-id="bcdf2-1117">否则，将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1117">An exception will be thrown otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-1118">使用<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>属性来更新数据源中的更改与<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1118">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bcdf2-1119">如果数据访问接口支持批处理，这可以通过减少到服务器的往返次数来提高应用程序性能。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1119">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="bcdf2-1120">在 ADO.NET 2.0 中，此属性被支持的.NET 数据提供程序适用于 SQL Server (SqlClient) 和 Oracle (OracleClient)。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1120">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="bcdf2-1121">执行极大的批处理会降低性能。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1121">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="bcdf2-1122">因此，在实现应用程序前应进行测试以得到最佳的批大小。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1122">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="bcdf2-1123"><xref:System.ArgumentOutOfRangeException>如果的值设置为一个数字，将引发小于零。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1123">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-1124">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1124">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-1125">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1125">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-1126">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1126">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdf2-1127">获取或设置用于更新数据源中的记录的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1127">Gets or sets a command used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdf2-1128">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1128">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdf2-1129">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息是否处在<xref:System.Data.DataSet>，则<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>将自动生成。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1129">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdf2-1130">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>和设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="bcdf2-1130">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">
          <span data-ttu-id="bcdf2-1131">操作数据 (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1131">Manipulating Data (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1">
          <span data-ttu-id="bcdf2-1132">DbProviderFactories (ADO.NET)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1132">DbProviderFactories (ADO.NET)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">
          <span data-ttu-id="bcdf2-1133">ADO.NET 概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdf2-1133">ADO.NET Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>