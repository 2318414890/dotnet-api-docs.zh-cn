<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbDataAdapter.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5790ce3520f5c395d9b802fc24df3edc1b6c9ffdb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">790ce3520f5c395d9b802fc24df3edc1b6c9ffdb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Aids implementation of the <ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> interface.</source>
          <target state="translated">帮助实现 <ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Inheritors of <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> 的继承类实现了一组功能以提供强类型，但是继承了完全实现 DataAdapter 所需的大部分功能。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> class and implements the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>类继承自<ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>类并实现<ph id="ph3">&lt;xref:System.Data.IDbDataAdapter&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>It helps a class implement a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> designed for use with a relational database.</source>
          <target state="translated">它可帮助实现的类<bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept>专用于关系数据库。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class directly, but creates an instance of a class that inherits from it.</source>
          <target state="translated">应用程序不会创建的实例<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>类直接，但创建从它继承的类的实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> must implement the inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">继承的类<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>必须实现继承的成员，且通常定义其他成员来添加提供程序特定的功能。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class defines the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class defines eight overloads of the <ph id="ph4">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>类定义<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>属性，与<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>类定义的八个重载<ph id="ph4">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class inherits the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method, and also defines two additional overloads of <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> that take an ADO Recordset object as a parameter.</source>
          <target state="translated">反过来，<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>类继承<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法，并还定义了两个其他重载<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph>它们采用 ADO 记录集对象作为参数。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> class, we recommend that you implement the following constructors:</source>
          <target state="translated">继承自<ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>类，我们建议你实现以下构造函数：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Item</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 项</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter()</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter()</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter class.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 初始化的新实例<bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter 类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter(<bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>Command <bpt id="p3">*</bpt>selectCommand<ept id="p3">*</ept>)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter (<bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>命令<bpt id="p3">*</bpt>selectCommand<ept id="p3">*</ept>)</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter class with the specified SQL SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 初始化的新实例<bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter 类与指定的 SQL SELECT 语句一起使用。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter(string <bpt id="p2">*</bpt>selectCommandText<ept id="p2">*</ept>, string <bpt id="p3">*</bpt>selectConnectionString<ept id="p3">*</ept>)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter (字符串<bpt id="p2">*</bpt>selectCommandText<ept id="p2">*</ept>，字符串<bpt id="p3">*</bpt>selectConnectionString<ept id="p3">*</ept>)</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter class with an SQL SELECT statement and a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 初始化的新实例<bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter 类替换 SQL SELECT 语句和连接字符串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter(string <bpt id="p2">*</bpt>selectCommandText<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Prv<ept id="p3">*</ept>Connection <bpt id="p4">*</bpt>selectConnection<ept id="p4">*</ept>)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter (字符串<bpt id="p2">*</bpt>selectCommandText<ept id="p2">*</ept>， <bpt id="p3">*</bpt>Prv<ept id="p3">*</ept>连接<bpt id="p4">*</bpt>selectConnection<ept id="p4">*</ept>)</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter class with an SQL SELECT statement and a <bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>Connection object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 初始化的新实例<bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter 类使用的 SQL SELECT 语句和<bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>连接对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>To promote consistency among .NET Framework data providers, you should name the inheriting class in the form <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter, where <bpt id="p2">*</bpt>Prv<ept id="p2">*</ept> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</source>
          <target state="translated">若要将提升.NET Framework 数据提供程序之间的一致性，您应命名窗体中的继承类<bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter，其中<bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>是为特定的.NET 中的所有类提供的统一前缀Framework 数据提供程序命名空间。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>For example, "Sql" is the prefix of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class in the <bpt id="p1">**</bpt>System.Data.SqlClient<ept id="p1">**</ept> namespace.</source>
          <target state="translated">例如，"Sql"是前缀<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>类<bpt id="p1">**</bpt>System.Data.SqlClient<ept id="p1">**</ept>命名空间。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>Initializes a new instance of a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> class.</source>
          <target state="translated">初始化 DataAdapter 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">当你创建的实例<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>，以下的读/写属性设置为以下的初始值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>Properties</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>Initial value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
          <target state="translated">一个新的 <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
          <target state="translated">一个新的 <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
          <target state="translated">一个新的 <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
          <target state="translated">一个新的 <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">你可以更改任何通过单独属性调用这些属性的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
          <source>A <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> object used to create the new <ph id="ph2">&lt;see langword="DataAdapter" /&gt;</ph>.</source>
          <target state="translated">用于创建新 <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> 的 <ph id="ph2">&lt;see langword="DataAdapter" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> class from an existing object of the same type.</source>
          <target state="translated">从同一类型的现有对象中初始化 <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</source>
          <target state="translated">此重载<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>构造函数旨在使用.NET Framework 数据提供程序实现在克隆的实现中使用的类似构造函数时。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> to add to the batch.</source>
          <target state="translated">要添加到批处理的 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> to the current batch.</source>
          <target state="translated">向当前批处理添加 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>The number of commands in the batch before adding the <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>.</source>
          <target state="translated">添加 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 之前批处理中的命令数。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>，此方法将引发<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">继承自的类<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>重写此方法以支持批处理。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>The adapter does not support batches.</source>
          <target state="translated">该适配器不支持批处理。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method to allow users to add a command to a batch.</source>
          <target state="translated">如果从继承的类<ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>支持批处理，类重写此方法以允许用户将命令添加到一批。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>Removes all <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> objects from the batch.</source>
          <target state="translated">从批处理中移除所有 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>，此方法将引发<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">继承自的类<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>重写此方法以支持批处理。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>The adapter does not support batches.</source>
          <target state="translated">该适配器不支持批处理。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method to allow users to remove all commands from a batch.</source>
          <target state="translated">如果从继承的类<ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>支持批处理，类重写此方法以允许用户从一批中删除所有命令。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> used to update the data source.</source>
          <target state="translated">用于更新数据源的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> executed during the <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中执行的 <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</source>
          <target state="translated">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> that updates the data source.</source>
          <target state="translated">更新数据源的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> to execute during the <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中执行的 <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</source>
          <target state="translated">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
          <source>The default name used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> object for table mappings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> 对象用于表映射的默认名称。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
          <source>"Table" is the default name used by the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> object for table mappings.</source>
          <target state="translated">"表"是使用默认名称<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>表映射的对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName&gt;</ph> is when an application adds a table mapping to be used with <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>, but does not specify a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName&gt;</ph> 是当应用程序将添加要用于表映射<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>，但未指定<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.DeleteCommand">
          <source>Gets or sets a command for deleting records from the data set.</source>
          <target state="translated">获取或设置用于从数据集中删除记录的命令。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中使用的 <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>，它针对数据集中已删除的行删除数据源中的记录。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.DeleteCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> is automatically generated.</source>
          <target state="translated">期间<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，如果未设置此属性和主键信息位于<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph>自动生成。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.DeleteCommand">
          <source>The following example creates the derived class <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下面的示例创建派生的类<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>并设置其属性的一些。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>Executes the current batch.</source>
          <target state="translated">执行当前批处理。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>The return value from the last command in the batch.</source>
          <target state="translated">从批处理中的最后一个命令返回的值。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>，此方法将引发<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">继承自的类<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>重写此方法以支持批处理。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method to allow users to execute a batch.</source>
          <target state="translated">如果从继承的类<ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>支持批处理，类重写此方法以允许用户执行一个批处理。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</source>
          <target state="translated">此方法的实现将适配器中的命令合并到一个批处理，然后执行的批处理，并且返回批处理的返回值。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">填充 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">要用记录和架构（如果必要）填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中添加或刷新行。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">已在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功添加或刷新的行数。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">这不包括受不返回行的语句影响的行。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法从使用 SELECT 语句的数据源检索数据。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the select command must be valid, but it does not need to be open.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>与 select 命令关联的对象必须是有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>之前关闭<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它是打开以检索数据，然后关闭。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">该操作的剩余部分将会中止。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If a command does not return any rows, no tables are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">如果命令不返回任何行，没有表将添加到<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，并且不引发任何异常。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>对象在填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它将生成的后续使用模式的列名称"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</source>
          <target state="translated">当指定的查询返回多个结果时，返回查询的每个行的结果集被置于单独的表。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</source>
          <target state="translated">因为如果处理插入查询跟 select 查询，查询不返回行，创建没有表，创建了为 select 查询的表的名称为"Table"，因为它是创建的第一个表。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">SELECT 语句用于填充<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>多个结果，例如批处理 SQL 语句，如果其中一个结果包含错误，将返回所有的后续结果将被跳过并不会添加到<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>When using subsequent <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> calls to refresh the contents of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, two conditions must be met:</source>
          <target state="translated">当使用后续<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>调用来刷新的内容<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，必须满足两个条件：</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The SQL statement should match the one initially used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">SQL 语句应匹配是最初用来填充<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated"><bpt id="p1">**</bpt>密钥<ept id="p1">**</ept>列信息必须存在。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear once in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>相对应的<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">主键信息可能被设置通过<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>，通过指定<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>，或通过设置<ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>属性<ph id="ph5">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`SelectCommand`</ph> 返回 OUTER JOIN 的结果，则 <ph id="ph2">`DataAdapter`</ph> 不会为生成的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 设置 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必须显式定义为主键，以确保正确解析重复行。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>定义主键<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to use for table mapping.</source>
          <target state="translated">用于表映射的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> name.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的指定范围中添加或刷新行，以与使用 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 名称的数据源中的行匹配。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">已在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功添加或刷新的行数。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">这不包括受不返回行的语句影响的行。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果之前连接关闭<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>操作然后将行添加到目标<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>中的对象<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>，则创建<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>对象如果它们尚不存在。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">在创建时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>操作通常只创建列名称元数据。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">但是，如果<ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph>属性设置为<ph id="ph2">`AddWithKey`</ph>，还会创建相应的主键约束。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它会生成名称的后续列，请使用模式"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">多个结果集添加到时<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>每个结果集放置在单独的表。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The overload of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> that takes <ph id="ph2">`DataTable`</ph> as a parameter only obtains the first result.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>采用<ph id="ph2">`DataTable`</ph>如参数仅获取第一个结果。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>Use an overload of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> that takes <ph id="ph2">`DataSet`</ph> as a parameter to obtain multiple results.</source>
          <target state="translated">使用的重载<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>采用<ph id="ph2">`DataSet`</ph>作为参数，以获取多个结果。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法支持方案其中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>包含多个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称只有大小写不同的对象。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>称为和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>只包含一个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>只是大小写，其名称不同，<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>更新。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">在此方案中，比较是区分大小写。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>上多次相同的方法<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">如果存在主键，传入行与已存在的匹配行合并。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果主键不存在，将传入的行追加到<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`SelectCommand`</ph> 返回 OUTER JOIN 的结果，则 <ph id="ph2">`DataAdapter`</ph> 不会为生成的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 设置 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必须显式定义为主键，以确保正确解析重复行。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>定义主键<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>This overload of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此重载<ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>方法受保护，并旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">要用记录和架构（如果必要）填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">用于表映射的源表的名称。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> names.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中添加或刷新行以匹配使用 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 名称的数据源中的行。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">已在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功添加或刷新的行数。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">这不包括受不返回行的语句影响的行。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法从使用 SELECT 语句的数据源检索数据。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the select command must be valid, but it does not need to be open.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>与 select 命令关联的对象必须是有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>之前关闭<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If a command does not return any rows, no tables are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">如果命令不返回任何行，没有表将添加到<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，并且不引发任何异常。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>对象在填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它将生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</source>
          <target state="translated">由于你可以像处理插入查询跟 select 查询，查询不返回行，创建没有表，表创建了为 select 查询将被命名为"Table"，因为它是创建的第一个表。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法支持方案其中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>包含多个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称只有大小写不同的对象。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>称为和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>只包含一个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>只是大小写，其名称不同，<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>更新。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">在此方案中，比较是区分大小写。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">该操作的剩余部分将会中止。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as a batch SQL statement, be aware of the following:</source>
          <target state="translated">SELECT 语句用于填充<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>返回多个结果，如一批 SQL 语句中，注意以下事项：</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If one of the results contains an error, all subsequent results are skipped and not added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">如果其中一个结果包含错误，跳过且不会添加到所有的后续结果<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When using subsequent <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> calls to refresh the contents of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, two conditions must be met:</source>
          <target state="translated">当使用后续<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>调用来刷新的内容<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，必须满足两个条件：</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The SQL statement should match the one initially used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">SQL 语句应匹配是最初用来填充<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated"><bpt id="p1">**</bpt>密钥<ept id="p1">**</ept>列信息必须存在。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear once in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>相对应的<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">主键信息可能被设置通过<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>，通过指定<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>，或通过设置<ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>属性<ph id="ph5">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`SelectCommand`</ph> 返回 OUTER JOIN 的结果，则 <ph id="ph2">`DataAdapter`</ph> 不会为生成的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 设置 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必须显式定义为主键，以确保正确解析重复行。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>For more information, see<bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>定义主键<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with rows from the categories table.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，以填充<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>与从类别表的行。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>This example assumes that you have created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此示例假定你已创建了<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">要用记录和架构（如果必要）填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">用于从数据源中检索行的 SQL SELECT 语句。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Adds or refreshes rows in a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to match those in the data source using the specified <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中添加或刷新行，以与使用指定的 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 的数据源中的行匹配。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">已在 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中成功添加或刷新的行数。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">这不包括受不返回行的语句影响的行。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">如果之前连接关闭<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它是打开以检索数据，然后关闭。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation then adds the rows to the specified destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object if it does not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>操作然后将行添加到指定目标<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>对象在<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>，则创建<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>对象如果它尚不存在。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When creating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">在创建时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>操作通常只创建列名称元数据。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">但是，如果<ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph>属性设置为<ph id="ph2">`AddWithKey`</ph>，还会创建相应的主键约束。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>对象在填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它将生成的后续列，使用模式名称"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The overload of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> that takes <ph id="ph2">`DataTable`</ph> as a parameter only obtains the first result.</source>
          <target state="translated">重载<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>采用<ph id="ph2">`DataTable`</ph>如参数仅获取第一个结果。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Use an overload of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> that takes <ph id="ph2">`DataSet`</ph> as a parameter to obtain multiple results.</source>
          <target state="translated">使用的重载<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>采用<ph id="ph2">`DataSet`</ph>作为参数，以获取多个结果。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>上多次相同的方法<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">如果存在主键，传入行与已存在的匹配行合并。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果主键不存在，将传入的行追加到<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`SelectCommand`</ph> 返回 OUTER JOIN 的结果，则 <ph id="ph2">`DataAdapter`</ph> 不会为生成的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 设置 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必须显式定义为主键，以确保正确解析重复行。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>定义主键<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This overload of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此重载<ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>方法受保护，并旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The zero-based record number to start with.</source>
          <target state="translated">从其开始的从零开始的记录号。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">要检索的最大记录数。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects to fill from the data source.</source>
          <target state="translated">要从数据源填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>Adds or refreshes rows in a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中添加或刷新行，以与从指定的记录开始一直检索到指定的最大数目的记录的数据源中的行匹配。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">已在 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中成功添加或刷新的行数。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>This value does not include rows affected by statements that do not return rows.</source>
          <target state="translated">此值不包括受不返回行的语句影响的行。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, and then it is closed.</source>
          <target state="translated">如果之前连接关闭<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>是调用，它将打开以检索数据，并且再将其关闭。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>操作然后将行添加到目标<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>中的对象<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>，则创建<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>对象如果它们尚不存在。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">在创建时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象，<ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>操作通常只创建列名称元数据。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">但是，如果<ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph>属性设置为<ph id="ph2">`AddWithKey`</ph>，还会创建相应的主键约束。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`SelectCommand`</ph> 返回 OUTER JOIN 的结果，则 <ph id="ph2">`DataAdapter`</ph> 不会为生成的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 设置 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必须显式定义为主键，以确保正确解析重复行。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>定义主键<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the data adapter encounters duplicate columns while populating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">如果数据适配器在填充时遇到重复的列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，它会生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, each result set is placed in a separate table.</source>
          <target state="translated">多个结果集添加到时<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，每个结果集放置在单独的表。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">SELECT 语句用于填充<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>返回多个结果，例如批处理 SQL 语句，如果其中一个结果包含错误，所有的后续结果会跳过并不添加到<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph>上多次相同的方法<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">如果存在主键，传入行与已存在的匹配行合并。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果主键不存在，将传入的行追加到<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">要用记录和架构（如果必要）填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The zero-based record number to start with.</source>
          <target state="translated">从其开始的从零开始的记录号。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">要检索的最大记录数。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">用于表映射的源表的名称。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> names.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的指定范围中添加或刷新行以匹配使用 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 名称的数据源中的行。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">已在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功添加或刷新的行数。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">这不包括受不返回行的语句影响的行。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>A <ph id="ph1">`maxRecords`</ph> value of 0 gets all records found after the start record.</source>
          <target state="translated">A<ph id="ph1">`maxRecords`</ph>值为 0 获取开始记录后找到的所有记录。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If <ph id="ph1">`maxRecords`</ph> is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</source>
          <target state="translated">如果<ph id="ph1">`maxRecords`</ph>大于剩余行的数量只返回剩余的行，并且不会发出错误。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the corresponding select command is a statement returning multiple results, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> only applies <ph id="ph2">`maxRecords`</ph> to the first result.</source>
          <target state="translated">如果对应的 select 命令是一个语句返回多个结果，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>仅适用<ph id="ph2">`maxRecords`</ph>到第一个结果。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法从使用 SELECT 语句的数据源检索数据。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>与 SELECT 语句关联的对象必须是有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>之前关闭<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它是打开以检索数据，然后关闭。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If a command does not return any rows, no tables are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but no exception is raised.</source>
          <target state="translated">如果命令不返回任何行，没有表将添加到<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，但不会引发异常。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>对象在填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它将生成的后续列，使用模式名称"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</source>
          <target state="translated">因为如果处理插入查询跟 select 查询，查询不返回行，创建没有表，创建了为 select 查询的表的名称为"Table"，因为它是创建的第一个表。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法支持方案其中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>包含多个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称只有大小写不同的对象。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>称为和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>只包含一个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>只是大小写，其名称不同，<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>更新。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">在此方案中，比较是区分大小写。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">该操作的剩余部分将会中止。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as batch SQL statements, be aware of the following:</source>
          <target state="translated">SELECT 语句用于填充<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>返回多个结果，例如批处理 SQL 语句，请注意下列情况：</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When processing multiple results from a batch SQL statement, <ph id="ph1">`maxRecords`</ph> only applies to the first result.</source>
          <target state="translated">处理批处理 SQL 语句中的多个结果时<ph id="ph1">`maxRecords`</ph>仅适用于第一个结果。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</source>
          <target state="translated">同样适用于包含章节结果 (.NET Framework Data Provider for OLE DB 仅) 的行。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The top level result is limited by <ph id="ph1">`maxRecords`</ph>, but all child rows are added.</source>
          <target state="translated">受限制的最上层结果<ph id="ph1">`maxRecords`</ph>，但会在所有子行。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If one of the results contains an error, all subsequent results are skipped and not added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">如果其中一个结果包含错误，跳过且不会添加到所有的后续结果<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When using subsequent <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> calls to refresh the contents of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, two conditions must be met:</source>
          <target state="translated">当使用后续<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>调用来刷新的内容<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，必须满足两个条件：</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The SQL statement should match the one initially used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">SQL 语句应匹配是最初用来填充<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated"><bpt id="p1">**</bpt>密钥<ept id="p1">**</ept>列信息必须存在。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If primary key information is present, any duplicate rows will be reconciled and only appear once in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">如果存在主键信息，则将对帐任何重复的行，并只能出现一次在<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>相对应的<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">主键信息可能被设置通过<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>，通过指定<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>，或通过设置<ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph>属性<ph id="ph5">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`SelectCommand`</ph> 返回 OUTER JOIN 的结果，则 <ph id="ph2">`DataAdapter`</ph> 不会为生成的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 设置 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必须显式定义为主键，以确保正确解析重复行。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>定义主键<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> will not contain more than the number of records indicated by <ph id="ph2">`maxRecords`</ph>.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>将不包含多个记录由数<ph id="ph2">`maxRecords`</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>However, the entire result set generated by the query is still returned from the server.</source>
          <target state="translated">但是，由查询生成的整个结果集是仍会从服务器返回。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with 15 rows, beginning at row 10, from the <bpt id="p1">**</bpt>Categories<ept id="p1">**</ept> table.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，以填充<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>15 行，在第 10，行从开始<bpt id="p1">**</bpt>类别<ept id="p1">**</ept>表。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>This example assumes that you have created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此示例假定你已创建了<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The connection is invalid.</source>
          <target state="translated">连接无效。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The connection could not be found.</source>
          <target state="translated">未能找到连接。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> 参数小于 0。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> 参数小于 0。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects to fill from the data source.</source>
          <target state="translated">要从数据源填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The zero-based record number to start with.</source>
          <target state="translated">从其开始的从零开始的记录号。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">要检索的最大记录数。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> executed to fill the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects.</source>
          <target state="translated">执行以填充 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> names.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的指定范围中添加或刷新行以匹配使用 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 名称的数据源中的行。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The number of rows added to or refreshed in the data tables.</source>
          <target state="translated">已在数据表中添加或刷新的行数。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">`maxRecords`</ph> value of 0 gets all records found after the start record.</source>
          <target state="translated">A<ph id="ph1">`maxRecords`</ph>值为 0 获取开始记录后找到的所有记录。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If <ph id="ph1">`maxRecords`</ph> is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</source>
          <target state="translated">如果<ph id="ph1">`maxRecords`</ph>大于剩余行数仅返回剩余的行，并且不会发出错误。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法从使用 SELECT 语句的数据源检索数据。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>与 SELECT 语句关联的对象必须是有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>之前关闭<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If a command does not return any rows, no tables are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but no exception is raised.</source>
          <target state="translated">如果命令不返回任何行，没有表将添加到<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，但不会引发异常。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>对象在填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它将生成的后续列，使用模式名称"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</source>
          <target state="translated">由于你可以像处理插入查询跟 select 查询，查询不返回行，创建没有表，表创建了为 select 查询将被命名为"Table"，因为它是创建的第一个表。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法支持方案其中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>包含多个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称只有大小写不同的对象。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>称为和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>只包含一个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>只是大小写，其名称不同，<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>更新。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">在此方案中，比较是区分大小写。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">该操作的剩余部分将会中止。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects returns multiple results, such as a batch SQL statement, be aware of the following:</source>
          <target state="translated">SELECT 语句用于填充<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象返回多个结果，如一批 SQL 语句中，注意以下事项：</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When processing multiple results from a batch SQL statement, <ph id="ph1">`maxRecords`</ph> only applies to the first result.</source>
          <target state="translated">处理批处理 SQL 语句中的多个结果时<ph id="ph1">`maxRecords`</ph>仅适用于第一个结果。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</source>
          <target state="translated">同样适用于包含章节结果 (.NET Framework Data Provider for OLE DB 仅) 的行。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The top level result is limited by <ph id="ph1">`maxRecords`</ph>, but all child rows are added.</source>
          <target state="translated">受限制的最上层结果<ph id="ph1">`maxRecords`</ph>，但会在所有子行。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If one of the results contains an error, all subsequent results are skipped.</source>
          <target state="translated">如果其中一个结果包含错误，则跳过所有的后续结果。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`DataSet`</ph> will not contain more than the number of records indicated by <ph id="ph2">`maxRecords`</ph>.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>将不包含多个记录由数<ph id="ph2">`maxRecords`</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>However, the entire resultset generated by the query is still returned from the server.</source>
          <target state="translated">但是，由查询生成的整个结果集是仍会从服务器返回。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection is invalid.</source>
          <target state="translated">连接无效。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection could not be found.</source>
          <target state="translated">未能找到连接。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> 参数小于 0。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> 参数小于 0。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">要用记录和架构（如果必要）填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The zero-based record number to start with.</source>
          <target state="translated">从其开始的从零开始的记录号。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">要检索的最大记录数。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">用于表映射的源表的名称。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">用于从数据源中检索行的 SQL SELECT 语句。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and source table names, command string, and command behavior.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和源表名称、命令字符串以及命令行为，在 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的指定范围中添加或刷新某些行以使它们与数据源中对应的行相一致。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">已在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功添加或刷新的行数。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">这不包括受不返回行的语句影响的行。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果之前连接关闭<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>操作然后将行添加到目标<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>中的对象<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>，则创建<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>对象如果它们尚不存在。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">在创建时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>操作通常只创建列名称元数据。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">但是，如果<ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph>属性设置为<ph id="ph2">`AddWithKey`</ph>，还会创建相应的主键约束。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它会生成名称的后续列，请使用模式"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">多个结果集添加到时<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>每个结果集放置在单独的表。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法支持方案其中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>包含多个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称只有大小写不同的对象。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>称为和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>只包含一个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>只是大小写，其名称不同，<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>更新。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">在此方案中，比较是区分大小写。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>上多次相同的方法<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">如果存在主键，传入行与已存在的匹配行合并。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果主键不存在，将传入的行追加到<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`SelectCommand`</ph> 返回 OUTER JOIN 的结果，则 <ph id="ph2">`DataAdapter`</ph> 不会为生成的 <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> 设置 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必须显式定义为主键，以确保正确解析重复行。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>For more information, see<bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>定义主键<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> 参数小于 0。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> 参数小于 0。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This overload of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此重载<ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph>方法受保护，并旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
          <source>Gets or sets the behavior of the command used to fill the data adapter.</source>
          <target state="translated">获取或设置用于填充数据适配器的命令的行为。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> of the command used to fill the data adapter.</source>
          <target state="translated">用于填充数据适配器的命令的 <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 添加到 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中，并配置架构以匹配数据源中的架构。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to insert the schema in.</source>
          <target state="translated">要将架构插入其中的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values that specify how to insert the schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 值之一，指定如何插入架构。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table" to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based on the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">将名为“Table”的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 添加到指定的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中，并根据指定的 <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 配置架构以匹配数据源中的架构。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A reference to a collection of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that were added to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">对添加到 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 对象集合的引用。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>This method retrieves the schema information from the data source using the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">此方法从数据源使用检索的架构信息<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>操作添加<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到目标<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">然后，它添加到列<ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph>的<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，并配置以下<ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph>如果它们在数据源中存在的属性：</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">必须设置<ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph>单独。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 此外可以配置<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph>属性根据下列规则：</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果一个或多个主键列由<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>，用作主键列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">如果任何列都可以为 null，<ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>添加到<ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>，但<ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>未设置属性。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果返回主键列和唯一列，将主键列用作主键列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">请注意，主键和唯一约束添加到<ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>根据前面的规则，但其他约束类型不会添加。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">有关指定查询提示的详细信息，请参阅<bpt id="p1">[</bpt>查询提示 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Primary key information is used during <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> to find and replace any rows whose key columns match.</source>
          <target state="translated">过程中使用主键信息<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>来查找和替换其键的列相匹配的任何行。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If this is not the desired behavior, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> without requesting schema information.</source>
          <target state="translated">如果这不是所需的行为，使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>但未要求架构信息。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它会生成名称的后续列，请使用模式"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">多个结果集添加到时<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>每个结果集放置在单独的表。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the select command must be valid, but it does not need to open.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>与 select 命令关联的对象必须是有效，但它不需要打开。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>之前关闭<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is left open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，它处于打开状态。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">当使用 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">有关更多信息，请参见“SQL Server 联机丛书”。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the schema, and returns a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>，以填充<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>架构，并返回与<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">要用数据源中的架构填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Configures the schema of the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> based on the specified <ph id="ph2">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">根据指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 配置指定 <ph id="ph2">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 的架构。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information returned from the data source.</source>
          <target state="translated">包含从数据源返回的架构信息的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>方法从使用数据源中检索架构<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">与相关的连接对象<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>必须有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果之前连接关闭<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation returns a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>操作将返回<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">然后，它添加到列<ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph>的<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，并配置以下<ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph>如果它们在数据源中存在的属性：</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">必须设置<ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph>单独。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 此外可以配置<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph>属性根据下列规则：</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If a <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> has already been defined for the <ph id="ph2">`DataTable`</ph>, or the <ph id="ph3">`DataTable`</ph> contains data, the <ph id="ph4">`PrimaryKey`</ph> property will not be set.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>已为定义<ph id="ph2">`DataTable`</ph>，或<ph id="ph3">`DataTable`</ph>包含了数据以及<ph id="ph4">`PrimaryKey`</ph>未设置属性。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">如果一个或多个主键列由<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>，用作主键列<ph id="ph2">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">`PrimaryKey`</ph> property is not set.</source>
          <target state="translated">如果任何列都可以为 null，<ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>添加到<ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>，但<ph id="ph3">`PrimaryKey`</ph>未设置属性。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">如果返回主键列和唯一列，将主键列用作主键列<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">请注意，主键和唯一约束添加到<ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>根据前面的规则，但其他约束类型不会添加。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>This process may require several round-trips to the server.</source>
          <target state="translated">此过程可能需要几个到服务器的往返次数。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">有关指定查询提示的详细信息，请参阅<bpt id="p1">[</bpt>查询提示 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它会生成名称的后续列，请使用模式"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">多个结果集添加到时<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>每个结果集放置在单独的表。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> does not return any rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 不返回任何行。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法以将行添加到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">当使用 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">有关更多信息，请参见“SQL Server 联机丛书”。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the schema, and returns a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>，以填充<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>架构，并返回与<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to insert the schema in.</source>
          <target state="translated">要将架构插入其中的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values that specify how to insert the schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 值之一，指定如何插入架构。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">用于表映射的源表的名称。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based upon the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 添加到指定的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中，并根据指定的 <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 配置架构以匹配数据源中的架构。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>A reference to a collection of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that were added to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">对添加到 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 对象集合的引用。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>This method retrieves the schema information from the data source using the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">此方法从数据源使用检索的架构信息<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>操作添加<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到目标<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">然后，它添加到列<ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph>的<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，并配置以下<ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph>如果它们在数据源中存在的属性：</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">必须设置<ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph>单独。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 此外可以配置<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph>属性根据下列规则：</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果一个或多个主键列由<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>，用作主键列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">如果任何列都可以为 null，<ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>添加到<ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>，但<ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>未设置属性。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果返回主键列和唯一列，将主键列用作主键列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">请注意，主键和唯一约束添加到<ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>根据前面的规则，但其他约束类型不会添加。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">有关指定查询提示的详细信息，请参阅<bpt id="p1">[</bpt>查询提示 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Primary key information is used during <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> to find and replace any rows whose key columns match.</source>
          <target state="translated">过程中使用主键信息<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>来查找和替换其键的列相匹配的任何行。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If this is not the desired behavior, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> without requesting schema information.</source>
          <target state="translated">如果这不是所需的行为，使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>但未要求架构信息。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它会生成名称的后续列，请使用模式"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">多个结果集添加到时<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>每个结果集放置在单独的表。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>方法支持方案其中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>包含多个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称只有大小写不同的对象。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>称为和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>只包含一个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>只是大小写，其名称不同，<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>更新。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">在此方案中，比较是区分大小写。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the select command must be valid, but it does not need to open.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>与 select 命令关联的对象必须是有效，但它不需要打开。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph>之前关闭<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is left open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，它处于打开状态。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">当使用 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">有关更多信息，请参见“SQL Server 联机丛书”。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the schema, and returns a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>，以填充<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>架构，并返回与<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>A source table from which to get the schema could not be found.</source>
          <target state="translated">找不到从中获取架构的源表。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">要用数据源中的架构填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">用于从数据源中检索行的 SQL SELECT 语句。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Configures the schema of the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> based on the specified <ph id="ph2">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>, command string, and <ph id="ph3">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">根据指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>、命令字符串以及 <ph id="ph2">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 值配置指定 <ph id="ph3">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 的架构。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> object that contains schema information returned from the data source.</source>
          <target state="translated">包含从数据源返回的架构信息的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>方法从使用数据源中检索架构<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">与相关的连接对象<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>必须有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果之前连接关闭<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>操作添加<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到目标<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">然后，它添加到列<ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph>的<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，并配置以下<ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph>如果它们在数据源中存在的属性：</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">必须设置<ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph>单独。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 此外可以配置<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph>属性根据下列规则：</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果一个或多个主键列由<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>，用作主键列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">如果任何列都可以为 null，<ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>添加到<ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>，但<ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>未设置属性。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果返回主键列和唯一列，将主键列用作主键列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">请注意，主键和唯一约束添加到<ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>根据前面的规则，但其他约束类型不会添加。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">有关指定查询提示的详细信息，请参阅<bpt id="p1">[</bpt>查询提示 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它会生成名称的后续列，请使用模式"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">多个结果集添加到时<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>每个结果集放置在单独的表。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> does not return any rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 不返回任何行。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法以将行添加到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">当使用 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">有关更多信息，请参见“SQL Server 联机丛书”。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This implementation of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此实现的<ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /&gt;</ph>方法受保护，并旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">要用数据源中的架构填充的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">用于从数据源中检索行的 SQL SELECT 语句。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">用于表映射的源表的名称。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based on the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 添加到指定的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中，并根据指定的 <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> 配置架构以匹配数据源中的架构。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that contain schema information returned from the data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 对象的数组，这些对象包含从数据源返回的架构信息。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>方法从使用数据源中检索架构<ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">与相关的连接对象<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>必须有效，但它不需要处于打开状态。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">如果之前连接关闭<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，其打开以检索数据，然后再将关闭。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">如果连接是打开之前<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>是调用，它保持打开状态。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>操作添加<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到目标<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">然后，它添加到列<ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph>的<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，并配置以下<ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph>如果它们在数据源中存在的属性：</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">必须设置<ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph>单独。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 此外可以配置<ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph>属性根据下列规则：</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果一个或多个主键列由<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>，用作主键列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">如果任何列都可以为 null，<ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>添加到<ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>，但<ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>未设置属性。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">如果返回主键列和唯一列，将主键列用作主键列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">请注意，主键和唯一约束添加到<ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph>根据前面的规则，但其他约束类型不会添加。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">有关指定查询提示的详细信息，请参阅<bpt id="p1">[</bpt>查询提示 (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph>填充时遇到重复的列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，它会生成名称的后续列，请使用模式"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3"，依次类推。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果传入的数据包含未命名的列，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>根据模式"Column1"、"Column2"等。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">多个结果集添加到时<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>每个结果集放置在单独的表。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>方法支持方案其中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>包含多个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称只有大小写不同的对象。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>称为和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>只包含一个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>只是大小写，其名称不同，<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>更新。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">在此方案中，比较是区分大小写。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> does not return any rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 不返回任何行。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法以将行添加到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">当处理批处理 SQL 语句返回多个结果的实现<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">若要检索多个结果的架构信息，请使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph>设置为<ph id="ph3">`AddWithKey`</ph>。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">当使用 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">有关更多信息，请参见“SQL Server 联机丛书”。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>This implementation of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此实现的<ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /&gt;</ph>方法受保护，并旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>The index of the command to retrieve the parameter from.</source>
          <target state="translated">要从中检索参数的命令的索引。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>The index of the parameter within the command.</source>
          <target state="translated">命令内的参数的索引。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> from one of the commands in the current batch.</source>
          <target state="translated">从当前批处理中的其中一个命令返回一个 <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> specified.</source>
          <target state="translated">指定的 <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>，此方法将引发<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">继承自的类<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>重写此方法以支持批处理。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>The adapter does not support batches.</source>
          <target state="translated">该适配器不支持批处理。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method to allow users to execute a batch.</source>
          <target state="translated">如果从继承的类<ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>支持批处理，类重写此方法以允许用户执行一个批处理。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>An implementation uses the <ph id="ph1">&lt;paramref name="commandIdentifier" /&gt;</ph> provided to locate the requested command, then uses the <ph id="ph2">&lt;paramref name="parameterIndex" /&gt;</ph> provided to locate the requested parameter.</source>
          <target state="translated">实现使用<ph id="ph1">&lt;paramref name="commandIdentifier" /&gt;</ph>提供用于查找请求的命令，然后使用<ph id="ph2">&lt;paramref name="parameterIndex" /&gt;</ph>提供用于查找请求的参数。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>For example, a <ph id="ph1">&lt;paramref name="commandIdentifier" /&gt;</ph> of 0 and a <ph id="ph2">&lt;paramref name="parameterIndex" /&gt;</ph> of 0 returns the first parameter from the first command in the batch.</source>
          <target state="translated">例如，<ph id="ph1">&lt;paramref name="commandIdentifier" /&gt;</ph>为 0 和<ph id="ph2">&lt;paramref name="parameterIndex" /&gt;</ph>0 的批处理中的第一个命令返回的第一个参数。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>The zero-based column ordinal of the individual command within the batch.</source>
          <target state="translated">该批次内单个命令的从零开始的列序号。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>The number of rows affected in the data store by the specified command within the batch.</source>
          <target state="translated">数据存储区中受该批内的指定命令影响的行数。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> thrown during execution of the specified command.</source>
          <target state="translated">在执行指定命令期间引发的一个 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if no exception is thrown.</source>
          <target state="translated">如果未引发任何异常，则返回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>Returns information about an individual update attempt within a larger batched update.</source>
          <target state="translated">返回与较大的批处理更新内的单次更新尝试有关的信息。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>Information about an individual update attempt within a larger batched update.</source>
          <target state="translated">与较大的批处理更新内的单次更新尝试有关的信息。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>Data providers that support batched updating logic must override a series of virtual methods on the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class.</source>
          <target state="translated">数据提供程序支持批处理更新逻辑必须在上重写虚方法的一系列<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source><ph id="ph1">`GetBatchedRecordsAffected`</ph> represents one of those virtual methods.</source>
          <target state="translated"><ph id="ph1">`GetBatchedRecordsAffected`</ph> 表示这些虚拟方法之一。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>The <ph id="ph1">`DbDataAdapter`</ph> class relies on <ph id="ph2">`GetBatchedRecordsAffected`</ph> to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> accordingly.</source>
          <target state="translated"><ph id="ph1">`DbDataAdapter`</ph>类依赖于<ph id="ph2">`GetBatchedRecordsAffected`</ph>来确定某一批处理中的各次更新尝试成功与否，因此它可以将标记每个相应<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>相应地。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetFillParameters">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
          <target state="translated">获取当执行 SQL SELECT 语句时由用户设置的参数。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetFillParameters">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> objects that contains the parameters set by the user.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> 对象的数组，这些对象包含由用户设置的参数。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>Initializes batching for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> 的批处理。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>，此方法将引发<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">继承自的类<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>重写此方法以支持批处理。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>The adapter does not support batches.</source>
          <target state="translated">该适配器不支持批处理。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method.</source>
          <target state="translated">如果从继承的类<ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>支持批处理，类重写此方法。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>This method gives the class the opportunity to initialize any resources necessary to support batching.</source>
          <target state="translated">此方法使类可以初始化支持批处理所需的任何资源。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>For example, a class may allocate a data structure to hold the set of commands in the batch.</source>
          <target state="translated">例如，类可以分配用于保存命令集的批处理中的数据结构。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.InsertCommand">
          <source>Gets or sets a command used to insert new records into the data source.</source>
          <target state="translated">获取或设置用于将新记录插入到数据源中的命令。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.InsertCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source for new rows in the data set.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中使用的 <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>，它针对数据集中的新行将记录插入到数据源中。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.InsertCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> will be automatically generated.</source>
          <target state="translated">期间<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，如果未设置此属性和主键信息位于<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph>将自动生成。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.InsertCommand">
          <source>The following example creates the derived class <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下面的示例创建派生的类<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>并设置其属性的一些。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see langword="RowUpdated" /&gt;</ph> event of a .NET Framework data provider.</source>
          <target state="translated">引发 .NET Framework 数据提供程序的 <ph id="ph1">&lt;see langword="RowUpdated" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see langword="RowUpdating" /&gt;</ph> event of a .NET Framework data provider.</source>
          <target state="translated">引发 .NET Framework 数据提供程序的 <ph id="ph1">&lt;see langword="RowUpdating" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /&gt;</ph> in a derived class, be sure to call the bases class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.SelectCommand">
          <source>Gets or sets a command used to select records in the data source.</source>
          <target state="translated">获取或设置用于在数据源中选择记录的命令。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.SelectCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the data set.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中使用的 <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>，它从数据源中选择记录以便放入数据集中。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.SelectCommand">
          <source>The following example creates the derived class <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下面的示例创建派生的类<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>并设置其属性的一些。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>Gets or sets an SQL statement for deleting records from the data set.</source>
          <target state="translated">获取或设置用于从数据集中删除记录的 SQL 语句。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中使用的 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>，它针对数据集中已删除的行删除数据源中的记录。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>Gets or sets an SQL statement used to insert new records into the data source.</source>
          <target state="translated">获取或设置用于将新记录插入到数据源中的 SQL 语句。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source for new rows in the data set.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中使用的 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>，它针对数据集中的新行将记录插入到数据源。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>Gets or sets an SQL statement used to select records in the data source.</source>
          <target state="translated">获取或设置用于在数据源中选择记录的 SQL 语句。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the data set.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中使用的 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>，它从数据源中选择记录以便放入数据集中。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>Gets or sets an SQL statement used to update records in the data source.</source>
          <target state="translated">获取或设置用于更新数据源中的记录的 SQL 语句。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source for modified rows in the data set.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中使用的 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>，它针对数据集中已修改的行更新数据源中的记录。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">创建作为当前实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">作为此实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ICloneable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.ICloneable.Clone%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>Ends batching for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">结束 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> 的批处理。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>，此方法将引发<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">继承自的类<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>重写此方法以支持批处理。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>The adapter does not support batches.</source>
          <target state="translated">该适配器不支持批处理。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">此方法进行保护，并且旨在用于.NET Framework 数据提供程序。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method.</source>
          <target state="translated">如果从继承的类<ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>支持批处理，类重写此方法。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>This method gives the class the opportunity to dispose of any resources allocated to support batching.</source>
          <target state="translated">此方法使类可以释放任何分配的资源以支持批处理。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>For example, the class may deallocate the data structure that holds the commands in the batch.</source>
          <target state="translated">例如，类可以释放批中能容纳命令的数据结构。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">通过为 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects used to update the data source.</source>
          <target state="translated">用于更新数据源的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">通过为 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中的指定数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功更新的行数。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在应用程序调用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>检查<ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">应注意的是，为批处理; 不执行这些语句单独更新每个行。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">应用程序可以调用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Dataadapter 更新数据源<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法生成异常。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">但是，你可以创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>对象以自动生成单表更新的 SQL 语句，如果你设置<ph id="ph3">`SelectCommand`</ph>.NET Framework 数据提供程序的属性。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">然后，你未设置任何其他 SQL 语句都由<bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此生成的逻辑需要要中存在的键列信息<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法从第一个映射，然后再执行更新中列出的表中检索行。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>然后刷新使用的值的行<ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">将忽略所有附加的行返回。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">任何数据加载回后<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>引发事件时，允许用户检查经协调<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>行和任何输出参数返回命令。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">行已成功更新后，会接受对该行的更改。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">使用时<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，执行的顺序是，如下所示：</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>移动到的参数值。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The command executes.</source>
          <target state="translated">该命令执行。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果该命令设置为<ph id="ph1">`FirstReturnedRecord`</ph>，第一个返回结果将放置在<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果没有输出参数，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">与每个命令<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>通常有一个与之关联的参数集合。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">参数映射到当前行通过<ph id="ph1">`SourceColumn`</ph>和<ph id="ph2">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph3">`Parameter`</ph>类。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 是指<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>列，<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>引用以获取当前行的参数值。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 在应用任何表映射之前是指未映射的列名称。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">如果<ph id="ph1">`SourceColumn`</ph>引用不存在的列中，执行的操作取决于下列情况之一<ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Enumeration value</source>
          <target state="translated">枚举值</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Action taken</source>
          <target state="translated">执行操作</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">使用的源列名和中的表名<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如果不不存在任何映射。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>属性还用于映射输出的值或输入/输出参数回<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">如果它引用不存在的列，则会生成异常。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph2">`Parameter`</ph>类确定是否使用该列的值的原始、 当前或已建议版本。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">如果更新行时出错，将引发异常，并执行更新，则停止。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作不会遇到错误时生成异常，设置<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>属性<ph id="ph2">`true`</ph>之前调用<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">你还可能响应中的每个行基础上的错误<ph id="ph1">`RowUpdated`</ph>DataAdapter 事件。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作而不生成了异常<ph id="ph1">`RowUpdated`</ph>事件中，设置<ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph>到<ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to update the data source.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，以更新数据源。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> exists to update.</source>
          <target state="translated">不存在要更新的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> exists to update.</source>
          <target state="translated">不存在要更新的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> exists to use as a source.</source>
          <target state="translated">不存在要用作源的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> used to update the data source.</source>
          <target state="translated">用于更新数据源的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">通过为指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功更新的行数。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在应用程序调用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>检查<ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">应注意的是，为批处理; 不执行这些语句单独更新每个行。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">应用程序可以调用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Dataadapter 更新数据源<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法生成异常。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">但是，你可以创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>对象以自动生成单表更新的 SQL 语句，如果你设置<ph id="ph3">`SelectCommand`</ph>.NET Framework 数据提供程序的属性。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">然后，你未设置任何其他 SQL 语句都由<bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此生成的逻辑需要要中存在的键列信息<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法从第一个映射，然后再执行更新中列出的表中检索行。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>然后刷新使用的值的行<ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">将忽略所有附加的行返回。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">任何数据加载回后<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>引发事件时，允许用户检查经协调<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>行和任何输出参数返回命令。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">行已成功更新后，会接受对该行的更改。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">使用时<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，执行的顺序是，如下所示：</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>移动到的参数值。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The command executes.</source>
          <target state="translated">该命令执行。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果该命令设置为<ph id="ph1">`FirstReturnedRecord`</ph>，则第一个返回结果将放置在<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果没有输出参数，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">与每个命令<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>通常有一个与之关联的参数集合。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">参数映射到当前行通过<ph id="ph1">`SourceColumn`</ph>和<ph id="ph2">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph3">`Parameter`</ph>类。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 是指<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>列，<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>引用以获取当前行的参数值。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 在应用任何表映射之前是指未映射的列名称。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">如果<ph id="ph1">`SourceColumn`</ph>引用不存在的列中，执行的操作取决于下列情况之一<ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Enumeration value</source>
          <target state="translated">枚举值</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Action taken</source>
          <target state="translated">执行操作</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">使用的源列名和中的表名<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如果不不存在任何映射。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>属性还用于映射输出的值或输入/输出参数回<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">如果它引用不存在的列，则会生成异常。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph2">`Parameter`</ph>类确定是否使用该列的值的原始、 当前或已建议版本。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">如果更新行时出错，将引发异常，并执行更新，则停止。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作不会遇到错误时生成异常，设置<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>属性<ph id="ph2">`true`</ph>之前调用<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">你还可能响应中的每个行基础上的错误<ph id="ph1">`RowUpdated`</ph>DataAdapter 事件。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作而不生成了异常<ph id="ph1">`RowUpdated`</ph>事件中，设置<ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph>到<ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to update the data source.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，以更新数据源。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> used to update the data source.</source>
          <target state="translated">用于更新数据源的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">通过为指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中成功更新的行数。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在应用程序调用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>检查<ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">应注意的是，为批处理; 不执行这些语句单独更新每个行。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">应用程序可以调用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Dataadapter 更新数据源<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法生成异常。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">但是，你可以创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>对象以自动生成单表更新的 SQL 语句，如果你设置<ph id="ph3">`SelectCommand`</ph>.NET Framework 数据提供程序的属性。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">然后，你未设置任何其他 SQL 语句都由<bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此生成的逻辑需要要中存在的键列信息<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法从第一个映射，然后再执行更新中列出的表中检索行。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>然后刷新使用的值的行<ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">将忽略所有附加的行返回。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">任何数据加载回后<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>引发事件时，允许用户检查经协调<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>行和任何输出参数返回命令。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">行已成功更新后，会接受对该行的更改。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">使用时<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，执行的顺序是，如下所示：</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>移动到的参数值。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The command executes.</source>
          <target state="translated">该命令执行。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果该命令设置为<ph id="ph1">`FirstReturnedRecord`</ph>，则第一个返回结果将放置在<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果没有输出参数，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">与每个命令<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>通常有一个与之关联的参数集合。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">参数映射到当前行通过<ph id="ph1">`SourceColumn`</ph>和<ph id="ph2">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph3">`Parameter`</ph>类。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 是指<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>列，<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>引用以获取当前行的参数值。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 在应用任何表映射之前是指未映射的列名称。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">如果<ph id="ph1">`SourceColumn`</ph>引用不存在的列中，执行的操作取决于下列情况之一<ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Enumeration value</source>
          <target state="translated">枚举值</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Action taken</source>
          <target state="translated">执行操作</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">使用的源列名和中的表名<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如果不不存在任何映射。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>属性还用于映射输出的值或输入/输出参数回<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">如果它引用不存在的列，则会生成异常。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph2">`Parameter`</ph>类确定是否使用该列的值的原始、 当前或已建议版本。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">如果更新行时出错，将引发异常，并执行更新，则停止。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作不会遇到错误时生成异常，设置<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>属性<ph id="ph2">`true`</ph>之前调用<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">你还可能响应中的每个行基础上的错误<ph id="ph1">`RowUpdated`</ph>DataAdapter 事件。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作而不生成了异常<ph id="ph1">`RowUpdated`</ph>事件中，设置<ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph>到<ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to update the data source.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，以更新数据源。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> exists to update.</source>
          <target state="translated">不存在要更新的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> exists to update.</source>
          <target state="translated">不存在要更新的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> exists to use as a source.</source>
          <target state="translated">不存在要用作源的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects used to update the data source.</source>
          <target state="translated">用于更新数据源的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.IDataAdapter.TableMappings" /&gt;</ph> collection to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="P:System.Data.IDataAdapter.TableMappings" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> objects.</source>
          <target state="translated">通过为指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 对象数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功更新的行数。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在应用程序调用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>检查<ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">应注意的是，为批处理; 不执行这些语句单独更新每个行。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">应用程序可以调用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Dataadapter 更新数据源<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法生成异常。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">但是，你可以创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>对象以自动生成单表更新的 SQL 语句，如果你设置<ph id="ph3">`SelectCommand`</ph>.NET Framework 数据提供程序的属性。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">然后，你未设置任何其他 SQL 语句都由<bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此生成的逻辑需要要中存在的键列信息<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法从第一个映射，然后再执行更新中列出的表中检索行。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>然后刷新使用的值的行<ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">将忽略所有附加的行返回。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">任何数据加载回后<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>引发事件时，允许用户检查经协调<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>行和任何输出参数返回命令。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">行已成功更新后，会接受对该行的更改。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">使用时<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，执行的顺序是，如下所示：</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>移动到的参数值。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The command executes.</source>
          <target state="translated">该命令执行。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果该命令设置为<ph id="ph1">`FirstReturnedRecord`</ph>，则第一个返回结果将放置在<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果没有输出参数，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">与每个命令<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>通常有一个与之关联的参数集合。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">参数映射到当前行通过<ph id="ph1">`SourceColumn`</ph>和<ph id="ph2">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph3">`Parameter`</ph>类。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 是指<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>列，<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>引用以获取当前行的参数值。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 在应用任何表映射之前是指未映射的列名称。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">如果<ph id="ph1">`SourceColumn`</ph>引用不存在的列中，执行的操作取决于下列情况之一<ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Enumeration value</source>
          <target state="translated">枚举值</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Action taken</source>
          <target state="translated">执行操作</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">使用的源列名和中的表名<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如果不不存在任何映射。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>属性还用于映射输出的值或输入/输出参数回<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">如果它引用不存在的列，则会生成异常。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph2">`Parameter`</ph>类确定是否使用该列的值的原始、 当前或已建议版本。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">如果更新行时出错，将引发异常，并执行更新，则停止。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作不会遇到错误时生成异常，设置<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>属性<ph id="ph2">`true`</ph>之前调用<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">你还可能响应中的每个行基础上的错误<ph id="ph1">`RowUpdated`</ph>DataAdapter 事件。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作而不生成了异常<ph id="ph1">`RowUpdated`</ph>事件中，设置<ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph>到<ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> exists to update.</source>
          <target state="translated">不存在要更新的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> exists to update.</source>
          <target state="translated">不存在要更新的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> exists to use as a source.</source>
          <target state="translated">不存在要用作源的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to use to update the data source.</source>
          <target state="translated">用于更新数据源的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">用于表映射的源表的名称。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> name.</source>
          <target state="translated">通过为具有指定名称 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中成功更新的行数。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">在应用程序调用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>检查<ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">应注意的是，为批处理; 不执行这些语句单独更新每个行。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</source>
          <target state="translated">应用程序可以调用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法在其中你必须控制的语句类型序列的情况下 （例如，在更新之前插入）。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Dataadapter 更新数据源<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法生成异常。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">但是，你可以创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>对象以自动生成单表更新的 SQL 语句，如果你设置<ph id="ph3">`SelectCommand`</ph>.NET Framework 数据提供程序的属性。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">然后，你未设置任何其他 SQL 语句都由<bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此生成的逻辑需要要中存在的键列信息<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法支持方案其中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>包含多个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>名称只有大小写不同的对象。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>When multiple tables with the same name, but different case, exist in a <ph id="ph1">`DataSet`</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</source>
          <target state="translated">具有相同名称但不同情况下，多个表中的存在时<ph id="ph1">`DataSet`</ph>，<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>执行区分大小写的比较，以查找相应的表，并生成异常，如果不存在完全匹配。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>称为和<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>只包含一个<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>只是大小写，其名称不同，<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>更新。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">在此方案中，比较是区分大小写。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">下面的 C# 代码阐释这一行为。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>方法从第一个映射，然后再执行更新中列出的表中检索行。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>然后刷新使用的值的行<ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">将忽略所有附加的行返回。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">任何数据加载回后<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>引发事件时，允许用户检查经协调<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>行和任何输出参数返回命令。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">行已成功更新后，会接受对该行的更改。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">使用时<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，执行的顺序是，如下所示：</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>移动到的参数值。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The command executes.</source>
          <target state="translated">该命令执行。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果该命令设置为<ph id="ph1">`FirstReturnedRecord`</ph>，则第一个返回结果将放置在<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">如果没有输出参数，它们都将置于<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">引发 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">调用 <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">与每个命令<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>通常有一个与之关联的参数集合。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">参数映射到当前行通过<ph id="ph1">`SourceColumn`</ph>和<ph id="ph2">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph3">`Parameter`</ph>类。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 是指<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>列，<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>引用以获取当前行的参数值。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 在应用任何表映射之前是指未映射的列名称。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">如果<ph id="ph1">`SourceColumn`</ph>引用不存在的列中，执行的操作取决于下列情况之一<ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Enumeration value</source>
          <target state="translated">枚举值</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Action taken</source>
          <target state="translated">执行操作</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">使用的源列名和中的表名<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如果不不存在任何映射。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.SystemException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>属性还用于映射输出的值或输入/输出参数回<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">如果它引用不存在的列，则会生成异常。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph>的.NET Framework 数据提供程序的属性<ph id="ph2">`Parameter`</ph>类确定是否使用该列的值的原始、 当前或已建议版本。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">如果更新行时出错，将引发异常，并执行更新，则停止。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作不会遇到错误时生成异常，设置<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>属性<ph id="ph2">`true`</ph>之前调用<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">你还可能响应中的每个行基础上的错误<ph id="ph1">`RowUpdated`</ph>DataAdapter 事件。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">若要继续执行更新操作而不生成了异常<ph id="ph1">`RowUpdated`</ph>事件中，设置<ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph>到<ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to update the data source.</source>
          <target state="translated">下面的示例使用派生的类中， <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>，以更新数据源。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">源表无效。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</source>
          <target state="translated">获取或设置一个值，该值启用或禁用批处理支持，并且指定可在一次批处理中执行的命令的数量。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>The number of rows to process per batch.</source>
          <target state="translated">每个批处理要处理的行数。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value is</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值是</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Effect</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 效果</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> There is no limit on the batch size.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 批大小上没有任何限制。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Disables batch updating.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 禁用批量更新。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <ph id="ph5">&amp;gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <ph id="ph5">&amp;gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Changes are sent using batches of <ph id="ph3">&lt;see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /&gt;</ph> operations at a time.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 使用批发送更改<ph id="ph3">&lt;see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /&gt;</ph>一次的操作。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>When setting this to a value other than 1, all the commands associated with the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> must have their <ph id="ph2">&lt;see cref="P:System.Data.IDbCommand.UpdatedRowSource" /&gt;</ph> property set to <bpt id="p1">**</bpt>None<ept id="p1">**</ept> or <bpt id="p2">**</bpt>OutputParameters<ept id="p2">**</ept>.</source>
          <target state="translated">所有命令时将此值设置为 1 以外的值，与都关联<ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>必须具有其<ph id="ph2">&lt;see cref="P:System.Data.IDbCommand.UpdatedRowSource" /&gt;</ph>属性设置为<bpt id="p1">**</bpt>无<ept id="p1">**</ept>或<bpt id="p2">**</bpt>输出参数<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>An exception will be thrown otherwise.</source>
          <target state="translated">否则，将引发异常。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A&gt;</ph> property to update a data source with changes from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A&gt;</ph>属性来更新数据源中的更改与<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</source>
          <target state="translated">如果数据访问接口支持批处理，这可以通过减少服务器的往返次数来提高应用程序性能。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</source>
          <target state="translated">在 ADO.NET 2.0 中，支持此属性是.NET 数据提供程序的 SQL Server (SqlClient) 和 Oracle (OracleClient)。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>Executing an extremely large batch could decrease performance.</source>
          <target state="translated">执行极大的批处理会降低性能。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>Therefore, you should test for the optimum batch size setting before implementing your application.</source>
          <target state="translated">因此，在实现应用程序前应进行测试以得到最佳的批大小。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> will be thrown if the value is set to a number less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>如果的值设置为一个数字，将引发小于零。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.UpdateCommand">
          <source>Gets or sets a command used to update records in the data source.</source>
          <target state="translated">获取或设置用于更新数据源中的记录的命令。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source for modified rows in the data set.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> 过程中使用的 <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>，它针对数据集中已修改的行更新数据源中的记录。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> will be automatically generated.</source>
          <target state="translated">期间<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>，如果未设置此属性和主键信息位于<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph>将自动生成。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateCommand">
          <source>The following example creates the derived class <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下面的示例创建派生的类<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>并设置其属性的一些。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
