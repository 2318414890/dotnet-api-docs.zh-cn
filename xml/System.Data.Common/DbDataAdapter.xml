<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="332e7bf7ba0f9c35c1455cd28bcf8d4bd18ca3f3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36692803" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8b927-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b927-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      </span>
      <span data-ttu-id="8b927-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b927-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-103"><xref:System.Data.Common.DbDataAdapter>类继承自<xref:System.Data.Common.DataAdapter>类并实现<xref:System.Data.IDbDataAdapter>接口。</span><span class="sxs-lookup"><span data-stu-id="8b927-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="8b927-104">它可帮助实现的类**DataAdapter**专用于关系数据库。</span><span class="sxs-lookup"><span data-stu-id="8b927-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="8b927-105">应用程序不会创建的实例<xref:System.Data.Common.DbDataAdapter>类直接，但创建从它继承的类的实例。</span><span class="sxs-lookup"><span data-stu-id="8b927-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="8b927-106">继承的类<xref:System.Data.Common.DbDataAdapter>必须实现继承的成员，且通常定义其他成员来添加提供程序特定的功能。</span><span class="sxs-lookup"><span data-stu-id="8b927-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="8b927-107">例如，<xref:System.Data.Common.DbDataAdapter>类定义<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性，与<xref:System.Data.Common.DbDataAdapter>类定义的八个重载<xref:System.Data.IDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8b927-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="8b927-108">反过来，<xref:System.Data.OleDb.OleDbDataAdapter>类继承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，并还定义了两个其他重载<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>它们采用 ADO 记录集对象作为参数。</span><span class="sxs-lookup"><span data-stu-id="8b927-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="8b927-109">
        <para>继承自<see cref="T:System.Data.Common.DbDataAdapter" />类，我们建议你实现以下构造函数： <list type="table"><listheader><term>项</term><description>说明</description></listheader><item><term> *Prv*DataAdapter() </term><description>初始化的新实例 * Prv * DataAdapter 类。 </description></item><item><term> * Prv * DataAdapter (* Prv * 命令 * selectCommand *) </term><description>初始化的新实例 * Prv * 指定的 SQL SELECT DataAdapter 类语句。 </description></item><item><term> * Prv * DataAdapter (字符串 * selectCommandText *、 字符串 * selectConnectionString *) </term><description>初始化的新实例 * Prv * DataAdapter 类使用 SQL SELECT 语句和连接字符串。 </description></item><item><term> * Prv * DataAdapter (字符串 * selectCommandText * * Prv * 连接 * selectConnection *) </term><description>初始化的新实例 * Prv * DataAdapter与 SQL SELECT 语句一起使用的类和一个 * Prv * 连接对象。</description></item></list>  若要将提升.NET Framework 数据提供程序之间的一致性，您应命名窗体中的继承类 * Prv * DataAdapter，其中 * Prv * 是为特定的.NET Framework 数据提供程序命名空间中的所有类提供的统一前缀。例如，"Sql"是前缀<see cref="T:System.Data.SqlClient.SqlDataAdapter" />**System.Data.SqlClient** 命名空间中的类。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="8b927-109">
          <para>When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> *Prv*DataAdapter()  </term><description> Initializes a new instance of the *Prv*DataAdapter class.  </description></item><item><term> *Prv*DataAdapter(*Prv*Command *selectCommand*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.  </description></item></list>  To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b927-111">Initializes a new instance of a **DataAdapter** class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-111">Initializes a new instance of a **DataAdapter** class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-112">当你创建的实例<xref:System.Data.Common.DbDataAdapter>，以下的读/写属性设置为以下的初始值。</span><span class="sxs-lookup"><span data-stu-id="8b927-112">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="8b927-113">属性</span><span class="sxs-lookup"><span data-stu-id="8b927-113">Properties</span></span>|<span data-ttu-id="8b927-114">初始值</span><span class="sxs-lookup"><span data-stu-id="8b927-114">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="8b927-115">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="8b927-115">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="8b927-116">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="8b927-116">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="8b927-117">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="8b927-117">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="8b927-118">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="8b927-118">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="8b927-119">你可以更改任何通过单独属性调用这些属性的值。</span><span class="sxs-lookup"><span data-stu-id="8b927-119">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="8b927-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-122">此重载<xref:System.Data.Common.DbDataAdapter>构造函数旨在使用.NET Framework 数据提供程序实现在克隆的实现中使用的类似构造函数时。</span><span class="sxs-lookup"><span data-stu-id="8b927-122">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="8b927-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-126">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="8b927-126">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8b927-127">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="8b927-127">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b927-128">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-128">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-129">
            <para>此方法进行保护，并且旨在用于.NET Framework 数据提供程序。如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户将命令添加到一批。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-129">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b927-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-131">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="8b927-131">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8b927-132">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="8b927-132">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b927-133">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-133">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-134">
            <para>此方法进行保护，并且旨在用于.NET Framework 数据提供程序。如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户从一批中删除所有命令。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-134">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="8b927-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="8b927-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="8b927-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="8b927-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-141">
            <para>在重写<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-141">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="8b927-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="8b927-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="8b927-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="8b927-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-148">
            <para>在重写<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-148">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-150">"表"是使用默认名称<xref:System.Data.Common.DataAdapter>表映射的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-150">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="8b927-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 是当应用程序将添加要用于表映射<xref:System.Data.Common.DbDataAdapter.Fill%2A>，但未指定<xref:System.Data.DataTable>名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-152">Gets or sets a command for deleting records from the data set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-152">Gets or sets a command for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-153">
            <see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />若要删除已删除的行在数据集中的数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-153">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-154">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>自动生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-154">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-155">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="8b927-155">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8b927-156">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-156">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b927-158">Executes the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-158">Executes the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-159">The return value from the last command in the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-159">The return value from the last command in the batch.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-160">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="8b927-160">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8b927-161">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="8b927-161">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-162">
            <para>此方法进行保护，并且旨在用于.NET Framework 数据提供程序。如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户执行一个批处理。此方法的实现将适配器中的命令合并到一个批处理，然后执行的批处理，并且返回批处理的返回值。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-162">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="8b927-167">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-167">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-168"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="8b927-168">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="8b927-169"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-169">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-170">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-170">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="8b927-171">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-171">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-172">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="8b927-172">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="8b927-173">该操作的剩余部分将会中止。</span><span class="sxs-lookup"><span data-stu-id="8b927-173">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="8b927-174">如果命令不返回任何行，没有表将添加到<xref:System.Data.DataSet>，并且不引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-174">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="8b927-175">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的后续使用模式的列名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-175">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-176">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-176">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="8b927-177">当指定的查询返回多个结果时，返回查询的每个行的结果集被置于单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-177">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="8b927-178">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="8b927-178">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="8b927-179">因为如果处理插入查询跟 select 查询，查询不返回行，创建没有表，创建了为 select 查询的表的名称为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="8b927-179">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="8b927-180">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-180">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-181">SELECT 语句用于填充<xref:System.Data.DataSet>多个结果，例如批处理 SQL 语句，如果其中一个结果包含错误，将返回所有的后续结果将被跳过并不会添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-181">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="8b927-182">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="8b927-182">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="8b927-183">SQL 语句应匹配是最初用来填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-183">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="8b927-184">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="8b927-184">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="8b927-185">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<xref:System.Data.DataTable>相对应的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-185">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-186">主键信息可能被设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-186">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="8b927-187">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="8b927-187">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-188">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="8b927-188">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="8b927-189">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-189">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-190">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-190">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-191">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-191">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="8b927-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="8b927-195">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-195">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-196"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-196">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="8b927-197">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-197">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-198">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-198">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-199">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-199">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-200"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作然后将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="8b927-200">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="8b927-201">在创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="8b927-201">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="8b927-202">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="8b927-202">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="8b927-203">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-203">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-204">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-204">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="8b927-205">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-205">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="8b927-206">重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataTable`如参数仅获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-206">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="8b927-207">使用的重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataSet`作为参数，以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-207">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="8b927-208"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-208">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="8b927-209">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="8b927-209">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="8b927-210">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-210">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="8b927-211">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="8b927-211">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="8b927-212">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b927-212">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="8b927-213">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-213">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="8b927-214">你可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-214">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-215">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="8b927-215">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="8b927-216">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-216">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-217">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="8b927-217">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-218">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="8b927-218">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="8b927-219">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-219">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-220">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-220">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-221">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-221">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-222">
            <para>此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-222">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="8b927-224">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-224">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="8b927-227">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-227">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-228"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="8b927-228">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="8b927-229"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-229">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-230">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-230">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-231">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-231">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-232">如果命令不返回任何行，没有表将添加到<xref:System.Data.DataSet>，并且不引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-232">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="8b927-233">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-233">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="8b927-234">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-234">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="8b927-235">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-235">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-236">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="8b927-236">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="8b927-237">由于你可以像处理插入查询跟 select 查询，查询不返回行，创建没有表，表创建了为 select 查询将被命名为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="8b927-237">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="8b927-238">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-238">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="8b927-240">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="8b927-240">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="8b927-241">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-241">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="8b927-242">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="8b927-242">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="8b927-243">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b927-243">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="8b927-244">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-244">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="8b927-245">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="8b927-245">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="8b927-246">该操作的剩余部分将会中止。</span><span class="sxs-lookup"><span data-stu-id="8b927-246">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="8b927-247">SELECT 语句用于填充<xref:System.Data.DataSet>返回多个结果，如一批 SQL 语句中，注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="8b927-247">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="8b927-248">如果其中一个结果包含错误，跳过且不会添加到所有的后续结果<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-248">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="8b927-249">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="8b927-249">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="8b927-250">SQL 语句应匹配是最初用来填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-250">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="8b927-251">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="8b927-251">The **Key** column information must be present.</span></span> <span data-ttu-id="8b927-252">如果主键信息存在，则协调任何重复的行，并且只能出现一次在<xref:System.Data.DataTable>相对应的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-252">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-253">主键信息可能被设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-253">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="8b927-254">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="8b927-254">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-255">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="8b927-255">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="8b927-256">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-256">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-257">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-257">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-258">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-258">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-259">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填充<xref:System.Data.DataSet>与从类别表的行。</span><span class="sxs-lookup"><span data-stu-id="8b927-259">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="8b927-260">此示例假定你已创建了<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-260">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="8b927-261">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-261">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-262">
            <para>在重写<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-262">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="8b927-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="8b927-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="8b927-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="8b927-268">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-268">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-269"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-269">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="8b927-270">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-270">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-271">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-271">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="8b927-272">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-272">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作然后将行添加到指定目标<xref:System.Data.DataTable>对象在<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它尚不存在。</span><span class="sxs-lookup"><span data-stu-id="8b927-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="8b927-274">在创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="8b927-274">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="8b927-275">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="8b927-275">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="8b927-276">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的后续列，使用模式名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-276">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-277">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-277">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="8b927-278">重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataTable`如参数仅获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-278">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="8b927-279">使用的重载<xref:System.Data.Common.DbDataAdapter.Fill%2A>采用`DataSet`作为参数，以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-279">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="8b927-280">你可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-280">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-281">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="8b927-281">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="8b927-282">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-282">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-283">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="8b927-283">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-284">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="8b927-284">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="8b927-285">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-285">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-286">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-286">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-287">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-287">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-288">
            <para>此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-288">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord">
          <span data-ttu-id="8b927-289">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-289">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="8b927-290">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-290">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="dataTables">
          <span data-ttu-id="8b927-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="8b927-294">This value does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-294">This value does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-295"><xref:System.Data.Common.DataAdapter.Fill%2A>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-295">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="8b927-296">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-296">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-297">如果之前连接关闭<xref:System.Data.Common.DataAdapter.Fill%2A>是调用，它将打开以检索数据，并且再将其关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-297">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="8b927-298">如果连接是打开之前<xref:System.Data.Common.DataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-298">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-299"><xref:System.Data.Common.DataAdapter.Fill%2A>操作然后将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="8b927-299">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="8b927-300">在创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="8b927-300">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="8b927-301">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="8b927-301">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="8b927-302">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="8b927-302">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-303">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="8b927-303">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="8b927-304">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-304">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="8b927-305">如果数据适配器在填充时遇到重复的列<xref:System.Data.DataTable>，它会生成后续列，请使用模式"columnname1"、"columnname2"、"columnname3"等的名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-305">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="8b927-306">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-306">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="8b927-307">多个结果集添加到时<xref:System.Data.DataSet>，每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-307">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-308">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="8b927-308">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="8b927-309">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-309">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-310">SELECT 语句用于填充<xref:System.Data.DataSet>返回多个结果，例如批处理 SQL 语句，如果其中一个结果包含错误，所有的后续结果会跳过并不添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-310">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="8b927-311">你可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-311">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-312">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="8b927-312">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="8b927-313">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-313">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-314">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-314">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-315">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-315">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="8b927-317">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-317">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="8b927-318">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-318">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="8b927-319">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-319">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="8b927-322">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-322">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-323">A`maxRecords`值为 0 获取开始记录后找到的所有记录。</span><span class="sxs-lookup"><span data-stu-id="8b927-323">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="8b927-324">如果`maxRecords`大于剩余行的数量只返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="8b927-324">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="8b927-325">如果对应的 select 命令是一个语句返回多个结果，<xref:System.Data.Common.DbDataAdapter.Fill%2A>仅适用`maxRecords`到第一个结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-325">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="8b927-326"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="8b927-326">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="8b927-327"><xref:System.Data.IDbConnection>与 SELECT 语句关联的对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-327">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-328">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它是打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-328">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="8b927-329">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-329">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-330">如果命令不返回任何行，没有表将添加到<xref:System.Data.DataSet>，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-330">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="8b927-331">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的后续列，使用模式名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-331">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-332">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-332">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="8b927-333">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-333">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-334">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="8b927-334">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="8b927-335">因为如果处理插入查询跟 select 查询，查询不返回行，创建没有表，创建了为 select 查询的表的名称为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="8b927-335">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="8b927-336">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-336">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-337"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-337">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="8b927-338">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="8b927-338">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="8b927-339">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-339">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="8b927-340">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="8b927-340">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="8b927-341">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b927-341">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="8b927-342">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-342">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="8b927-343">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="8b927-343">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="8b927-344">该操作的剩余部分将会中止。</span><span class="sxs-lookup"><span data-stu-id="8b927-344">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="8b927-345">SELECT 语句用于填充<xref:System.Data.DataSet>返回多个结果，例如批处理 SQL 语句，请注意下列情况：</span><span class="sxs-lookup"><span data-stu-id="8b927-345">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="8b927-346">处理批处理 SQL 语句中的多个结果时`maxRecords`仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-346">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="8b927-347">同样适用于包含章节结果 (.NET Framework Data Provider for OLE DB 仅) 的行。</span><span class="sxs-lookup"><span data-stu-id="8b927-347">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="8b927-348">受限制的最上层结果`maxRecords`，但会在所有子行。</span><span class="sxs-lookup"><span data-stu-id="8b927-348">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="8b927-349">如果其中一个结果包含错误，跳过且不会添加到所有的后续结果<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-349">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="8b927-350">当使用后续<xref:System.Data.Common.DbDataAdapter.Fill%2A>调用来刷新的内容<xref:System.Data.DataSet>，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="8b927-350">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="8b927-351">SQL 语句应匹配是最初用来填充<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-351">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="8b927-352">**密钥**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="8b927-352">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="8b927-353">如果存在主键信息，则将对帐任何重复的行，并只能出现一次在<xref:System.Data.DataTable>相对应的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-353">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-354">主键信息可能被设置通过<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，通过指定<xref:System.Data.DataTable.PrimaryKey%2A>属性<xref:System.Data.DataTable>，或通过设置<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>属性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-354">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="8b927-355">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="8b927-355">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-356">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="8b927-356">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="8b927-357">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-357">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-358">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-358">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-359">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-359">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-360">`DataSet`将不包含多个记录由数`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="8b927-360">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="8b927-361">但是，由查询生成的整个结果集是仍会从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="8b927-361">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-362">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填充<xref:System.Data.DataSet>15 行，在第 10，行从开始**类别**表。</span><span class="sxs-lookup"><span data-stu-id="8b927-362">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="8b927-363">此示例假定你已创建了<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-363">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="8b927-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-365">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-365">The source table is invalid.</span>
          </span>
          <span data-ttu-id="8b927-366">-or-  The connection is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-366">-or-  The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8b927-367">The connection could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-367">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b927-368">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-368">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="8b927-369">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-369">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-370">
            <para>在重写<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-370">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <span data-ttu-id="8b927-371">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-371">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="8b927-372">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-372">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="8b927-373">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-373">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="8b927-374">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-374">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="8b927-375">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-375">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-377">The number of rows added to or refreshed in the data tables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-377">The number of rows added to or refreshed in the data tables.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-378">A`maxRecords`值为 0 获取开始记录后找到的所有记录。</span><span class="sxs-lookup"><span data-stu-id="8b927-378">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="8b927-379">如果`maxRecords`大于剩余行数仅返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="8b927-379">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="8b927-380"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从使用 SELECT 语句的数据源检索数据。</span><span class="sxs-lookup"><span data-stu-id="8b927-380">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="8b927-381"><xref:System.Data.IDbConnection>与 SELECT 语句关联的对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-381">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-382">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-382">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-383">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-383">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-384">如果命令不返回任何行，没有表将添加到<xref:System.Data.DataSet>，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-384">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="8b927-385">如果<xref:System.Data.Common.DbDataAdapter>对象在填充时遇到重复的列<xref:System.Data.DataTable>，它将生成的后续列，使用模式名称"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-385">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-386">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-386">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="8b927-387">当指定的查询返回多个结果时，每个结果集将被置于单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-387">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-388">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="8b927-388">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="8b927-389">由于你可以像处理插入查询跟 select 查询，查询不返回行，创建没有表，表创建了为 select 查询将被命名为"Table"，因为它是创建的第一个表。</span><span class="sxs-lookup"><span data-stu-id="8b927-389">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="8b927-390">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-390">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-391"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-391">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="8b927-392">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="8b927-392">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="8b927-393">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-393">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="8b927-394">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="8b927-394">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="8b927-395">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b927-395">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="8b927-396">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-396">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="8b927-397">如果遇到错误或异常，则填充数据表时，在发生错误的之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="8b927-397">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="8b927-398">该操作的剩余部分将会中止。</span><span class="sxs-lookup"><span data-stu-id="8b927-398">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="8b927-399">SELECT 语句用于填充<xref:System.Data.DataTable>对象返回多个结果，如一批 SQL 语句中，注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="8b927-399">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="8b927-400">处理批处理 SQL 语句中的多个结果时`maxRecords`仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-400">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="8b927-401">同样适用于包含章节结果 (.NET Framework Data Provider for OLE DB 仅) 的行。</span><span class="sxs-lookup"><span data-stu-id="8b927-401">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="8b927-402">受限制的最上层结果`maxRecords`，但会在所有子行。</span><span class="sxs-lookup"><span data-stu-id="8b927-402">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="8b927-403">如果其中一个结果包含错误，则跳过所有的后续结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-403">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-404">`DataSet`将不包含多个记录由数`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="8b927-404">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="8b927-405">但是，由查询生成的整个结果集是仍会从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="8b927-405">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="8b927-406">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-406">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-407">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-407">The source table is invalid.</span>
          </span>
          <span data-ttu-id="8b927-408">-or-  The connection is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-408">-or-  The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8b927-409">The connection could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-409">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b927-410">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-410">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="8b927-411">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-411">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-412">
            <para>在重写<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-412">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-413">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-413">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="8b927-414">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-414">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="8b927-415">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-415">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="8b927-416">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-416">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="8b927-417">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-417">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="8b927-418">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-418">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-419">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-419">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-420">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-420">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="8b927-421">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-421">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-422"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法从数据源使用指定的一个关联的 SELECT 语句中检索行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-422">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="8b927-423">与 SELECT 语句关联的连接对象必须是有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-423">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-424">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-424">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-425">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-425">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-426"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作然后将行添加到目标<xref:System.Data.DataTable>中的对象<xref:System.Data.DataSet>，则创建<xref:System.Data.DataTable>对象如果它们尚不存在。</span><span class="sxs-lookup"><span data-stu-id="8b927-426">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="8b927-427">在创建时<xref:System.Data.DataTable>对象，<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="8b927-427">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="8b927-428">但是，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>属性设置为`AddWithKey`，还会创建相应的主键约束。</span><span class="sxs-lookup"><span data-stu-id="8b927-428">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="8b927-429">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-429">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-430">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-430">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="8b927-431">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-431">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-432">额外的结果集通过将整数值追加到指定的表名 （例如，"表"、"Table1"、"Table2"等） 进行命名。</span><span class="sxs-lookup"><span data-stu-id="8b927-432">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="8b927-433">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-433">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-434"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-434">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="8b927-435">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="8b927-435">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="8b927-436">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-436">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="8b927-437">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="8b927-437">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="8b927-438">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b927-438">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="8b927-439">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-439">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="8b927-440">你可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-440">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-441">如果存在主键，传入行与已存在的匹配行合并。</span><span class="sxs-lookup"><span data-stu-id="8b927-441">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="8b927-442">如果主键不存在，将传入的行追加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-442">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-443">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="8b927-443">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-444">您必须显式定义为主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="8b927-444">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="8b927-445">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-445">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-446">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-446">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-447">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-447">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b927-448">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-448">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="8b927-449">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-449">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-450">
            <para>此重载<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-450">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-451">Gets or sets the behavior of the command used to fill the data adapter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-451">Gets or sets the behavior of the command used to fill the data adapter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-452">
            <see cref="T:System.Data.CommandBehavior" />的用于填充数据适配器的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-452">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-453">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-453">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-454">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-454">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="8b927-455">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-455">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-456">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-456">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-457">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-457">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-458">此方法从数据源使用检索的架构信息<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-458">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="8b927-459">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-459">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-460">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="8b927-460">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="8b927-461"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-461"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="8b927-462">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="8b927-462">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="8b927-463"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="8b927-463"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="8b927-464">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-464">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="8b927-465">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="8b927-465">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="8b927-466">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-466">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="8b927-467">如果返回主键列和唯一列，将主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-467">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-468">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="8b927-468">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="8b927-469">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-469">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="8b927-470">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="8b927-470">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="8b927-471">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="8b927-471">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="8b927-472">过程中使用主键信息<xref:System.Data.Common.DbDataAdapter.Fill%2A>来查找和替换其键的列相匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="8b927-472">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="8b927-473">如果这不是所需的行为，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-473">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="8b927-474">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-474">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-475">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-475">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="8b927-476">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-476">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-477">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="8b927-477">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="8b927-478">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-478">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-479"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须是有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="8b927-479">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="8b927-480">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-480">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-481">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-481">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-482">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-482">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-483">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-483">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="8b927-484">使用时<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server.NET Framework 数据提供程序向正在执行的语句追加 FOR BROWSE 子句。</span><span class="sxs-lookup"><span data-stu-id="8b927-484">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="8b927-485">用户应注意的潜在负面影响，如干扰使用 SET FMTONLY ON 语句。</span><span class="sxs-lookup"><span data-stu-id="8b927-485">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="8b927-486">有关详细信息，请参阅 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="8b927-486">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-487">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>架构，并返回与<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-487">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="8b927-488">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-488">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="8b927-489">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-489">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-490">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-490">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-491">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-491">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-492"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-492">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="8b927-493">与相关的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-493">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-494">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-494">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-495">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-495">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-496">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作将返回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-496">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="8b927-497">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="8b927-497">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="8b927-498"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-498"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="8b927-499">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="8b927-499">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="8b927-500"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="8b927-500"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="8b927-501">如果<xref:System.Data.DataTable.PrimaryKey%2A>已为定义`DataTable`，或`DataTable`包含了数据以及`PrimaryKey`未设置属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-501">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="8b927-502">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="8b927-502">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="8b927-503">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="8b927-503">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="8b927-504">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但`PrimaryKey`未设置属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-504">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="8b927-505">如果返回主键列和唯一列，将主键列用作主键列`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="8b927-505">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="8b927-506">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="8b927-506">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="8b927-507">此过程可能需要几个到服务器的往返次数。</span><span class="sxs-lookup"><span data-stu-id="8b927-507">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="8b927-508">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-508">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="8b927-509">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="8b927-509">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="8b927-510">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="8b927-510">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="8b927-511">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-511">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-512">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-512">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="8b927-513">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-513">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-514">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="8b927-514">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="8b927-515">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-515">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-516"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="8b927-516"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="8b927-517">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-517">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-518">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-519">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-519">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="8b927-520">使用时<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server.NET Framework 数据提供程序向正在执行的语句追加 FOR BROWSE 子句。</span><span class="sxs-lookup"><span data-stu-id="8b927-520">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="8b927-521">用户应注意的潜在负面影响，如干扰使用 SET FMTONLY ON 语句。</span><span class="sxs-lookup"><span data-stu-id="8b927-521">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="8b927-522">有关详细信息，请参阅 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="8b927-522">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-523">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>架构，并返回与<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-523">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-524">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-524">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="8b927-525">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-525">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="8b927-526">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-526">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-527">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-527">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-528">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-528">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-529">此方法从数据源使用检索的架构信息<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-529">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="8b927-530">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-530">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-531">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="8b927-531">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="8b927-532"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-532"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="8b927-533">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="8b927-533">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="8b927-534"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="8b927-534"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="8b927-535">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-535">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="8b927-536">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="8b927-536">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="8b927-537">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-537">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="8b927-538">如果返回主键列和唯一列，将主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-538">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-539">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="8b927-539">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="8b927-540">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-540">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="8b927-541">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="8b927-541">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="8b927-542">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="8b927-542">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="8b927-543">过程中使用主键信息<xref:System.Data.Common.DbDataAdapter.Fill%2A>来查找和替换其键的列相匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="8b927-543">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="8b927-544">如果这不是所需的行为，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-544">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="8b927-545">如果<xref:System.Data.Common.DbDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-545">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-546">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-546">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="8b927-547">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-547">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-548">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="8b927-548">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="8b927-549">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-549">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-550"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-550">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="8b927-551">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="8b927-551">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="8b927-552">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-552">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="8b927-553">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="8b927-553">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="8b927-554">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b927-554">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="8b927-555">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-555">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="8b927-556"><xref:System.Data.IDbConnection>与 select 命令关联的对象必须是有效，但它不需要打开。</span><span class="sxs-lookup"><span data-stu-id="8b927-556">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="8b927-557">如果<xref:System.Data.IDbConnection>之前关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-557">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-558">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-558">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-559">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-559">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-560">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-560">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="8b927-561">使用时<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server.NET Framework 数据提供程序向正在执行的语句追加 FOR BROWSE 子句。</span><span class="sxs-lookup"><span data-stu-id="8b927-561">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="8b927-562">用户应注意的潜在负面影响，如干扰使用 SET FMTONLY ON 语句。</span><span class="sxs-lookup"><span data-stu-id="8b927-562">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="8b927-563">有关详细信息，请参阅 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="8b927-563">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-564">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填充<xref:System.Data.DataSet>架构，并返回与<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-564">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b927-565">A source table from which to get the schema could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-565">A source table from which to get the schema could not be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="8b927-566">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-566">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="8b927-567">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-567">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="8b927-568">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-568">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="8b927-569">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-569">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-570">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-570">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-571">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-571">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-572"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-572">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="8b927-573">与相关的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-573">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-574">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-574">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-575">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-575">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-576">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-576">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-577">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="8b927-577">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="8b927-578"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-578"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="8b927-579">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="8b927-579">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="8b927-580"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="8b927-580"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="8b927-581">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-581">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="8b927-582">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="8b927-582">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="8b927-583">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-583">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="8b927-584">如果返回主键列和唯一列，将主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-584">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-585">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="8b927-585">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="8b927-586">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-586">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="8b927-587">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="8b927-587">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="8b927-588">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="8b927-588">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="8b927-589">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-589">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-590">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-590">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="8b927-591">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-591">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-592">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="8b927-592">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="8b927-593">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-593">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-594"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="8b927-594"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="8b927-595">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-595">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-596">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-596">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-597">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-597">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="8b927-598">使用时<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server.NET Framework 数据提供程序向正在执行的语句追加 FOR BROWSE 子句。</span><span class="sxs-lookup"><span data-stu-id="8b927-598">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="8b927-599">用户应注意的潜在负面影响，如干扰使用 SET FMTONLY ON 语句。</span><span class="sxs-lookup"><span data-stu-id="8b927-599">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="8b927-600">有关详细信息，请参阅 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="8b927-600">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-601">
            <para>此实现的<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-601">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-602">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-602">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="8b927-603">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-603">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="8b927-604">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-604">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="8b927-605">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-605">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="8b927-606">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-606">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-607">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-607">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-608">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-608">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-609"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法从使用数据源中检索架构<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-609">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="8b927-610">与相关的连接对象<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必须有效，但它不需要处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-610">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="8b927-611">如果之前连接关闭<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，其打开以检索数据，然后再将关闭。</span><span class="sxs-lookup"><span data-stu-id="8b927-611">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="8b927-612">如果连接是打开之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是调用，它保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="8b927-612">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="8b927-613">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作添加<xref:System.Data.DataTable>到目标<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-614">然后，它添加到列<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，并配置以下<xref:System.Data.DataColumn>如果它们在数据源中存在的属性：</span><span class="sxs-lookup"><span data-stu-id="8b927-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="8b927-615"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="8b927-616">必须设置<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>单独。</span><span class="sxs-lookup"><span data-stu-id="8b927-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="8b927-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 此外可以配置<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>属性根据下列规则：</span><span class="sxs-lookup"><span data-stu-id="8b927-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="8b927-618">如果一个或多个主键列由<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="8b927-619">如果返回任何主键列但唯一列，唯一的列用作为主键，当且仅当所有唯一列均为 null。</span><span class="sxs-lookup"><span data-stu-id="8b927-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="8b927-620">如果任何列都可以为 null，<xref:System.Data.UniqueConstraint>添加到<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>未设置属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="8b927-621">如果返回主键列和唯一列，将主键列用作主键列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-622">请注意，主键和唯一约束添加到<xref:System.Data.ConstraintCollection>根据前面的规则，但其他约束类型不会添加。</span><span class="sxs-lookup"><span data-stu-id="8b927-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="8b927-623">如果唯一聚集索引定义的一列或 SQL Server 表中的列，并且对一组单独的列，定义主键约束，则将返回的聚集索引中列的名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="8b927-624">若要返回的名称或主键列的名称，用于指定主键索引的名称的 SELECT 语句中的查询提示。</span><span class="sxs-lookup"><span data-stu-id="8b927-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="8b927-625">有关指定查询提示的详细信息，请参阅[查询提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="8b927-625">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="8b927-626">如果<xref:System.Data.IDataAdapter>填充时遇到重复的列<xref:System.Data.DataTable>，它会生成名称的后续列，请使用模式"*columnname*1"，"*columnname*2"，"*columnname*3"，依次类推。</span><span class="sxs-lookup"><span data-stu-id="8b927-626">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="8b927-627">如果传入的数据包含未命名的列，它们都将置于<xref:System.Data.DataSet>根据模式"Column1"、"Column2"等。</span><span class="sxs-lookup"><span data-stu-id="8b927-627">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="8b927-628">多个结果集添加到时<xref:System.Data.DataSet>每个结果集放置在单独的表。</span><span class="sxs-lookup"><span data-stu-id="8b927-628">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="8b927-629">通过将整数值追加到指定的表名 （例如，"Table"、"Table1"、"Table2"等。） 命名额外的结果集。</span><span class="sxs-lookup"><span data-stu-id="8b927-629">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="8b927-630">使用列和表名称的应用程序应确保这些命名模式的冲突不会发生。</span><span class="sxs-lookup"><span data-stu-id="8b927-630">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="8b927-631"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-631">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="8b927-632">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>执行区分大小写的比较，以查找相应的表，并创建新表，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="8b927-632">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="8b927-633">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-633">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="8b927-634">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="8b927-634">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="8b927-635">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b927-635">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="8b927-636">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-636">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="8b927-637"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="8b927-637"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="8b927-638">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法以将行添加到<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-638">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-639">当处理批处理 SQL 语句返回多个结果的实现<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的 OLE DB.NET Framework 数据提供程序检索仅第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="8b927-639">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="8b927-640">若要检索多个结果的架构信息，请使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>与<xref:System.Data.MissingSchemaAction>设置为`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="8b927-640">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="8b927-641">使用时<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，SQL Server.NET Framework 数据提供程序向正在执行的语句追加 FOR BROWSE 子句。</span><span class="sxs-lookup"><span data-stu-id="8b927-641">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="8b927-642">用户应注意的潜在负面影响，如干扰使用 SET FMTONLY ON 语句。</span><span class="sxs-lookup"><span data-stu-id="8b927-642">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="8b927-643">有关详细信息，请参阅 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="8b927-643">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-644">
            <para>此实现的<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受保护，并旨在用于.NET Framework 数据提供程序。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-644">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="8b927-645">The index of the command to retrieve the parameter from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-645">The index of the command to retrieve the parameter from.</span>
          </span>
        </param>
        <param name="parameterIndex">
          <span data-ttu-id="8b927-646">The index of the parameter within the command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-646">The index of the parameter within the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-647">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-647">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-648">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-648">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-649">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="8b927-649">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8b927-650">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="8b927-650">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b927-651">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-651">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-652">
            <para>此方法进行保护，并且旨在用于.NET Framework 数据提供程序。如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法以允许用户执行一个批处理。实现使用<paramref name="commandIdentifier" />提供用于查找请求的命令，然后使用<paramref name="parameterIndex" />提供用于查找请求的参数。例如，<paramref name="commandIdentifier" />为 0 和<paramref name="parameterIndex" />0 的批处理中的第一个命令返回的第一个参数。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-652">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter. For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="8b927-653">The zero-based column ordinal of the individual command within the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-653">The zero-based column ordinal of the individual command within the batch.</span>
          </span>
        </param>
        <param name="recordsAffected">
          <span data-ttu-id="8b927-654">The number of rows affected in the data store by the specified command within the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-654">The number of rows affected in the data store by the specified command within the batch.</span>
          </span>
        </param>
        <param name="error">
          <span data-ttu-id="8b927-655">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-655">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          </span>
          <span data-ttu-id="8b927-656">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-656">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-657">Returns information about an individual update attempt within a larger batched update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-657">Returns information about an individual update attempt within a larger batched update.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-658">Information about an individual update attempt within a larger batched update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-658">Information about an individual update attempt within a larger batched update.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-659">数据提供程序支持批处理更新逻辑必须在上重写虚方法的一系列<xref:System.Data.Common.DbDataAdapter>类。</span><span class="sxs-lookup"><span data-stu-id="8b927-659">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="8b927-660">`GetBatchedRecordsAffected` 表示这些虚拟方法之一。</span><span class="sxs-lookup"><span data-stu-id="8b927-660">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="8b927-661">`DbDataAdapter`类依赖于`GetBatchedRecordsAffected`来确定某一批处理中的各次更新尝试成功与否，因此它可以将标记每个相应<xref:System.Data.DataRow>相应地。</span><span class="sxs-lookup"><span data-stu-id="8b927-661">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b927-662">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-662">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-663">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-663">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b927-664">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-664">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-665">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="8b927-665">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8b927-666">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="8b927-666">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b927-667">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-667">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-668">
            <para>此方法进行保护，并且旨在用于.NET Framework 数据提供程序。如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法。此方法使类可以初始化支持批处理所需的任何资源。例如，类可以分配用于保存命令集的批处理中的数据结构。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-668">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to initialize any resources necessary to support batching. For example, a class may allocate a data structure to hold the set of commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-669">Gets or sets a command used to insert new records into the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-669">Gets or sets a command used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-670">A<see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />以插入新行在数据集中的数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-670">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-671">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>将自动生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-671">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-672">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="8b927-672">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8b927-673">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-673">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-674">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-674">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-675">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8b927-675">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8b927-676">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-676">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-677">
            <para>在重写<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-677">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8b927-678">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-678">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-679">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-679">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-680">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8b927-680">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8b927-681">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-681">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-682">
            <para>在重写<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />在派生类中，一定要调用基类的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-682">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-683">Gets or sets a command used to select records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-683">Gets or sets a command used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-684">A<see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />从放置在数据集中的数据源选择记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-684">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b927-685">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="8b927-685">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-686">Gets or sets an SQL statement for deleting records from the data set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-686">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-687">
            <see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />若要删除已删除的行在数据集中的数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-687">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-688">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b927-688">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b927-689">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b927-689">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="8b927-690">有关详细信息，请参阅<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-690">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-691">Gets or sets an SQL statement used to insert new records into the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-691">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-692">
            <see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />以插入新行在数据集中的数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-692">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-693">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b927-693">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b927-694">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b927-694">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="8b927-695">有关详细信息，请参阅<xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-695">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-696">Gets or sets an SQL statement used to select records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-696">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-697">
            <see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />从放置在数据集中的数据源选择记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-697">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-698">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b927-698">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b927-699">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b927-699">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="8b927-700">有关详细信息，请参阅<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-700">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-701">Gets or sets an SQL statement used to update records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-701">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-702">
            <see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />以更新已修改的行在数据集中的数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-702">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-703">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b927-703">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b927-704">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b927-704">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="8b927-705">有关详细信息，请参阅<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-705">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b927-706">Creates a new object that is a copy of the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-706">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-707">A new object that is a copy of this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-707">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-708">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b927-708">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b927-709">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b927-709">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="8b927-710">有关详细信息，请参阅<xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8b927-710">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b927-711">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-711">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-712">在<xref:System.Data.Common.DbDataAdapter>，此方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="8b927-712">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8b927-713">继承自的类<xref:System.Data.Common.DbDataAdapter>重写此方法以支持批处理。</span><span class="sxs-lookup"><span data-stu-id="8b927-713">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b927-714">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-714">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b927-715">
            <para>此方法进行保护，并且旨在用于.NET Framework 数据提供程序。如果从继承的类<see cref="T:System.Data.Common.DbDataAdapter" />支持批处理，类重写此方法。此方法使类可以释放任何分配的资源以支持批处理。例如，类可以释放批中能容纳命令的数据结构。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-715">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to dispose of any resources allocated to support batching. For example, the class may deallocate the data structure that holds the commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-716">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-716">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="8b927-717">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-717">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-718">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-718">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-719">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-719">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-720">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="8b927-720">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-721">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-721">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-722">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="8b927-722">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="8b927-723">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="8b927-723">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="8b927-724">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-724">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="8b927-725">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-725">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="8b927-726">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-726">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="8b927-727">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="8b927-727">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="8b927-728">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-728">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-729">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-729">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="8b927-730"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="8b927-730">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="8b927-731"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-731">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="8b927-732">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="8b927-732">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="8b927-733">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="8b927-733">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="8b927-734">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="8b927-734">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="8b927-735">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b927-735">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="8b927-736">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-736">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="8b927-737">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-737">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="8b927-738">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="8b927-738">The command executes.</span></span>  
  
4.  <span data-ttu-id="8b927-739">如果该命令设置为`FirstReturnedRecord`，第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-739">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="8b927-740">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-740">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="8b927-741">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-741">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="8b927-742">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-742"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="8b927-743">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="8b927-743">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="8b927-744">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="8b927-744">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="8b927-745">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-745">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="8b927-746">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-746">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="8b927-747">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="8b927-747">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="8b927-748">枚举值</span><span class="sxs-lookup"><span data-stu-id="8b927-748">Enumeration value</span></span>|<span data-ttu-id="8b927-749">执行操作</span><span class="sxs-lookup"><span data-stu-id="8b927-749">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="8b927-750">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="8b927-750">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="8b927-751">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-751">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="8b927-752">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-752">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="8b927-753">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-753">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="8b927-754">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="8b927-754">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="8b927-755">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-755">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="8b927-756">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="8b927-756">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="8b927-757">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="8b927-757">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-758">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="8b927-758">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="8b927-759">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-759">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="8b927-760">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-760">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="8b927-761">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="8b927-761">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-762">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="8b927-762">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b927-763">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-763">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-764">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-764">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="8b927-765">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-765">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="8b927-766">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-766">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="8b927-767">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-767">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="8b927-768">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-768">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-769">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-769">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-770">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-770">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-771">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-771">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-772">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="8b927-772">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-773">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-773">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-774">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="8b927-774">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="8b927-775">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="8b927-775">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="8b927-776">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-776">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="8b927-777">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-777">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="8b927-778">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-778">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="8b927-779">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="8b927-779">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="8b927-780">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-780">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-781">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-781">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="8b927-782"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="8b927-782">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="8b927-783"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-783">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="8b927-784">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="8b927-784">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="8b927-785">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="8b927-785">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="8b927-786">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="8b927-786">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="8b927-787">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b927-787">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="8b927-788">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-788">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="8b927-789">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-789">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="8b927-790">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="8b927-790">The command executes.</span></span>  
  
4.  <span data-ttu-id="8b927-791">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-791">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="8b927-792">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-792">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="8b927-793">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-793">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="8b927-794">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-794"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="8b927-795">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="8b927-795">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="8b927-796">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="8b927-796">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="8b927-797">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-797">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="8b927-798">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-798">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="8b927-799">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="8b927-799">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="8b927-800">枚举值</span><span class="sxs-lookup"><span data-stu-id="8b927-800">Enumeration value</span></span>|<span data-ttu-id="8b927-801">执行操作</span><span class="sxs-lookup"><span data-stu-id="8b927-801">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="8b927-802">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="8b927-802">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="8b927-803">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-803">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="8b927-804">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-804">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="8b927-805">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-805">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="8b927-806">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="8b927-806">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="8b927-807">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-807">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="8b927-808">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="8b927-808">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="8b927-809">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="8b927-809">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-810">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="8b927-810">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="8b927-811">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-811">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="8b927-812">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-812">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="8b927-813">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="8b927-813">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-814">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="8b927-814">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-815">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-815">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="8b927-816">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-816">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="8b927-817">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-817">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-818">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-818">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-819">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-819">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-820">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="8b927-820">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-821">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-821">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-822">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="8b927-822">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="8b927-823">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="8b927-823">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="8b927-824">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-824">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="8b927-825">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-825">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="8b927-826">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-826">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="8b927-827">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="8b927-827">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="8b927-828">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-828">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-829">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-829">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="8b927-830"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="8b927-830">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="8b927-831"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-831">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="8b927-832">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="8b927-832">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="8b927-833">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="8b927-833">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="8b927-834">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="8b927-834">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="8b927-835">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b927-835">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="8b927-836">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-836">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="8b927-837">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-837">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="8b927-838">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="8b927-838">The command executes.</span></span>  
  
4.  <span data-ttu-id="8b927-839">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-839">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="8b927-840">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-840">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="8b927-841">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-841">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="8b927-842">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-842"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="8b927-843">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="8b927-843">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="8b927-844">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="8b927-844">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="8b927-845">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-845">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="8b927-846">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-846">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="8b927-847">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="8b927-847">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="8b927-848">枚举值</span><span class="sxs-lookup"><span data-stu-id="8b927-848">Enumeration value</span></span>|<span data-ttu-id="8b927-849">执行操作</span><span class="sxs-lookup"><span data-stu-id="8b927-849">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="8b927-850">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="8b927-850">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="8b927-851">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-851">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="8b927-852">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-852">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="8b927-853">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-853">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="8b927-854">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="8b927-854">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="8b927-855">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-855">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="8b927-856">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="8b927-856">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="8b927-857">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="8b927-857">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-858">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="8b927-858">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="8b927-859">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-859">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="8b927-860">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-860">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="8b927-861">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="8b927-861">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-862">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="8b927-862">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b927-863">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-863">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-864">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-864">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="8b927-865">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-865">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="8b927-866">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-866">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="8b927-867">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-867">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="8b927-868">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-868">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="8b927-869">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-869">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="8b927-870">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-870">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-871">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-871">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-872">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-872">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-873">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="8b927-873">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-874">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-874">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-875">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="8b927-875">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="8b927-876">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>在其中你必须控制的语句类型 （例如，插入更新之前） 的序列的情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="8b927-876">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="8b927-877">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-877">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="8b927-878">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-878">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="8b927-879">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-879">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="8b927-880">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="8b927-880">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="8b927-881">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-881">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-882">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-882">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="8b927-883"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="8b927-883">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="8b927-884"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-884">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="8b927-885">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="8b927-885">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="8b927-886">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="8b927-886">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="8b927-887">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="8b927-887">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="8b927-888">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b927-888">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="8b927-889">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-889">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="8b927-890">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-890">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="8b927-891">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="8b927-891">The command executes.</span></span>  
  
4.  <span data-ttu-id="8b927-892">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-892">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="8b927-893">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-893">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="8b927-894">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-894">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="8b927-895">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-895"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="8b927-896">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="8b927-896">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="8b927-897">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="8b927-897">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="8b927-898">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-898">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="8b927-899">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-899">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="8b927-900">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="8b927-900">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="8b927-901">枚举值</span><span class="sxs-lookup"><span data-stu-id="8b927-901">Enumeration value</span></span>|<span data-ttu-id="8b927-902">执行操作</span><span class="sxs-lookup"><span data-stu-id="8b927-902">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="8b927-903">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="8b927-903">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="8b927-904">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-904">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="8b927-905">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-905">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="8b927-906">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-906">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="8b927-907">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="8b927-907">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="8b927-908">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-908">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="8b927-909">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="8b927-909">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="8b927-910">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="8b927-910">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-911">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="8b927-911">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="8b927-912">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-912">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="8b927-913">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-913">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="8b927-914">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="8b927-914">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b927-915">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-915">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-916">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-916">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="8b927-917">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-917">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="8b927-918">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-918">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="8b927-919">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-919">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="8b927-920">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-920">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="8b927-921">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-921">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="8b927-922">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-922">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b927-923">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-923">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b927-924">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-924">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-925">在应用程序调用<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>检查<xref:System.Data.DataRow.RowState%2A>属性，并执行所需的 INSERT、 UPDATE 或 DELETE 语句以迭代方式对于每一行，根据在中配置的索引顺序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="8b927-925">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-926">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能会执行 DELETE 语句，接着是 INSERT 语句，则另一个 DELETE 语句，截止日期中的行的顺序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="8b927-926">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="8b927-927">应注意的是，为批处理; 不执行这些语句单独更新每个行。</span><span class="sxs-lookup"><span data-stu-id="8b927-927">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="8b927-928">应用程序可以调用<xref:System.Data.DataSet.GetChanges%2A>方法在其中你必须控制的语句类型序列的情况下 （例如，在更新之前插入）。</span><span class="sxs-lookup"><span data-stu-id="8b927-928">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="8b927-929">有关详细信息，请参阅[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-929">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="8b927-930">如果尚未指定 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-930">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="8b927-931">但是，你可以创建<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-931">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="8b927-932">然后，你未设置任何其他 SQL 语句都由**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="8b927-932">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="8b927-933">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-933">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-934">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="8b927-934">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="8b927-935"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支持方案其中<xref:System.Data.DataSet>包含多个<xref:System.Data.DataTable>名称只有大小写不同的对象。</span><span class="sxs-lookup"><span data-stu-id="8b927-935">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="8b927-936">具有相同名称但不同情况下，多个表中的存在时`DataSet`，<xref:System.Data.Common.DbDataAdapter.Update%2A>执行区分大小写的比较，以查找相应的表，并生成异常，如果不存在完全匹配。</span><span class="sxs-lookup"><span data-stu-id="8b927-936">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="8b927-937">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-937">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="8b927-938">如果<xref:System.Data.Common.DbDataAdapter.Update%2A>称为和<xref:System.Data.DataSet>只包含一个<xref:System.Data.DataTable>只是大小写，其名称不同，<xref:System.Data.DataTable>更新。</span><span class="sxs-lookup"><span data-stu-id="8b927-938">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="8b927-939">在此方案中，比较是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="8b927-939">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="8b927-940">下面的 C# 代码阐释这一行为。</span><span class="sxs-lookup"><span data-stu-id="8b927-940">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="8b927-941"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法从第一个映射，然后再执行更新中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="8b927-941">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="8b927-942"><xref:System.Data.Common.DbDataAdapter.Update%2A>然后刷新使用的值的行<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8b927-942">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="8b927-943">将忽略所有附加的行返回。</span><span class="sxs-lookup"><span data-stu-id="8b927-943">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="8b927-944">任何数据加载回后<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引发事件时，允许用户检查经协调<xref:System.Data.DataSet>行和任何输出参数返回命令。</span><span class="sxs-lookup"><span data-stu-id="8b927-944">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="8b927-945">行已成功更新后，会接受对该行的更改。</span><span class="sxs-lookup"><span data-stu-id="8b927-945">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="8b927-946">使用时<xref:System.Data.Common.DbDataAdapter.Update%2A>，执行的顺序是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b927-946">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="8b927-947">中的值<xref:System.Data.DataRow>移动到的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-947">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="8b927-948">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-948">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="8b927-949">该命令执行。</span><span class="sxs-lookup"><span data-stu-id="8b927-949">The command executes.</span></span>  
  
4.  <span data-ttu-id="8b927-950">如果该命令设置为`FirstReturnedRecord`，则第一个返回结果将放置在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-950">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="8b927-951">如果没有输出参数，它们都将置于<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="8b927-951">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="8b927-952">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-952">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="8b927-953">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-953"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="8b927-954">与每个命令<xref:System.Data.Common.DbDataAdapter>通常有一个与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="8b927-954">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="8b927-955">参数映射到当前行通过`SourceColumn`和`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类。</span><span class="sxs-lookup"><span data-stu-id="8b927-955">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="8b927-956">`SourceColumn` 是指<xref:System.Data.DataTable>列，<xref:System.Data.Common.DbDataAdapter>引用以获取当前行的参数值。</span><span class="sxs-lookup"><span data-stu-id="8b927-956">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="8b927-957">`SourceColumn` 在应用任何表映射之前是指未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="8b927-957">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="8b927-958">如果`SourceColumn`引用不存在的列中，执行的操作取决于下列情况之一<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="8b927-958">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="8b927-959">枚举值</span><span class="sxs-lookup"><span data-stu-id="8b927-959">Enumeration value</span></span>|<span data-ttu-id="8b927-960">执行操作</span><span class="sxs-lookup"><span data-stu-id="8b927-960">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="8b927-961">使用的源列名和中的表名<xref:System.Data.DataSet>如果不不存在任何映射。</span><span class="sxs-lookup"><span data-stu-id="8b927-961">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="8b927-962">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-962">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="8b927-963">当显式设置映射时，输入参数的缺少映射通常是错误的结果。</span><span class="sxs-lookup"><span data-stu-id="8b927-963">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="8b927-964">A<xref:System.SystemException>生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-964">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="8b927-965">`SourceColumn`属性还用于映射输出的值或输入/输出参数回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="8b927-965">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="8b927-966">如果它引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="8b927-966">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="8b927-967">`SourceVersion`的.NET Framework 数据提供程序的属性`Parameter`类确定是否使用该列的值的原始、 当前或已建议版本。</span><span class="sxs-lookup"><span data-stu-id="8b927-967">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="8b927-968">此功能通常用于在 UPDATE 语句，以检查存在开放式并发冲突的 WHERE 子句中包括原始值。</span><span class="sxs-lookup"><span data-stu-id="8b927-968">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8b927-969">如果更新行时出错，将引发异常，并执行更新，则停止。</span><span class="sxs-lookup"><span data-stu-id="8b927-969">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="8b927-970">若要继续执行更新操作不会遇到错误时生成异常，设置<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>属性`true`之前调用<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b927-970">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="8b927-971">你还可能响应中的每个行基础上的错误`RowUpdated`DataAdapter 事件。</span><span class="sxs-lookup"><span data-stu-id="8b927-971">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="8b927-972">若要继续执行更新操作而不生成了异常`RowUpdated`事件中，设置<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>属性<xref:System.Data.Common.RowUpdatedEventArgs>到<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="8b927-972">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-973">下面的示例使用派生的类中， <xref:System.Data.OleDb.OleDbDataAdapter>，以更新数据源。</span><span class="sxs-lookup"><span data-stu-id="8b927-973">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b927-974">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-974">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b927-975">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-975">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="8b927-976">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-976">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-977">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-977">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-978">要处理每批的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-978">The number of rows to process per batch.</span>
          </span>
          <span data-ttu-id="8b927-979">
            <list type="table">
              <listheader>
                <term> 值是</term>
                <description>效果</description>
              </listheader>
              <item>
                <term> 0 </term>
                <description>批大小上没有任何限制。</description>
              </item>
              <item>
                <term> 1 </term>
                <description>禁用批处理更新。</description>
              </item>
              <item>
                <term> &gt; 1 </term>
                <description>使用批发送更改<see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />一次的操作。</description>
              </item>
            </list>  所有命令时将此值设置为 1 以外的值，与都关联<see cref="T:System.Data.Common.DbDataAdapter" />必须具有其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />属性设置为 * * 无 * * 或 * * 输出参数 * *。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-979">
              <list type="table">
                <listheader>
                  <term> Value is  </term>
                  <description> Effect  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> There is no limit on the batch size.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> Disables batch updating.  </description>
                </item>
                <item>
                  <term> &gt; 1  </term>
                  <description> Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.  </description>
                </item>
              </list>  When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span>
          </span>
          <span data-ttu-id="8b927-980">否则将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-980">An exception will be thrown otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-981">使用<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>属性来更新数据源中的更改与<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="8b927-981">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="8b927-982">如果数据访问接口支持批处理，这可以通过减少服务器的往返次数来提高应用程序性能。</span><span class="sxs-lookup"><span data-stu-id="8b927-982">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="8b927-983">在 ADO.NET 2.0 中，支持此属性是.NET 数据提供程序的 SQL Server (SqlClient) 和 Oracle (OracleClient)。</span><span class="sxs-lookup"><span data-stu-id="8b927-983">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="8b927-984">执行极大的批处理会降低性能。</span><span class="sxs-lookup"><span data-stu-id="8b927-984">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="8b927-985">因此，在实现应用程序前应进行测试以得到最佳的批大小。</span><span class="sxs-lookup"><span data-stu-id="8b927-985">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="8b927-986"><xref:System.ArgumentOutOfRangeException>如果的值设置为一个数字，将引发小于零。</span><span class="sxs-lookup"><span data-stu-id="8b927-986">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b927-987">Gets or sets a command used to update records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-987">Gets or sets a command used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b927-988">A<see cref="T:System.Data.IDbCommand" />过程中使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />以更新已修改的行在数据集中的数据源中的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b927-988">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b927-989">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>将自动生成。</span><span class="sxs-lookup"><span data-stu-id="8b927-989">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b927-990">下面的示例创建派生的类<xref:System.Data.OleDb.OleDbDataAdapter>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="8b927-990">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>