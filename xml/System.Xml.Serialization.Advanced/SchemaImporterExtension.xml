<Type Name="SchemaImporterExtension" FullName="System.Xml.Serialization.Advanced.SchemaImporterExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21c3d9e7b9db2de34ad51b9272396d2b292e67c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440846" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SchemaImporterExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SchemaImporterExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SchemaImporterExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SchemaImporterExtension abstract" />
  <TypeSignature Language="F#" Value="type SchemaImporterExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="817da-101">允许在使用自动查询工具时自定义从 Web 服务描述语言 (WSDL) 文档生成的代码。</span>
      <span class="sxs-lookup">
        <span data-stu-id="817da-101">Allows you to customize the code generated from a Web Services Description Language (WSDL) document when using automated query tools.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="817da-102">通过添加 Web 引用对话框等工具生成的 Web 服务代理时，会发生架构导入 Visual Studio 中，或通过使用找到的框[Web 服务描述语言工具 (Wsdl.exe)](http://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88)。</span><span class="sxs-lookup"><span data-stu-id="817da-102">Schema importation occurs whenever a Web service proxy is produced through a tool such as the Add Web Reference dialog box found in Visual Studio, or by using the [Web Services Description Language Tool (Wsdl.exe)](http://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88).</span></span> <span data-ttu-id="817da-103">如果使用，也会出现架构导入[XML 架构定义工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)以便从特定的 XSD 文档生成代码。</span><span class="sxs-lookup"><span data-stu-id="817da-103">Schema importation also occurs when using the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) to generate code from a specific XSD document.</span></span>  
  
 <span data-ttu-id="817da-104"><xref:System.Xml.Serialization.Advanced.SchemaImporterExtension>类，可以修改时使用任何一种工具生成的代码。</span><span class="sxs-lookup"><span data-stu-id="817da-104">The <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> class allows you to modify the code generated when using any of these tools.</span></span> <span data-ttu-id="817da-105">例如，你可能具有现有的类，处理图书订单在系统上并且具有现有的 XSD 文档提供您的订单。</span><span class="sxs-lookup"><span data-stu-id="817da-105">For example, you may have an existing class that processes book orders on a system and you have an existing XSD document that supplies your orders.</span></span> <span data-ttu-id="817da-106">使用<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension>类，你可以启用一种工具来生成使用您的类的代码。</span><span class="sxs-lookup"><span data-stu-id="817da-106">Using the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> class, you can enable one of the tools to generate code that uses your class.</span></span>  
  
 <span data-ttu-id="817da-107">若要控制的代码生成，你必须使用中找到的类<xref:System.CodeDom>命名空间。</span><span class="sxs-lookup"><span data-stu-id="817da-107">In order to control the generation of the code, you must use the classes found in the <xref:System.CodeDom> namespace.</span></span> <span data-ttu-id="817da-108">有关详细信息，请参阅[使用 CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md)和[CodeDOM 快速参考](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx)。</span><span class="sxs-lookup"><span data-stu-id="817da-108">For more information, see [Using the CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) and [CodeDOM Quick Reference](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).</span></span>  
  
 <span data-ttu-id="817da-109">启用 WSDL.exe 工具 （这反过来使用其他工具，如添加 Web 引用对话框中） 以使用你的扩展的步骤如下：</span><span class="sxs-lookup"><span data-stu-id="817da-109">The steps to enabling the WSDL.exe tool (which in turn is used by other tools such as the Add Web Reference dialog box) to use your extension are:</span></span>  
  
1.  <span data-ttu-id="817da-110">创建的实现<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension>类。</span><span class="sxs-lookup"><span data-stu-id="817da-110">Create an implementation of the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> class.</span></span>  
  
2.  <span data-ttu-id="817da-111">使用<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%2A>方法来为代码生成器编写代码。</span><span class="sxs-lookup"><span data-stu-id="817da-111">Use the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%2A> method to write code for the code generator.</span></span> <span data-ttu-id="817da-112">包含参数，可用于检查截获的 XSD 类型，并创建 CodeDOM 对象，它用于生成新的 CLR 代码的方法。</span><span class="sxs-lookup"><span data-stu-id="817da-112">The method contains parameters that allow you to examine the intercepted XSD type and create CodeDOM objects that are used to generate the new CLR code.</span></span>  
  
3.  <span data-ttu-id="817da-113">如果需要，使用<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement%2A>方法以处理\<xsd： 任何 > XSD 文档中找到的元素。</span><span class="sxs-lookup"><span data-stu-id="817da-113">If required, use the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement%2A> method to handle \<xsd:any> elements found in the XSD document.</span></span>  
  
4.  <span data-ttu-id="817da-114">如果需要，使用<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue%2A>方法可检查默认值在 XSD 文档中找到和返回不同的默认值。</span><span class="sxs-lookup"><span data-stu-id="817da-114">If required, use the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue%2A> method to examine default values found in the XSD document and return a different default value.</span></span>  
  
5.  <span data-ttu-id="817da-115">到库编译你的扩展。</span><span class="sxs-lookup"><span data-stu-id="817da-115">Compile your extension into a library.</span></span>  
  
6.  <span data-ttu-id="817da-116">程序集签名。</span><span class="sxs-lookup"><span data-stu-id="817da-116">Sign the assembly.</span></span>  
  
7.  <span data-ttu-id="817da-117">安装程序集在全局程序集缓存 (GAC) 中。</span><span class="sxs-lookup"><span data-stu-id="817da-117">Install the assembly in the Global Assembly Cache (GAC).</span></span>  
  
8.  <span data-ttu-id="817da-118">修改 machine.config 文件中包括扩展名。</span><span class="sxs-lookup"><span data-stu-id="817da-118">Modify the machine.config file to include the extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="817da-119">请参阅[SchemaImporterExtension 技术示例](~/docs/standard/serialization/schemaimporterextension-technology-sample.md)。</span><span class="sxs-lookup"><span data-stu-id="817da-119">See the [SchemaImporterExtension Technology Sample](~/docs/standard/serialization/schemaimporterextension-technology-sample.md).</span></span> <span data-ttu-id="817da-120">请注意，此示例不包含签名的程序集。</span><span class="sxs-lookup"><span data-stu-id="817da-120">Note that this example does not include a signed assembly.</span></span> <span data-ttu-id="817da-121">相反，它演示了如何使用<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension>与命令窗口。</span><span class="sxs-lookup"><span data-stu-id="817da-121">Instead, it demonstrates how to use the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> with a command window.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SchemaImporterExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SchemaImporterExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="817da-122">初始化 <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-122">Initializes a new instance of the <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAnyElement">
      <MemberSignature Language="C#" Value="public virtual string ImportAnyElement (System.Xml.Schema.XmlSchemaAny any, bool mixed, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportAnyElement(class System.Xml.Schema.XmlSchemaAny any, bool mixed, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportAnyElement (any As XmlSchemaAny, mixed As Boolean, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportAnyElement(System::Xml::Schema::XmlSchemaAny ^ any, bool mixed, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportAnyElement : System.Xml.Schema.XmlSchemaAny * bool * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportAnyElement : System.Xml.Schema.XmlSchemaAny * bool * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportAnyElement (any, mixed, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="any" Type="System.Xml.Schema.XmlSchemaAny" />
        <Parameter Name="mixed" Type="System.Boolean" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="any">
          <span data-ttu-id="817da-123">一个 <see cref="T:System.Xml.Schema.XmlSchemaAny" />，表示在 XML 架构文档 (XSD) 中找到的 <see langword="xsd:any" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-123">An <see cref="T:System.Xml.Schema.XmlSchemaAny" /> that represents the <see langword="xsd:any" /> element found in the XML Schema Document (XSD).</span>
          </span>
        </param>
        <param name="mixed">
          <span data-ttu-id="817da-124">
            <see cref="T:System.Boolean" />，指示 XSD <see langword="complex" /> 特性是否已设置为“mixed”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-124">A <see cref="T:System.Boolean" /> that indicates whether the XSD <see langword="complex" /> attribute has been set to "mixed".</span>
          </span>
          <span data-ttu-id="817da-125">如果该特性已设置为“mixed”，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-125">
              <see langword="true" />, if the attribute has been set to mixed, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="schemas">
          <span data-ttu-id="817da-126">
            <see cref="T:System.Xml.Serialization.XmlSchemas" />，包含 XSD 中的架构的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-126">An <see cref="T:System.Xml.Serialization.XmlSchemas" /> that contains the collection of schemas found in the XSD.</span>
          </span>
        </param>
        <param name="importer">
          <span data-ttu-id="817da-127">正在使用的导入程序 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-127">The <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that is the importer being used.</span>
          </span>
        </param>
        <param name="compileUnit">
          <span data-ttu-id="817da-128">
            <see cref="T:System.CodeDom.CodeCompileUnit" />，可向其添加 CodeDOM 结构以生成 XSD 的备选代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-128">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD.</span>
          </span>
        </param>
        <param name="mainNamespace">
          <span data-ttu-id="817da-129">表示元素的当前命名空间的 <see cref="T:System.CodeDom.CodeNamespace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-129">A <see cref="T:System.CodeDom.CodeNamespace" /> that represents the current namespace for the element.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="817da-130">用于代码编译器的设置选项的 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-130">A <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> for the setting options on the code compiler.</span>
          </span>
        </param>
        <param name="codeProvider">
          <span data-ttu-id="817da-131">
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />，用来生成新代码的 CodeDOM 提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-131">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that is the CodeDOM provider used to generate the new code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="817da-132">处理架构中的 &lt;xsd:any&gt; 元素的导入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-132">Handles the importation of the &lt;xsd:any&gt; elements in the schema.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="817da-133">该元素映射到的 CLR 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-133">The name of the CLR type that the element maps to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="817da-134">若要控制的代码生成，你必须使用中找到的类<xref:System.CodeDom>命名空间。</span><span class="sxs-lookup"><span data-stu-id="817da-134">In order to control the generation of the code, you must use the classes found in the <xref:System.CodeDom> namespace.</span></span> <span data-ttu-id="817da-135">有关详细信息，请参阅[使用 CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md)和[CodeDOM 快速参考](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx)。</span><span class="sxs-lookup"><span data-stu-id="817da-135">For more information, see [Using the CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) and [CodeDOM Quick Reference](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportDefaultValue">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeExpression ImportDefaultValue (string value, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression ImportDefaultValue(string value, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDefaultValue (value As String, type As String) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeExpression ^ ImportDefaultValue(System::String ^ value, System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ImportDefaultValue : string * string -&gt; System.CodeDom.CodeExpression&#xA;override this.ImportDefaultValue : string * string -&gt; System.CodeDom.CodeExpression" Usage="schemaImporterExtension.ImportDefaultValue (value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="817da-136">原始 XSD 中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-136">The value found in the original XSD.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="817da-137">XSD 类型名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-137">The XSD type name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="817da-138">允许为正在导入的 XSD 类型指定默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-138">Allows you to specify the default value for the XSD type being imported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="817da-139">设置新默认值的 <see cref="T:System.CodeDom.CodeExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-139">A <see cref="T:System.CodeDom.CodeExpression" /> setting the new default value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="817da-140">若要控制的代码生成，你必须使用中找到的类<xref:System.CodeDom>命名空间。</span><span class="sxs-lookup"><span data-stu-id="817da-140">In order to control the generation of the code, you must use the classes found in the <xref:System.CodeDom> namespace.</span></span> <span data-ttu-id="817da-141">有关详细信息，请参阅[使用 CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md)和[CodeDOM 快速参考](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx)。</span><span class="sxs-lookup"><span data-stu-id="817da-141">For more information, see [Using the CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) and [CodeDOM Quick Reference](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportSchemaType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="817da-142">允许您检查导入的架构并指定该架构映射到的 CLR 类型，从而对生成的代码进行操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-142">Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="817da-143">下面的示例演示的简单实现<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="817da-143">The example below shows a simple implementation of the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> method.</span></span> <span data-ttu-id="817da-144">代码将检查命名空间和名称。</span><span class="sxs-lookup"><span data-stu-id="817da-144">The code checks the namespace and name.</span></span> <span data-ttu-id="817da-145">找到正确的值，它会添加自定义程序集的名称 ("Order.dll") 必须引用生成的代码中。</span><span class="sxs-lookup"><span data-stu-id="817da-145">When the right values are found, it adds the name of a custom assembly ("Order.dll") that must be referenced in the generated code.</span></span> <span data-ttu-id="817da-146">然后，它将添加新的命名空间 ("Microsoft.Samples") 在代码中生成。</span><span class="sxs-lookup"><span data-stu-id="817da-146">It then adds a new namespace ("Microsoft.Samples") that is generated in the code.</span></span>  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportSchemaType">
      <MemberSignature Language="C#" Value="public virtual string ImportSchemaType (System.Xml.Schema.XmlSchemaType type, System.Xml.Schema.XmlSchemaObject context, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportSchemaType(class System.Xml.Schema.XmlSchemaType type, class System.Xml.Schema.XmlSchemaObject context, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportSchemaType (type As XmlSchemaType, context As XmlSchemaObject, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportSchemaType(System::Xml::Schema::XmlSchemaType ^ type, System::Xml::Schema::XmlSchemaObject ^ context, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchemaType : System.Xml.Schema.XmlSchemaType * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportSchemaType : System.Xml.Schema.XmlSchemaType * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportSchemaType (type, context, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.Schema.XmlSchemaType" />
        <Parameter Name="context" Type="System.Xml.Schema.XmlSchemaObject" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="817da-147">表示 XSD 类型的 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-147">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that represents the XSD type.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="817da-148">
            <see cref="T:System.Xml.Schema.XmlSchemaObject" />，表示架构信息，如 XML 元素的行号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-148">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents schema information, such as the line number of the XML element.</span>
          </span>
        </param>
        <param name="schemas">
          <span data-ttu-id="817da-149">
            <see cref="T:System.Xml.Serialization.XmlSchemas" />，包含文档中的架构集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-149">An <see cref="T:System.Xml.Serialization.XmlSchemas" /> that contains the collection of schemas in the document.</span>
          </span>
        </param>
        <param name="importer">
          <span data-ttu-id="817da-150">正在使用的导入程序 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-150">The <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that is the importer being used.</span>
          </span>
        </param>
        <param name="compileUnit">
          <span data-ttu-id="817da-151">
            <see cref="T:System.CodeDom.CodeCompileUnit" />，可向其添加 CodeDOM 结构以生成 XSD 的备选代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-151">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD.</span>
          </span>
        </param>
        <param name="mainNamespace">
          <span data-ttu-id="817da-152">表示元素的当前命名空间的 <see cref="T:System.CodeDom.CodeNamespace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-152">A <see cref="T:System.CodeDom.CodeNamespace" /> that represents the current namespace for the element.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="817da-153">用于代码编译器的设置选项的 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-153">A <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> for the setting options on the code compiler.</span>
          </span>
        </param>
        <param name="codeProvider">
          <span data-ttu-id="817da-154">用来生成新代码的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-154">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that is used to generate the new code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="817da-155">允许您检查导入的架构并指定该架构映射到的 CLR 类型，从而对生成的代码进行操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-155">Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="817da-156">此架构映射到的 CLR 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-156">The name of the CLR type that this maps to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="817da-157">下面的示例演示的简单实现<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="817da-157">The example below shows a simple implementation of the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> method.</span></span> <span data-ttu-id="817da-158">代码将检查命名空间和名称。</span><span class="sxs-lookup"><span data-stu-id="817da-158">The code checks the namespace and name.</span></span> <span data-ttu-id="817da-159">找到正确的值，它会添加自定义程序集的名称 ("Order.dll") 必须引用生成的代码中。</span><span class="sxs-lookup"><span data-stu-id="817da-159">When the right values are found, it adds the name of a custom assembly ("Order.dll") that must be referenced in the generated code.</span></span> <span data-ttu-id="817da-160">然后，它将添加新的命名空间 ("Microsoft.Samples") 在代码中生成。</span><span class="sxs-lookup"><span data-stu-id="817da-160">It then adds a new namespace ("Microsoft.Samples") that is generated in the code.</span></span>  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportSchemaType">
      <MemberSignature Language="C#" Value="public virtual string ImportSchemaType (string name, string ns, System.Xml.Schema.XmlSchemaObject context, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportSchemaType(string name, string ns, class System.Xml.Schema.XmlSchemaObject context, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportSchemaType (name As String, ns As String, context As XmlSchemaObject, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportSchemaType(System::String ^ name, System::String ^ ns, System::Xml::Schema::XmlSchemaObject ^ context, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchemaType : string * string * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportSchemaType : string * string * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportSchemaType (name, ns, context, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="context" Type="System.Xml.Schema.XmlSchemaObject" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="817da-161">元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-161">The name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="817da-162">元素的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-162">The namespace of the element.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="817da-163">
            <see cref="T:System.Xml.Schema.XmlSchemaObject" />，表示架构信息，如 XML 元素的行号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-163">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents schema information, such as the line number of the XML element.</span>
          </span>
        </param>
        <param name="schemas">
          <span data-ttu-id="817da-164">
            <see cref="T:System.Xml.Serialization.XmlSchemas" />，包含文档中的架构集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-164">An <see cref="T:System.Xml.Serialization.XmlSchemas" /> that contains the collection of schemas in the document.</span>
          </span>
        </param>
        <param name="importer">
          <span data-ttu-id="817da-165">正在使用的导入程序 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-165">The <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that is the importer being used.</span>
          </span>
        </param>
        <param name="compileUnit">
          <span data-ttu-id="817da-166">
            <see cref="T:System.CodeDom.CodeCompileUnit" />，可向其添加 CodeDOM 结构以生成 XSD 的备选代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-166">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to which you can add CodeDOM structures to generate alternative code for the XSD.</span>
          </span>
        </param>
        <param name="mainNamespace">
          <span data-ttu-id="817da-167">表示元素的当前命名空间的 <see cref="T:System.CodeDom.CodeNamespace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-167">A <see cref="T:System.CodeDom.CodeNamespace" /> that represents the current namespace for the element.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="817da-168">用于代码编译器的设置选项的 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-168">A <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> for the setting options on the code compiler.</span>
          </span>
        </param>
        <param name="codeProvider">
          <span data-ttu-id="817da-169">用来生成新代码的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-169">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that is used to generate the new code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="817da-170">允许您检查导入的架构并指定该架构映射到的 CLR 类型，从而对生成的代码进行操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-170">Allows you to manipulate the code generated by examining the imported schema and specifying the CLR type that it maps to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="817da-171">此架构映射到的 CLR 类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="817da-171">The name of the CLR type that this maps to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="817da-172">若要控制的代码生成，你必须使用中找到的类<xref:System.CodeDom>命名空间。</span><span class="sxs-lookup"><span data-stu-id="817da-172">In order to control the generation of the code, you must use the classes found in the <xref:System.CodeDom> namespace.</span></span> <span data-ttu-id="817da-173">有关详细信息，请参阅[使用 CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md)和[CodeDOM 快速参考](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx)。</span><span class="sxs-lookup"><span data-stu-id="817da-173">For more information, see [Using the CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) and [CodeDOM Quick Reference](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="817da-174">下面的示例演示的简单实现<xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="817da-174">The example below shows a simple implementation of the <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> method.</span></span> <span data-ttu-id="817da-175">代码将检查命名空间和名称。</span><span class="sxs-lookup"><span data-stu-id="817da-175">The code checks the namespace and name.</span></span> <span data-ttu-id="817da-176">找到正确的值，它会添加自定义程序集的名称 ("Order.dll") 必须引用生成的代码中。</span><span class="sxs-lookup"><span data-stu-id="817da-176">When the right values are found, it adds the name of a custom assembly ("Order.dll") that must be referenced in the generated code.</span></span> <span data-ttu-id="817da-177">然后，它将添加新的命名空间 ("Microsoft.Samples") 在代码中生成。</span><span class="sxs-lookup"><span data-stu-id="817da-177">It then adds a new namespace ("Microsoft.Samples") that is generated in the code.</span></span>  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>