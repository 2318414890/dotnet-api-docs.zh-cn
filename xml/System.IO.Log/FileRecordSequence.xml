<Type Name="FileRecordSequence" FullName="System.IO.Log.FileRecordSequence">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ecfd2f9adf712de82b95e3f9312144d4688156a3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420691" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileRecordSequence : IDisposable, System.IO.Log.IRecordSequence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRecordSequence extends System.Object implements class System.IDisposable, class System.IO.Log.IRecordSequence" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRecordSequence&#xA;Implements IDisposable, IRecordSequence" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRecordSequence sealed : IDisposable, System::IO::Log::IRecordSequence" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IO.Log.IRecordSequence</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="de3d0-101">在文件上实现 <see cref="T:System.IO.Log.IRecordSequence" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de3d0-101">Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file.</span>
      </span>
      <span data-ttu-id="de3d0-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de3d0-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-103"><xref:System.IO.Log.FileRecordSequence> 是基于文件系统中的单一日志文件的记录序列。</span><span class="sxs-lookup"><span data-stu-id="de3d0-103">The <xref:System.IO.Log.FileRecordSequence> is a record sequence based on a single log file in the file system.</span></span> <span data-ttu-id="de3d0-104">它是 <xref:System.IO.Log.IRecordSequence> 接口在基于简单文件的日志之上的简单实现。</span><span class="sxs-lookup"><span data-stu-id="de3d0-104">It is a simple implementation of the <xref:System.IO.Log.IRecordSequence> interface, on top of a simple file-based log.</span></span>  
  
 <span data-ttu-id="de3d0-105">若要操作基于文件的日志，运行应用程序时使用的帐户必须具有足够的特权，这与构造 <xref:System.IO.Log.FileRecordSequence> 时文件系统安全性所规定的要求是相同的。</span><span class="sxs-lookup"><span data-stu-id="de3d0-105">To manipulate a file-based log, the account that your application is running in must have sufficient privileges, as dictated by the file system security at the time the <xref:System.IO.Log.FileRecordSequence> is constructed.</span></span> <span data-ttu-id="de3d0-106">此外，在构造时要发出 FullTrust 请求。</span><span class="sxs-lookup"><span data-stu-id="de3d0-106">In addition, a demand for FullTrust is made at construction time.</span></span> <span data-ttu-id="de3d0-107">此后，要对权限验证结果进行缓存，以便与 Windows 安全模式保持一致。</span><span class="sxs-lookup"><span data-stu-id="de3d0-107">The permission verification results are cached thereafter in keeping with the Windows security model.</span></span> <span data-ttu-id="de3d0-108">应该确保您没有意外地向未授权用户公开记录序列的内容。</span><span class="sxs-lookup"><span data-stu-id="de3d0-108">You should ensure that you do not accidentally expose the contents of the record sequence to an unauthorized user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de3d0-109">下面的示例创建一个记录序列，向该序列追加记录，最后读取这些记录。</span><span class="sxs-lookup"><span data-stu-id="de3d0-109">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-110">初始化 <see cref="T:System.IO.Log.FileRecordSequence" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-110">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="de3d0-111">此 <see cref="T:System.IO.Log.FileRecordSequence" /> 实例将封装的文件的相对路径或绝对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-111">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-112">使用指定的文件初始化 <see cref="T:System.IO.Log.FileRecordSequence" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-112">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-113">此构造函数创建对文件的读/写访问权限，并使用共享读访问权限打开该文件。</span><span class="sxs-lookup"><span data-stu-id="de3d0-113">This constructor creates read/write access to the file, and opens the file with share Read access.</span></span> <span data-ttu-id="de3d0-114">这意味着，此进程或另一进程打开文件进行写入的请求将失败，直到已释放此 <xref:System.IO.Log.FileRecordSequence> 实例，但读取尝试将会成功。</span><span class="sxs-lookup"><span data-stu-id="de3d0-114">This means that requests to open the file for writing by this or another process fails until this <xref:System.IO.Log.FileRecordSequence> instance has been disposed of, but read attempts will succeed.</span></span> <span data-ttu-id="de3d0-115">如果找不到 `path`，将创建一个大小为 0 字节的新文件。</span><span class="sxs-lookup"><span data-stu-id="de3d0-115">If `path` is not found, a new file is created with a size of 0 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de3d0-116">下面的示例创建一个记录序列，向该序列追加记录，读取这些记录，最后释放该序列。</span><span class="sxs-lookup"><span data-stu-id="de3d0-116">The following example creates a record sequence, appends record to it, reads the records, and finally diposes the sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-117">
            <paramref name="path" /> 指定的文件无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-117">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="de3d0-118">找不到 <paramref name="path" /> 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-118">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-119">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-119">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-120">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-120">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="de3d0-121">操作系统拒绝了对指定的日志存储区的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-121">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="de3d0-122">此 <see cref="T:System.IO.Log.FileRecordSequence" /> 实例将封装的文件的相对路径或绝对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-122">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="de3d0-123">一个有效的 <see cref="T:System.IO.FileAccess" /> 值，用于控制用户对日志文件的访问类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-123">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-124">使用指定的文件和访问模式初始化 <see cref="T:System.IO.Log.FileRecordSequence" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-124">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-125">
            <paramref name="path" /> 指定的文件无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-125">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="de3d0-126">找不到 <paramref name="path" /> 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-126">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-127">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-127">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-128">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-128">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="de3d0-129">操作系统拒绝了对指定的日志存储区的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-129">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="de3d0-130">此 <see cref="T:System.IO.Log.FileRecordSequence" /> 实例将封装的文件的相对路径或绝对路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-130">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="de3d0-131">一个有效的 <see cref="T:System.IO.FileAccess" /> 值，用于控制用户对日志文件的访问类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-131">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="de3d0-132">要打开的日志文件的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-132">The size of the log file to be opened.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-133">使用指定的文件、访问模式和文件大小初始化 <see cref="T:System.IO.Log.FileRecordSequence" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-133">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-134">一个或多个参数超出有效范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-134">One or more of the parameters are out of the valid range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-135">
            <paramref name="path" /> 指定的文件无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-135">The file specified by <paramref name="path" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="de3d0-136">找不到 <paramref name="path" /> 指定的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-136">The file specified by <paramref name="path" /> cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-137">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-137">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-138">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-138">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="de3d0-139">操作系统拒绝了对指定的日志存储区的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-139">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="de3d0-140">记录序列的新的基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-140">The new base sequence number of the record sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-141">前移日志的基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-141">Moves the base sequence number of the log forward.</span>
          </span>
          <span data-ttu-id="de3d0-142">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-142">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-143">
            <paramref name="newBaseSequenceNumber" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-143">
              <paramref name="newBaseSequenceNumber" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-144">
            <paramref name="newBaseSequenceNumber" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-144">
              <paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-145">修改序列时，发生了 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-145">An I/O error occurred while modifying the sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-146">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-146">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-147">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-147">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-148">将日志记录写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-148">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="de3d0-149">下面的示例创建一个记录序列，向该序列追加记录，最后读取这些记录。</span><span class="sxs-lookup"><span data-stu-id="de3d0-149">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#0)]
 [!code-vb[IRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-150">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-150">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-151">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-151">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-152">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-152">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-153">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-153">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-154">将日志记录写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-154">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="de3d0-155">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-155">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-156">追加的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-156">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-157">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-157">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-158">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-158">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-159">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-159">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="de3d0-160">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-160">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de3d0-161">下面的示例创建一个记录序列，向该序列追加记录，最后读取这些记录。</span><span class="sxs-lookup"><span data-stu-id="de3d0-161">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[FileRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/filerecordsequence/cs/filerecordsequence.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-162">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-162">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-163">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-163">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-164">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-164">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-165">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-165">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-166">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-166">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-167">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-167">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-168">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-168">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-169">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-169">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-170">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-170">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-171">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-171">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-172">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-172">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-173">将日志记录写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-173">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="de3d0-174">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-174">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-175">追加的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-175">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-176">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-176">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-177">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-177">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-178">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-178">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="de3d0-179">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-179">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de3d0-180">下面的示例演示如何使用此方法创建记录序列。</span><span class="sxs-lookup"><span data-stu-id="de3d0-180">The following example shows how you can create a record sequence with this method.</span></span>  
  
 [!code-csharp[IRecordSequence#3](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#3)] 
 [!code-vb[IRecordSequence#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#3)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-181">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-181">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-182">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-182">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-183">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-183">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-184">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-184">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-185">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-185">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-186">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-186">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-187">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-187">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-188">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-188">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-189">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-189">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-190">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-190">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-191">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-191">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-192">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此记录的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-192">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-193">使用序列中先前保留的空间将日志记录写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-193">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-194">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-194">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-195">追加的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-195">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-196">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-196">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-197">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-197">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-198">追加的记录将使用 `reservations` 参数指定的保留来占用先前已保留的空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-198">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="de3d0-199">如果追加成功，它将占用能容纳数据的最小保留区域，而该保留区域将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="de3d0-199">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="de3d0-200">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-200">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="de3d0-201">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-201">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-202">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-202">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-203">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-203">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-204">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-204">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-205">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-205">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-206">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-206">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-207">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-207">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-208">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-208">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-209">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-209">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-210">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-210">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-211">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-211">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-212">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-212">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-213">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-213">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-214">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-214">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-215">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此记录的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-215">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-216">使用序列中先前保留的空间将日志记录写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-216">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-217">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-217">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-218">追加的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-218">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-219">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-219">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-220">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-220">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-221">追加的记录将使用 `reservations` 参数指定的保留来占用先前已保留的空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-221">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="de3d0-222">如果追加成功，它将占用能容纳数据的最小保留区域，而该保留区域将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="de3d0-222">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="de3d0-223">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-223">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="de3d0-224">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-224">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-225">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-225">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-226">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-226">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-227">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-227">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-228">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-228">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-229">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-229">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-230">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-230">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-231">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-231">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-232">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-232">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-233">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-233">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.BaseSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-234">获取当前 <see cref="T:System.IO.Log.FileRecordSequence" /> 中第一条有效记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-234">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de3d0-235">与 <see cref="T:System.IO.Log.FileRecordSequence" /> 中的有效记录对应的最低序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-235">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-236">有效序列号大于或等于 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> 且小于 <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="de3d0-236">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="de3d0-237">所有其他序列号均无效。</span><span class="sxs-lookup"><span data-stu-id="de3d0-237">All other sequence numbers are invalid.</span></span>  
  
 <span data-ttu-id="de3d0-238">此属性的值可以通过调用 <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> 或 <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> 方法来更改。</span><span class="sxs-lookup"><span data-stu-id="de3d0-238">The value of this property can be changed by calling the <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> or <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de3d0-239">下面的示例演示如何在循环中使用 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>：</span><span class="sxs-lookup"><span data-stu-id="de3d0-239">The following example shows using <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> in a loop:</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-240">该属性是在序列已释放之后访问的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-240">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-241">开始异步追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-241">Begins an asynchronous append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-242">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-242">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-243">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-243">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-244">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-244">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-245">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-245">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-246">可选的异步回调，在追加完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-246">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-247">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-247">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-248">开始异步追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-248">Begins an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="de3d0-249">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-249">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-250">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步追加。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-250">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-251">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 方法，以确保追加操作已完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-251">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="de3d0-252">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-252">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-253">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-253">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-254">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-254">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-255">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-255">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="de3d0-256">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-256">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-257">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-257">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-258">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-258">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-259">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-259">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-260">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-260">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-261">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-261">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-262">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-262">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-263">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-263">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-264">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-264">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-265">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-265">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-266">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-266">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-267">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-267">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-268">可选的异步回调，在追加完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-268">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-269">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-269">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-270">开始异步追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-270">Begins an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="de3d0-271">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-271">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-272">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步追加。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-272">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-273">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 方法，以确保追加操作已完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-273">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="de3d0-274">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-274">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-275">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-275">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-276">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-276">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-277">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-277">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="de3d0-278">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-278">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-279">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-279">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-280">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-280">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-281">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-281">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-282">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-282">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-283">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-283">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-284">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-284">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-285">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-285">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-286">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-286">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-287">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-287">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-288">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-288">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-289">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-289">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-290">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此记录的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-290">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-291">可选的异步回调，在追加完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-291">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-292">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-292">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-293">使用序列中先前保留的空间开始异步追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-293">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-294">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-294">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-295">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步追加。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-295">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-296">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 方法，以确保追加操作已完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-296">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="de3d0-297">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-297">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-298">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-298">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-299">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-299">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-300">追加的记录将使用 `reservations` 参数指定的保留来占用先前已保留的空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-300">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="de3d0-301">如果追加成功，它将占用能容纳数据的最小保留区域，而该保留区域将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="de3d0-301">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="de3d0-302">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-302">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="de3d0-303">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-303">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-304">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-304">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-305">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-305">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-306">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-306">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-307">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-307">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-308">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-308">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-309">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-309">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-310">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-310">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-311">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-311">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-312">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-312">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-313">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-313">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-314">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-314">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-315">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-315">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-316">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-316">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-317">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此记录的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-317">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-318">可选的异步回调，在追加完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-318">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-319">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-319">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-320">使用序列中先前保留的空间开始异步追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-320">Begins an asynchronous append operation using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-321">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-321">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-322">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步追加。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-322">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-323">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 方法，以确保追加操作已完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-323">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="de3d0-324">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-324">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-325">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-325">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-326">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-326">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-327">追加的记录将使用 `reservations` 参数指定的保留来占用先前已保留的空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-327">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="de3d0-328">如果追加成功，它将占用能容纳数据的最小保留区域，而该保留区域将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="de3d0-328">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="de3d0-329">通常，此方法在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-329">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="de3d0-330">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-330">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-331">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-331">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-332">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-332">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-333">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-333">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-334">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-334">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-335">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-335">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-336">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-336">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-337">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-337">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-338">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-338">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-339">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-339">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="de3d0-340">必须写入的最新记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-340">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="de3d0-341">如果 <see cref="T:System.IO.Log.SequenceNumber" /> 无效，则必须写入所有记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-341">If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-342">可选的异步回调，在刷新完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-342">An optional asynchronous callback, to be called when the flush is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-343">用户提供的对象，用于将此特定异步刷新请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-343">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-344">使用序列中先前保留的空间开始异步刷新操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-344">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-345">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-345">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-346">一个 <see cref="T:System.IAsyncResult" />，表示可能仍处于挂起状态的异步刷新操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-346">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-347">应将当前方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 方法，以确保刷新完成并适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-347">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="de3d0-348">如果在异步刷新过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-348">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-349">调用此方法可以确保已追加到 <xref:System.IO.Log.FileRecordSequence> 的所有记录都是持久写入的。</span><span class="sxs-lookup"><span data-stu-id="de3d0-349">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="de3d0-350">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-350">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="de3d0-351">异步刷新请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-351">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-352">一个或多个自变量无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-352">One or more of the arguments is invalid.</span>
          </span>
          <span data-ttu-id="de3d0-353">
            <paramref name="sequenceNumber" /> 对此序列无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-353">
              <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-354">
            <paramref name="sequenceNumber" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-354">
              <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-355">刷新数据时，发生了 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-355">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-356">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-356">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-357">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-357">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-358">开始异步保留和追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-358">Begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-359">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-359">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-360">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-360">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-361">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-361">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-362">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-362">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="de3d0-363">要在其中生成保留的保留集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-363">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-364">要生成的保留（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-364">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-365">可选的异步回调，在追加完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-365">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-366">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-366">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-367">开始异步保留和追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-367">Begins an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="de3d0-368">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-368">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-369">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的当前异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-369">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-370">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法，以确保追加操作已完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-370">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="de3d0-371">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-371">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-372">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-372">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-373">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-373">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-374">在原子操作中，使用记录追加操作将指定的保留添加到所提供的保留集合。</span><span class="sxs-lookup"><span data-stu-id="de3d0-374">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="de3d0-375">如果追加失败，将不保留任何空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-375">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="de3d0-376">通常，此方法可以在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-376">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="de3d0-377">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-377">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="de3d0-378">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-378">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="de3d0-379">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-379">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-380">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-380">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-381">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-381">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-382">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-382">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-383">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-383">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-384">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-384">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-385">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-385">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-386">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-386">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-387">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-387">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-388">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-388">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-389">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-389">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-390">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-390">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-391">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-391">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-392">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-392">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="de3d0-393">要在其中生成保留的保留集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-393">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-394">要生成的保留（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-394">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-395">可选的异步回调，在追加完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-395">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-396">用户提供的对象，用于将此特定异步追加请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-397">开始异步保留和追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-397">Begins an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="de3d0-398">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-398">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-399">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的当前异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-399">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-400">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法，以确保追加操作已完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-400">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="de3d0-401">如果在异步追加过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-401">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-402">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-402">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-403">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-403">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-404">在原子操作中，使用记录追加操作将指定的保留添加到所提供的保留集合。</span><span class="sxs-lookup"><span data-stu-id="de3d0-404">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="de3d0-405">如果追加失败，将不保留任何空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-405">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="de3d0-406">通常，此方法可以在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-406">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="de3d0-407">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-407">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="de3d0-408">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-408">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="de3d0-409">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-409">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-410">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-410">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-411">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-411">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-412">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-412">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-413">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-413">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-414">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-414">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-415">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-415">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-416">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-416">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-417">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-417">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-418">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-418">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-419">开始异步重新开始区域写入操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-419">Begins an asynchronous restart area write operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-420">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-420">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="de3d0-421">新的基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-421">The new base sequence number.</span>
          </span>
          <span data-ttu-id="de3d0-422">指定的序列号必须大于或等于当前基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-422">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="de3d0-423">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此重新开始区域的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-423">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-424">可选的异步回调，在重新开始区域写入完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-424">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-425">用户提供的对象，用于将此特定异步重新开始区域写入请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-425">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-426">使用序列中先前保留的空间开始异步重新开始区域写入操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-426">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-427">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-427">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-428">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步重新开始区域写入操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-428">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-429">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 方法，以确保重新开始区域写入操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-429">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="de3d0-430">如果在异步重新开始区域写入操作过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-430">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-431">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-431">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-432">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-432">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-433">操作成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="de3d0-433">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="de3d0-434">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="de3d0-434">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="de3d0-435">如果指定了 <xref:System.IO.Log.ReservationCollection>，写入的重新开始区域将使用集合中包含的保留来占用先前已保留的空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-435">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="de3d0-436">如果该方法成功，它将占用能容纳数据的最小保留，而该保留将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="de3d0-436">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="de3d0-437">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-437">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="de3d0-438">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-438">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-439">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-439">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-440">
            <paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-440">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="de3d0-441">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-441">-or-</span>
          </span>
          <span data-ttu-id="de3d0-442">活动日志新存档或现有存档的尾数据或基数据无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-442">A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-443">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-443">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="de3d0-444">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-444">-or-</span>
          </span>
          <span data-ttu-id="de3d0-445">
            <paramref name="newBaseSeqNum" /> 对此序列无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-445">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-446">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-446">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-447">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-447">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-448">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-448">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-449">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-449">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-450">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-450">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-451">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-451">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-452">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-452">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="de3d0-453">新的基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-453">The new base sequence number.</span>
          </span>
          <span data-ttu-id="de3d0-454">指定的序列号必须大于或等于当前基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-454">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="de3d0-455">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此重新开始区域的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-455">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="de3d0-456">可选的异步回调，在重新开始区域写入完成时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-456">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="de3d0-457">用户提供的对象，用于将此特定异步重新开始区域写入请求与其他请求区别开来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-457">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-458">使用序列中先前保留的空间开始异步重新开始区域写入操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-458">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-459">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-459">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-460">一个 <see cref="T:System.IAsyncResult" />，它表示可能仍处于挂起状态的异步重新开始区域写入操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-460">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-461">应将此方法返回的 <xref:System.IAsyncResult> 传递给 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 方法，以确保重新开始区域写入操作完成并能够适当释放资源。</span><span class="sxs-lookup"><span data-stu-id="de3d0-461">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="de3d0-462">如果在异步重新开始区域写入操作过程中发生错误，则在使用此方法返回的 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 调用 <xref:System.IAsyncResult> 方法之前，不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-462">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="de3d0-463">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-463">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-464">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-464">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-465">操作成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="de3d0-465">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="de3d0-466">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="de3d0-466">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="de3d0-467">如果指定了 <xref:System.IO.Log.ReservationCollection>，写入的重新开始区域将使用集合中包含的保留来占用先前已保留的空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-467">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="de3d0-468">如果该方法成功，它将占用能容纳数据的最小保留，而该保留将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="de3d0-468">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="de3d0-469">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-469">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="de3d0-470">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-470">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-471">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-471">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-472">
            <paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-472">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="de3d0-473">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-473">-or-</span>
          </span>
          <span data-ttu-id="de3d0-474">活动日志新存档或现有存档的尾数据或基数据无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-474">A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-475">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-475">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="de3d0-476">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-476">-or-</span>
          </span>
          <span data-ttu-id="de3d0-477">
            <paramref name="newBaseSeqNum" /> 对此序列无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-477">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-478">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-478">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-479">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-479">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-480">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-480">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-481">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-481">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-482">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-482">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-483">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-483">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.CreateReservationCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-484">创建一个新的 <see cref="T:System.IO.Log.ReservationCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-484">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="de3d0-485">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-485">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-486">新创建的 <see cref="T:System.IO.Log.ReservationCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-486">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-487">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-487">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-488">立即释放对象使用的非托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-488">Immediately releases the unmanaged resources used by an object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-489">刷新数据时，发生了 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-489">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-490">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-490">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-491">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-491">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="de3d0-492">对未完成的异步 I/O 请求的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-492">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-493">结束异步追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-493">Ends an asynchronous append operation.</span>
          </span>
          <span data-ttu-id="de3d0-494">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-494">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-495">追加的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-495">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-496">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-496">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="de3d0-497">调用 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 时，异步写入请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将变得可见。</span><span class="sxs-lookup"><span data-stu-id="de3d0-497">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="de3d0-498">必须对 <xref:System.IAsyncResult> 方法返回的每个 <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> 调用此方法且只能调用一次。</span><span class="sxs-lookup"><span data-stu-id="de3d0-498">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-499">
            <paramref name="result" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-499">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="de3d0-500">已对此异步操作调用了 <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-500">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-501">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-501">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-502">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-502">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-503">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-503">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="de3d0-504">对未完成的异步 I/O 请求的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-504">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-505">结束异步刷新操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-505">Ends an asynchronous flush operation.</span>
          </span>
          <span data-ttu-id="de3d0-506">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-506">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-507">写入的最新记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-507">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-508">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-508">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="de3d0-509">调用 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 时，异步刷新请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将变得可见。</span><span class="sxs-lookup"><span data-stu-id="de3d0-509">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="de3d0-510">必须对 <xref:System.IAsyncResult> 方法返回的每个 <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> 调用此方法且只能调用一次。</span><span class="sxs-lookup"><span data-stu-id="de3d0-510">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-511">
            <paramref name="result" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-511">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="de3d0-512">已对此异步操作调用了 <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-512">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-513">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-513">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-514">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-514">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-515">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-515">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="de3d0-516">对未完成的异步 I/O 请求的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-516">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-517">结束异步保留和追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-517">Ends an asynchronous reserve and append operation.</span>
          </span>
          <span data-ttu-id="de3d0-518">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-518">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-519">追加的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-519">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-520">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-520">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="de3d0-521">调用 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 时，异步写入请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将变得可见。</span><span class="sxs-lookup"><span data-stu-id="de3d0-521">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="de3d0-522">必须对 <xref:System.IAsyncResult> 方法返回的每个 <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> 调用此方法且只能调用一次。</span><span class="sxs-lookup"><span data-stu-id="de3d0-522">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-523">
            <paramref name="result" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-523">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="de3d0-524">已对此异步操作调用了 <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-524">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-525">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-525">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-526">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-526">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-527">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-527">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="de3d0-528">对未完成的异步 I/O 请求的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-528">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-529">结束异步重新开始区域写入操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-529">Ends an asynchronous restart area write operation.</span>
          </span>
          <span data-ttu-id="de3d0-530">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-530">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-531">写入的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-531">The sequence number of the written log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-532">此方法将一直阻塞，直到 I/O 操作已完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-532">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="de3d0-533">调用 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 时，异步写入请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将变得可见。</span><span class="sxs-lookup"><span data-stu-id="de3d0-533">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="de3d0-534">必须对 <xref:System.IAsyncResult> 方法返回的每个 <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> 调用此方法且只能调用一次。</span><span class="sxs-lookup"><span data-stu-id="de3d0-534">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-535">
            <paramref name="result" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-535">
              <paramref name="result" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="de3d0-536">已对此异步操作调用了 <see langword="End" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-536">
              <see langword="End" /> has already been called for this asynchronous operation.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-537">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-537">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-538">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-538">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-539">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-539">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-540">导致持久写入追加的记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-540">Causes appended records to be durably written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-541">确保所有追加的记录都已写入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-541">Ensures that all appended records have been written.</span>
          </span>
          <span data-ttu-id="de3d0-542">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-542">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-543">写入的最新记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-543">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-544">调用此方法可以确保已追加到 <xref:System.IO.Log.FileRecordSequence> 的所有记录都已持久写入。</span><span class="sxs-lookup"><span data-stu-id="de3d0-544">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-545">刷新数据时，发生了 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-545">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-546">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-546">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-547">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-547">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="de3d0-548">必须写入的最新记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-548">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="de3d0-549">如果此 <see cref="T:System.IO.Log.SequenceNumber" /> 无效，则必须写入所有记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-549">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-550">确保所有追加的记录都已写入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-550">Ensures that all appended records have been written.</span>
          </span>
          <span data-ttu-id="de3d0-551">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-551">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-552">写入的最新记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-552">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-553">调用此方法可以确保序列号不高于指定序列号的所有记录都已持久写入。</span><span class="sxs-lookup"><span data-stu-id="de3d0-553">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-554">
            <paramref name="sequenceNumber" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-554">
              <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-555">
            <paramref name="sequenceNumber" /> 对此序列无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-555">
              <paramref name="sequenceNumber" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-556">刷新数据时，发生了 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-556">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-557">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-557">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-558">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-558">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.LastSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-559">获取比追加的最新记录大的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-559">Gets the sequence number which is greater than the last record appended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de3d0-560">比追加的最新记录大的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-560">A sequence number which is greater than the last record appended.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-561">此属性包含一个序列号，并且保证它大于最后追加的记录的序列号。</span><span class="sxs-lookup"><span data-stu-id="de3d0-561">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="de3d0-562">有效序列号大于或等于 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> 且小于 <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="de3d0-562">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="de3d0-563">所有其他序列号均无效。</span><span class="sxs-lookup"><span data-stu-id="de3d0-563">All other sequence numbers are invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-564">该属性是在序列已释放之后访问的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-564">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.MaximumRecordLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-565">获取可以追加到此序列或者从此序列中读取的最大记录的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-565">Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de3d0-566">可以追加到此序列或者从此序列中读取的最大记录的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-566">The size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-567">该属性是在序列已释放之后访问的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-567">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="de3d0-568">读取操作开始处的第一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-568">The sequence number of the first record where the reading starts.</span>
          </span>
        </param>
        <param name="logRecordEnum">
          <span data-ttu-id="de3d0-569">一个有效的 <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> 值，该值指定从 <see cref="T:System.IO.Log.LogRecordSequence" /> 中读取记录的方式（即，向前或向后）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-569">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-570">返回序列中记录的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-570">Returns an enumerable collection of records in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-571">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-571">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-572">序列中记录的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-572">An enumerable collection of records in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-573">此方法返回序列中记录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="de3d0-573">This method returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="de3d0-574">所枚举记录的顺序取决于 `logRecordEnum` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="de3d0-574">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de3d0-575">下面的示例演示如何使用此方法来读取日志序列中的记录。</span><span class="sxs-lookup"><span data-stu-id="de3d0-575">The following example shows how you can use this method to read the records in a log sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-576">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-576">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-577">由于记录序列是通过只写访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-577">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-578">记录序列已损坏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-578">The record sequence is corrupted.</span>
          </span>
          <span data-ttu-id="de3d0-579">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-579">-or-</span>
          </span>
          <span data-ttu-id="de3d0-580">记录是使用不兼容的记录序列版本写入的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-580">The record was written with an incompatible version of the record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="de3d0-581">枚举已经终止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-581">The enumeration has ended.</span>
          </span>
          <span data-ttu-id="de3d0-582">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-582">-or-</span>
          </span>
          <span data-ttu-id="de3d0-583">枚举尚未开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-583">The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="de3d0-584">必须调用 <see cref="M:System.Collections.IEnumerator.MoveNext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-584">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-585">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-585">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-586">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-586">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadRestartAreas</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-587">返回序列中重新开始区域的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-587">Returns an enumerable collection of the restart areas in the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-588">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-588">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-589">序列中重新开始区域的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-589">An enumerable collection of the restart areas in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-590">重新开始区域按序列号的倒序枚举，即从最高序列号到最低序列号枚举。</span><span class="sxs-lookup"><span data-stu-id="de3d0-590">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="de3d0-591">仅枚举序列号介于最后一个序列号和基序列号之间的重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="de3d0-591">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-592">由于记录序列是通过只写访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-592">The operation cannot be performed because the record sequence was opened with write-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-593">记录序列已损坏。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-593">The record sequence is corrupted.</span>
          </span>
          <span data-ttu-id="de3d0-594">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-594">-or-</span>
          </span>
          <span data-ttu-id="de3d0-595">记录是使用不兼容的记录序列版本写入的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-595">The record was written with an incompatible version of the record sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="de3d0-596">枚举已经终止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-596">The enumeration has ended.</span>
          </span>
          <span data-ttu-id="de3d0-597">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-597">-or-</span>
          </span>
          <span data-ttu-id="de3d0-598">枚举尚未开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-598">The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="de3d0-599">必须调用 <see cref="M:System.Collections.IEnumerator.MoveNext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-599">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-600">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-600">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-601">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-601">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-602">自动生成一个保留，并向序列中追加一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-602">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-603">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-603">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-604">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-604">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-605">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-605">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-606">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-606">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="de3d0-607">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含要在其中生成保留的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-607">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-608">要生成的保留（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-608">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-609">自动生成一个保留，并向序列中追加一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-609">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-610">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-610">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-611">追加的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-611">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-612">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-612">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-613">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-613">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-614">在原子操作中，使用记录追加操作将指定的保留添加到所提供的保留集合。</span><span class="sxs-lookup"><span data-stu-id="de3d0-614">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="de3d0-615">如果追加失败，将不保留任何空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-615">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="de3d0-616">通常，此方法可以在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-616">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="de3d0-617">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-617">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-618">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-618">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-619">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-619">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-620">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-620">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-621">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-621">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-622">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-622">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-623">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-623">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-624">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-624">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-625">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-625">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-626">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-626">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="de3d0-627">用户指定顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-627">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="de3d0-628">“上一个”顺序中下一条记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-628">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="de3d0-629">
            <see cref="T:System.IO.Log.RecordAppendOptions" /> 的一个有效值，用于指定应如何写入数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-629">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="de3d0-630">要在其中生成保留的保留集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-630">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-631">要生成的保留（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-631">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-632">自动生成一个保留，并向序列中追加一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-632">Automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
          <span data-ttu-id="de3d0-633">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-633">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-634">追加的日志记录的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-634">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-635">包含在 `data` 参数中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-635">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-636">但在读取记录时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-636">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="de3d0-637">在原子操作中，使用记录追加操作将指定的保留添加到所提供的保留集合。</span><span class="sxs-lookup"><span data-stu-id="de3d0-637">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="de3d0-638">如果追加失败，将不保留任何空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-638">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="de3d0-639">通常，此方法可以在写入记录之前完成。</span><span class="sxs-lookup"><span data-stu-id="de3d0-639">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="de3d0-640">若要确保记录已写入，请使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 参数指定 `recordAppendOptions` 标志，或者调用 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="de3d0-640">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-641">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-641">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-642">一个或多个自变量超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-642">One or more of the arguments are out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-643">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-643">
              <paramref name="reservations" /> was not created by this record sequence..</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-644">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-644">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-645">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-645">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-646">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-646">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-647">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-647">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-648">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-648">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.ReservedBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-649">获取已保留的字节总数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-649">Gets the total number of bytes that have been reserved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de3d0-650">此记录序列中做出的所有保留的总大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-650">The total size of all reservations made in this record sequence.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-651">该属性是在序列已释放之后访问的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-651">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RestartSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-652">获取最近写入的重新开始区域的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-652">Gets the sequence number of the most recently written restart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de3d0-653">最近写入的重新开始区域的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-653">The sequence number of the most recently written restart area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-654">重新开始区域用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="de3d0-654">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="de3d0-655">公用日志文件系统 (CLFS) 维护两个重新开始区域，以确保至少有一个有效区域总是可用。</span><span class="sxs-lookup"><span data-stu-id="de3d0-655">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="de3d0-656">需要恢复时，CLFS 读取自己的重新开始区域和最后一个检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="de3d0-656">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="de3d0-657">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="de3d0-657">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-658">该属性是在序列已释放之后访问的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-658">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RetryAppend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-659">获取或设置一个值，指示在日志已满时是否自动重试追加操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-659">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de3d0-660">如果在日志已满时自动重试追加操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-660">
              <see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="de3d0-661">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-661">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-662">如果此属性的值为 `true`，且 <xref:System.IO.Log.FileRecordSequence.Append%2A> 调用因为序列中没有足够的空间而失败，则记录序列将尝试释放空间，然后重试追加操作。</span><span class="sxs-lookup"><span data-stu-id="de3d0-662">If the value of this property is `true`, and an <xref:System.IO.Log.FileRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-663">该属性是在序列已释放之后访问的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-663">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.FileRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Public Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.IO.Log.IRecordSequence.TailPinned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-664">当记录序列确定必须前移尾数据时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-664">Occurs when the record sequence determines that the tail must be moved forward.</span>
          </span>
          <span data-ttu-id="de3d0-665">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-665">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-666">可以在记录序列空间不足时激发此事件。</span><span class="sxs-lookup"><span data-stu-id="de3d0-666">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="de3d0-667">此事件激发时，序列的尾数据（即基序列号）将前移以释放空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-667">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="de3d0-668">将重新开始区域写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-668">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-669">重新开始区域可用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="de3d0-669">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="de3d0-670">需要恢复时，可以读取重新开始区域，并检索最后一次检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="de3d0-670">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="de3d0-671">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="de3d0-671">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="de3d0-672">可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="de3d0-672">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-673">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-673">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-674">将重新开始区域写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-674">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="de3d0-675">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-675">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-676">写入的重新开始区域的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-676">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-677">重新开始区域可用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="de3d0-677">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="de3d0-678">需要恢复时，可以读取重新开始区域，并检索最后一次检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="de3d0-678">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="de3d0-679">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="de3d0-679">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="de3d0-680">可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="de3d0-680">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="de3d0-681">字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-681">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-682">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-682">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-683">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-683">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-684">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-684">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-685">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-685">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-686">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-686">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-687">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-687">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-688">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-688">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-689">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-689">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-690">将重新开始区域写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-690">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="de3d0-691">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-691">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-692">写入的重新开始区域的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-692">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-693">重新开始区域可用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="de3d0-693">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="de3d0-694">需要恢复时，可以读取重新开始区域，并检索最后一次检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="de3d0-694">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="de3d0-695">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="de3d0-695">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="de3d0-696">可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="de3d0-696">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="de3d0-697">字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-697">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-698">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-698">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-699">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-699">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-700">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-700">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-701">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-701">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-702">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-702">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-703">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-703">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-704">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-704">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-705">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-705">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="de3d0-706">新的基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-706">The new base sequence number.</span>
          </span>
          <span data-ttu-id="de3d0-707">指定的序列号必须大于或等于当前基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-707">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-708">将重新开始区域写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-708">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="de3d0-709">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-709">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-710">写入的重新开始区域的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-710">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-711">重新开始区域可用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="de3d0-711">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="de3d0-712">需要恢复时，可以读取重新开始区域，并检索最后一次检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="de3d0-712">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="de3d0-713">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="de3d0-713">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="de3d0-714">可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="de3d0-714">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="de3d0-715">写入重新开始区域时，字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-715">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-716">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-716">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="de3d0-717">此方法成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="de3d0-717">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="de3d0-718">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="de3d0-718">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-719">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-719">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-720">
            <paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-720">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="de3d0-721">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-721">-or-</span>
          </span>
          <span data-ttu-id="de3d0-722">活动日志新存档或现有存档的尾数据或基数据无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-722">A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-723">
            <paramref name="newBaseSeqNum" /> 对此序列无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-723">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-724">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-724">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-725">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-725">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-726">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-726">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-727">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-727">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-728">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-728">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-729">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-729">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="de3d0-730">新的基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-730">The new base sequence number.</span>
          </span>
          <span data-ttu-id="de3d0-731">指定的序列号必须大于或等于当前基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-731">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-732">将重新开始区域写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-732">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="de3d0-733">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-733">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-734">写入的重新开始区域的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-734">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-735">重新开始区域可用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="de3d0-735">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="de3d0-736">需要恢复时，可以读取重新开始区域，并检索最后一次检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="de3d0-736">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="de3d0-737">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="de3d0-737">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="de3d0-738">可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="de3d0-738">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="de3d0-739">写入重新开始区域时，字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-739">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-740">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-740">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="de3d0-741">此方法成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="de3d0-741">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="de3d0-742">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="de3d0-742">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-743">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-743">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-744">
            <paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-744">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="de3d0-745">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-745">-or-</span>
          </span>
          <span data-ttu-id="de3d0-746">活动日志新存档或现有存档的尾数据或基数据无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-746">A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-747">
            <paramref name="newBaseSeqNum" /> 对此序列无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-747">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-748">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-748">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-749">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-749">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-750">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-750">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-751">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-751">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-752">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-752">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-753">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-753">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="de3d0-754">新的基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-754">The new base sequence number.</span>
          </span>
          <span data-ttu-id="de3d0-755">指定的序列号必须大于或等于当前基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-755">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-756">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此重新开始区域的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-756">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-757">将重新开始区域写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-757">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="de3d0-758">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-758">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-759">写入的重新开始区域的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-759">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-760">重新开始区域可用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="de3d0-760">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="de3d0-761">需要恢复时，可以读取重新开始区域，并检索最后一次检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="de3d0-761">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="de3d0-762">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="de3d0-762">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="de3d0-763">可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="de3d0-763">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="de3d0-764">写入重新开始区域时，字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-764">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-765">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-765">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="de3d0-766">如果指定了保留，写入的重新开始区域将使用集合中包含的保留来占用先前已保留的空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-766">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="de3d0-767">如果该方法成功，它将占用能容纳数据的最小保留，而该保留将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="de3d0-767">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="de3d0-768">此方法成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="de3d0-768">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="de3d0-769">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="de3d0-769">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="de3d0-770">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-770">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="de3d0-771">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-771">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-772">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-772">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-773">
            <paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-773">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="de3d0-774">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-774">-or-</span>
          </span>
          <span data-ttu-id="de3d0-775">活动日志新存档或现有存档的尾数据或基数据无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-775">A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-776">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-776">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="de3d0-777">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-777">-or-</span>
          </span>
          <span data-ttu-id="de3d0-778">
            <paramref name="newBaseSeqNum" /> 对此序列无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-778">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-779">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-779">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-780">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-780">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-781">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-781">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-782">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-782">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-783">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-783">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-784">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-784">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="de3d0-785">将连接在一起并以记录形式追加的字节数组段的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-785">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSeqNum">
          <span data-ttu-id="de3d0-786">新的基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-786">The new base sequence number.</span>
          </span>
          <span data-ttu-id="de3d0-787">指定的序列号必须大于或等于当前基序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-787">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="de3d0-788">一个 <see cref="T:System.IO.Log.ReservationCollection" />，它包含应当用于此重新开始区域的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-788">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de3d0-789">将重新开始区域写入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-789">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span>
          </span>
          <span data-ttu-id="de3d0-790">不能继承此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-790">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de3d0-791">写入的重新开始区域的序列号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-791">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de3d0-792">重新开始区域可用于临时存储包含客户端最后一次检查点操作的信息。</span><span class="sxs-lookup"><span data-stu-id="de3d0-792">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="de3d0-793">需要恢复时，可以读取重新开始区域，并检索最后一次检查点操作中的所有数据。</span><span class="sxs-lookup"><span data-stu-id="de3d0-793">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="de3d0-794">这些数据将初始化事务表、脏页表和打开文件表，以便它们能够用于恢复过程。</span><span class="sxs-lookup"><span data-stu-id="de3d0-794">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="de3d0-795">可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法来读取重新开始区域。</span><span class="sxs-lookup"><span data-stu-id="de3d0-795">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="de3d0-796">写入重新开始区域时，字节数组段中的数据将连接成单个字节数组，以便以记录形式追加。</span><span class="sxs-lookup"><span data-stu-id="de3d0-796">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="de3d0-797">在读取重新开始区域时，无法将数据重新拆分为数组段。</span><span class="sxs-lookup"><span data-stu-id="de3d0-797">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="de3d0-798">如果指定了保留，写入的重新开始区域将使用集合中包含的保留来占用先前已保留的空间。</span><span class="sxs-lookup"><span data-stu-id="de3d0-798">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="de3d0-799">如果该方法成功，它将占用能容纳数据的最小保留，而该保留将从集合中移除。</span><span class="sxs-lookup"><span data-stu-id="de3d0-799">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="de3d0-800">此方法成功完成时，基序列号已更新。</span><span class="sxs-lookup"><span data-stu-id="de3d0-800">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="de3d0-801">其序列号小于新的基序列号的所有日志记录都不可访问。</span><span class="sxs-lookup"><span data-stu-id="de3d0-801">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="de3d0-802">如果记录序列已经释放，或者如果传递了无效自变量，此操作内将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-802">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="de3d0-803">异步追加请求过程中发生的错误（例如，I/O 请求过程中的磁盘故障）将导致在调用 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法时引发异常。</span><span class="sxs-lookup"><span data-stu-id="de3d0-803">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de3d0-804">一个或多个参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-804">One or more of the arguments are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de3d0-805">
            <paramref name="newBaseSeqNum" /> 不在此序列的基序列号和最后一个序列号之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-805">
              <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
          <span data-ttu-id="de3d0-806">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-806">-or-</span>
          </span>
          <span data-ttu-id="de3d0-807">活动日志新存档或现有存档的尾数据或基数据无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-807">A new or existing archive tail or base of the active log is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de3d0-808">
            <paramref name="reservations" /> 不是由此记录序列创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-808">
              <paramref name="reservations" /> was not created by this record sequence.</span>
          </span>
          <span data-ttu-id="de3d0-809">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-809">-or-</span>
          </span>
          <span data-ttu-id="de3d0-810">
            <paramref name="newBaseSeqNum" /> 对此序列无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-810">
              <paramref name="newBaseSeqNum" /> is not valid for this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de3d0-811">由于记录序列是通过只读访问权限打开的，因此无法执行该操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-811">The operation cannot be performed because the record sequence was opened with read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="de3d0-812">由于出现意外的 I/O 异常，因此无法执行该请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-812">The request cannot be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="de3d0-813">该方法是在序列已释放之后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-813">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de3d0-814">没有足够的内存来继续执行该程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-814">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="de3d0-815">记录序列已满。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-815">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException">
          <span data-ttu-id="de3d0-816">在 <paramref name="data" /> 中找不到足以容纳 <paramref name="reservations" /> 的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de3d0-816">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>