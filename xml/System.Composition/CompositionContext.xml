<Type Name="CompositionContext" FullName="System.Composition.CompositionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1436253617934eb2a425c0824a2d3d7625134c89" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379181" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CompositionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.CompositionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionContext abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Runtime</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="33a09-101">提供用于从组合中检索导出的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="33a09-101">Provides methods to retrieve exports from the composition.</span>
      </span>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CompositionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CompositionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33a09-102">初始化 <see cref="T:System.Composition.CompositionContext" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-102">Initializes a new instance of the <see cref="T:System.Composition.CompositionContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="33a09-103">请注意，此构造函数都受到保护;仅可以由派生自的类调用<see cref="T:System.Composition.CompositionContext"/>类。</span><span class="sxs-lookup"><span data-stu-id="33a09-103">Note that this constructor is protected; it can only be called by classes derived from the <see cref="T:System.Composition.CompositionContext"/> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public object GetExport (System.Composition.Hosting.Core.CompositionContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetExport(class System.Composition.Hosting.Core.CompositionContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport(System.Composition.Hosting.Core.CompositionContract)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport (contract As CompositionContract) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetExport(System::Composition::Hosting::Core::CompositionContract ^ contract);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="33a09-104">要匹配的协定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-104">The contract to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-105">检索与指定协定匹配的导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-105">Retrieves the export that matches the specified contract.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-106">导出的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-106">The exported value.</span>
          </span>
        </returns>
        <remarks></remarks>
        <exception cref="T:System.Composition.Hosting.CompositionFailedException">
          <span data-ttu-id="33a09-107">未找到 <paramref name="contract" /> 的导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-107">No export found for <paramref name="contract" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public object GetExport (Type exportType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetExport(class System.Type exportType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport (exportType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetExport(Type ^ exportType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="exportType">
          <span data-ttu-id="33a09-108">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-108">The type to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-109">检索与指定类型匹配的导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-109">Retrieves the export that matches the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-110">导出的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-110">The exported value.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public object GetExport (Type exportType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetExport(class System.Type exportType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport (exportType As Type, contractName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetExport(Type ^ exportType, System::String ^ contractName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exportType">
          <span data-ttu-id="33a09-111">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-111">The type to match.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="33a09-112">要匹配的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-112">The name to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-113">检索与指定名称和类型匹配的导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-113">Retrieves the export that matches the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-114">导出的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-114">The exported value.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public TExport GetExport&lt;TExport&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TExport GetExport&lt;TExport&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of TExport) () As TExport" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; TExport GetExport();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TExport</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TExport">
          <span data-ttu-id="33a09-115">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-115">The type to match.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="33a09-116">检索与指定泛型类型参数匹配的导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-116">Retrieves the export that matches the specified generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-117">导出的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-117">The exported value.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public TExport GetExport&lt;TExport&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TExport GetExport&lt;TExport&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of TExport) (contractName As String) As TExport" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; TExport GetExport(System::String ^ contractName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TExport</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TExport">
          <span data-ttu-id="33a09-118">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-118">The type to match.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="33a09-119">要匹配的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-119">The name to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-120">检索与指定泛型类型参数和协定名称匹配的导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-120">Retrieves the export that matches the specified generic type parameter and contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-121">导出的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-121">The exported value.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetExports (Type exportType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetExports(class System.Type exportType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExports(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (exportType As Type) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetExports(Type ^ exportType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="exportType">
          <span data-ttu-id="33a09-122">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-122">The type to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-123">检索与指定类型匹配的所有导出的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-123">Retrieves a collection of all exports that match the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-124">导出值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-124">A collection of exported values.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetExports (Type exportType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetExports(class System.Type exportType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExports(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (exportType As Type, contractName As String) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetExports(Type ^ exportType, System::String ^ contractName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exportType">
          <span data-ttu-id="33a09-125">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-125">The type to match.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="33a09-126">要匹配的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-126">The name to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-127">检索所有与指定协定名称和类型匹配的导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-127">Retrieves all exports that match the specified contract name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-128">导出值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-128">A collection of exported values.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TExport&gt; GetExports&lt;TExport&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TExport&gt; GetExports&lt;TExport&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExports``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of TExport) () As IEnumerable(Of TExport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TExport&gt; ^ GetExports();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TExport&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TExport">
          <span data-ttu-id="33a09-129">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-129">The type to match.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="33a09-130">检索与指定泛型类型参数匹配的所有导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-130">Retrieves all exports that match the specified generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-131">导出值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-131">A collection of exported values.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TExport&gt; GetExports&lt;TExport&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TExport&gt; GetExports&lt;TExport&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExports``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of TExport) (contractName As String) As IEnumerable(Of TExport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TExport&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TExport&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TExport">
          <span data-ttu-id="33a09-132">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-132">The type to match.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="33a09-133">要匹配的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-133">The name to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-134">检索所有与指定泛型类型参数和协定名称匹配的导出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-134">Retrieves all exports that match the specified generic type parameter and contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-135">导出值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-135">A collection of exported values.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public abstract bool TryGetExport (System.Composition.Hosting.Core.CompositionContract contract, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetExport(class System.Composition.Hosting.Core.CompositionContract contract, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetExport (contract As CompositionContract, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetExport(System::Composition::Hosting::Core::CompositionContract ^ contract, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="export" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="33a09-136">要匹配的协定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-136">The contract to match.</span>
          </span>
        </param>
        <param name="export">
          <span data-ttu-id="33a09-137">在此方法返回时，包含匹配的导出或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-137">When this method returns, contains the matched export or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-138">如果未找到匹配项，则返回与指定的协定匹配的导出，或返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-138">Returns the export that matches the specified contract, or returns <see langword="null" /> if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-139">如果找到导出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-139">
              <see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public bool TryGetExport (Type exportType, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExport(class System.Type exportType, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport(System.Type,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExport (exportType As Type, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExport(Type ^ exportType, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
        <Parameter Name="export" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exportType">
          <span data-ttu-id="33a09-140">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-140">The type to match.</span>
          </span>
        </param>
        <param name="export">
          <span data-ttu-id="33a09-141">在此方法返回时，包含匹配的导出或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-141">When this method returns, contains the matched export or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-142">如果未找到匹配项，则返回与指定的类型匹配的导出，或返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-142">Returns the export that matches the specified type, or returns <see langword="null" /> if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-143">如果找到导出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-143">
              <see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public bool TryGetExport (Type exportType, string contractName, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExport(class System.Type exportType, string contractName, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport(System.Type,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExport (exportType As Type, contractName As String, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExport(Type ^ exportType, System::String ^ contractName, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="export" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exportType">
          <span data-ttu-id="33a09-144">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-144">The type to match.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="33a09-145">要匹配的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-145">The name to match.</span>
          </span>
        </param>
        <param name="export">
          <span data-ttu-id="33a09-146">在此方法返回时，包含匹配的导出或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-146">When this method returns, contains the matched export or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-147">如果未找到匹配项，则返回与指定的协定名称和类型匹配的导出，或返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-147">Returns the export that matches the specified contract name and type, or returns <see langword="null" /> if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-148">如果找到导出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-148">
              <see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetExport&lt;TExport&gt; (out TExport export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExport&lt;TExport&gt;([out] !!TExport&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExport(Of TExport) (ByRef export As TExport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; bool TryGetExport([Runtime::InteropServices::Out] TExport % export);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="export" Type="TExport&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TExport">
          <span data-ttu-id="33a09-149">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-149">The type to match.</span>
          </span>
        </typeparam>
        <param name="export">
          <span data-ttu-id="33a09-150">在此方法返回时，包含匹配的导出或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-150">When this method returns, contains the matched export or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-151">如果未找到匹配项，则返回与指定的泛型类型参数匹配的导出，或返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-151">Returns the export that matches the specified generic type parameter, or returns <see langword="null" /> if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-152">如果找到导出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-152">
              <see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetExport&lt;TExport&gt; (string contractName, out TExport export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExport&lt;TExport&gt;(string contractName, [out] !!TExport&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExport(Of TExport) (contractName As String, ByRef export As TExport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; bool TryGetExport(System::String ^ contractName, [Runtime::InteropServices::Out] TExport % export);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="export" Type="TExport&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TExport">
          <span data-ttu-id="33a09-153">要匹配的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-153">The type to match.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="33a09-154">要匹配的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-154">The name to match.</span>
          </span>
        </param>
        <param name="export">
          <span data-ttu-id="33a09-155">在此方法返回时，包含匹配的导出或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-155">When this method returns, contains the matched export or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33a09-156">如果未找到匹配项，则返回与指定的泛型类型参数和协定名称匹配的导出，或返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-156">Returns the export that matches the specified generic type parameter and contract name, or returns <see langword="null" /> if no match is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33a09-157">如果找到导出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33a09-157">
              <see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>