<Type Name="IMethodMessage" FullName="System.Runtime.Remoting.Messaging.IMethodMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62f06af1526d55d9d12e1c2e448b6138bb65e53f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36631095" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMethodMessage : System.Runtime.Remoting.Messaging.IMessage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMethodMessage implements class System.Runtime.Remoting.Messaging.IMessage" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.IMethodMessage" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMethodMessage&#xA;Implements IMessage" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMethodMessage : System::Runtime::Remoting::Messaging::IMessage" />
  <TypeSignature Language="F#" Value="type IMethodMessage = interface&#xA;    interface IMessage" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMessage</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7b283-101">定义方法消息接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b283-101">Defines the method message interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b283-102">方法消息用于将信息发送到和从远程方法。</span><span class="sxs-lookup"><span data-stu-id="7b283-102">A method message is used to send information to and from remote methods.</span></span> <span data-ttu-id="7b283-103">例如，用于远程方法调用的消息实现<xref:System.Runtime.Remoting.Messaging.IMethodMessage>接口。</span><span class="sxs-lookup"><span data-stu-id="7b283-103">For example, messages used for remote method calls implement the <xref:System.Runtime.Remoting.Messaging.IMethodMessage> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b283-104">下面的示例代码演示自定义代理该替代`RealProxy.Invoke`以便将消息信息写入到控制台并立即返回而不进行远程调用。</span><span class="sxs-lookup"><span data-stu-id="7b283-104">The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console and return immediately without making a remote call.</span></span>  
  
 [!code-cpp[IMethodMessage_MethodName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#1)]
 [!code-csharp[IMethodMessage_MethodName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#1)]
 [!code-vb[IMethodMessage_MethodName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgCount">
      <MemberSignature Language="C#" Value="public int ArgCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgCount" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgCount : int" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-105">获取传递给该方法的参数的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-105">Gets the number of arguments passed to the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-106">传递给该方法的参数的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-106">The number of arguments passed to the method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b283-107">下面的示例代码演示自定义代理该替代`RealProxy.Invoke`消息信息写入到控制台，以便使用`ArgCount`属性来循环访问自变量。</span><span class="sxs-lookup"><span data-stu-id="7b283-107">The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console, using the `ArgCount` property to iterate through the arguments.</span></span>  
  
 [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]
 [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]
 [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-108">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-108">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-109">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-109">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-110">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-110">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Args">
      <MemberSignature Language="C#" Value="public object[] Args { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] Args" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.Args" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Args As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ Args { cli::array &lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Args : obj[]" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.Args" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-111">获取传递给该方法的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-111">Gets an array of arguments passed to the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-112">
            <see cref="T:System.Object" /> 数组，它包含传递给该方法的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-112">An <see cref="T:System.Object" /> array containing the arguments passed to the method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b283-113">尽管<xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A>属性是冗余的因为可以通过实现相同的功能<xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A>和<xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A>，可能有性能优化可用如果实施者了解时，将为所有自变量检索。</span><span class="sxs-lookup"><span data-stu-id="7b283-113">Although the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.Args%2A> property is redundant since the same functionality can be achieved through the <xref:System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg%2A>, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-114">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-114">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-115">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-115">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-116">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-116">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetArg">
      <MemberSignature Language="C#" Value="public object GetArg (int argNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetArg(int32 argNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArg (argNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetArg(int argNum);" />
      <MemberSignature Language="F#" Value="abstract member GetArg : int -&gt; obj" Usage="iMethodMessage.GetArg argNum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argNum">
          <span data-ttu-id="7b283-117">请求的参数的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-117">The number of the requested argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b283-118">获取作为 <see cref="T:System.Object" /> 的特定参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-118">Gets a specific argument as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b283-119">传递给该方法的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-119">The argument passed to the method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-120">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-120">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-121">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-121">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-122">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-122">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetArgName">
      <MemberSignature Language="C#" Value="public string GetArgName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetArgName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetArgName(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetArgName : int -&gt; string" Usage="iMethodMessage.GetArgName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7b283-123">请求的参数的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-123">The number of the requested argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b283-124">获取传递给该方法的参数的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-124">Gets the name of the argument passed to the method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b283-125">传递给该方法的指定参数的名称；如果未实现当前方法，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-125">The name of the specified argument passed to the method, or <see langword="null" /> if the current method is not implemented.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-126">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-126">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-127">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-127">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-128">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-128">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="HasVarArgs">
      <MemberSignature Language="C#" Value="public bool HasVarArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVarArgs" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVarArgs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVarArgs { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasVarArgs : bool" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-129">获取一个值，该值指示消息是否具有变量参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-129">Gets a value indicating whether the message has variable arguments.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-130">如果该方法可以接受数目可变的参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-130">
              <see langword="true" /> if the method can accept a variable number of arguments; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b283-131">下面的示例代码演示自定义代理该替代`RealProxy.Invoke`以便将消息信息写入到控制台，包括是否方法调用具有变量自变量。</span><span class="sxs-lookup"><span data-stu-id="7b283-131">The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the message information to the console, including whether the method call has variable arguments.</span></span>  
  
 [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]
 [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]
 [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-132">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-132">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-133">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-133">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-134">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-134">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LogicalCallContext">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalCallContext As LogicalCallContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::LogicalCallContext ^ LogicalCallContext { System::Runtime::Remoting::Messaging::LogicalCallContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalCallContext : System.Runtime.Remoting.Messaging.LogicalCallContext" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.LogicalCallContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-135">获取当前方法调用的 <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-135">Gets the <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> for the current method call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-136">获取当前方法调用的 <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-136">Gets the <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" /> for the current method call.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b283-137">下面的代码示例演示如何使用`LogicalCallContext`属性来确定是否有任何值附加到逻辑线程。</span><span class="sxs-lookup"><span data-stu-id="7b283-137">The following example code shows how to use the `LogicalCallContext` property to determine whether any values are attached to the logical thread.</span></span>  
  
 [!code-cpp[IMethodMessage_LogicalCallContext#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/CPP/imethodmessage_logicalcallcontext.cpp#1)]
 [!code-csharp[IMethodMessage_LogicalCallContext#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/CS/imethodmessage_logicalcallcontext.cs#1)]
 [!code-vb[IMethodMessage_LogicalCallContext#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_LogicalCallContext/VB/imethodmessage_logicalcallcontext.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-138">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-138">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-139">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-139">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-140">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-140">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MethodBase">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase MethodBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase MethodBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodBase As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ MethodBase { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodBase : System.Reflection.MethodBase" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-141">获取被调用方法的 <see cref="T:System.Reflection.MethodBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-141">Gets the <see cref="T:System.Reflection.MethodBase" /> of the called method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-142">被调用方法的 <see cref="T:System.Reflection.MethodBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-142">The <see cref="T:System.Reflection.MethodBase" /> of the called method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b283-143">此信息不会传送到远程位置，但用于后它已查找一次缓存方法基。</span><span class="sxs-lookup"><span data-stu-id="7b283-143">This information is not transmitted to a remote location, but is used to cache the method base after it has been looked up once.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-144">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-144">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-145">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-145">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-146">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-146">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-147">获取被调用方法的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-147">Gets the name of the invoked method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-148">被调用方法的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-148">The name of the invoked method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b283-149">下面的示例代码演示自定义代理该替代`RealProxy.Invoke`为了方法的名称写入控制台。</span><span class="sxs-lookup"><span data-stu-id="7b283-149">The following example code shows a custom proxy that overrides `RealProxy.Invoke` in order to write the name of the method to the console.</span></span>  
  
 [!code-cpp[IMethodMessage_MethodName#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodMessage_MethodName/CPP/imethodmessage_methodname.cpp#2)]
 [!code-csharp[IMethodMessage_MethodName#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodMessage_MethodName/CS/imethodmessage_methodname.cs#2)]
 [!code-vb[IMethodMessage_MethodName#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodMessage_MethodName/VB/imethodmessage_methodname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-150">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-150">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-151">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-151">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-152">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-152">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MethodSignature">
      <MemberSignature Language="C#" Value="public object MethodSignature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MethodSignature" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodSignature As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MethodSignature { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodSignature : obj" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-153">获取包含方法签名的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-153">Gets an object containing the method signature.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-154">包含方法签名的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-154">An object containing the method signature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b283-155">所有当前实现<xref:System.Runtime.Remoting.Messaging.IMethodMessage>返回的数组<xref:System.Type>对象又包含该方法的参数类型。</span><span class="sxs-lookup"><span data-stu-id="7b283-155">All the current implementations of <xref:System.Runtime.Remoting.Messaging.IMethodMessage> return an array of <xref:System.Type> objects containing the parameter types of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-156">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-156">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-157">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-157">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-158">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-158">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-159">获取要将该调用发送到的特定对象的完整 <see cref="T:System.Type" /> 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-159">Gets the full <see cref="T:System.Type" /> name of the specific object that the call is destined for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-160">要将该调用发送到的特定对象的完整 <see cref="T:System.Type" /> 名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-160">The full <see cref="T:System.Type" /> name of the specific object that the call is destined for.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-161">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-161">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-162">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-162">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-163">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-163">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodMessage.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : string" Usage="System.Runtime.Remoting.Messaging.IMethodMessage.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b283-164">获取要将该调用发送到的特定对象的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-164">Gets the URI of the specific object that the call is destined for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b283-165">包含被调用方法的远程对象的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-165">The URI of the remote object that contains the invoked method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7b283-166">直接调用方通过引用接口进行调用，且没有基础结构权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-166">The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="7b283-167">用于操作基础结构代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-167">for operating with infrastructure code.</span>
          </span>
          <span data-ttu-id="7b283-168">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7b283-168">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>