<Type Name="IMethodCallMessage" FullName="System.Runtime.Remoting.Messaging.IMethodCallMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6713fec2ee0782440b47d9d38d5b3ba70c06610" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39801868" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMethodCallMessage : System.Runtime.Remoting.Messaging.IMethodMessage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMethodCallMessage implements class System.Runtime.Remoting.Messaging.IMessage, class System.Runtime.Remoting.Messaging.IMethodMessage" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMethodCallMessage&#xA;Implements IMethodMessage" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMethodCallMessage : System::Runtime::Remoting::Messaging::IMethodMessage" />
  <TypeSignature Language="F#" Value="type IMethodCallMessage = interface&#xA;    interface IMethodMessage&#xA;    interface IMessage" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMethodMessage</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义方法调用消息接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>作为远程对象上调用的方法的结果生成和用于传输远程方法调用的服务器端有关的详细信息。  
  
   
  
## Examples  
 [!code-cpp[IMethodCallMessage_GetInArg#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#1)]
 [!code-csharp[IMethodCallMessage_GetInArg#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#1)]
 [!code-vb[IMethodCallMessage_GetInArg#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetInArg">
      <MemberSignature Language="C#" Value="public object GetInArg (int argNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInArg(int32 argNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInArg (argNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInArg(int argNum);" />
      <MemberSignature Language="F#" Value="abstract member GetInArg : int -&gt; obj" Usage="iMethodCallMessage.GetInArg argNum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argNum">请求的 <see langword="in" /> 参数的数目。</param>
        <summary>返回未标记为 <see langword="out" /> 参数的指定参数。</summary>
        <returns>请求的未标记为 <see langword="out" /> 参数的参数。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用于操作的基础结构代码。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInArgName">
      <MemberSignature Language="C#" Value="public string GetInArgName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetInArgName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArgName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInArgName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetInArgName(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetInArgName : int -&gt; string" Usage="iMethodCallMessage.GetInArgName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">请求的 <see langword="in" /> 参数的数目。</param>
        <summary>返回未标记为 <see langword="out" /> 参数的指定参数的名称。</summary>
        <returns>未标记为 <see langword="out" /> 参数的特定参数的名称。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用于操作的基础结构代码。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InArgCount">
      <MemberSignature Language="C#" Value="public int InArgCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InArgCount" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InArgCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InArgCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InArgCount : int" Usage="System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取调用中未标记为 <see langword="out" /> 参数的参数数目。</summary>
        <value>调用中未标记为 <see langword="out" /> 参数的参数数目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示了自定义代理，以替代 RealProxy.Invoke 才能调用消息信息写入控制台。  
  
 [!code-cpp[IMethodCallMessage_GetInArg#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#2)]
 [!code-csharp[IMethodCallMessage_GetInArg#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#2)]
 [!code-vb[IMethodCallMessage_GetInArg#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用于操作的基础结构代码。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InArgs">
      <MemberSignature Language="C#" Value="public object[] InArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] InArgs" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InArgs As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ InArgs { cli::array &lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InArgs : obj[]" Usage="System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取未标记为 <see langword="out" /> 参数的参数数组。</summary>
        <value>未标记为 <see langword="out" /> 参数的参数数组。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 尽管<xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs%2A>属性是多余的因为可以通过相同的功能<xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount%2A>和<xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg%2A>方法，可能可用的性能优化如果实施者理解时将所有自变量检索。  
  
   
  
## Examples  
 [!code-cpp[IMethodCallMessage_GetInArg#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#2)]
 [!code-csharp[IMethodCallMessage_GetInArg#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#2)]
 [!code-vb[IMethodCallMessage_GetInArg#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直接调用方通过引用接口进行调用，且没有基础结构权限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用于操作的基础结构代码。 要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;权限值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>