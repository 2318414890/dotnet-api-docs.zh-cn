<Type Name="TryLoadRunnableWorkflowCommand" FullName="System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cf29eab156cf78c8d950b189a098f63e0283f88" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30347351" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TryLoadRunnableWorkflowCommand : System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TryLoadRunnableWorkflowCommand extends System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TryLoadRunnableWorkflowCommand&#xA;Inherits InstancePersistenceCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class TryLoadRunnableWorkflowCommand sealed : System::Runtime::DurableInstancing::InstancePersistenceCommand" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceCommand</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="99f71-101">表示工作流宿主将针对实例存储执行的命令，用于将持久性存储中的可运行实例加载到内存中。</span>
      <span class="sxs-lookup">
        <span data-stu-id="99f71-101">Represents the command that a workflow host executes against an instance store to load runnable instances in the persistence store into the memory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99f71-102">实例是*可运行*，如果它未处于挂起的状态或完成的状态并且满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="99f71-102">An instance is *runnable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="99f71-103">实例处于解除锁定状态，并且具有已过期的挂起计时器。</span><span class="sxs-lookup"><span data-stu-id="99f71-103">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
-   <span data-ttu-id="99f71-104">实例处于解除锁定状态，并且其状态为**执行**。</span><span class="sxs-lookup"><span data-stu-id="99f71-104">The instance is unlocked and its status is **Executing**.</span></span>  
  
-   <span data-ttu-id="99f71-105">实例上的锁已过期。</span><span class="sxs-lookup"><span data-stu-id="99f71-105">The instance has an expired lock on it.</span></span>  
  
 <span data-ttu-id="99f71-106">实例存储应定期搜索属于使用该存储的工作流宿主的可运行实例。</span><span class="sxs-lookup"><span data-stu-id="99f71-106">An instance store should periodically search for runnable instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="99f71-107">在持久性存储中查找与其工作流宿主类型匹配的可运行实例时，它应引发 <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent>。</span><span class="sxs-lookup"><span data-stu-id="99f71-107">It should raise the <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> when it finds a runnable instance in the persistence store that matches its workflow host type.</span></span> <span data-ttu-id="99f71-108">如果实例存储在持久性存储中未找到可运行实例，它应继续监视持久性存储来查找任何可运行实例。</span><span class="sxs-lookup"><span data-stu-id="99f71-108">If the instance store does not find a runnable instance in the persistence store, it should continue to monitor the persistence store for any runnable instances.</span></span>  
  
 <span data-ttu-id="99f71-109">引发 HasRunnableWorkflowEvent 之后，实例存储应停止监视持久性存储来查找可运行实例，直至它收到并执行 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> 为止。</span><span class="sxs-lookup"><span data-stu-id="99f71-109">After raising the HasRunnableWorkflowEvent, the instance store should stop monitoring the persistence store for runnable instances until it receives and executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span></span> <span data-ttu-id="99f71-110">只有在 TryLoadRunnableWorkflowCommand 执行未返回任何可运行实例的情况下，监视才会继续。</span><span class="sxs-lookup"><span data-stu-id="99f71-110">The monitoring continues only if the TryLoadRunnableWorkflowCommand execution does not return any runnable instances.</span></span>  
  
 <span data-ttu-id="99f71-111">当工作流宿主收到 HasRunnableWorkflowEvent 时，它将针对实例存储执行 <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>，以将该实例加载到内存中。</span><span class="sxs-lookup"><span data-stu-id="99f71-111">When a workflow host receives the HasRunnableWorkflowEvent, it executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> against the instance store to load the instance into the memory.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TryLoadRunnableWorkflowCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TryLoadRunnableWorkflowCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99f71-112">初始化 <see cref="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99f71-112">Initializes an instance of the <see cref="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAcquiringLock">
      <MemberSignature Language="C#" Value="protected internal override bool AutomaticallyAcquiringLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAcquiringLock" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.AutomaticallyAcquiringLock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property AutomaticallyAcquiringLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool AutomaticallyAcquiringLock { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactionEnlistmentOptional">
      <MemberSignature Language="C#" Value="protected internal override bool IsTransactionEnlistmentOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactionEnlistmentOptional" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.IsTransactionEnlistmentOptional" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property IsTransactionEnlistmentOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsTransactionEnlistmentOptional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected internal override void Validate (System.Runtime.DurableInstancing.InstanceView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Validate(class System.Runtime.DurableInstancing.InstanceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.Validate(System.Runtime.DurableInstancing.InstanceView)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Validate (view As InstanceView)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Validate(System::Runtime::DurableInstancing::InstanceView ^ view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Runtime.DurableInstancing.InstanceView" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>