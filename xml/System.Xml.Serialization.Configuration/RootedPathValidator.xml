<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RootedPathValidator.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac576311afd538bb8339c0baf35fc0c00a336cb44c1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76311afd538bb8339c0baf35fc0c00a336cb44c1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>Validates the rules governing the use of the <bpt id="p1">&lt;c&gt;</bpt>tempFilesLocation<ept id="p1">&lt;/c&gt;</ept> configuration switch.</source>
          <target state="translated">验证控制 <bpt id="p1">&lt;c&gt;</bpt>tempFilesLocation<ept id="p1">&lt;/c&gt;</ept> 配置开关的使用的规则。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>When adding a <ph id="ph1">`WebReference`</ph> object to a Web service in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, files are created by the Web service discovery process.</source>
          <target state="translated">添加时<ph id="ph1">`WebReference`</ph>到中的 Web 服务的对象<ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>，Web 服务发现过程来创建文件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>Web service clients learn where to find the Web service description (WSDL) document by adding a <ph id="ph1">`WebReference`</ph> object.</source>
          <target state="translated">Web 服务客户端了解在哪里可以找到 Web 服务说明 (WSDL) 文档通过添加<ph id="ph1">`WebReference`</ph>对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The Web service clients then save the discovered documents to the disk by using the <ph id="ph1">`WriteAll`</ph> method.</source>
          <target state="translated">Web 服务客户端然后将已发现的文档保存到磁盘，通过使用<ph id="ph1">`WriteAll`</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>For example, the discovered documents may be .xsd schema files or service descriptions.</source>
          <target state="translated">例如，发现的文档可能.xsd 架构文件或服务说明。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>At the end of the process, the client deletes the files.</source>
          <target state="translated">在过程结束时，客户端中删除文件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>You can change the default location of the files in the temporary folder by using the <ph id="ph1">`tempFilesLocation`</ph> switch in the <ph id="ph2">`&lt;xmlSerializer&gt;`</ph> element, specified in the Machine.config configuration file, as in the following example.</source>
          <target state="translated">你可以通过更改临时文件夹中的文件的默认位置<ph id="ph1">`tempFilesLocation`</ph>切入<ph id="ph2">`&lt;xmlSerializer&gt;`</ph>在 Machine.config 配置文件中，如以下示例所示指定的元素。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The value of <ph id="ph1">`tempFilesLocation`</ph> must be an absolute path.</source>
          <target state="translated">值<ph id="ph1">`tempFilesLocation`</ph>必须是绝对路径。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>If the path specified is not absolute, the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> generates a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationErrorsException&gt;</ph> exception when the configuration section is referenced.</source>
          <target state="translated">如果指定的路径不是绝对的<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>生成<ph id="ph2">&lt;xref:System.Configuration.ConfigurationErrorsException&gt;</ph>引用的配置节时出现异常。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The value of the property is truncated to remove leading and trailing white spaces.</source>
          <target state="translated">属性的值的截断以移除前导空格和尾随空格。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>If value of the <ph id="ph1">`tempFilesLocation`</ph> property is composed of white space, the default %TMP% location is used for the compilation.</source>
          <target state="translated">如果值<ph id="ph1">`tempFilesLocation`</ph>属性组成的空白区域，默认 %TMP%位置用于编译。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The same default behavior occurs when no <ph id="ph1">`tempFilesLocation`</ph> switch is specified.</source>
          <target state="translated">相同的默认行为发生未<ph id="ph1">`tempFilesLocation`</ph>指定开关。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> does not check to see whether the path exists.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>不会检查以查看该路径是否存在。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>If it does not, a <ph id="ph1">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph> is generated.</source>
          <target state="translated">如果不是，请<ph id="ph1">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph>生成。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.Configuration.RootedPathValidator">
          <source>This is identical to the default behavior of the <ph id="ph1">`XmlSerializer`</ph> if the %TMP% path does not exist.</source>
          <target state="translated">这是默认行为的相同<ph id="ph1">`XmlSerializer`</ph>如果 %TMP%路径不存在。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)">
          <source>The type of the object.</source>
          <target state="translated">对象的类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)">
          <source>Determines whether the type of the object can be validated.</source>
          <target state="translated">确定是否可以验证该对象的类型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="type" /&gt;</ph> parameter matches a valid <ph id="ph3">&lt;see langword="XMLSerializer" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="type" /&gt;</ph> 参数与有效的 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 对象匹配，则为 <ph id="ph3">&lt;see langword="XMLSerializer" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)">
          <source>The value of an object.</source>
          <target state="translated">对象的值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)">
          <source>Determines whether the value of an object is valid.</source>
          <target state="translated">确定对象的值是否有效。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)">
          <source>The <ph id="ph1">`XmlSerializer`</ph> object to validate is passed as a parameter of the <ph id="ph2">`Validate`</ph> method.</source>
          <target state="translated"><ph id="ph1">`XmlSerializer`</ph>对象以验证传递的参数<ph id="ph2">`Validate`</ph>方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>