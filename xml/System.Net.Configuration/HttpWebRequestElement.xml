<Type Name="HttpWebRequestElement" FullName="System.Net.Configuration.HttpWebRequestElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87f5505d3e05ce3aad70952c185e7a7733bc6a94" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459031" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpWebRequestElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpWebRequestElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.HttpWebRequestElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpWebRequestElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpWebRequestElement sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示响应标头的最大长度。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类对应于`maximumResponseHeadersLength`属性[ &lt;httpWebRequest&gt;元素 （网络设置）](~/docs/framework/configure-apps/file-schema/network/httpwebrequest-element-network-settings.md)配置元素。  
  
 此类中的信息适用于使用发出的请求响应<xref:System.Net.WebRequest>和<xref:System.Net.WebClient>类。  
  
 此类提供以编程方式访问可以在配置文件中存储的信息。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWebRequestElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.HttpWebRequestElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpWebRequestElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Configuration.HttpWebRequestElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数将添加<xref:System.Configuration.ConfigurationProperty>对象，表示<xref:System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength%2A>到<xref:System.Configuration.ConfigurationElement.Properties%2A>集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
      </Docs>
    </Member>
    <Member MemberName="MaximumErrorResponseLength">
      <MemberSignature Language="C#" Value="public int MaximumErrorResponseLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumErrorResponseLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpWebRequestElement.MaximumErrorResponseLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumErrorResponseLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumErrorResponseLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maximumErrorResponseLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置错误响应允许的最大长度。</summary>
        <value>32 位有符号的整数，包含以 KB（1024 个字节）为单位的错误响应的最大长度。 默认值为 64。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaximumResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpWebRequestElement.MaximumResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumResponseHeadersLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maximumResponseHeadersLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置响应标头允许的最大长度。</summary>
        <value>32 位有符号的整数，包含以 KB（1024 个字节）为单位的响应标头的最大长度。 默认值为 64。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 长度的测量单位为千字节为单位 （1024 字节），并包括响应状态行和响应标头，以及作为 HTTP 协议的一部分接收的所有额外的控制字符。  
  
 值为-1 表示响应标头; 没有限制值为 0 表示将所有请求将都失败。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
      </Docs>
    </Member>
    <Member MemberName="MaximumUnauthorizedUploadLength">
      <MemberSignature Language="C#" Value="public int MaximumUnauthorizedUploadLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumUnauthorizedUploadLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumUnauthorizedUploadLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumUnauthorizedUploadLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maximumUnauthorizedUploadLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置响应未经授权的错误代码的上载的最大长度。</summary>
        <value>32 位有符号的整数，包含响应未经授权的错误代码的上载的最大长度（1,024 字节单位的整数倍）。 值 -1 表示没有对上载施加大小限制。 如果将 <see cref="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength" /> 属性设置得比指定字节数小，那就只会发送请求正文。 所以值为 1 指示只发送请求正文，因为它小于 1024 字节。  
  
 此属性的默认值为 -1。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="P:System.Net.HttpWebRequest.Expect" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="PostDeserialize">
      <MemberSignature Language="C#" Value="protected override void PostDeserialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PostDeserialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.HttpWebRequestElement.PostDeserialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PostDeserialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PostDeserialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpWebRequestElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseUnsafeHeaderParsing">
      <MemberSignature Language="C#" Value="public bool UseUnsafeHeaderParsing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUnsafeHeaderParsing" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpWebRequestElement.UseUnsafeHeaderParsing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseUnsafeHeaderParsing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUnsafeHeaderParsing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useUnsafeHeaderParsing", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置该属性将忽略在 HTTP 分析过程中发生的验证错误。</summary>
        <value>Boolean，指示是否已经设置该属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性设置为`false`，HTTP 分析过程中执行以下验证：  
  
-   在行尾代码中，使用 CRLF;不允许使用 CR 或 LF 单独。  
  
-   标头名称不应包含在它们中的空格。  
  
-   如果存在多个状态行，其他状态的所有行都将被都视为格式不正确的标头名称/值对。  
  
-   状态行必须具有的状态说明，除了状态代码。  
  
-   标头名称不能在其中具有非 ASCII 字符。 是否有此属性设置为执行此验证`true`或`false`。  
  
 当协议冲突发生时，<xref:System.Net.WebException>状态设置为引发异常<xref:System.Net.WebExceptionStatus.ServerProtocolViolation>。 如果`UseUnsafeHeaderParsing`属性设置为`true`，验证错误将被忽略。  
  
 此属性设置为`true`具有安全隐患，因此仅当与服务器的向后兼容性是否需要将执行此操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>