<Type Name="HttpListenerElement" FullName="System.Net.Configuration.HttpListenerElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee07f6e7b74dae2549d6bab3dcdedf39366246a2" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48728820" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpListenerElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.HttpListenerElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type HttpListenerElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示配置文件中的 HttpListener 元素。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类对应于\<httpListener > 元素 （网络设置） 配置元素。 此类提供以编程方式访问存储在配置文件的信息。  
  
 <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>属性指示如果<xref:System.Net.HttpListener>使用未经转义的原始 URI，而不是经过转换的 URI 其中任何百分比编码值转换和执行其他任何规范化步骤。  
  
 当<xref:System.Net.HttpListener>实例收到的请求通过`http.sys`服务，它创建的提供的 URI 字符串实例`http.sys`，并将其作为公开<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>属性。  
  
 `http.sys`服务公开两个请求的 URI 字符串：  
  
-   原始 URI  
  
-   经过转换的 URI  
  
 原始 URI 是<xref:System.Uri?displayProperty=nameWithType>HTTP 请求的请求行中提供：  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 提供的原始 URI`http.sys`前面所述的请求是"/ 路径 /"。 这表示在通过网络发送以下 HTTP 谓词字符串。  
  
 `http.sys`服务从使用 HTTP 请求行中提供的 URI 请求中提供的信息创建经过转换的 URI，并要确定源服务器请求的主机标头应转发到。 这是通过比较已注册的 URI 前缀的一组与请求中的信息。 HTTP Server SDK 文档将作为此转换的 URI [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108)结构。  
  
 以便可以请求与已注册的 URI 前缀进行比较，需要完成一些规范化到请求。 对于以上经过转换的 URI 示例将按如下所示：  
  
 `http://www.contoso.com/path/`  
  
 `http.sys`服务结合<xref:System.Uri.Host%2A?displayProperty=nameWithType>属性值和要创建一个已转换的 URI 的请求行中的字符串。 此外，`http.sys`和<xref:System.Uri?displayProperty=nameWithType>类还执行以下操作：  
  
-   取消转义所有百分比编码的值。  
  
-   将百分比编码为 utf-16 字符表示形式的非 ASCII 字符。 请注意，Unicode 字符 （Unicode 编码使用 %uxxxx 格式） 以及支持 utf-8 和 ANSI/DBCS 字符。  
  
-   执行其他规范化步骤，如路径压缩。  
  
 请求不包含有关使用百分比编码值的编码的任何信息，因为它可能无法确定正确的编码只是通过分析百分比编码值。  
  
 因此`http.sys`提供了用于修改该过程的两个注册表项：  
  
|注册表项|默认值|描述|  
|------------------|-------------------|-----------------|  
|EnableNonUTF8|1|如果为零，`http.sys`接受只有 UTF-8 编码的 Url。<br /><br /> 如果非零`http.sys`还接受请求中的 ANSI 编码或 DBCS 编码 Url。|  
|FavorUTF8|1|如果非零`http.sys`始终尝试解码 URL 为 utf-8 第一次; 如果该转换失败，并且 EnableNonUTF8 为非零，Http.sys 然后尝试将其解码为 ANSI 或者与 DBCS。<br /><br /> 如果为零 （和 EnableNonUTF8 为非零），`http.sys`尝试对其进行解码为 ANSI 或者与 DBCS; 如果该操作不成功，它会尝试 utf-8 转换。|  
  
 当<xref:System.Net.HttpListener>收到请求时，它使用从经过转换的 URI`http.sys`作为输入到<xref:System.Net.HttpListenerRequest.Url%2A>属性。  
  
 没有需要在 Uri 中支持除字符和数字的字符。 例如，以下 URI，用于检索客户的客户信息数字"1/3812":  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 请注意 Uri (%2f) 中的百分号编码斜杠。 这是有必要，请因为在这种情况下包含斜杠字符表示数据而不是路径分隔符。  
  
 将字符串传递给 Uri 构造函数将导致以下 URI:  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 将路径拆分为其段将导致以下元素：  
  
 `Customer('1`  
  
 `3812')`  
  
 这不是请求的发件人的意图。  
  
 如果<xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>属性设置为 false，然后当<xref:System.Net.HttpListener>收到请求时，它使用的原始 URI 而不是从经过转换的 URI`http.sys`作为输入到<xref:System.Net.HttpListenerRequest.Url%2A>属性。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="P:System.Net.HttpListenerRequest.Url" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md">网络设置架构</related>
    <related type="Article" href="http://msdn.microsoft.com/library/62f121fd-3f2e-4033-bb39-48ae996bfbd9">&lt;httpListener&gt;元素 （网络设置）</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListenerElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.HttpListenerElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListenerElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Configuration.HttpListenerElement" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Net.Configuration.HttpListenerElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeouts">
      <MemberSignature Language="C#" Value="public System.Net.Configuration.HttpListenerTimeoutsElement Timeouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Configuration.HttpListenerTimeoutsElement Timeouts" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.Timeouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeouts As HttpListenerTimeoutsElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Configuration::HttpListenerTimeoutsElement ^ Timeouts { System::Net::Configuration::HttpListenerTimeoutsElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeouts : System.Net.Configuration.HttpListenerTimeoutsElement" Usage="System.Net.Configuration.HttpListenerElement.Timeouts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("timeouts")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.HttpListenerTimeoutsElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于 <see cref="T:System.Net.HttpListener" /> 对象的默认超时元素。</summary>
        <value>返回 <see cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />。  
  
用于 <see cref="T:System.Net.HttpListener" /> 对象的超时元素。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />
      </Docs>
    </Member>
    <Member MemberName="UnescapeRequestUrl">
      <MemberSignature Language="C#" Value="public bool UnescapeRequestUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnescapeRequestUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnescapeRequestUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnescapeRequestUrl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UnescapeRequestUrl : bool" Usage="System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("unescapeRequestUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Net.HttpListener" /> 是否使用未经转义的原始 URI，而非经过转换的 URI。</summary>
        <value>一个布尔值，该值指示 <see cref="T:System.Net.HttpListener" /> 是否使用未经转义的原始 URI，而非经过转换的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>属性指示如果<xref:System.Net.HttpListener>使用未经转义的原始 URI，而不是经过转换的 URI 其中任何百分比编码值转换和执行其他任何规范化步骤。  
  
 当<xref:System.Net.HttpListener>实例收到的请求通过`http.sys`服务，它创建的提供的 URI 字符串实例`http.sys`，并将其作为公开<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>属性。  
  
 `http.sys`服务公开两个请求的 URI 字符串：  
  
-   原始 URI  
  
-   经过转换的 URI  
  
 原始 URI 是<xref:System.Uri?displayProperty=nameWithType>HTTP 请求的请求行中提供：  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 提供的原始 URI`http.sys`前面所述的请求是"/ 路径 /"。 这表示在通过网络发送以下 HTTP 谓词字符串。  
  
 `http.sys`服务从使用 HTTP 请求行中提供的 URI 请求中提供的信息创建经过转换的 URI，并要确定源服务器请求的主机标头应转发到。 这是通过比较已注册的 URI 前缀的一组与请求中的信息。 HTTP Server SDK 文档将作为此转换的 URI [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108)结构。  
  
 以便可以请求与已注册的 URI 前缀进行比较，需要完成一些规范化到请求。 对于以上经过转换的 URI 示例将按如下所示：  
  
 `http://www.contoso.com/path/`  
  
 `http.sys`服务结合<xref:System.Uri.Host%2A?displayProperty=nameWithType>属性值和要创建一个已转换的 URI 的请求行中的字符串。 此外，`http.sys`和<xref:System.Uri?displayProperty=nameWithType>类还执行以下操作：  
  
-   取消转义所有百分比编码的值。  
  
-   将百分比编码为 utf-16 字符表示形式的非 ASCII 字符。 请注意，Unicode 字符 （Unicode 编码使用 %uxxxx 格式） 以及支持 utf-8 和 ANSI/DBCS 字符。  
  
-   执行其他规范化步骤，如路径压缩。  
  
 请求不包含有关使用百分比编码值的编码的任何信息，因为它可能无法确定正确的编码只是通过分析百分比编码值。  
  
 因此`http.sys`提供了用于修改该过程的两个注册表项：  
  
|注册表项|默认值|描述|  
|------------------|-------------------|-----------------|  
|EnableNonUTF8|1|如果为零，`http.sys`接受只有 UTF-8 编码的 Url。<br /><br /> 如果非零`http.sys`还接受请求中的 ANSI 编码或 DBCS 编码 Url。|  
|FavorUTF8|1|如果非零`http.sys`始终尝试解码 URL 为 utf-8 第一次; 如果该转换失败，并且 EnableNonUTF8 为非零，Http.sys 然后尝试将其解码为 ANSI 或者与 DBCS。<br /><br /> 如果为零 （和 EnableNonUTF8 为非零），`http.sys`尝试对其进行解码为 ANSI 或者与 DBCS; 如果该操作不成功，它会尝试 utf-8 转换。|  
  
 当<xref:System.Net.HttpListener>收到请求时，它使用从经过转换的 URI`http.sys`作为输入到<xref:System.Net.HttpListenerRequest.Url%2A>属性。  
  
 没有需要在 Uri 中支持除字符和数字的字符。 例如，以下 URI，用于检索客户的客户信息数字"1/3812":  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 请注意 Uri (%2f) 中的百分号编码斜杠。 这是有必要，请因为在这种情况下包含斜杠字符表示数据而不是路径分隔符。  
  
 将字符串传递给 Uri 构造函数将导致以下 URI:  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 将路径拆分为其段将导致以下元素：  
  
 `Customer('1`  
  
 `3812')`  
  
 这不是请求的发件人的意图。  
  
 如果<xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>属性设置为 false，然后当<xref:System.Net.HttpListener>收到请求时，它使用的原始 URI 而不是从经过转换的 URI`http.sys`作为输入到<xref:System.Net.HttpListenerRequest.Url%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="P:System.Net.HttpListenerRequest.Url" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md">网络设置架构</related>
        <related type="Article" href="http://msdn.microsoft.com/library/62f121fd-3f2e-4033-bb39-48ae996bfbd9">&lt;httpListener&gt;元素 （网络设置）</related>
      </Docs>
    </Member>
  </Members>
</Type>