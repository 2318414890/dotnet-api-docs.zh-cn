<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79299cc2f8fd9772fbb8c8961ba6f8b4705dbc5a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529831" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aca3f-101">安装一个可执行文件，该文件包含扩展 <see cref="T:System.ServiceProcess.ServiceBase" /> 的类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aca3f-101">Installs an executable containing classes that extend <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
      </span>
      <span data-ttu-id="aca3f-102">该类由安装实用工具（如 InstallUtil.exe）在安装服务应用程序时调用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aca3f-102">This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca3f-103"><xref:System.ServiceProcess.ServiceProcessInstaller>工作原理普遍适用于所有服务的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="aca3f-103">The <xref:System.ServiceProcess.ServiceProcessInstaller> does work common to all services in an executable.</span></span> <span data-ttu-id="aca3f-104">安装实用程序使用它来写入与你想要安装的服务关联的注册表值。</span><span class="sxs-lookup"><span data-stu-id="aca3f-104">It is used by the installation utility to write registry values associated with services you want to install.</span></span>  
  
 <span data-ttu-id="aca3f-105">若要安装服务，创建继承自项目安装程序类<xref:System.Configuration.Install.Installer>，并设置<xref:System.ComponentModel.RunInstallerAttribute>到类上`true`。</span><span class="sxs-lookup"><span data-stu-id="aca3f-105">To install a service, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> on the class to `true`.</span></span> <span data-ttu-id="aca3f-106">在项目中，实例化一个<xref:System.ServiceProcess.ServiceProcessInstaller>每个服务应用程序，另一个实例<xref:System.ServiceProcess.ServiceInstaller>应用程序中每个服务的实例。</span><span class="sxs-lookup"><span data-stu-id="aca3f-106">Within your project, instantiate one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="aca3f-107">最后，添加<xref:System.ServiceProcess.ServiceProcessInstaller>实例和<xref:System.ServiceProcess.ServiceInstaller>到您项目的安装程序类的实例。</span><span class="sxs-lookup"><span data-stu-id="aca3f-107">Finally, add the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and the <xref:System.ServiceProcess.ServiceInstaller> instances to your project installer class.</span></span>  
  
 <span data-ttu-id="aca3f-108">InstallUtil.exe 运行时，该实用程序中寻找与服务程序集中的类<xref:System.ComponentModel.RunInstallerAttribute>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="aca3f-108">When InstallUtil.exe runs, the utility looks for classes in the service assembly with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`.</span></span> <span data-ttu-id="aca3f-109">通过将它们添加到类添加到服务程序集<xref:System.Configuration.Install.Installer.Installers%2A>项目安装程序与关联的集合。</span><span class="sxs-lookup"><span data-stu-id="aca3f-109">Add classes to the service assembly by adding them to the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="aca3f-110">如果<xref:System.ComponentModel.RunInstallerAttribute>是`false`，则安装实用工具忽略项目安装程序。</span><span class="sxs-lookup"><span data-stu-id="aca3f-110">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="aca3f-111">实例<xref:System.ServiceProcess.ServiceProcessInstaller>，你可以修改的属性包括指定登录的用户以外的帐户下运行服务应用程序。</span><span class="sxs-lookup"><span data-stu-id="aca3f-111">For an instance of <xref:System.ServiceProcess.ServiceProcessInstaller>, properties you can modify include specifying that a service application run under an account other than the logged-on user.</span></span> <span data-ttu-id="aca3f-112">你可以指定特定<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>对在其下运行该服务，也可以使用<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>来指定服务计算机的系统帐户、 本地或网络服务帐户或用户帐户下运行。</span><span class="sxs-lookup"><span data-stu-id="aca3f-112">You can specify a particular <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair under which the service should run, or you can use <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to specify that the service run under the computer's System account, a local or network service account, or a user account.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aca3f-113">计算机的系统帐户不是管理员帐户相同。</span><span class="sxs-lookup"><span data-stu-id="aca3f-113">The computer's System account is not the same as the Administrator account.</span></span>  
  
 <span data-ttu-id="aca3f-114">通常情况下，不调用方法上<xref:System.ServiceProcess.ServiceInstaller>在代码中; 它们是通常只能由调用安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="aca3f-114">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="aca3f-115">安装实用程序将自动调用<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>和<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>在安装过程中的方法。</span><span class="sxs-lookup"><span data-stu-id="aca3f-115">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="aca3f-116">如有必要，它退出故障，通过调用<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(或<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 上所有以前安装的组件。</span><span class="sxs-lookup"><span data-stu-id="aca3f-116">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="aca3f-117">应用程序的安装例程维护自动有关组件已安装，使用项目安装程序的信息<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="aca3f-117">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="aca3f-118">此状态信息将持续更新作为<xref:System.ServiceProcess.ServiceProcessInstaller>实例和每个<xref:System.ServiceProcess.ServiceInstaller>由实用工具安装实例。</span><span class="sxs-lookup"><span data-stu-id="aca3f-118">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="aca3f-119">它是通常情况下不必为你的代码来显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="aca3f-119">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="aca3f-120">实例化<xref:System.ServiceProcess.ServiceProcessInstaller>基类构造函数中，将导致<xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="aca3f-120">Instantiating a <xref:System.ServiceProcess.ServiceProcessInstaller> causes the base class constructor, <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, to be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aca3f-121">下面的示例创建名为 MyProjectInstaller，该类继承自项目安装程序<xref:System.Configuration.Install.Installer>。</span><span class="sxs-lookup"><span data-stu-id="aca3f-121">The following example creates a project installer called MyProjectInstaller, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="aca3f-122">假定没有服务可执行文件，包含两个服务，"Hello World 服务 1"和"Hello World 服务 2"。</span><span class="sxs-lookup"><span data-stu-id="aca3f-122">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="aca3f-123">（这将由安装实用工具调用） 的 MyProjectInstaller 的构造函数内<xref:System.ServiceProcess.ServiceInstaller>对于每个服务，创建对象和<xref:System.ServiceProcess.ServiceProcessInstaller>创建的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="aca3f-123">Within the constructor for MyProjectInstaller (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each service, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="aca3f-124">为将 MyProjectInstaller 识别为有效的安装程序中，使安装实用工具<xref:System.ComponentModel.RunInstallerAttribute>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="aca3f-124">For the install utility to recognize MyProjectInstaller as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="aca3f-125">可选属性设置的过程安装程序并服务安装程序安装程序添加到之前<xref:System.Configuration.Install.Installer.Installers%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="aca3f-125">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="aca3f-126">当安装实用工具访问 MyProjectInstaller 时，将对象添加到<xref:System.Configuration.Install.Installer.Installers%2A>集合通过调用<xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType>将反过来安装。</span><span class="sxs-lookup"><span data-stu-id="aca3f-126">When the install utility accesses MyProjectInstaller, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="aca3f-127">在过程中，安装程序会维护指示已安装的对象，以便每个对象可以进行备份反过来安装出现故障时的状态信息。</span><span class="sxs-lookup"><span data-stu-id="aca3f-127">During the process, the installer maintains state information indicating which objects have been installed, so each object can be backed out in turn in case of an installation failure.</span></span>  
  
 <span data-ttu-id="aca3f-128">通常情况下，你将不显式实例化项目安装程序类。</span><span class="sxs-lookup"><span data-stu-id="aca3f-128">Normally, you would not instantiate your project installer class explicitly.</span></span> <span data-ttu-id="aca3f-129">您可以创建它并添加<xref:System.ComponentModel.RunInstallerAttribute>，但安装实用程序实际调用，并因此实例化类。</span><span class="sxs-lookup"><span data-stu-id="aca3f-129">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute>, but the install utility actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aca3f-130">创建 <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-130">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aca3f-131">获取或设置运行该服务应用程序时所使用的帐户类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-131">Gets or sets the type of account under which to run this service application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aca3f-132">
            <see cref="T:System.ServiceProcess.ServiceAccount" />，它定义系统运行此服务时所使用的帐户类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-132">A <see cref="T:System.ServiceProcess.ServiceAccount" /> that defines the type of account under which the system runs this service.</span>
          </span>
          <span data-ttu-id="aca3f-133">默认值为 <see langword="User" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-133">The default is <see langword="User" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca3f-134">当<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>属性是`User`、<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>属性用于定义在其下运行服务应用程序的帐户。</span><span class="sxs-lookup"><span data-stu-id="aca3f-134">When the <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> property is `User`, the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are used to define an account under which the service application runs.</span></span>  
  
 <span data-ttu-id="aca3f-135"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>对允许服务在系统帐户之外的帐户下运行。</span><span class="sxs-lookup"><span data-stu-id="aca3f-135">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="aca3f-136">这可以例如，允许在无用户登录时自动启动在重新启动，该服务。</span><span class="sxs-lookup"><span data-stu-id="aca3f-136">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span> <span data-ttu-id="aca3f-137">如果将<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>或<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空，并且已设置<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>到`User`，系统将提示你输入有效的用户名和密码在安装。</span><span class="sxs-lookup"><span data-stu-id="aca3f-137">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="aca3f-138">你还可以指定本地系统帐户或本地运行的服务或网络服务。</span><span class="sxs-lookup"><span data-stu-id="aca3f-138">You can also specify that the service run under the local system account, or as a local or network service.</span></span> <span data-ttu-id="aca3f-139">请参阅<xref:System.ServiceProcess.ServiceAccount>枚举有关类型的帐户的详细信息。</span><span class="sxs-lookup"><span data-stu-id="aca3f-139">See the <xref:System.ServiceProcess.ServiceAccount> enumeration for details on types of accounts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">
          <span data-ttu-id="aca3f-140">表示服务进程的 <see cref="T:System.ComponentModel.IComponent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-140">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aca3f-141">在没有 <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> 类特定行为的情况下实现基类 <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-141">Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca3f-142">不应在代码中调用此方法。</span><span class="sxs-lookup"><span data-stu-id="aca3f-142">This method should not be called within your code.</span></span> <span data-ttu-id="aca3f-143">基类方法上的<xref:System.Configuration.Install.ComponentInstaller>是`abstract`，因此此处在派生类中实现它。</span><span class="sxs-lookup"><span data-stu-id="aca3f-143">The base class method on <xref:System.Configuration.Install.ComponentInstaller> is `abstract`, so it is implemented here on the derived class.</span></span> <span data-ttu-id="aca3f-144">但是，没有任何<xref:System.ServiceProcess.ServiceProcessInstaller>类特定的处理在方法的实现。</span><span class="sxs-lookup"><span data-stu-id="aca3f-144">However, there is no <xref:System.ServiceProcess.ServiceProcessInstaller> class-specific processing in the method's implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aca3f-145">获取为服务安装选项显示的帮助文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-145">Gets help text displayed for service installation options.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aca3f-146">帮助文本，提供为在特定帐户下运行服务而设置用户名和密码的步骤说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-146">Help text that provides a description of the steps for setting the user name and password in order to run the service under a particular account.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca3f-147">手动启动服务时，可以使用此帮助文本。</span><span class="sxs-lookup"><span data-stu-id="aca3f-147">This help text can be used when a service starts manually.</span></span> <span data-ttu-id="aca3f-148">它指示用户如何输入用户名和密码信息。</span><span class="sxs-lookup"><span data-stu-id="aca3f-148">It indicates to the user how to enter user name and password information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="aca3f-149">
            <see cref="T:System.Collections.IDictionary" />，包含与安装关联的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-149">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aca3f-150">将服务应用程序信息写入注册表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-150">Writes service application information to the registry.</span>
          </span>
          <span data-ttu-id="aca3f-151">该方法旨在由自动调用适当方法的安装工具使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-151">This method is meant to be used by installation tools, which call the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca3f-152">通常情况下，不调用方法上<xref:System.ServiceProcess.ServiceProcessInstaller>在代码中; 它们是通常只能由调用安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="aca3f-152">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="aca3f-153">安装实用程序将自动调用<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>在安装过程中的方法。</span><span class="sxs-lookup"><span data-stu-id="aca3f-153">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="aca3f-154">如有必要，它退出故障，通过调用<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>上所有以前安装的组件。</span><span class="sxs-lookup"><span data-stu-id="aca3f-154">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on all previously installed components.</span></span> <span data-ttu-id="aca3f-155">此方法将安装传递给基类<xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="aca3f-155">This method passes the installation to the base class <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="aca3f-156">通常情况下，你将不调用对象方法<xref:System.ServiceProcess.ServiceInstaller>在代码中; 它们是通常只能由调用安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="aca3f-156">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="aca3f-157">安装实用程序将自动调用<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>和<xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType>在安装过程中的方法。</span><span class="sxs-lookup"><span data-stu-id="aca3f-157">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="aca3f-158">如有必要，它退出故障，通过调用<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>(或<xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) 上所有以前安装的组件</span><span class="sxs-lookup"><span data-stu-id="aca3f-158">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components</span></span>  
  
 <span data-ttu-id="aca3f-159">应用程序的安装例程维护自动有关组件已安装，使用项目安装程序的信息<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="aca3f-159">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="aca3f-160">此状态信息传递给<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>作为`stateSaver`参数，将持续更新作为<xref:System.ServiceProcess.ServiceProcessInstaller>实例和每个<xref:System.ServiceProcess.ServiceInstaller>由实用工具安装实例。</span><span class="sxs-lookup"><span data-stu-id="aca3f-160">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="aca3f-161">它是通常情况下不必为你的代码来显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="aca3f-161">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="aca3f-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> 将由基类的方法引发任何异常传递给调用的方法或<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="aca3f-162"><xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aca3f-163">
            <paramref name="stateSaver" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-163">The <paramref name="stateSaver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aca3f-164">获取或设置与运行服务应用程序时所使用用户帐户关联的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-164">Gets or sets the password associated with the user account under which the service application runs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aca3f-165">与运行服务时所使用帐户关联的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-165">The password associated with the account under which the service should run.</span>
          </span>
          <span data-ttu-id="aca3f-166">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-166">The default is an empty string ("").</span>
          </span>
          <span data-ttu-id="aca3f-167">该属性非公共属性，并且从不序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-167">The property is not public, and is never serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca3f-168"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>对允许服务在系统帐户之外的帐户下运行。</span><span class="sxs-lookup"><span data-stu-id="aca3f-168">The <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="aca3f-169">这可以例如，允许在无用户登录时自动启动在重新启动，该服务。</span><span class="sxs-lookup"><span data-stu-id="aca3f-169">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="aca3f-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 和<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>处理以安全的方式，因为它们永远不会序列化或保存到的安装状态 (项目安装程序的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) 或其他位置使用公共访问权限。</span><span class="sxs-lookup"><span data-stu-id="aca3f-170"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="aca3f-171">设置<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>允许要在安装时自动与服务相关联的帐户。</span><span class="sxs-lookup"><span data-stu-id="aca3f-171">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="aca3f-172">如果将<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>或<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空，并且已设置<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>到`User`，系统将提示你输入有效的用户名和密码在安装。</span><span class="sxs-lookup"><span data-stu-id="aca3f-172">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="aca3f-173">运行单独的帐户下的服务的另一种方法是使用计算机的系统帐户。</span><span class="sxs-lookup"><span data-stu-id="aca3f-173">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="aca3f-174">该帐户，这是不同于管理员帐户，不需要密码。</span><span class="sxs-lookup"><span data-stu-id="aca3f-174">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="aca3f-175">系统帐户特权可能超过当前登录的用户。</span><span class="sxs-lookup"><span data-stu-id="aca3f-175">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="aca3f-176">在系统帐户下运行，而不是用户帐户可避免由用户缺少权限导致的问题需要执行此服务</span><span class="sxs-lookup"><span data-stu-id="aca3f-176">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="aca3f-177">如果<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>是任何值，而不`User`，会使用指定帐户 （本地或网络服务或本地系统），即使<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>填充属性。</span><span class="sxs-lookup"><span data-stu-id="aca3f-177">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specifed account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="aca3f-178">
            <see cref="T:System.Collections.IDictionary" />，包含与安装关联的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-178">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aca3f-179">回滚由安装过程写到注册表的服务应用程序信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-179">Rolls back service application information written to the registry by the installation procedure.</span>
          </span>
          <span data-ttu-id="aca3f-180">该方法旨在由自动处理适当方法的安装工具使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-180">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca3f-181">通常情况下，不调用方法上<xref:System.ServiceProcess.ServiceProcessInstaller>在代码中; 它们是通常只能由调用安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="aca3f-181">Normally, you do not call the methods on <xref:System.ServiceProcess.ServiceProcessInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="aca3f-182">安装实用程序将自动调用<xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType>在安装过程中的方法。</span><span class="sxs-lookup"><span data-stu-id="aca3f-182">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> method during the installation process.</span></span> <span data-ttu-id="aca3f-183">如有必要，它退出故障，通过调用<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>上生成异常的对象。</span><span class="sxs-lookup"><span data-stu-id="aca3f-183">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="aca3f-184">应用程序的安装例程维护自动有关组件已安装，使用项目安装程序的信息<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="aca3f-184">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="aca3f-185">此状态信息传递给<xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>作为`savedState`参数，将持续更新作为<xref:System.ServiceProcess.ServiceProcessInstaller>实例和每个<xref:System.ServiceProcess.ServiceInstaller>由实用工具安装实例。</span><span class="sxs-lookup"><span data-stu-id="aca3f-185">This state information, passed into <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="aca3f-186">它是通常情况下不必为你的代码来显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="aca3f-186">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="aca3f-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 将由基类的方法引发任何异常传递给调用的方法或<xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="aca3f-187"><xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> passes to the calling method any exceptions thrown by base class methods or <xref:System.Configuration.Install.Installer.BeforeInstall> / <xref:System.Configuration.Install.Installer.AfterInstall> event handlers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aca3f-188">
            <paramref name="savedState" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-188">The <paramref name="savedState" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="aca3f-189">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-189">-or-</span>
          </span>
          <span data-ttu-id="aca3f-190">
            <paramref name="savedState" /> 已损坏或不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-190">The <paramref name="savedState" /> is corrupted or non-existent.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aca3f-191">获取或设置运行服务应用程序时将使用的用户帐户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-191">Gets or sets the user account under which the service application will run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aca3f-192">运行服务时将使用的帐户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-192">The account under which the service should run.</span>
          </span>
          <span data-ttu-id="aca3f-193">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aca3f-193">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aca3f-194"><xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>对允许服务在系统帐户之外的帐户下运行。</span><span class="sxs-lookup"><span data-stu-id="aca3f-194">The <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pair allows the service to run under an account other than the system account.</span></span> <span data-ttu-id="aca3f-195">这可以例如，允许在无用户登录时自动启动在重新启动，该服务。</span><span class="sxs-lookup"><span data-stu-id="aca3f-195">This can, for example, allow the service to start automatically at reboot, when no user is logged on.</span></span>  
  
 <span data-ttu-id="aca3f-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 和<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>处理以安全的方式，因为它们永远不会序列化或保存到的安装状态 (项目安装程序的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) 或其他位置使用公共访问权限。</span><span class="sxs-lookup"><span data-stu-id="aca3f-196"><xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> are handled in a secure manner in that they are never serialized or saved to the install state (the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) or other location with public access.</span></span>  
  
 <span data-ttu-id="aca3f-197">设置<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>允许要在安装时自动与服务相关联的帐户。</span><span class="sxs-lookup"><span data-stu-id="aca3f-197">Setting the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> allows an account to be associated automatically with the service at install time.</span></span> <span data-ttu-id="aca3f-198">如果将<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>或<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>空，并且已设置<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>到`User`，系统将提示你输入有效的用户名和密码在安装。</span><span class="sxs-lookup"><span data-stu-id="aca3f-198">If you leave either the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> or <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> empty and set <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> to `User`, you will be prompted for a valid user name and password at installation.</span></span>  
  
 <span data-ttu-id="aca3f-199">运行单独的帐户下的服务的另一种方法是使用计算机的系统帐户。</span><span class="sxs-lookup"><span data-stu-id="aca3f-199">Another option for running a service under a separate account is to use the computer's System account.</span></span> <span data-ttu-id="aca3f-200">该帐户，这是不同于管理员帐户，不需要密码。</span><span class="sxs-lookup"><span data-stu-id="aca3f-200">That account, which is distinct from the Administrator account, requires no password.</span></span> <span data-ttu-id="aca3f-201">系统帐户特权可能超过当前登录的用户。</span><span class="sxs-lookup"><span data-stu-id="aca3f-201">The System account's privileges may exceed those of the user currently logged in.</span></span> <span data-ttu-id="aca3f-202">在系统帐户下运行，而不是用户帐户可避免由用户缺少权限导致的问题需要执行此服务</span><span class="sxs-lookup"><span data-stu-id="aca3f-202">Running under the System account rather than a user account avoids problems resulting from the user lacking a permission the service requires</span></span>  
  
 <span data-ttu-id="aca3f-203">如果<xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>是任何值，而不`User`，会使用指定的帐户 （本地或网络服务或本地系统），即使<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>和<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>填充属性。</span><span class="sxs-lookup"><span data-stu-id="aca3f-203">If <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> is any value other than `User`, the specified account (local or network service, or local system) is used, even if the <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> and <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> properties are populated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>