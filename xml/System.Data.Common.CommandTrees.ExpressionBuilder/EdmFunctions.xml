<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EdmFunctions.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ade158612276cd38148f7062489c3007520cefe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ade158612276cd38148f7062489c3007520cefe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
          <source>Provides an API to construct <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</source>
          <target state="translated">提供用于构造 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> 的 API，这些对象调用规范 EDM 函数并使得此 API 可以作为表达式类型的扩展方法来访问。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">一个指定数值的表达式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有数值结果类型）调用规范 'Abs' 函数。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 value 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the absolute value of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">返回 value 的绝对值的新 DbFunctionExpression。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of days to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 dateValue 中的天数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddDays' 函数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">该表达式的结果类型与 dateValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of days specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept>.</source>
          <target state="translated">一个新的 DbFunctionExpression，为“dateValue”指定的值添加“addValue”指定的天数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">dateValue addValue</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">dateValue addValue</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of hours to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 timeValue 中的小时数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddHours' 函数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 timeValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of hours specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，为给“timeValue”指定的值添加“addValue”指定的小时数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of microseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 timeValue 中的微秒数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddMicroseconds' 函数。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 timeValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of microseconds specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的微秒数。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of milliseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 timeValue 中的毫秒数。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddMilliseconds' 函数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 timeValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of milliseconds specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的毫秒数。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of minutes to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 timeValue 中的分钟数。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddMinutes' 函数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 timeValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of minutes specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的分钟数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of months to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 dateValue 中的月数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddMonths' 函数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">该表达式的结果类型与 dateValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of months specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，为“dateValue”指定的值添加“addValue”指定的月数。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">dateValue addValue</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">dateValue addValue</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of nanoseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 timeValue 中的纳秒数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddNanoseconds' 函数。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 timeValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of nanoseconds specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的纳秒数。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of seconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 timeValue 中的秒数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddSeconds' 函数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 timeValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of seconds specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的秒数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">timeValue addValue</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">一个表达式，指定应与 addValue 相加的值。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of years to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要加到 dateValue 中的年数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddYears' 函数。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">该表达式的结果类型与 dateValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of years specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，为“dateValue”指定的值添加“addValue”指定的年数。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">dateValue addValue</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated">dateValue addValue</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the average value should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应计算其中平均值的集合。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Avg' function over the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合调用规范“Avg”函数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">该表达式的结果类型与集合的元素类型相同。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the average value.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成平均值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">一个指定第一个操作数的表达式。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">一个指定第二个操作数的表达式。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有相同的整数结果类型）调用规范 'BitwiseAnd' 函数。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">结果的数据类型与参数的类型相同。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value produced by performing the bitwise AND of <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>value2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回通过执行“value1”以及“value2”的按位 AND 产生的值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated">value1 value2</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated">value1 value2</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">一个指定第一个操作数的表达式。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有整数结果类型）调用规范 'BitwiseNot' 函数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">结果的数据类型与参数的类型相同。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回通过执行“value”的按位 NOT 以及产生的值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">一个指定第一个操作数的表达式。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">一个指定第二个操作数的表达式。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有相同的整数结果类型）调用规范 'BitwiseOr' 函数。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">结果的数据类型与参数的类型相同。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value produced by performing the bitwise OR of <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>value2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回通过执行“value1”以及“value2”的按位 OR 产生的值。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated">value1 value2</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated">value1 value2</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">一个指定第一个操作数的表达式。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">一个指定第二个操作数的表达式。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有相同的整数结果类型）调用规范 'BitwiseXor' 函数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">结果的数据类型与参数的类型相同。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>value2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回通过执行“value1”以及“value2”的按位 XOR（独占 OR）产生的值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated">value1 value2</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated">value1 value2</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">一个指定数值的表达式。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有单精度、双精度或小数结果类型）调用规范 'Ceiling' 函数。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 value 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the smallest integer value not less than than <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回小于 value 的最小整数值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should appear first in the concatenated result string.</source>
          <target state="translated">一个表达式，指定应显示在串连结果字符串最前面的字符串。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should appear second in the concatenated result string.</source>
          <target state="translated">一个表达式，指定应显示在串连结果字符串后续位置的字符串。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范 'Concat' 函数。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">该表达式的结果类型为字符串。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the concatenated string.</source>
          <target state="translated">一个新的 DbFunctionExpression，生成串联字符串。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>string1<ept id="p1">**</ept> <bpt id="p2">**</bpt>string2<ept id="p2">**</ept></source>
          <target state="translated">string1 string2</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>string1<ept id="p1">**</ept> <bpt id="p2">**</bpt>string2<ept id="p2">**</ept></source>
          <target state="translated">string1 string2</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for any occurence of <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要从中搜索 searchedForString 的任何匹配项的字符串。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for in <bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要在 searchedString 中搜索的字符串。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“Contains”函数。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">表达式的结果类型为 Boolean。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a Boolean value indicating whether or not <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept> occurs within <bpt id="p2">**</bpt>searchedString<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，它返回的布尔值指示“searchedForString”是否在“searchedString”内出现。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept> <bpt id="p2">**</bpt>searchedForString<ept id="p2">**</ept></source>
          <target state="translated">searchedString searchedForString</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept> <bpt id="p2">**</bpt>searchedForString<ept id="p2">**</ept></source>
          <target state="translated">searchedString searchedForString</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection over which the count value should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应计算其计数值的集合。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Count' function over the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合调用规范“Count”函数。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the count value.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成计数值。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the year value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供年份数值。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the month value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供月份数值。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the day value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供日期数值。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the hour value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供小时数值。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the minute value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供分钟数值。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the second value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供秒钟数值。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CreateDateTime' function with the specified arguments.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数调用规范形式的“CreateDateTime”函数。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>second<ept id="p1">**</ept> must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</source>
          <target state="translated">second 必须具有结果类型 Edm.Double，所有其他参数必须具有结果类型 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.DateTime.</source>
          <target state="translated">表达式的结果类型为 Edm.DateTime。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a new DateTime based on the specified values.</source>
          <target state="translated">新 DbFunctionExpression 基于指定的值返回新的 DateTime。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept></source>
          <target state="translated">year, month, day, hour, minute, second</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept></source>
          <target state="translated">year, month, day, hour, minute, second</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the year value for the new DateTimeOffset instance.</source>
          <target state="translated">一个表达式，为新的 DateTimeOffset 实例提供年份数值。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the month value for the new DateTimeOffset instance.</source>
          <target state="translated">一个表达式，为新的 DateTimeOffset 实例提供月份数值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the day value for the new DateTimeOffset instance.</source>
          <target state="translated">一个表达式，为新的 DateTimeOffset 实例提供日期数值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the hour value for the new DateTimeOffset instance.</source>
          <target state="translated">一个表达式，为新的 DateTimeOffset 实例提供小时数值。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the minute value for the new DateTimeOffset instance.</source>
          <target state="translated">一个表达式，为新的 DateTimeOffset 实例提供分钟数值。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the second value for the new DateTimeOffset instance.</source>
          <target state="translated">一个表达式，为新的 DateTimeOffset 实例提供秒钟数值。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</source>
          <target state="translated">一个表达式，为新的 DateTimeOffset 实例提供时区偏移量的分钟数。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数调用规范形式的“CreateDateTimeOffset”函数。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>second<ept id="p1">**</ept> must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</source>
          <target state="translated">second 必须具有结果类型 Edm.Double，所有其他参数必须具有结果类型 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.DateTimeOffset.</source>
          <target state="translated">表达式的结果类型为 Edm.DateTimeOffset。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</source>
          <target state="translated">新 DbFunctionExpression 基于指定的值返回新的 DateTimeOffset。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept> <bpt id="p7">**</bpt>timeZoneOffset<ept id="p7">**</ept></source>
          <target state="translated">year, month, day, hour, minute, second, timeZoneOffset</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept> <bpt id="p7">**</bpt>timeZoneOffset<ept id="p7">**</ept></source>
          <target state="translated">year, month, day, hour, minute, second, timeZoneOffset</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the hour value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供小时数值。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the minute value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供分钟数值。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the second value for the new DateTime instance.</source>
          <target state="translated">一个表达式，为新的 DateTime 实例提供秒钟数值。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CreateTime' function with the specified arguments.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数调用规范形式的“CreateTime”函数。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>second<ept id="p1">**</ept> must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</source>
          <target state="translated">second 必须具有结果类型 Edm.Double，所有其他参数必须具有结果类型 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Time.</source>
          <target state="translated">表达式的结果类型为 Edm.Time。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a new Time based on the specified values.</source>
          <target state="translated">新 DbFunctionExpression 基于指定的值返回新的 Time。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>hour<ept id="p1">**</ept> <bpt id="p2">**</bpt>minute<ept id="p2">**</ept> <bpt id="p3">**</bpt>second<ept id="p3">**</ept></source>
          <target state="translated">hour, minute, second</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>hour<ept id="p1">**</ept> <bpt id="p2">**</bpt>minute<ept id="p2">**</ept> <bpt id="p3">**</bpt>second<ept id="p3">**</ept></source>
          <target state="translated">hour, minute, second</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CurrentDateTime' function.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它调用规范“CurrentDateTime”函数。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime">
          <source>A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</source>
          <target state="translated">新 DbFunctionExpression 返回当前日期和时间作为 Edm.DateTime 实例。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CurrentDateTimeOffset' function.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它调用规范“CurrentDateTimeOffset”函数。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset">
          <source>A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</source>
          <target state="translated">新 DbFunctionExpression 返回当前日期和时间作为 Edm.DateTimeOffset 实例。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CurrentUtcDateTime' function.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它调用规范“CurrentUtcDateTime”函数。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime">
          <source>A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</source>
          <target state="translated">新 DbFunctionExpression 返回当前 UTC 日期和时间作为 Edm.DateTime 实例。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the day should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应从中检索日的值。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它调用具有指定参数的规范“Day”函数，其必须具有 DateTime 或 DateTimeOffset 结果类型。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer day value from <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，它从 dateValue 中返回整数形式的日值。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the day within the year should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应从中检索一年中某天的值。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它调用具有指定参数的规范“DayOfYear”函数，其必须具有 DateTime 或 DateTimeOffset 结果类型。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer day of year value from <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，它从 dateValue 中返回整数形式的一年中某天的值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">一个表达式，指定第一个日期值参数。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">指定第二次日期值参数的表达式。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范 'DiffDays' 函数。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of days that is the difference between <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回的天数为“dateValue1”和“dateValue2”之间的差值。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">一个表达式，指定第一个时间值参数。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">指定第二次时间值参数的表达式。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffHours' 函数。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of hours that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回的小时数为“timeValue1”和“timeValue2”之间的差值。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">一个表达式，指定第一个时间值参数。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">指定第二次时间值参数的表达式。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffMicroseconds' 函数。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of microseconds that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回的微秒数为“timeValue1”和“timeValue2”之间的差值。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">一个表达式，指定第一个时间值参数。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">指定第二次时间值参数的表达式。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffMilliseconds'函数。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of milliseconds that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回的毫秒数为“timeValue1”和“timeValue2”之间的差值。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">一个表达式，指定第一个时间值参数。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">指定第二次时间值参数的表达式。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffMinutes' 函数。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of minutes that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新 DbFunctionExpression 返回分钟数为“timeValue1”和“timeValue2”之间的差异。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">一个表达式，指定第一个日期值参数。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">指定第二次日期值参数的表达式。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范 'DiffMonths' 函数。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of months that is the difference between <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回的月数为“dateValue1”和“dateValue2”之间的差值。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">一个表达式，指定第一个时间值参数。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">指定第二次时间值参数的表达式。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffNanoseconds' 函数。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of nanoseconds that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回的纳秒数为“timeValue1”和“timeValue2”之间的差值。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">一个表达式，指定第一个时间值参数。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">指定第二次时间值参数的表达式。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffSeconds' 函数。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of seconds that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回的秒数为“timeValue1”和“timeValue2”之间的差值。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">一个表达式，指定第一个日期值参数。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">指定第二次日期值参数的表达式。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范 'DiffYears' 函数。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of years that is the difference between <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回的年数为“dateValue1”和“dateValue2”之间的差值。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is searched at the end for string <bpt id="p1">**</bpt>suffix<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，用于指定在 suffix 字符串结尾处搜索的字符串。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the target string that is searched for at the end of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，用于指定在 stringArgument 的结尾处搜索的目标字符串。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“EndsWith”函数。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">表达式的结果类型为 Boolean。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a Boolean value indicating whether or not <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> ends with <bpt id="p2">**</bpt>suffix<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，它返回的布尔值指示“stringArgument”是否以“后缀”结尾。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">一个指定数值的表达式。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有单精度、双精度或小数结果类型）调用规范“Floor”函数。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 value 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the largest integer value not greater than <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回不大于 value 的最大整数值。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</source>
          <target state="translated">一个表达式，指定应从中检索相对于 GMT 的偏移分钟数的 DateTimeOffset 值。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有 DateTimeOffset 结果类型）调用规范“GetTotalOffsetMinutes”函数。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of minutes <bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept> is offset from GMT.</source>
          <target state="translated">新的 DbFunctionExpression，返回相对于 GMT 的“dateTimeOffsetArgument”偏移量分钟数。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept></source>
          <target state="translated">dateTimeOffsetArgument</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept></source>
          <target state="translated">dateTimeOffsetArgument</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the hour should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应从中检索小时的值。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有 DateTime、 DateTimeOffset 或 Time 结果类型）调用规范 'Hour' 函数。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer hour value from <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，它从 timeValue 中返回整数小时值。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated">timeValue</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated">timeValue</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要在 stringToFind 中搜索的字符串。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to locate within <bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> should be checked.</source>
          <target state="translated">一个表达式，指定应检查位于 searchString 中的字符串。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“IndexOf”函数。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the first index of <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept> in <bpt id="p2">**</bpt>searchString<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回“searchString”中“stringToFind”的第一个索引。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The index returned by IndexOf is <ph id="ph1">\&lt;</ph>b&gt;1-based<ph id="ph2">\&lt;</ph>/b&gt;.</source>
          <target state="translated">IndexOf 所返回的索引是<ph id="ph1">\&lt;</ph>b &gt; 基于 1 的 <ph id="ph2">\&lt;</ph> /b &gt;。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> <bpt id="p2">**</bpt>stringToFind<ept id="p2">**</ept></source>
          <target state="translated">searchString stringToFind</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> <bpt id="p2">**</bpt>stringToFind<ept id="p2">**</ept></source>
          <target state="translated">searchString stringToFind</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the leftmost substring.</source>
          <target state="translated">一个表达式，该表达式指定要从中提取最左边的子字符串的字符串。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the leftmost substring to extract from <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要从 stringArgument 中提取的最左边的子字符串的长度。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串和整数结果类型）调用规范“Left”函数。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">该表达式的结果类型为字符串。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the leftmost substring of length <bpt id="p1">**</bpt>length<ept id="p1">**</ept> from <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept>.</source>
          <target state="translated">一个新的 DbFunctionExpression，从 stringArgument 返回长度为 length 的最左边的子字符串。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>length<ept id="p2">**</ept></source>
          <target state="translated">stringArgument length</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string for which the length should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应为其计算长度的字符串。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串结果类型）调用规范 'Length' 函数。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the length of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，它返回 stringArgument 的长度。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection over which the count value should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应计算其计数值的集合。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BigCount' function over the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合调用规范“BigCount”函数。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int64.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int64。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the count value.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成计数值。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the maximum value should be retrieved</source>
          <target state="translated">一个表达式，该表达式指定应检索其中最大值的集合</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Max' function over the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合调用规范“Max”函数。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">该表达式的结果类型与集合的元素类型相同。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the maximum value.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成最大值。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the millisecond should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应从中检索毫秒的值。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有 DateTime、 DateTimeOffset 或 Time 结果类型）调用规范 'Millisecond' 函数。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer millisecond value from <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个新的 DbFunctionExpression，它从 timeValue 中返回整数毫秒值。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated">timeValue</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated">timeValue</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the minimum value should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应检索其中最小值的集合。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Min' function over the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合调用规范“Min”函数。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">该表达式的结果类型与集合的元素类型相同。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the minimum value.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成最小值。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the minute should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应从中检索分钟的值。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'Minute' 函数。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer minute value from <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个新的 DbFunctionExpression，它从 timeValue 中返回整数分钟值。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated">timeValue</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated">timeValue</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the month should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应从中检索月的值。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范“Month”函数。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer month value from <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">一个新的 DbFunctionExpression，它从 dateValue 中返回整数月值。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'NewGuid' function.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它调用规范“NewGuid”函数。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid">
          <source>A new DbFunctionExpression that returns a new GUID value.</source>
          <target state="translated">新 DbFunctionExpression 返回新的 GUID 值。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to raise to the given power.</source>
          <target state="translated">一个表达式，指定要计算其指定次幂的数值。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the power to which <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> should be raised.</source>
          <target state="translated">一个表达式，指定 baseArgument 应计算的次幂数。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有数值结果类型）调用规范“Power”函数。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 baseArgument 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value of <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> raised to the power specified by <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回 exponent 指定的指数的幂执行的“baseArgument”值。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept></source>
          <target state="translated">baseArgument exponent</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept></source>
          <target state="translated">baseArgument exponent</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string in which to perform the replacement operation.</source>
          <target state="translated">一个表达式，指定要在其中执行替换操作的字符串。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is replaced.</source>
          <target state="translated">一个表达式，指定要被替换的字符串</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the replacement string.</source>
          <target state="translated">一个表达式，指定替换字符串。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“Replace”函数。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">该表达式的结果类型也为字符串。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression than returns a new string based on <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> where every occurence of <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> is replaced by <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，返回基于stringArgument 的字符串，其中 toReplace 的每个匹配项由 replacement 替换。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept></source>
          <target state="translated">stringArgument toReplace replacement</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept></source>
          <target state="translated">stringArgument toReplace replacement</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to reverse.</source>
          <target state="translated">一个表达式，该表达式指定要进行反转的字符串。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“Reverse”函数。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">该表达式的结果类型也为字符串。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the reversed value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，生成 stringArgument 的反转值。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the rightmost substring.</source>
          <target state="translated">一个表达式，该表达式指定要从中提取最右边的子字符串的字符串。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the rightmost substring to extract from <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定要从 stringArgument 中提取的最右边的子字符串的长度。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串和整数结果类型）调用规范“Right”函数。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">该表达式的结果类型为字符串。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the rightmost substring of length <bpt id="p1">**</bpt>length<ept id="p1">**</ept> from <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept>.</source>
          <target state="translated">一个新的 DbFunctionExpression，从 stringArgument 返回长度为 length 的最右边的子字符串。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>length<ept id="p2">**</ept></source>
          <target state="translated">stringArgument length</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它调用规范 'Round' 函数。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to round.</source>
          <target state="translated">一个表达式，指定要舍入的数值。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有单精度、双精度或小数结果类型）调用规范“Round”函数。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 value 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</source>
          <target state="translated">指定的参数舍入为最接近的整数值的新 DbFunctionExpression。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to round.</source>
          <target state="translated">一个表达式，指定要舍入的数值。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of digits of precision to use when rounding.</source>
          <target state="translated">一个表达式，指定要在舍入时使用的精度位数。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有单精度、双精度或小数和整数结果类型）调用规范“Round”函数。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 value 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by <bpt id="p1">**</bpt>digits<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，将指定的参数舍入为最接近的整数值，采用由 digits 指定的精度。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></source>
          <target state="translated">value digits</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></source>
          <target state="translated">value digits</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the second should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应从中检索秒的值。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'Second' 函数。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer second value from <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，它从 timeValue 中返回整数秒值。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated">timeValue</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated">timeValue</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is searched at the start for string <bpt id="p1">**</bpt>prefix<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定在字符串 prefix 的开头搜索的字符串。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the target string that is searched for at the start of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">一个表达式，指定在 stringArgument 的开头部分搜索的目标字符串。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“StartsWith”函数。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">表达式的结果类型为 Boolean。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a Boolean value indicating whether or not <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> starts with <bpt id="p2">**</bpt>prefix<ept id="p2">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，它返回的布尔值指示“stringArgument”是否以 prefix 开头。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the standard deviation should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应计算其标准偏差的集合。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合的非 null 成员调用规范“StDev”函数。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">该表达式的结果类型为 Edm.Double。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成集合的非 null 成员的标准差异值。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the standard deviation should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应计算其标准偏差的集合。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StDevP' function over the population of the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合的填充调用规范“StDevP”函数。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">该表达式的结果类型为 Edm.Double。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the standard deviation value.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成标准偏差值。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the substring.</source>
          <target state="translated">一个表达式，指定要从中提取子字符串的字符串。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the starting index from which the substring should be taken.</source>
          <target state="translated">一个表达式，指定要获取的子字符串的起始索引。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the substring.</source>
          <target state="translated">一个表达式，指定子字符串的长度。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有字符串和整数值结果类型）调用规范“Substring”函数。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">该表达式的结果类型为字符串。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the substring of length <bpt id="p1">**</bpt>length<ept id="p1">**</ept> from <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept> starting at <bpt id="p3">**</bpt>start<ept id="p3">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，从以 start 开头的 stringArgument 中返回长度“length”的子字符串。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Substring requires that the index specified by <bpt id="p1">**</bpt>start<ept id="p1">**</ept> be <ph id="ph1">\&lt;</ph>b&gt;1-based<ph id="ph2">\&lt;</ph>/b&gt;.</source>
          <target state="translated">子字符串需要指定的索引<bpt id="p1">**</bpt>启动<ept id="p1">**</ept>是<ph id="ph1">\&lt;</ph>b &gt; 基于 1 的 <ph id="ph2">\&lt;</ph> /b &gt;。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>start<ept id="p2">**</ept> <bpt id="p3">**</bpt>length<ept id="p3">**</ept></source>
          <target state="translated">stringArgument start length</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>start<ept id="p2">**</ept> <bpt id="p3">**</bpt>length<ept id="p3">**</ept></source>
          <target state="translated">stringArgument start length</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the sum should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应计算其中总和的集合。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Sum' function over the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合调用规范“Sum”函数。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">该表达式的结果类型与集合的元素类型相同。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the sum.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成总和。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should be converted to lower case.</source>
          <target state="translated">一个表达式，该表达式指定应转换为小写的字符串。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“ToLower”函数。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">该表达式的结果类型也为字符串。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> converted to lower case.</source>
          <target state="translated">新的 DbFunctionExpression，返回转换为小写的 stringArgument 的值。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should be converted to upper case.</source>
          <target state="translated">一个表达式，该表达式指定应转换为大写的字符串。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“ToUpper”函数。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">该表达式的结果类型也为字符串。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> converted to upper case.</source>
          <target state="translated">新的 DbFunctionExpression，返回转换为大写的 stringArgument 的值。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which leading and trailing space should be removed.</source>
          <target state="translated">一个表达式，该表达式指定应从中删除先导空格和尾随空格的字符串。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“Trim”函数。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">该表达式的结果类型也为字符串。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> with leading and trailing space removed.</source>
          <target state="translated">新的 DbFunctionExpression，返回已删除先导和尾随空格的 stringArgument 的值。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which trailing space should be removed.</source>
          <target state="translated">一个表达式，该表达式指定应从中删除尾随空格的字符串。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“RTrim”函数。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">该表达式的结果类型也为字符串。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> with trailing space removed.</source>
          <target state="translated">新的 DbFunctionExpression，返回已删除尾随空格的 stringArgument 的值。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which leading space should be removed.</source>
          <target state="translated">一个表达式，该表达式指定应从其中删除先导空格的字符串。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“LTrim”函数。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">该表达式的结果类型也为字符串。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> with leading space removed.</source>
          <target state="translated">新的 DbFunctionExpression，返回已删除先导空格的 stringArgument 的值。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated">stringArgument</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to truncate.</source>
          <target state="translated">一个表达式，指定要截断的数值。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of digits of precision to use when truncating.</source>
          <target state="translated">一个表达式，指定要在截断时使用的精度位数。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（这些参数必须具有单精度、双精度或小数和整数结果类型）调用规范“Truncate”函数。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">表达式的结果类型与 value 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by <bpt id="p1">**</bpt>digits<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，将指定的参数截断为最接近的整数值，采用由 digits 指定的精度。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></source>
          <target state="translated">value digits</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></source>
          <target state="translated">value digits</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value for which the time portion should be truncated.</source>
          <target state="translated">一个表达式，该表达式指定应截断其时间部分的值。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范“TruncateTime”函数。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">该表达式的结果类型与 dateValue 的结果类型相同。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> with time set to zero.</source>
          <target state="translated">新的 DbFunctionExpression，返回时间设为零的 dateValue 的值。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the statistical variance should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应计算其统计差异的集合。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Var' function over the non-null members of the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合的非 null 成员调用规范“Var”函数。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">该表达式的结果类型为 Edm.Double。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成集合的非 null 成员的统计差异值。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the statistical variance should be computed.</source>
          <target state="translated">一个表达式，该表达式指定应计算其统计差异的集合。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'VarP' function over the population of the specified collection.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，用于针对指定集合的填充调用规范“VarP”函数。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression Edm.Double.</source>
          <target state="translated">表达式 Edm.Double 的结果类型。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the statistical variance value.</source>
          <target state="translated">一个新的 DbFunctionExpression，它生成统计差异值。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated">collection</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the year should be retrieved.</source>
          <target state="translated">一个表达式，该表达式指定应从中检索年的值。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>，它使用指定的参数（该参数必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范“Year”函数。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">该表达式的结果类型为 Edm.Int32。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer year value from <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">新的 DbFunctionExpression，从 dateValue 中返回整数年值。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated">dateValue</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
