<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8ce608a7a61508a0161fdb1eb3e5db96f63d905" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58557367" /></Metadata><TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <TypeSignature Language="F#" Value="type EdmFunctions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="49007-101">提供用于构造 <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 的 API，这些对象调用规范 EDM 函数并使得此 API 可以作为表达式类型的扩展方法来访问。</span><span class="sxs-lookup"><span data-stu-id="49007-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="49007-102">一个指定数值的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-102">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="49007-103">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有数值结果类型）调用规范 'Abs' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span></span> <span data-ttu-id="49007-104">表达式的结果类型与 value 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-104">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="49007-105">返回 value 的绝对值的新 DbFunctionExpression。</span><span class="sxs-lookup"><span data-stu-id="49007-105">A new DbFunctionExpression that returns the absolute value of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-106">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-106">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-107">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-107">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="49007-108">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-108">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-109">一个表达式，指定要加到 dateValue 中的天数。</span><span class="sxs-lookup"><span data-stu-id="49007-109">An expression that specifies the number of days to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="49007-110">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddDays' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="49007-111">该表达式的结果类型与 dateValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-111">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-112">一个新的 DbFunctionExpression，为“dateValue”指定的值添加“addValue”指定的天数。</span><span class="sxs-lookup"><span data-stu-id="49007-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-113">dateValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-113">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-114">dateValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-114">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-115">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-115">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-116">一个表达式，指定要加到 timeValue 中的小时数。</span><span class="sxs-lookup"><span data-stu-id="49007-116">An expression that specifies the number of hours to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="49007-117">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddHours' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="49007-118">表达式的结果类型与 timeValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-118">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-119">新的 DbFunctionExpression，为给“timeValue”指定的值添加“addValue”指定的小时数。</span><span class="sxs-lookup"><span data-stu-id="49007-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-120">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-120">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-121">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-121">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-122">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-122">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-123">一个表达式，指定要加到 timeValue 中的微秒数。</span><span class="sxs-lookup"><span data-stu-id="49007-123">An expression that specifies the number of microseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="49007-124">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddMicroseconds' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="49007-125">表达式的结果类型与 timeValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-125">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-126">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的微秒数。</span><span class="sxs-lookup"><span data-stu-id="49007-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-127">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-127">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-128">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-128">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-129">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-129">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-130">一个表达式，指定要加到 timeValue 中的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="49007-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="49007-131">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddMilliseconds' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="49007-132">表达式的结果类型与 timeValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-132">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-133">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="49007-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-134">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-134">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-135">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-135">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-136">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-136">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-137">一个表达式，指定要加到 timeValue 中的分钟数。</span><span class="sxs-lookup"><span data-stu-id="49007-137">An expression that specifies the number of minutes to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="49007-138">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddMinutes' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="49007-139">表达式的结果类型与 timeValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-139">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-140">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的分钟数。</span><span class="sxs-lookup"><span data-stu-id="49007-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-141">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-141">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-142">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-142">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="49007-143">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-143">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-144">一个表达式，指定要加到 dateValue 中的月数。</span><span class="sxs-lookup"><span data-stu-id="49007-144">An expression that specifies the number of months to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="49007-145">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddMonths' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="49007-146">该表达式的结果类型与 dateValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-146">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-147">新的 DbFunctionExpression，为“dateValue”指定的值添加“addValue”指定的月数。</span><span class="sxs-lookup"><span data-stu-id="49007-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-148">dateValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-148">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-149">dateValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-149">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-150">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-150">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-151">一个表达式，指定要加到 timeValue 中的纳秒数。</span><span class="sxs-lookup"><span data-stu-id="49007-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="49007-152">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddNanoseconds' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="49007-153">表达式的结果类型与 timeValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-153">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-154">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的纳秒数。</span><span class="sxs-lookup"><span data-stu-id="49007-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-155">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-155">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-156">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-156">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-157">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-157">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-158">一个表达式，指定要加到 timeValue 中的秒数。</span><span class="sxs-lookup"><span data-stu-id="49007-158">An expression that specifies the number of seconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="49007-159">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddSeconds' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="49007-160">表达式的结果类型与 timeValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-160">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-161">新的 DbFunctionExpression，为“timeValue”指定的值添加“addValue”指定的秒数。</span><span class="sxs-lookup"><span data-stu-id="49007-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-162">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-162">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-163">timeValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-163">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="49007-164">一个表达式，指定应与 addValue 相加的值。</span><span class="sxs-lookup"><span data-stu-id="49007-164">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="49007-165">一个表达式，指定要加到 dateValue 中的年数。</span><span class="sxs-lookup"><span data-stu-id="49007-165">An expression that specifies the number of years to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="49007-166">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有 DateTime、DateTimeOffset 或 Time 以及整数结果类型）调用规范 'AddYears' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="49007-167">该表达式的结果类型与 dateValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-167">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-168">新的 DbFunctionExpression，为“dateValue”指定的值添加“addValue”指定的年数。</span><span class="sxs-lookup"><span data-stu-id="49007-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-169">dateValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-169">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-170">dateValue addValue</span><span class="sxs-lookup"><span data-stu-id="49007-170">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Average : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-171">一个表达式，该表达式指定应计算其中平均值的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-171">An expression that specifies the collection from which the average value should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-172">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合调用规范“Avg”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span></span> <span data-ttu-id="49007-173">该表达式的结果类型与集合的元素类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-173">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="49007-174">一个新的 DbFunctionExpression，它生成平均值。</span><span class="sxs-lookup"><span data-stu-id="49007-174">A new DbFunctionExpression that produces the average value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-175">collection</span><span class="sxs-lookup"><span data-stu-id="49007-175">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-176">collection</span><span class="sxs-lookup"><span data-stu-id="49007-176">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="49007-177">一个指定第一个操作数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-177">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="49007-178">一个指定第二个操作数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-178">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="49007-179">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有相同的整数结果类型）调用规范 'BitwiseAnd' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="49007-180">结果的数据类型与参数的类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-180">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="49007-181">新的 DbFunctionExpression，返回通过执行“value1”以及“value2”的按位 AND 产生的值。</span><span class="sxs-lookup"><span data-stu-id="49007-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-182">value1 value2</span><span class="sxs-lookup"><span data-stu-id="49007-182">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-183">value1 value2</span><span class="sxs-lookup"><span data-stu-id="49007-183">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member BitwiseNot : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="49007-184">一个指定第一个操作数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-184">An expression that specifies the first operand.</span></span></param>
        <summary><span data-ttu-id="49007-185">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有整数结果类型）调用规范 'BitwiseNot' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span></span> <span data-ttu-id="49007-186">结果的数据类型与参数的类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-186">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="49007-187">新的 DbFunctionExpression，返回通过执行“value”的按位 NOT 以及产生的值。</span><span class="sxs-lookup"><span data-stu-id="49007-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-188">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-188">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-189">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-189">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="49007-190">一个指定第一个操作数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-190">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="49007-191">一个指定第二个操作数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-191">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="49007-192">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有相同的整数结果类型）调用规范 'BitwiseOr' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="49007-193">结果的数据类型与参数的类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-193">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="49007-194">新的 DbFunctionExpression，返回通过执行“value1”以及“value2”的按位 OR 产生的值。</span><span class="sxs-lookup"><span data-stu-id="49007-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-195">value1 value2</span><span class="sxs-lookup"><span data-stu-id="49007-195">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-196">value1 value2</span><span class="sxs-lookup"><span data-stu-id="49007-196">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseXor : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="49007-197">一个指定第一个操作数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-197">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="49007-198">一个指定第二个操作数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-198">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="49007-199">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有相同的整数结果类型）调用规范 'BitwiseXor' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="49007-200">结果的数据类型与参数的类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-200">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="49007-201">新的 DbFunctionExpression，返回通过执行“value1”以及“value2”的按位 XOR（独占 OR）产生的值。</span><span class="sxs-lookup"><span data-stu-id="49007-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-202">value1 value2</span><span class="sxs-lookup"><span data-stu-id="49007-202">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-203">value1 value2</span><span class="sxs-lookup"><span data-stu-id="49007-203">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="49007-204">一个指定数值的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-204">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="49007-205">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有单精度、双精度或小数结果类型）调用规范 'Ceiling' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="49007-206">表达式的结果类型与 value 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-206">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="49007-207">新的 DbFunctionExpression，返回不小于 value 的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="49007-207">A new DbFunctionExpression that returns the smallest integer value not less than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-208">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-208">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-209">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-209">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="49007-210">一个表达式，指定应显示在串连结果字符串最前面的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-210">An expression that specifies the string that should appear first in the concatenated result string.</span></span></param>
        <param name="string2"><span data-ttu-id="49007-211">一个表达式，指定应显示在串连结果字符串后续位置的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-211">An expression that specifies the string that should appear second in the concatenated result string.</span></span></param>
        <summary><span data-ttu-id="49007-212">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范 'Concat' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="49007-213">表达式的结果类型为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-213">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="49007-214">一个新的 DbFunctionExpression，生成串联字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-214">A new DbFunctionExpression that produces the concatenated string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-215">string1 string2</span><span class="sxs-lookup"><span data-stu-id="49007-215">**string1** **string2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-216">string1 string2</span><span class="sxs-lookup"><span data-stu-id="49007-216">**string1** **string2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains (searchedString, searchedForString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchedString"><span data-ttu-id="49007-217">一个表达式，指定要从中搜索 searchedForString 的任何匹配项的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-217">An expression that specifies the string to search for any occurrence of **searchedForString**.</span></span></param>
        <param name="searchedForString"><span data-ttu-id="49007-218">一个表达式，指定要在 searchedString 中搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-218">An expression that specifies the string to search for in **searchedString**.</span></span></param>
        <summary><span data-ttu-id="49007-219">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“Contains”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="49007-220">表达式的结果类型为 Boolean。</span><span class="sxs-lookup"><span data-stu-id="49007-220">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="49007-221">新的 DbFunctionExpression，它返回的布尔值指示“searchedForString”是否在“searchedString”内出现。</span><span class="sxs-lookup"><span data-stu-id="49007-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-222">searchedString searchedForString</span><span class="sxs-lookup"><span data-stu-id="49007-222">**searchedString** **searchedForString**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-223">searchedString searchedForString</span><span class="sxs-lookup"><span data-stu-id="49007-223">**searchedString** **searchedForString**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Count : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-224">一个表达式，该表达式指定应计算其计数值的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-224">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-225">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合调用规范“Count”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span></span> <span data-ttu-id="49007-226">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-226">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-227">一个新的 DbFunctionExpression，它生成计数值。</span><span class="sxs-lookup"><span data-stu-id="49007-227">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-228">collection</span><span class="sxs-lookup"><span data-stu-id="49007-228">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-229">collection</span><span class="sxs-lookup"><span data-stu-id="49007-229">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateDateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime (year, month, day, hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="49007-230">一个表达式，为新的 DateTime 实例提供年份数值。</span><span class="sxs-lookup"><span data-stu-id="49007-230">An expression that provides the year value for the new DateTime instance.</span></span></param>
        <param name="month"><span data-ttu-id="49007-231">一个表达式，为新的 DateTime 实例提供月份数值。</span><span class="sxs-lookup"><span data-stu-id="49007-231">An expression that provides the month value for the new DateTime instance.</span></span></param>
        <param name="day"><span data-ttu-id="49007-232">一个表达式，为新的 DateTime 实例提供日期数值。</span><span class="sxs-lookup"><span data-stu-id="49007-232">An expression that provides the day value for the new DateTime instance.</span></span></param>
        <param name="hour"><span data-ttu-id="49007-233">一个表达式，为新的 DateTime 实例提供小时数值。</span><span class="sxs-lookup"><span data-stu-id="49007-233">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="49007-234">一个表达式，为新的 DateTime 实例提供分钟数值。</span><span class="sxs-lookup"><span data-stu-id="49007-234">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="49007-235">一个表达式，为新的 DateTime 实例提供秒钟数值。</span><span class="sxs-lookup"><span data-stu-id="49007-235">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="49007-236">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数调用规范形式的“CreateDateTime”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span></span> <span data-ttu-id="49007-237">second 必须具有结果类型 Edm.Double，所有其他参数必须具有结果类型 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="49007-238">表达式的结果类型为 Edm.DateTime。</span><span class="sxs-lookup"><span data-stu-id="49007-238">The result type of the expression is Edm.DateTime.</span></span></summary>
        <returns><span data-ttu-id="49007-239">新 DbFunctionExpression 基于指定的值返回新的 DateTime。</span><span class="sxs-lookup"><span data-stu-id="49007-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-240">year, month, day, hour, minute, second</span><span class="sxs-lookup"><span data-stu-id="49007-240">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-241">year, month, day, hour, minute, second</span><span class="sxs-lookup"><span data-stu-id="49007-241">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffset : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset (year, month, day, hour, minute, second, timeZoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" Index="6" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="49007-242">一个表达式，为新的 DateTimeOffset 实例提供年份数值。</span><span class="sxs-lookup"><span data-stu-id="49007-242">An expression that provides the year value for the new DateTimeOffset instance.</span></span></param>
        <param name="month"><span data-ttu-id="49007-243">一个表达式，为新的 DateTimeOffset 实例提供月份数值。</span><span class="sxs-lookup"><span data-stu-id="49007-243">An expression that provides the month value for the new DateTimeOffset instance.</span></span></param>
        <param name="day"><span data-ttu-id="49007-244">一个表达式，为新的 DateTimeOffset 实例提供日期数值。</span><span class="sxs-lookup"><span data-stu-id="49007-244">An expression that provides the day value for the new DateTimeOffset instance.</span></span></param>
        <param name="hour"><span data-ttu-id="49007-245">一个表达式，为新的 DateTimeOffset 实例提供小时数值。</span><span class="sxs-lookup"><span data-stu-id="49007-245">An expression that provides the hour value for the new DateTimeOffset instance.</span></span></param>
        <param name="minute"><span data-ttu-id="49007-246">一个表达式，为新的 DateTimeOffset 实例提供分钟数值。</span><span class="sxs-lookup"><span data-stu-id="49007-246">An expression that provides the minute value for the new DateTimeOffset instance.</span></span></param>
        <param name="second"><span data-ttu-id="49007-247">一个表达式，为新的 DateTimeOffset 实例提供秒钟数值。</span><span class="sxs-lookup"><span data-stu-id="49007-247">An expression that provides the second value for the new DateTimeOffset instance.</span></span></param>
        <param name="timeZoneOffset"><span data-ttu-id="49007-248">一个表达式，为新的 DateTimeOffset 实例提供时区偏移量的分钟数。</span><span class="sxs-lookup"><span data-stu-id="49007-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span></span></param>
        <summary><span data-ttu-id="49007-249">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数调用规范形式的“CreateDateTimeOffset”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span></span> <span data-ttu-id="49007-250">second 必须具有结果类型 Edm.Double，所有其他参数必须具有结果类型 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="49007-251">表达式的结果类型为 Edm.DateTimeOffset。</span><span class="sxs-lookup"><span data-stu-id="49007-251">The result type of the expression is Edm.DateTimeOffset.</span></span></summary>
        <returns><span data-ttu-id="49007-252">新 DbFunctionExpression 基于指定的值返回新的 DateTimeOffset。</span><span class="sxs-lookup"><span data-stu-id="49007-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-253">year, month, day, hour, minute, second, timeZoneOffset</span><span class="sxs-lookup"><span data-stu-id="49007-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-254">year, month, day, hour, minute, second, timeZoneOffset</span><span class="sxs-lookup"><span data-stu-id="49007-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime (hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hour"><span data-ttu-id="49007-255">一个表达式，为新的 DateTime 实例提供小时数值。</span><span class="sxs-lookup"><span data-stu-id="49007-255">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="49007-256">一个表达式，为新的 DateTime 实例提供分钟数值。</span><span class="sxs-lookup"><span data-stu-id="49007-256">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="49007-257">一个表达式，为新的 DateTime 实例提供秒钟数值。</span><span class="sxs-lookup"><span data-stu-id="49007-257">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="49007-258">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数调用规范形式的“CreateTime”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span></span> <span data-ttu-id="49007-259">second 必须具有结果类型 Edm.Double，所有其他参数必须具有结果类型 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="49007-260">表达式的结果类型为 Edm.Time。</span><span class="sxs-lookup"><span data-stu-id="49007-260">The result type of the expression is Edm.Time.</span></span></summary>
        <returns><span data-ttu-id="49007-261">新 DbFunctionExpression 基于指定的值返回新的 Time。</span><span class="sxs-lookup"><span data-stu-id="49007-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-262">hour, minute, second</span><span class="sxs-lookup"><span data-stu-id="49007-262">**hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-263">hour, minute, second</span><span class="sxs-lookup"><span data-stu-id="49007-263">**hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49007-264">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它调用规范“CurrentDateTime”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="49007-265">新 DbFunctionExpression 返回当前日期和时间作为 Edm.DateTime 实例。</span><span class="sxs-lookup"><span data-stu-id="49007-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTimeOffset : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49007-266">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它调用规范“CurrentDateTimeOffset”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span></span></summary>
        <returns><span data-ttu-id="49007-267">新 DbFunctionExpression 返回当前日期和时间作为 Edm.DateTimeOffset 实例。</span><span class="sxs-lookup"><span data-stu-id="49007-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentUtcDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49007-268">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它调用规范“CurrentUtcDateTime”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="49007-269">新 DbFunctionExpression 返回当前 UTC 日期和时间作为 Edm.DateTime 实例。</span><span class="sxs-lookup"><span data-stu-id="49007-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Day : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="49007-270">一个表达式，指定应从中检索日期的值。</span><span class="sxs-lookup"><span data-stu-id="49007-270">An expression that specifies the value from which the day should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-271">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范“Day”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="49007-272">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-272">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-273">新的 DbFunctionExpression，它从 dateValue 中返回整数形式的日值。</span><span class="sxs-lookup"><span data-stu-id="49007-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-274">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-274">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-275">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-275">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member DayOfYear : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="49007-276">一个表达式，指定应从中检索日期（以一年中的第几天表示）的值。</span><span class="sxs-lookup"><span data-stu-id="49007-276">An expression that specifies the value from which the day within the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-277">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范“DayOfYear”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="49007-278">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-278">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-279">新的 DbFunctionExpression，它从 dateValue 中返回整数形式的一年中某天的值。</span><span class="sxs-lookup"><span data-stu-id="49007-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-280">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-280">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-281">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-281">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="49007-282">一个表达式，指定第一个日期值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-282">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="49007-283">指定第二次日期值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-283">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="49007-284">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范 'DiffDays' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="49007-285">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-285">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-286">新的 DbFunctionExpression，返回的天数为“dateValue1”和“dateValue2”之间的差值。</span><span class="sxs-lookup"><span data-stu-id="49007-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="49007-287">一个表达式，指定第一个时间值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-287">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="49007-288">指定第二次时间值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-288">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="49007-289">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffHours' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-290">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-290">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-291">新的 DbFunctionExpression，返回的小时数为“timeValue1”和“timeValue2”之间的差值。</span><span class="sxs-lookup"><span data-stu-id="49007-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="49007-292">一个表达式，指定第一个时间值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-292">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="49007-293">指定第二次时间值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-293">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="49007-294">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffMicroseconds' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-295">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-295">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-296">新的 DbFunctionExpression，返回的微秒数为“timeValue1”和“timeValue2”之间的差值。</span><span class="sxs-lookup"><span data-stu-id="49007-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="49007-297">一个表达式，指定第一个时间值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-297">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="49007-298">指定第二次时间值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-298">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="49007-299">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffMilliseconds'函数。</span><span class="sxs-lookup"><span data-stu-id="49007-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-300">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-300">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-301">新的 DbFunctionExpression，返回的毫秒数为“timeValue1”和“timeValue2”之间的差值。</span><span class="sxs-lookup"><span data-stu-id="49007-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="49007-302">一个表达式，指定第一个时间值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-302">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="49007-303">指定第二次时间值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-303">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="49007-304">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffMinutes' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-305">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-305">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-306">新 DbFunctionExpression 返回分钟数为“timeValue1”和“timeValue2”之间的差异。</span><span class="sxs-lookup"><span data-stu-id="49007-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="49007-307">一个表达式，指定第一个日期值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-307">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="49007-308">指定第二次日期值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-308">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="49007-309">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范 'DiffMonths' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="49007-310">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-310">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-311">新的 DbFunctionExpression，返回的月数为“dateValue1”和“dateValue2”之间的差值。</span><span class="sxs-lookup"><span data-stu-id="49007-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="49007-312">一个表达式，指定第一个时间值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-312">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="49007-313">指定第二次时间值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-313">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="49007-314">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffNanoseconds' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-315">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-315">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-316">新的 DbFunctionExpression，返回的纳秒数为“timeValue1”和“timeValue2”之间的差值。</span><span class="sxs-lookup"><span data-stu-id="49007-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="49007-317">一个表达式，指定第一个时间值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-317">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="49007-318">指定第二次时间值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-318">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="49007-319">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'DiffSeconds' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-320">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-320">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-321">新的 DbFunctionExpression，返回的秒数为“timeValue1”和“timeValue2”之间的差值。</span><span class="sxs-lookup"><span data-stu-id="49007-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="49007-322">一个表达式，指定第一个日期值参数。</span><span class="sxs-lookup"><span data-stu-id="49007-322">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="49007-323">指定第二次日期值参数的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-323">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="49007-324">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范 'DiffYears' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="49007-325">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-325">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-326">新的 DbFunctionExpression，返回的年数为“dateValue1”和“dateValue2”之间的差值。</span><span class="sxs-lookup"><span data-stu-id="49007-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberSignature Language="F#" Value="static member EndsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith (stringArgument, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-327">一个表达式，用于指定在 suffix 字符串结尾处搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-327">An expression that specifies the string that is searched at the end for string **suffix**.</span></span></param>
        <param name="suffix"><span data-ttu-id="49007-328">一个表达式，用于指定在 stringArgument 的结尾处搜索的目标字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="49007-329">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“EndsWith”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="49007-330">表达式的结果类型为 Boolean。</span><span class="sxs-lookup"><span data-stu-id="49007-330">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="49007-331">新的 DbFunctionExpression，它返回的布尔值指示“stringArgument”是否以“后缀”结尾。</span><span class="sxs-lookup"><span data-stu-id="49007-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Floor : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="49007-332">一个指定数值的表达式。</span><span class="sxs-lookup"><span data-stu-id="49007-332">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="49007-333">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有单精度、双精度或小数结果类型）调用规范“Floor”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="49007-334">表达式的结果类型与 value 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-334">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="49007-335">新的 DbFunctionExpression，返回不大于 value 的最大整数值。</span><span class="sxs-lookup"><span data-stu-id="49007-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-336">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-336">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-337">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-337">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberSignature Language="F#" Value="static member GetTotalOffsetMinutes : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes dateTimeOffsetArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument"><span data-ttu-id="49007-338">一个表达式，指定应从中检索相对于 GMT 的偏移分钟数的 DateTimeOffset 值。</span><span class="sxs-lookup"><span data-stu-id="49007-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-339">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTimeOffset 结果类型）调用规范“GetTotalOffsetMinutes”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span></span> <span data-ttu-id="49007-340">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-340">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-341">新的 DbFunctionExpression，返回相对于 GMT 的“dateTimeOffsetArgument”偏移量分钟数。</span><span class="sxs-lookup"><span data-stu-id="49007-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-342">dateTimeOffsetArgument</span><span class="sxs-lookup"><span data-stu-id="49007-342">**dateTimeOffsetArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-343">dateTimeOffsetArgument</span><span class="sxs-lookup"><span data-stu-id="49007-343">**dateTimeOffsetArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-344">一个表达式，指定应从中检索小时信息的值。</span><span class="sxs-lookup"><span data-stu-id="49007-344">An expression that specifies the value from which the hour should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-345">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime、 DateTimeOffset 或 Time 结果类型）调用规范 'Hour' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-346">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-346">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-347">新的 DbFunctionExpression，它从 timeValue 中返回整数小时值。</span><span class="sxs-lookup"><span data-stu-id="49007-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-348">timeValue</span><span class="sxs-lookup"><span data-stu-id="49007-348">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-349">timeValue</span><span class="sxs-lookup"><span data-stu-id="49007-349">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf (searchString, stringToFind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchString"><span data-ttu-id="49007-350">一个表达式，指定要在 stringToFind 中搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-350">An expression that specifies the string to search for **stringToFind**.</span></span></param>
        <param name="stringToFind"><span data-ttu-id="49007-351">一个表达式，指定应检查位于 searchString 中的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-351">An expression that specifies the string to locate within **searchString** should be checked.</span></span></param>
        <summary><span data-ttu-id="49007-352">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“IndexOf”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="49007-353">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-353">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-354">新的 DbFunctionExpression，返回“searchString”中“stringToFind”的第一个索引。</span><span class="sxs-lookup"><span data-stu-id="49007-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49007-355">IndexOf 返回索引\<b > 基于 1 的 \< /b >。</span><span class="sxs-lookup"><span data-stu-id="49007-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-356">searchString stringToFind</span><span class="sxs-lookup"><span data-stu-id="49007-356">**searchString** **stringToFind**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-357">searchString stringToFind</span><span class="sxs-lookup"><span data-stu-id="49007-357">**searchString** **stringToFind**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Left : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-358">一个表达式，指定要从中提取最左侧子字符串的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-358">An expression that specifies the string from which to extract the leftmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="49007-359">一个表达式，指定要从 stringArgument 中提取的最左边的子字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="49007-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="49007-360">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串和整数结果类型）调用规范“Left”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="49007-361">表达式的结果类型为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-361">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="49007-362">一个新的 DbFunctionExpression，从 stringArgument 返回长度为 length 的最左边的子字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-363">stringArgument length</span><span class="sxs-lookup"><span data-stu-id="49007-363">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-364">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-364">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Length : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-365">一个表达式，指定应计算长度的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-365">An expression that specifies the string for which the length should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-366">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串结果类型）调用规范 'Length' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="49007-367">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-367">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-368">新的 DbFunctionExpression，它返回 stringArgument 的长度。</span><span class="sxs-lookup"><span data-stu-id="49007-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-369">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-369">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-370">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-370">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-371">一个表达式，该表达式指定应计算其计数值的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-371">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-372">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合调用规范“BigCount”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span></span> <span data-ttu-id="49007-373">该表达式的结果类型为 Edm.Int64。</span><span class="sxs-lookup"><span data-stu-id="49007-373">The result type of the expression is Edm.Int64.</span></span></summary>
        <returns><span data-ttu-id="49007-374">一个新的 DbFunctionExpression，它生成计数值。</span><span class="sxs-lookup"><span data-stu-id="49007-374">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-375">collection</span><span class="sxs-lookup"><span data-stu-id="49007-375">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-376">collection</span><span class="sxs-lookup"><span data-stu-id="49007-376">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Max : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-377">一个表达式，该表达式指定应检索其中最大值的集合</span><span class="sxs-lookup"><span data-stu-id="49007-377">An expression that specifies the collection from which the maximum value should be retrieved</span></span></param>
        <summary><span data-ttu-id="49007-378">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合调用规范“Max”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span></span> <span data-ttu-id="49007-379">该表达式的结果类型与集合的元素类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-379">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="49007-380">一个新的 DbFunctionExpression，它生成最大值。</span><span class="sxs-lookup"><span data-stu-id="49007-380">A new DbFunctionExpression that produces the maximum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-381">collection</span><span class="sxs-lookup"><span data-stu-id="49007-381">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-382">collection</span><span class="sxs-lookup"><span data-stu-id="49007-382">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Millisecond : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-383">一个表达式，指定应从中检索毫秒的值。</span><span class="sxs-lookup"><span data-stu-id="49007-383">An expression that specifies the value from which the millisecond should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-384">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime、 DateTimeOffset 或 Time 结果类型）调用规范 'Millisecond' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-385">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-385">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-386">一个新的 DbFunctionExpression，它从 timeValue 中返回整数毫秒值。</span><span class="sxs-lookup"><span data-stu-id="49007-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-387">timeValue</span><span class="sxs-lookup"><span data-stu-id="49007-387">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-388">timeValue</span><span class="sxs-lookup"><span data-stu-id="49007-388">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Min : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-389">一个表达式，该表达式指定应检索其中最小值的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-389">An expression that specifies the collection from which the minimum value should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-390">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合调用规范“Min”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span></span> <span data-ttu-id="49007-391">该表达式的结果类型与集合的元素类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-391">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="49007-392">一个新的 DbFunctionExpression，它生成最小值。</span><span class="sxs-lookup"><span data-stu-id="49007-392">A new DbFunctionExpression that produces the minimum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-393">collection</span><span class="sxs-lookup"><span data-stu-id="49007-393">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-394">collection</span><span class="sxs-lookup"><span data-stu-id="49007-394">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-395">一个表达式，指定应从中检索分钟的值。</span><span class="sxs-lookup"><span data-stu-id="49007-395">An expression that specifies the value from which the minute should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-396">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'Minute' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-397">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-397">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-398">一个新的 DbFunctionExpression，它从 timeValue 中返回整数分钟值。</span><span class="sxs-lookup"><span data-stu-id="49007-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-399">timeValue</span><span class="sxs-lookup"><span data-stu-id="49007-399">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-400">timeValue</span><span class="sxs-lookup"><span data-stu-id="49007-400">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Month : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="49007-401">一个表达式，指定应从中检索月份的值。</span><span class="sxs-lookup"><span data-stu-id="49007-401">An expression that specifies the value from which the month should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-402">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范“Month”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="49007-403">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-403">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-404">一个新的 DbFunctionExpression，它从 dateValue 中返回整数月值。</span><span class="sxs-lookup"><span data-stu-id="49007-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-405">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-405">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-406">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-406">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberSignature Language="F#" Value="static member NewGuid : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49007-407">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它调用规范“NewGuid”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span></span></summary>
        <returns><span data-ttu-id="49007-408">新 DbFunctionExpression 返回新的 GUID 值。</span><span class="sxs-lookup"><span data-stu-id="49007-408">A new DbFunctionExpression that returns a new GUID value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberSignature Language="F#" Value="static member Power : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power (baseArgument, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="baseArgument"><span data-ttu-id="49007-409">一个表达式，指定要计算其指定次幂的数值。</span><span class="sxs-lookup"><span data-stu-id="49007-409">An expression that specifies the numeric value to raise to the given power.</span></span></param>
        <param name="exponent"><span data-ttu-id="49007-410">一个表达式，指定 baseArgument 应计算的次幂数。</span><span class="sxs-lookup"><span data-stu-id="49007-410">An expression that specifies the power to which **baseArgument** should be raised.</span></span></param>
        <summary><span data-ttu-id="49007-411">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有数值结果类型）调用规范“Power”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span></span> <span data-ttu-id="49007-412">表达式的结果类型与 baseArgument 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-412">The result type of the expression is the same as the result type of **baseArgument**.</span></span></summary>
        <returns><span data-ttu-id="49007-413">新的 DbFunctionExpression，返回 exponent 指定的指数的幂执行的“baseArgument”值。</span><span class="sxs-lookup"><span data-stu-id="49007-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-414">baseArgument exponent</span><span class="sxs-lookup"><span data-stu-id="49007-414">**baseArgument** **exponent**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-415">baseArgument exponent</span><span class="sxs-lookup"><span data-stu-id="49007-415">**baseArgument** **exponent**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace (stringArgument, toReplace, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-416">一个表达式，指定要在其中执行替换操作的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-416">An expression that specifies the string in which to perform the replacement operation.</span></span></param>
        <param name="toReplace"><span data-ttu-id="49007-417">一个表达式，指定要被替换的字符串</span><span class="sxs-lookup"><span data-stu-id="49007-417">An expression that specifies the string that is replaced.</span></span></param>
        <param name="replacement"><span data-ttu-id="49007-418">一个表达式，指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-418">An expression that specifies the replacement string.</span></span></param>
        <summary><span data-ttu-id="49007-419">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“Replace”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="49007-420">表达式的结果类型也为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-420">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="49007-421">新的 DbFunctionExpression，返回基于stringArgument 的新字符串，其中 toReplace 的每个匹配项由 replacement 替换。</span><span class="sxs-lookup"><span data-stu-id="49007-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurrence of **toReplace** is replaced by **replacement**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-422">stringArgument toReplace replacement</span><span class="sxs-lookup"><span data-stu-id="49007-422">**stringArgument** **toReplace** **replacement**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-423">stringArgument toReplace replacement</span><span class="sxs-lookup"><span data-stu-id="49007-423">**stringArgument** **toReplace** **replacement**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-424">一个表达式，指定要反转的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-424">An expression that specifies the string to reverse.</span></span></param>
        <summary><span data-ttu-id="49007-425">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“Reverse”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="49007-426">表达式的结果类型也为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-426">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="49007-427">新的 DbFunctionExpression，生成 stringArgument 的反转值。</span><span class="sxs-lookup"><span data-stu-id="49007-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-428">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-428">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-429">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-429">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Right : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-430">一个表达式，指定要从中提取最右侧子字符串的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-430">An expression that specifies the string from which to extract the rightmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="49007-431">一个表达式，指定要从 stringArgument 中提取的最右边的子字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="49007-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="49007-432">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串和整数结果类型）调用规范“Right”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="49007-433">表达式的结果类型为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-433">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="49007-434">一个新的 DbFunctionExpression，从 stringArgument 返回长度为 length 的最右边的子字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-435">stringArgument length</span><span class="sxs-lookup"><span data-stu-id="49007-435">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-436">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-436">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49007-437">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它调用规范 'Round' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="49007-438">一个表达式，指定要舍入的数值。</span><span class="sxs-lookup"><span data-stu-id="49007-438">An expression that specifies the numeric value to round.</span></span></param>
        <summary><span data-ttu-id="49007-439">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有单精度、双精度或小数结果类型）调用规范“Round”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="49007-440">表达式的结果类型与 value 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-440">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="49007-441">指定的参数舍入为最接近的整数值的新 DbFunctionExpression。</span><span class="sxs-lookup"><span data-stu-id="49007-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-442">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-442">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-443">**值**</span><span class="sxs-lookup"><span data-stu-id="49007-443">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="49007-444">一个表达式，指定要舍入的数值。</span><span class="sxs-lookup"><span data-stu-id="49007-444">An expression that specifies the numeric value to round.</span></span></param>
        <param name="digits"><span data-ttu-id="49007-445">一个表达式，指定要在舍入时使用的精度位数。</span><span class="sxs-lookup"><span data-stu-id="49007-445">An expression that specifies the number of digits of precision to use when rounding.</span></span></param>
        <summary><span data-ttu-id="49007-446">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有单精度、双精度或小数和整数结果类型）调用规范“Round”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="49007-447">表达式的结果类型与 value 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-447">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="49007-448">新的 DbFunctionExpression，将指定的参数舍入为最接近的整数值，采用由 digits 指定的精度。</span><span class="sxs-lookup"><span data-stu-id="49007-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-449">value digits</span><span class="sxs-lookup"><span data-stu-id="49007-449">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-450">value digits</span><span class="sxs-lookup"><span data-stu-id="49007-450">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Second : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="49007-451">一个表达式，指定应从中检索秒的值。</span><span class="sxs-lookup"><span data-stu-id="49007-451">An expression that specifies the value from which the second should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-452">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime、DateTimeOffset 或 Time 结果类型）调用规范 'Second' 函数。</span><span class="sxs-lookup"><span data-stu-id="49007-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="49007-453">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-453">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-454">新的 DbFunctionExpression，它从 timeValue 中返回整数秒值。</span><span class="sxs-lookup"><span data-stu-id="49007-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-455">timeValue</span><span class="sxs-lookup"><span data-stu-id="49007-455">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-456">timeValue</span><span class="sxs-lookup"><span data-stu-id="49007-456">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberSignature Language="F#" Value="static member StartsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith (stringArgument, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-457">一个表达式，指定在字符串 prefix 的开头搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-457">An expression that specifies the string that is searched at the start for string **prefix**.</span></span></param>
        <param name="prefix"><span data-ttu-id="49007-458">一个表达式，指定在 stringArgument 的开头部分搜索的目标字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="49007-459">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（每个参数都必须具有字符串结果类型）调用规范“StartsWith”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="49007-460">表达式的结果类型为 Boolean。</span><span class="sxs-lookup"><span data-stu-id="49007-460">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="49007-461">新的 DbFunctionExpression，它返回的布尔值指示“stringArgument”是否以 prefix 开头。</span><span class="sxs-lookup"><span data-stu-id="49007-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDev : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-462">一个表达式，该表达式指定应计算其标准偏差的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-462">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-463">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合的非 null 成员调用规范“StDev”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="49007-464">该表达式的结果类型为 Edm.Double。</span><span class="sxs-lookup"><span data-stu-id="49007-464">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="49007-465">一个新的 DbFunctionExpression，它生成集合的非 null 成员的标准差异值。</span><span class="sxs-lookup"><span data-stu-id="49007-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-466">collection</span><span class="sxs-lookup"><span data-stu-id="49007-466">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-467">collection</span><span class="sxs-lookup"><span data-stu-id="49007-467">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDevP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-468">一个表达式，该表达式指定应计算其标准偏差的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-468">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-469">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合的填充调用规范“StDevP”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span></span> <span data-ttu-id="49007-470">该表达式的结果类型为 Edm.Double。</span><span class="sxs-lookup"><span data-stu-id="49007-470">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="49007-471">一个新的 DbFunctionExpression，它生成标准偏差值。</span><span class="sxs-lookup"><span data-stu-id="49007-471">A new DbFunctionExpression that produces the standard deviation value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-472">collection</span><span class="sxs-lookup"><span data-stu-id="49007-472">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-473">collection</span><span class="sxs-lookup"><span data-stu-id="49007-473">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Substring : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring (stringArgument, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-474">一个表达式，指定要从中提取子字符串的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-474">An expression that specifies the string from which to extract the substring.</span></span></param>
        <param name="start"><span data-ttu-id="49007-475">一个表达式，指定要获取的子字符串的起始索引。</span><span class="sxs-lookup"><span data-stu-id="49007-475">An expression that specifies the starting index from which the substring should be taken.</span></span></param>
        <param name="length"><span data-ttu-id="49007-476">一个表达式，指定子字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="49007-476">An expression that specifies the length of the substring.</span></span></param>
        <summary><span data-ttu-id="49007-477">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有字符串和整数值结果类型）调用规范“Substring”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span></span> <span data-ttu-id="49007-478">表达式的结果类型为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-478">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="49007-479">新的 DbFunctionExpression，从以 start 开头的 stringArgument 中返回长度“length”的子字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49007-480">子字符串需要指定的索引**启动**进行\<b > 基于 1 的 \< /b >。</span><span class="sxs-lookup"><span data-stu-id="49007-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-481">stringArgument start length</span><span class="sxs-lookup"><span data-stu-id="49007-481">**stringArgument** **start** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-482">stringArgument start length</span><span class="sxs-lookup"><span data-stu-id="49007-482">**stringArgument** **start** **length**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-483">一个表达式，该表达式指定应计算其中总和的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-483">An expression that specifies the collection from which the sum should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-484">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合调用规范“Sum”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span></span> <span data-ttu-id="49007-485">该表达式的结果类型与集合的元素类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-485">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="49007-486">一个新的 DbFunctionExpression，它生成总和。</span><span class="sxs-lookup"><span data-stu-id="49007-486">A new DbFunctionExpression that produces the sum.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-487">collection</span><span class="sxs-lookup"><span data-stu-id="49007-487">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-488">collection</span><span class="sxs-lookup"><span data-stu-id="49007-488">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-489">一个表达式，指定应转换为小写的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-489">An expression that specifies the string that should be converted to lower case.</span></span></param>
        <summary><span data-ttu-id="49007-490">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“ToLower”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="49007-491">表达式的结果类型也为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-491">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="49007-492">新的 DbFunctionExpression，返回转换为小写的 stringArgument 的值。</span><span class="sxs-lookup"><span data-stu-id="49007-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-493">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-493">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-494">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-494">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-495">一个表达式，指定应转换为大写的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-495">An expression that specifies the string that should be converted to upper case.</span></span></param>
        <summary><span data-ttu-id="49007-496">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“ToUpper”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="49007-497">表达式的结果类型也为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-497">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="49007-498">新的 DbFunctionExpression，返回转换为大写的 stringArgument 的值。</span><span class="sxs-lookup"><span data-stu-id="49007-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-499">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-499">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-500">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-500">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Trim : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-501">一个表达式，指定应移除前导和尾随空格的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-501">An expression that specifies the string from which leading and trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="49007-502">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“Trim”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="49007-503">表达式的结果类型也为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-503">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="49007-504">新的 DbFunctionExpression，返回已删除先导和尾随空格的 stringArgument 的值。</span><span class="sxs-lookup"><span data-stu-id="49007-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-505">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-505">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-506">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-506">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimEnd : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-507">一个表达式，指定应移除尾随空格的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-507">An expression that specifies the string from which trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="49007-508">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“RTrim”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="49007-509">表达式的结果类型也为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-509">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="49007-510">新的 DbFunctionExpression，返回已删除尾随空格的 stringArgument 的值。</span><span class="sxs-lookup"><span data-stu-id="49007-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-511">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-511">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-512">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-512">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimStart : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="49007-513">一个表达式，指定应移除前导空格的字符串。</span><span class="sxs-lookup"><span data-stu-id="49007-513">An expression that specifies the string from which leading space should be removed.</span></span></param>
        <summary><span data-ttu-id="49007-514">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有字符串结果类型）调用规范“LTrim”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="49007-515">表达式的结果类型也为 String。</span><span class="sxs-lookup"><span data-stu-id="49007-515">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="49007-516">新的 DbFunctionExpression，返回已删除先导空格的 stringArgument 的值。</span><span class="sxs-lookup"><span data-stu-id="49007-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-517">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-517">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-518">stringArgument</span><span class="sxs-lookup"><span data-stu-id="49007-518">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Truncate : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="49007-519">一个表达式，指定要截断的数值。</span><span class="sxs-lookup"><span data-stu-id="49007-519">An expression that specifies the numeric value to truncate.</span></span></param>
        <param name="digits"><span data-ttu-id="49007-520">一个表达式，指定要在截断时使用的精度位数。</span><span class="sxs-lookup"><span data-stu-id="49007-520">An expression that specifies the number of digits of precision to use when truncating.</span></span></param>
        <summary><span data-ttu-id="49007-521">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（这些参数必须具有单精度、双精度或小数和整数结果类型）调用规范“Truncate”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="49007-522">表达式的结果类型与 value 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-522">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="49007-523">新的 DbFunctionExpression，将指定的参数截断为最接近的整数值，采用由 digits 指定的精度。</span><span class="sxs-lookup"><span data-stu-id="49007-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-524">value digits</span><span class="sxs-lookup"><span data-stu-id="49007-524">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-525">value digits</span><span class="sxs-lookup"><span data-stu-id="49007-525">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member TruncateTime : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="49007-526">一个表达式，指定应截断时间部分的值。</span><span class="sxs-lookup"><span data-stu-id="49007-526">An expression that specifies the value for which the time portion should be truncated.</span></span></param>
        <summary><span data-ttu-id="49007-527">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范“TruncateTime”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="49007-528">该表达式的结果类型与 dateValue 的结果类型相同。</span><span class="sxs-lookup"><span data-stu-id="49007-528">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="49007-529">新的 DbFunctionExpression，返回时间设为零的 dateValue 的值。</span><span class="sxs-lookup"><span data-stu-id="49007-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-530">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-530">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-531">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-531">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Var : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-532">一个表达式，该表达式指定应计算其统计差异的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-532">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-533">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合的非 null 成员调用规范“Var”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="49007-534">该表达式的结果类型为 Edm.Double。</span><span class="sxs-lookup"><span data-stu-id="49007-534">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="49007-535">一个新的 DbFunctionExpression，它生成集合的非 null 成员的统计差异值。</span><span class="sxs-lookup"><span data-stu-id="49007-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-536">collection</span><span class="sxs-lookup"><span data-stu-id="49007-536">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-537">collection</span><span class="sxs-lookup"><span data-stu-id="49007-537">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member VarP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="49007-538">一个表达式，该表达式指定应计算其统计差异的集合。</span><span class="sxs-lookup"><span data-stu-id="49007-538">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="49007-539">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，用于针对指定集合的填充调用规范“VarP”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span></span> <span data-ttu-id="49007-540">表达式 Edm.Double 的结果类型。</span><span class="sxs-lookup"><span data-stu-id="49007-540">The result type of the expression Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="49007-541">一个新的 DbFunctionExpression，它生成统计差异值。</span><span class="sxs-lookup"><span data-stu-id="49007-541">A new DbFunctionExpression that produces the statistical variance value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-542">collection</span><span class="sxs-lookup"><span data-stu-id="49007-542">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-543">collection</span><span class="sxs-lookup"><span data-stu-id="49007-543">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Year : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="49007-544">一个表达式，指定应从中检索年份的值。</span><span class="sxs-lookup"><span data-stu-id="49007-544">An expression that specifies the value from which the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="49007-545">创建一个 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />，它使用指定的参数（该参数必须具有 DateTime 或 DateTimeOffset 结果类型）调用规范“Year”函数。</span><span class="sxs-lookup"><span data-stu-id="49007-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="49007-546">该表达式的结果类型为 Edm.Int32。</span><span class="sxs-lookup"><span data-stu-id="49007-546">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="49007-547">新的 DbFunctionExpression，从 dateValue 中返回整数年值。</span><span class="sxs-lookup"><span data-stu-id="49007-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49007-548">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-548">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49007-549">dateValue</span><span class="sxs-lookup"><span data-stu-id="49007-549">**dateValue**</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>