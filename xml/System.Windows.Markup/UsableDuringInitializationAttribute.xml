<Type Name="UsableDuringInitializationAttribute" FullName="System.Windows.Markup.UsableDuringInitializationAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="735dd550c07d7979cf45dadc53d00a119e1d5c0c" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50171862" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UsableDuringInitializationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UsableDuringInitializationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.UsableDuringInitializationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UsableDuringInitializationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class UsableDuringInitializationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type UsableDuringInitializationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9f06f-101">指示在 XAML 对象图创建期间是否自上而下生成此类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f06f-101">Indicates whether this type is built top-down during XAML object graph creation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f06f-102">自上而下的是一种工具以创建对象图时对与 XAML 处理器行为相近。</span><span class="sxs-lookup"><span data-stu-id="9f06f-102">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="9f06f-103">如果生成的自上而下的一个类实例化时，附加到父级，，然后设置其属性。</span><span class="sxs-lookup"><span data-stu-id="9f06f-103">When built top-down, a class is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="9f06f-104">自上而下的构造避免了调用多次的属性更改处理程序。</span><span class="sxs-lookup"><span data-stu-id="9f06f-104">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="9f06f-105">此类处理将波及对象图，并因此消除了多个处理程序调用提供的对象图的启动性能优化。</span><span class="sxs-lookup"><span data-stu-id="9f06f-105">Such handling will ripple up the object graph and therefore eliminating the multiple handler calls provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="9f06f-106">在以前版本的.NET Framework 中，此类存在于 WindowsBase 的特定于 WPF 程序集。</span><span class="sxs-lookup"><span data-stu-id="9f06f-106">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="9f06f-107">在中[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.UsableDuringInitializationAttribute>位于 System.Xaml 程序集中。</span><span class="sxs-lookup"><span data-stu-id="9f06f-107">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.UsableDuringInitializationAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="9f06f-108">有关详细信息，请参阅 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="9f06f-108">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="9f06f-109">WPF 用法说明</span><span class="sxs-lookup"><span data-stu-id="9f06f-109">WPF Usage Notes</span></span>  
 <span data-ttu-id="9f06f-110">中的 WPF XAML[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]和[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]，自上而下的构造已内置于 XAML 处理某些类。</span><span class="sxs-lookup"><span data-stu-id="9f06f-110">In WPF XAML for [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], top-down construction was built in to the XAML processing for certain classes.</span></span> <span data-ttu-id="9f06f-111"><xref:System.Windows.Markup.UsableDuringInitializationAttribute>特性规范中的自上而下的行为的报告[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="9f06f-111">The <xref:System.Windows.Markup.UsableDuringInitializationAttribute> attribute formalizes the reporting of the top-down behavior in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FrameworkElement" />
    <related type="Article" href="http://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">
      <span data-ttu-id="9f06f-112">自定义类型和库的 XAML 相关 CLR 特性</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f06f-112">XAML-Related CLR Attributes For Custom Types and Libraries</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">
      <span data-ttu-id="9f06f-113">定义与 .NET Framework XAML 服务一起使用的自定义类型</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f06f-113">Defining Custom Types for Use with .NET Framework XAML Services</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">
      <span data-ttu-id="9f06f-114">NET XAML 服务概念文档</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f06f-114">NET XAML Services Conceptual Documentation</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsableDuringInitializationAttribute (bool usable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool usable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (usable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UsableDuringInitializationAttribute(bool usable);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.UsableDuringInitializationAttribute : bool -&gt; System.Windows.Markup.UsableDuringInitializationAttribute" Usage="new System.Windows.Markup.UsableDuringInitializationAttribute usable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="usable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="usable">
          <span data-ttu-id="9f06f-115">定义关联类在初始化期间是否可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f06f-115">Defines whether the associated class is usable during initialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f06f-116">初始化 <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f06f-116">Initializes a new instance of the <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f06f-117">此属性继承。</span><span class="sxs-lookup"><span data-stu-id="9f06f-117">This attribute inherits.</span></span> <span data-ttu-id="9f06f-118">初始应用程序通常将作为`[UsableDuringInitialization(true)]`，然后，可以设置，但`[UsableDuringInitialization(false)]`更改行为的派生的类报告的派生类上。</span><span class="sxs-lookup"><span data-stu-id="9f06f-118">For the initial application you would typically apply as `[UsableDuringInitialization(true)]`, but you could then set `[UsableDuringInitialization(false)]` on a derived class to change the derived class reporting of the behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Usable">
      <MemberSignature Language="C#" Value="public bool Usable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Usable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Usable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Usable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Usable : bool" Usage="System.Windows.Markup.UsableDuringInitializationAttribute.Usable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f06f-119">获取一个值，该值指示关联类在初始化期间是否可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f06f-119">Gets a value that indicates whether the associated class is usable during initialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f06f-120">如果关联类在初始化期间可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f06f-120">
              <see langword="true" /> if the associated class is usable during initialization; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>