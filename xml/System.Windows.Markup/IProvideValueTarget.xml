<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3345d-101">表示一个服务，该服务报告标记扩展评估的情景对象和属性的关系。</span><span class="sxs-lookup"><span data-stu-id="3345d-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3345d-102"><xref:System.Windows.Markup.IProvideValueTarget> 表示服务报告有关对象和属性结构周围其中调用值转换器的信息。</span><span class="sxs-lookup"><span data-stu-id="3345d-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="3345d-103">类型转换器和标记扩展可以查询有关<xref:System.Windows.Markup.IProvideValueTarget>作为上由 XAML 对象编写器，XAML 对象编写器调用值转换行为时提供的服务上下文的服务。</span><span class="sxs-lookup"><span data-stu-id="3345d-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="3345d-104">有关详细信息，请参阅[类型转换器和 XAML 的标记扩展](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)和[可供类型转换器和标记扩展的上下文服务](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。</span><span class="sxs-lookup"><span data-stu-id="3345d-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="3345d-105">标记扩展具体而言，一个方案其中<xref:System.Windows.Markup.IProvideValueTarget>很有用是确定标记扩展的环境用法的有效性。</span><span class="sxs-lookup"><span data-stu-id="3345d-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="3345d-106">例如，你的标记扩展可能会实现值延迟机制，但使用该机制仅在可能正合适的目标对象是能够在运行时使用您的延迟机制其他组件。</span><span class="sxs-lookup"><span data-stu-id="3345d-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="3345d-107">可以检查为返回的对象的类型系统特征<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>并确保该对象支持您延期的方法。</span><span class="sxs-lookup"><span data-stu-id="3345d-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="3345d-108">如果是这样，你的标记扩展返回一个值，并在你的标记扩展如果没有，引发异常，将会选取作为内部异常 XAML 对象编写器。</span><span class="sxs-lookup"><span data-stu-id="3345d-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="3345d-109">类似的方案保证的特定属性，通过检查类型系统特征的支持功能， <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="3345d-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="3345d-110">虽然 API 名称<xref:System.Windows.Markup.IProvideValueTarget>可能暗示与的关联<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>，报告的信息<xref:System.Windows.Markup.IProvideValueTarget>也很有用到<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>。</span><span class="sxs-lookup"><span data-stu-id="3345d-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="3345d-111">A<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>通常具有比标记扩展的更多上下文，因为它们专用于特定的目标类型或目标属性，操作，因此通常可预测类型系统中态势有效性。</span><span class="sxs-lookup"><span data-stu-id="3345d-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="3345d-112">但是，存在其他方案。</span><span class="sxs-lookup"><span data-stu-id="3345d-112">However, other scenarios exist.</span></span> <span data-ttu-id="3345d-113">下面是一些可能的类型转换器或标记扩展实现的方案的列表：</span><span class="sxs-lookup"><span data-stu-id="3345d-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="3345d-114">获取<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>可以读取该对象上的其他属性的实例值。</span><span class="sxs-lookup"><span data-stu-id="3345d-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="3345d-115">请注意，此处处理你可能需要是可靠未设置的值，因为对目标对象的 XAML 成员的处理顺序可以在具有不确定性。</span><span class="sxs-lookup"><span data-stu-id="3345d-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="3345d-116">获取<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>用于读取类型级别的元数据，或通过验证，所需的接口类型实现的。</span><span class="sxs-lookup"><span data-stu-id="3345d-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="3345d-117">获取<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>读取的属性元数据。</span><span class="sxs-lookup"><span data-stu-id="3345d-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="3345d-118">一种情况是使用<xref:System.Windows.Markup.IProvideValueTarget>到允许的对象或属性进行设置你的标记扩展的限制的信息。</span><span class="sxs-lookup"><span data-stu-id="3345d-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="3345d-119">然后再尝试使用服务，请确保服务本身不是`null`时返回相关的服务提供程序参数使用的上下文。</span><span class="sxs-lookup"><span data-stu-id="3345d-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3345d-120">使用服务时，它是特别重要，不能修改所引用的对象<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>属性或对象引用的其他对象。</span><span class="sxs-lookup"><span data-stu-id="3345d-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="3345d-121">具体而言，wpf 这些更改可能导致意外的更改，会使失效 WPF 属性系统。</span><span class="sxs-lookup"><span data-stu-id="3345d-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3345d-122">不使用的一种<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>若要确定精确哪种类型的标记扩展或类型转换器应返回。</span><span class="sxs-lookup"><span data-stu-id="3345d-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="3345d-123">这不是一种最佳做法。</span><span class="sxs-lookup"><span data-stu-id="3345d-123">That is not a best practice.</span></span> <span data-ttu-id="3345d-124">返回类型应为与归一致 (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>的标记扩展) 或模式 （类型转换器类名）。</span><span class="sxs-lookup"><span data-stu-id="3345d-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="3345d-125">在以前版本的.NET Framework 中，此接口存在于 WindowsBase 的特定于 WPF 程序集。</span><span class="sxs-lookup"><span data-stu-id="3345d-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="3345d-126">在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.IProvideValueTarget>位于 System.Xaml 程序集中。</span><span class="sxs-lookup"><span data-stu-id="3345d-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="3345d-127">有关详细信息，请参阅[类型从 WPF 迁移到 System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="3345d-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="3345d-128">WPF 用法说明</span><span class="sxs-lookup"><span data-stu-id="3345d-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="3345d-129">此服务依赖属性支持 framework 功能，如绑定。</span><span class="sxs-lookup"><span data-stu-id="3345d-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="3345d-130">在 WPF 中，服务由<xref:System.Windows.Markup.IProvideValueTarget>可以返回对象和属性的情况下，要从标记扩展或类型转换器返回的值取决于上下文。</span><span class="sxs-lookup"><span data-stu-id="3345d-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="3345d-131"><xref:System.Windows.Markup.IProvideValueTarget> 在内部实现的很大程度利用<xref:System.Windows.Data.BindingBase>，在 WPF 中实现的依赖项属性的绑定机制的类。</span><span class="sxs-lookup"><span data-stu-id="3345d-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="3345d-132">默认内部服务提供程序 WPF 实现<xref:System.Windows.Markup.IProvideValueTarget>的自定义标记扩展或类型转换器用法。</span><span class="sxs-lookup"><span data-stu-id="3345d-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="3345d-133">对象和属性报告的<xref:System.Windows.Markup.IProvideValueTarget>仅可以由内部的 WPF 服务设置。</span><span class="sxs-lookup"><span data-stu-id="3345d-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="3345d-134">超越此定义如何<xref:System.Windows.Markup.IProvideValueTarget>操作需要定义自己服务提供商为标记扩展和类型转换器用法实现最起码<xref:System.Windows.Markup.IProvideValueTarget>和<xref:System.Windows.Markup.IXamlTypeResolver>服务和，它是一个高级本文未介绍的方案。</span><span class="sxs-lookup"><span data-stu-id="3345d-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="3345d-135">Null 值<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>或<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>并不一定意味着，无法执行操作的标记扩展或类型转换器，尽管这取决于您的实现。</span><span class="sxs-lookup"><span data-stu-id="3345d-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="3345d-136">示例情况中的值<xref:System.Windows.Markup.IProvideValueTarget>都为 null 时即使推出了该服务是如果你的标记扩展嵌套在另一个标记扩展，如<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="3345d-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="3345d-137">依赖于实现<xref:System.Windows.Markup.IProvideValueTarget>应始终检查 null 值，如果仅为了引发特定异常，如果该是你预期的设计。</span><span class="sxs-lookup"><span data-stu-id="3345d-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3345d-138">获取被报告的目标对象。</span><span class="sxs-lookup"><span data-stu-id="3345d-138">Gets the target object being reported.</span></span></summary>
        <value><span data-ttu-id="3345d-139">被报告的目标对象。</span><span class="sxs-lookup"><span data-stu-id="3345d-139">The target object being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3345d-140">返回的值<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>的实际引用，而不是类型系统标识符或其他标识符。</span><span class="sxs-lookup"><span data-stu-id="3345d-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="3345d-141">值也可以是`null`; 请参阅<xref:System.Windows.Markup.IProvideValueTarget>。</span><span class="sxs-lookup"><span data-stu-id="3345d-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3345d-142">使用服务时，它是特别重要，不能修改所引用的对象<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>处理属性或对象引用的属性不是专门值转换情况下你根据其他对象。</span><span class="sxs-lookup"><span data-stu-id="3345d-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="3345d-143">Wpf 具体而言，更改目标对象可能导致意外的更改，会使失效 WPF 属性系统。</span><span class="sxs-lookup"><span data-stu-id="3345d-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3345d-144">获取正在报告的目标属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="3345d-144">Gets an identifier for the target property being reported.</span></span></summary>
        <value><span data-ttu-id="3345d-145">正在报告的目标属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="3345d-145">An identifier for the target property being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3345d-146">值也可以是`null`; 请参阅<xref:System.Windows.Markup.IProvideValueTarget>。</span><span class="sxs-lookup"><span data-stu-id="3345d-146">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="3345d-147">WPF 用法说明</span><span class="sxs-lookup"><span data-stu-id="3345d-147">WPF Usage Notes</span></span>  
 <span data-ttu-id="3345d-148">依赖项属性，该默认 WPF 服务可能返回<xref:System.Windows.DependencyProperty>，这样，标记扩展或类型转换器可以使用元数据。</span><span class="sxs-lookup"><span data-stu-id="3345d-148">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="3345d-149">否则，返回的对象可以是<xref:System.Reflection.PropertyInfo>CLR 属性。</span><span class="sxs-lookup"><span data-stu-id="3345d-149">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>