<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ee33577ac89d42592b4312a85b5bb89b3f04916" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004480" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bb9c6-101">表示一个服务，该服务报告标记扩展评估的情景对象和属性的关系。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb9c6-102"><xref:System.Windows.Markup.IProvideValueTarget> 表示一种服务，报告有关周围其中调用值转换器的对象属性结构的信息。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="bb9c6-103">类型转换器和标记扩展可以查询<xref:System.Windows.Markup.IProvideValueTarget>作为 XAML 对象编写器调用值转换行为时，XAML 对象编写器提供的服务上下文上的服务。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="bb9c6-104">有关详细信息，请参阅[Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)并[Service Contexts Available to 类型转换器和标记扩展](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="bb9c6-105">标记扩展的具体而言，一种方案其中<xref:System.Windows.Markup.IProvideValueTarget>很有用是确定标记扩展的环境用法的有效性。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="bb9c6-106">例如，您的标记扩展可能会实现值延迟机制，但使用该机制可能只是适当的目标对象是否能够在运行时使用延迟机制的其他组件。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="bb9c6-107">无法检查作为返回的对象的类型系统特征<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>，并确保该对象支持您延期的方法。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="bb9c6-108">如果是这样，您的标记扩展返回一个值，并且如果不是，标记扩展将引发异常，将提取作为内部异常由 XAML 对象编写器。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="bb9c6-109">类似的方案确保特定属性支持一项功能，通过检查的类型系统特征<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="bb9c6-110">虽然 API 名称<xref:System.Windows.Markup.IProvideValueTarget>可能暗示存在与的关联<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>，报告的信息<xref:System.Windows.Markup.IProvideValueTarget>也可用于向<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="bb9c6-111">一个<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>通常具有比标记扩展的更多上下文，因为它们专用于特定的目标类型或目标属性，因此环境的有效性是通常可预测类型系统中。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="bb9c6-112">但是，存在其他方案。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-112">However, other scenarios exist.</span></span> <span data-ttu-id="bb9c6-113">下面是一些可能由类型转换器或标记扩展实现的方案的列表：</span><span class="sxs-lookup"><span data-stu-id="bb9c6-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="bb9c6-114">获取<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>读取该对象上的其他属性的实例值。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="bb9c6-115">请注意，在处理在此处可能需要是可靠的取消设置的值，因为 XAML 成员的目标对象的处理顺序可以在具有不确定性。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="bb9c6-116">获取<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>读取类型级别的元数据，或若要验证的类型实现所需的接口。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="bb9c6-117">获取<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>读取属性元数据。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="bb9c6-118">一种方案是使用<xref:System.Windows.Markup.IProvideValueTarget>到哪些对象或属性允许通过标记扩展设置的限制的信息。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="bb9c6-119">然后再尝试使用该服务，请确保服务本身不是`null`时返回的相关的服务提供程序参数使用的上下文。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bb9c6-120">使用服务时，它是特别重要，不能修改引用的对象<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>属性或该对象引用的其他对象。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="bb9c6-121">具体而言，WPF 的这些更改可能导致意外的更改会使失效 WPF 属性系统的。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb9c6-122">不使用的类型<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>若要确定哪个精确类型的标记扩展或类型转换器应返回。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="bb9c6-123">这不是一种最佳做法。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-123">That is not a best practice.</span></span> <span data-ttu-id="bb9c6-124">返回类型应与属性设置一致 (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>的标记扩展) 或模式 （该类型转换器的类名称）。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="bb9c6-125">在以前版本的.NET Framework 中，此接口存在于 WindowsBase 的特定于 WPF 程序集。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="bb9c6-126">在中[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.IProvideValueTarget>位于 System.Xaml 程序集中。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="bb9c6-127">有关详细信息，请参阅 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="bb9c6-128">WPF 用法说明</span><span class="sxs-lookup"><span data-stu-id="bb9c6-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="bb9c6-129">此服务依赖关系属性支持如绑定之类的框架功能。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="bb9c6-130">在 WPF 中，该服务由<xref:System.Windows.Markup.IProvideValueTarget>可以返回对象，其中要从标记扩展或类型转换器返回的值取决于上下文的情况下的属性。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="bb9c6-131"><xref:System.Windows.Markup.IProvideValueTarget> 中的内部实现很大程度利用<xref:System.Windows.Data.BindingBase>，在 WPF 中实现依赖属性的绑定机制的类。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="bb9c6-132">WPF 中实现的默认内部服务提供程序<xref:System.Windows.Markup.IProvideValueTarget>的使用情况的自定义标记扩展或类型转换器。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="bb9c6-133">对象和属性报告的<xref:System.Windows.Markup.IProvideValueTarget>只能通过内部 WPF 服务来设置。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="bb9c6-134">此定义如何超越<xref:System.Windows.Markup.IProvideValueTarget>进行操作需要定义您自己服务实现提供程序的标记扩展和类型转换器用法最起码<xref:System.Windows.Markup.IProvideValueTarget>和<xref:System.Windows.Markup.IXamlTypeResolver>服务和，它是一种高级未在此处描述的方案。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="bb9c6-135">Null 值<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>或<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>并不一定意味着，不能充当标记扩展或类型转换器，尽管这取决于您的实现。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="bb9c6-136">示例情况中的值<xref:System.Windows.Markup.IProvideValueTarget>都为 null 时即使提供服务的是如果您的标记扩展嵌套在另一个标记扩展，如<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="bb9c6-137">实现依赖于<xref:System.Windows.Markup.IProvideValueTarget>应始终检查 null 值，如果仅为了引发特定异常，如果这是您预期的设计。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb9c6-138">获取被报告的目标对象。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-138">Gets the target object being reported.</span></span></summary>
        <value><span data-ttu-id="bb9c6-139">被报告的目标对象。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-139">The target object being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb9c6-140">返回的值<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>是实际的引用，不是类型系统标识符或其他标识符。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="bb9c6-141">值也可以是`null`; 请参阅<xref:System.Windows.Markup.IProvideValueTarget>。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bb9c6-142">使用服务时，它是特别重要，不能修改引用的对象<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>处理属性或属性不是专门值转换大小写，则由该对象引用其他对象。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="bb9c6-143">WPF 的具体而言，更改目标对象可能导致意外的更改会使失效 WPF 属性系统的。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="bb9c6-144">类型转换器或 XAML 的标记扩展</span><span class="sxs-lookup"><span data-stu-id="bb9c6-144">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb9c6-145">获取正在报告的目标属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-145">Gets an identifier for the target property being reported.</span></span></summary>
        <value><span data-ttu-id="bb9c6-146">正在报告的目标属性的标识符。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-146">An identifier for the target property being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb9c6-147">值也可以是`null`; 请参阅<xref:System.Windows.Markup.IProvideValueTarget>。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-147">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="bb9c6-148">WPF 用法说明</span><span class="sxs-lookup"><span data-stu-id="bb9c6-148">WPF Usage Notes</span></span>  
 <span data-ttu-id="bb9c6-149">对于依赖项属性，该默认 WPF 服务可能返回<xref:System.Windows.DependencyProperty>，这样，标记扩展或类型转换器可以使用元数据。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-149">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="bb9c6-150">否则，返回的对象可以是<xref:System.Reflection.PropertyInfo>CLR 属性。</span><span class="sxs-lookup"><span data-stu-id="bb9c6-150">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="bb9c6-151">类型转换器或 XAML 的标记扩展</span><span class="sxs-lookup"><span data-stu-id="bb9c6-151">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>