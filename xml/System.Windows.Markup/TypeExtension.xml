<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeExtension.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac561ac1224d62662355e58bc4a47a46fdf9e214201.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61ac1224d62662355e58bc4a47a46fdf9e214201</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.TypeExtension">
          <source>Implements a markup extension that returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> based on a string input.</source>
          <target state="translated">实现根据字符串输入返回 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的标记扩展。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage information, see <bpt id="p1">[</bpt>x:Type Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-type-markup-extension.md)</ept>.</source>
          <target state="translated">有关<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>使用情况信息，请参阅<bpt id="p1">[</bpt>X:type 标记扩展<ept id="p1">](~/docs/framework/xaml-services/x-type-markup-extension.md)</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>The <ph id="ph1">`{x:Type}`</ph> functionality is generally for user code invocation from markup.</source>
          <target state="translated"><ph id="ph1">`{x:Type}`</ph>功能通常是从标记的用户代码调用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>For code that is implementing XAML support, type resolution services come from <ph id="ph1">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> and are related to the implementation of the acting XAML schema context.</source>
          <target state="translated">对于正在实现的 XAML 支持的代码，类型解析服务来自<ph id="ph1">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>，与起作用的实现的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>Do not attempt to reference <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> as a substitute for a <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> service provider; the context you pass in might not be valid for a type resolution, and attempts to call without valid services will fail.</source>
          <target state="translated">请不要尝试引用<ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph>来替代<ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>服务提供程序; 你传入的上下文可能不是有效的类型解析，并尝试不使用有效的服务调用将会失败。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 用法说明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>Type references are commonly used for style, template, and databinding feature areas in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, when these features are referenced by XAML.</source>
          <target state="translated">类型引用通常用于样式、 模板和数据绑定功能区中<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>，当这些功能所引用的 XAML。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.TypeExtension">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>A string that identifies the type to make a reference to.</source>
          <target state="translated">标识要引用的类型的字符串。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>This string uses the format <bpt id="p1">&lt;c&gt;</bpt>prefix:className<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">此字符串使用格式 <bpt id="p1">&lt;c&gt;</bpt>prefix:className<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>prefix<ept id="p1">&lt;/c&gt;</ept> is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>prefix<ept id="p1">&lt;/c&gt;</ept> 是 XAML 命名空间的映射前缀，并且仅用于未映射到默认 XAML 命名空间的引用类型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> class, initializing the <ph id="ph2">&lt;see cref="P:System.Windows.Markup.TypeExtension.TypeName" /&gt;</ph> value based on the provided <ph id="ph3">&lt;paramref name="typeName" /&gt;</ph> string.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> 类的新实例，并根据提供的 <ph id="ph3">&lt;paramref name="typeName" /&gt;</ph> 字符串初始化 <ph id="ph2">&lt;see cref="P:System.Windows.Markup.TypeExtension.TypeName" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>This value is not evaluated when you set it in the constructor.</source>
          <target state="translated">构造函数中对其进行设置时，则不会计算此值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>If the value is not <ph id="ph1">`null`</ph>, the value will be initially accepted.</source>
          <target state="translated">如果该值不是<ph id="ph1">`null`</ph>，最初接受此值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>The actual parsing and evaluation of the value is deferred until <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> is called on this extension, when XAML is parsed and with available service contexts active.</source>
          <target state="translated">实际分析和的值计算将推迟至<ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph>分析 XAML 时和与可用的服务上下文处于活动状态，对此扩展，调用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>At this time the <ph id="ph1">`typeName`</ph> is expected to be resolvable as a type within a XAML schema context, and that type is returned.</source>
          <target state="translated">在此时间<ph id="ph1">`typeName`</ph>预期可解析为返回的 XAML 架构上下文中的类型和该类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>Attempted to specify <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> as <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">尝试将 <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 指定为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
          <source>The type to be represented by this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph>.</source>
          <target state="translated">将通过此 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> 表示的类型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> class, declaring the type directly.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> 类的新实例，并直接声明类型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
          <source>This is a helper method for run time code usages of <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph> and is not part of the normal implementation pattern for a markup extension.</source>
          <target state="translated">这是运行的时代码用法的一个帮助器方法<ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph>并不是标记扩展的正常实现模式的一部分。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>Object that can provide services for the markup extension.</source>
          <target state="translated">可为标记扩展提供服务的对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>The provider is expected to provide a service for <ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph>.</source>
          <target state="translated">此提供程序应为 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph> 提供服务。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>Returns an object that should be set on the property where this extension is applied.</source>
          <target state="translated">返回一个应在应用了此扩展的属性上设置的对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>For <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> , this is the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> value as evaluated for the requested type name.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph>，这是为请求的类型名称计算的 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to set on the property where the extension is applied.</source>
          <target state="translated">要在应用了扩展的属性上设置的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>You can pass <ph id="ph1">`null`</ph> for <ph id="ph2">`serviceProvider`</ph>, but only if this <ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph> instance was established with an initial true type in the constructor rather than a <ph id="ph4">`typeName`</ph>.</source>
          <target state="translated">你可以将传递<ph id="ph1">`null`</ph>为<ph id="ph2">`serviceProvider`</ph>，但只有当此<ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph>实例构造函数中已建立具有初始 true 类型而不是<ph id="ph4">`typeName`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>Otherwise, this markup extension implementation relies on services based on the passed <ph id="ph1">`serviceProvider`</ph>.</source>
          <target state="translated">否则，此标记扩展实现依赖于服务基于已传递<ph id="ph1">`serviceProvider`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>It must not be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">不得为<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>The <ph id="ph1">`serviceProvider`</ph> is expected to provide a service for <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`serviceProvider`</ph>应提供的服务<ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="member" /&gt;</ph> value for the extension is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">扩展的 <ph id="ph1">&lt;paramref name="member" /&gt;</ph> 值为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>Some part of the <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> string did not parse properly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 字符串的某部分未进行正确分析。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> did not provide a service for <ph id="ph2">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> 没有为 <ph id="ph2">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph> 提供服务</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> value did not resolve to a type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> 值未解析为类型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>Gets or sets the type information for this extension.</source>
          <target state="translated">获取或设置此扩展的类型信息。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>The established type.</source>
          <target state="translated">建立的类型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>For runtime purposes, this may be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for get access, but cannot be set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">对运行时而言，这可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 以表示 get 访问，但不能设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>Unless this instance was deliberately instantiated with the <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29&gt;</ph> signature constructor, this value will be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">除非使用有意实例化此实例<ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29&gt;</ph>签名构造函数，此值将为<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>This property will not be reset when <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> is called.</source>
          <target state="translated">此属性不会重置时<ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>If you want the true type represented you should always call <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> rather than check this property.</source>
          <target state="translated">如果你想表示的实际类型都应该调用<ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph>而不检查此属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>This property is settable per usual rules regarding markup extension usage.</source>
          <target state="translated">此属性是可设置每个有关标记扩展用法的常用规则。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>However, if you are setting with a <ph id="ph1">&lt;xref:System.Type&gt;</ph>, then the purpose of this markup extension is irrelevant, because the same <ph id="ph2">&lt;xref:System.Type&gt;</ph> is returned from a <ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> call.</source>
          <target state="translated">但是，如果你要设置与<ph id="ph1">&lt;xref:System.Type&gt;</ph>，则此标记扩展的目的是不相关的因为相同<ph id="ph2">&lt;xref:System.Type&gt;</ph>从返回<ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>Attempted to set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">试图设置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>Gets or sets the type name represented by this markup extension.</source>
          <target state="translated">获取或设置此标记扩展所表示的类型名称。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>A string that identifies the type.</source>
          <target state="translated">用于标识类型的字符串。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>This string uses the format <bpt id="p1">*</bpt>prefix<ept id="p1">*</ept><bpt id="p2">&lt;c&gt;</bpt>:<ept id="p2">&lt;/c&gt;</ept><bpt id="p3">*</bpt>className<ept id="p3">*</ept>.</source>
          <target state="translated">此字符串使用格式<bpt id="p1">*</bpt>前缀<ept id="p1">*</ept><bpt id="p2">&lt;c&gt;</bpt>:<ept id="p2">&lt;/c&gt;</ept><bpt id="p3">*</bpt>className<ept id="p3">*</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>(<bpt id="p1">*</bpt>prefix<ept id="p1">*</ept> is the mapping prefix for an XML namespace, and is only required to reference types that are not mapped to the default XML namespace for WPF (<ph id="ph1">[!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]</ph>).</source>
          <target state="translated">(<bpt id="p1">*</bpt>前缀<ept id="p1">*</ept>是一个 XML 命名空间中，映射前缀，并且只需引用 wpf 未映射到默认 XML 命名空间的类型 (<ph id="ph1">[!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>Attempted to set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">试图设置为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>