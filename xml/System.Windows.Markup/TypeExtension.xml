<Type Name="TypeExtension" FullName="System.Windows.Markup.TypeExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61ac1224d62662355e58bc4a47a46fdf9e214201" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30658121" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeExtension : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeExtension extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.TypeExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeExtension&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeExtension : System::Windows::Markup::MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.TypeExtensionConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>实现根据字符串输入返回 <see cref="T:System.Type" /> 的标记扩展。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]使用情况信息，请参阅[X:type 标记扩展](~/docs/framework/xaml-services/x-type-markup-extension.md)。  
  
> [!NOTE]
>  `{x:Type}`功能通常是从标记的用户代码调用。 对于正在实现的 XAML 支持的代码，类型解析服务来自<xref:System.Windows.Markup.IXamlTypeResolver>，与起作用的实现的 XAML 架构上下文。 请不要尝试引用<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>来替代<xref:System.Windows.Markup.IXamlTypeResolver>服务提供程序; 你传入的上下文可能不是有效的类型解析，并尝试不使用有效的服务调用将会失败。  
  
## <a name="wpf-usage-notes"></a>WPF 用法说明  
 类型引用通常用于样式、 模板和数据绑定功能区中[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，当这些功能所引用的 XAML。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.TypeExtension" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.TypeExtension" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">标识要引用的类型的字符串。 此字符串使用格式 <c>prefix:className</c>。 <c>prefix</c> 是 XAML 命名空间的映射前缀，并且仅用于未映射到默认 XAML 命名空间的引用类型。</param>
        <summary>初始化 <see cref="T:System.Windows.Markup.TypeExtension" /> 类的新实例，并根据提供的 <paramref name="typeName" /> 字符串初始化 <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> 值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数中对其进行设置时，则不会计算此值。 如果该值不是`null`，最初接受此值。 实际分析和的值计算将推迟至<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>分析 XAML 时和与可用的服务上下文处于活动状态，对此扩展，调用。 在此时间`typeName`预期可解析为返回的 XAML 架构上下文中的类型和该类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">尝试将 <paramref name="typeName" /> 指定为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">将通过此 <see cref="T:System.Windows.Markup.TypeExtension" /> 表示的类型。</param>
        <summary>初始化 <see cref="T:System.Windows.Markup.TypeExtension" /> 类的新实例，并直接声明类型。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是运行的时代码用法的一个帮助器方法<xref:System.Windows.Markup.TypeExtension>并不是标记扩展的正常实现模式的一部分。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 为 <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">可为标记扩展提供服务的对象。 此提供程序应为 <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> 提供服务。</param>
        <summary>返回一个应在应用了此扩展的属性上设置的对象。 对于 <see cref="T:System.Windows.Markup.TypeExtension" />，这是为请求的类型名称计算的 <see cref="T:System.Type" /> 值。</summary>
        <returns>要在应用了扩展的属性上设置的 <see cref="T:System.Type" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以将传递`null`为`serviceProvider`，但只有当此<xref:System.Windows.Markup.TypeExtension>实例构造函数中已建立具有初始 true 类型而不是`typeName`。 否则，此标记扩展实现依赖于服务基于已传递`serviceProvider`。 不得为`null`。 `serviceProvider`应提供的服务<xref:System.Windows.Markup.IXamlTypeResolver>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          扩展的 <paramref name="member" /> 值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="typeName" /> 字符串的某部分未进行正确分析。  
  
 或  
  
 <paramref name="serviceProvider" /> 没有为 <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> 提供服务  
  
 或  
  
 <paramref name="typeName" /> 值未解析为类型。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceProvider" /> 为 <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此扩展的类型信息。</summary>
        <value>建立的类型。 对运行时而言，这可以是 <see langword="null" /> 以表示 get 访问，但不能设置为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除非使用有意实例化此实例<xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29>签名构造函数，此值将为`null`。 此属性不会重置时<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>调用。 如果你想表示的实际类型都应该调用<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>而不检查此属性。  
  
 此属性是可设置每个有关标记扩展用法的常用规则。 但是，如果你要设置与<xref:System.Type>，则此标记扩展的目的是不相关的因为相同<xref:System.Type>从返回<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>调用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">试图设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此标记扩展所表示的类型名称。</summary>
        <value>用于标识类型的字符串。 此字符串使用格式*前缀*<c>:</c>*className*。 (*前缀*是一个 XML 命名空间中，映射前缀，并且只需引用 wpf 未映射到默认 XML 命名空间的类型 ([!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)])。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">试图设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>