<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fed5ee82ed23838c0a8baef8d382515ec75d5620" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503265" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定应将某个属性或类型视为环境。 环境概念涉及 XAML 处理器如何确定成员的类型所有者。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 环境属性是属性值的地方时创建对象图，但其典型的类型成员查找挂起为了直接的 XAML 节点集正在创建要分析器上下文中可用。 有两个主要方案的环境概念：  
  
-   相同的对象的其他某些属性可能影响和限定对象属性查找应如何。  
  
-   该属性表示更大的延迟机制，用于查找成员值的环境功能扩展到包含在当前对象的所有对象。  
  
 此属性可以将应用到具有预期启用环境属性查找行为的容器的特定属性，也可以应用于类，以启用中该属性的值类型的所有情况下的环境属性行为。  
  
 <xref:System.Windows.Markup.AmbientAttribute> 此外可以应用于 CLR 方法，以支持归为环境的 XAML 可附加属性。 这是可能有必要的因为在 CLR 实现 XAML 附加的属性实现/表示指向访问器模式与作为反射`get`和`set`方法。 到属性没有实际的 CLR 属性存在，因此限制的使用情况<xref:System.AttributeTargets>到`Property`将不启用指定可附加成员为环境。 对于你想要报告为环境可附加成员，特性`get`访问器。 不应尝试对不是专门的支持方法可附加成员的属性方法。  
  
 在以前版本的.NET Framework 中，此类特定于 WPF 程序集 WindowsBase 中存在。 在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.AmbientAttribute>位于 System.Xaml 程序集中。 有关详细信息，请参阅[类型从 WPF 迁移到 System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。  
  
 环境类型 (类型 where<xref:System.Windows.Markup.AmbientAttribute>应用于类型级别) 可以使用其中一个属性的类型需要解析无序某些 XAML 处理情况。  
  
## <a name="object-writer-scenarios"></a>对象编写器方案  
 如果你正在定义 XAML 对象编写器，并且在遇到属性、 方法或类型其中<xref:System.Windows.Markup.AmbientAttribute>是应用，你通常必须访问服务，以确定所需的写出对象的目标环境的属性查找行为。 有关详情，请参阅<xref:System.Xaml.IAmbientProvider>。  
  
## <a name="value-converters"></a>值转换器  
 类型转换器或标记扩展可能需要了解环境的信息才能处理表示间接类型映射，例如通过使用或不限定的字符串名称来指定成员或类型的属性的属性。 在此方案中，<xref:System.Windows.Markup.AmbientAttribute>不应直接用于值转换器代码逻辑。 相反，值转换器应依赖于 XAML 编写器处理行为的说明进行操作，将传递<xref:System.Xaml.IAmbientProvider>其到值转换器方法调用时使用的服务上下文中。  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>WPF AmbientAttribute 方案  
  
-   一个属性<xref:System.Windows.Style>(<xref:System.Windows.Style.TargetType%2A>) 可以限定必要的属性名称查找所需的后备引用查找中的属性名称<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>值。  
  
-   中的所有内容`Resources`属性 (项的<xref:System.Windows.ResourceDictionary>) 模板内容，以及应该能够访问值作为其他对等节点。 声明整个`Resources`属性作为环境时，可以实现此 WPF XAML 分析器中的逻辑将调用。  
  
 请参阅<xref:System.Windows.ResourceDictionary>有关的设置的一种方案示例<xref:System.Windows.Markup.AmbientAttribute>级别类型。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.AmbientAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>