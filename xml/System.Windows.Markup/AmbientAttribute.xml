<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f9e45dec13ae9f7f6870fdbf3ec38e5e3c747ca" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48627485" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定应将某个属性或类型视为环境。 环境概念涉及 XAML 处理器如何确定成员的类型所有者。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 环境属性是属性的值应为分析器上下文中可用时创建对象图，但其典型类型成员查找挂起直接 XAML 节点集创建的。 有两个主要方案的环境概念：  
  
-   同一个对象的其他某个属性可能影响和限定对象属性查找的工作方式。  
  
-   该属性表示更大的延迟机制，用于查找成员值的环境功能扩展到包含当前对象的所有对象。  
  
 此属性可应用于特定于希望启用的环境属性查找行为，容器的属性或可应用于类，以启用在所有情况下，该属性的值类型的环境属性行为。  
  
 <xref:System.Windows.Markup.AmbientAttribute> 此外可以应用于 CLR 方法，以支持属性设置为环境的 XAML 可附加属性。 这是可能有必要的因为在 CLR 实现的 XAML 附加的属性实现/表示作为一种访问器模式与反射`get`和`set`方法。 属性没有实际的 CLR 属性存在，因此限制的使用情况<xref:System.AttributeTargets>到`Property`会不允许指定可附加成员为环境。 对于你想要报告为环境的可附加成员，请特性`get`访问器。 您不应尝试属性不是专门支持方法的可附加成员的方法。  
  
 在以前版本的.NET Framework 中，此类存在于 WindowsBase 的特定于 WPF 程序集。 在中[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.AmbientAttribute>位于 System.Xaml 程序集中。 有关详细信息，请参阅[类型从 WPF 迁移到 System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。  
  
 环境类型 (类型 where<xref:System.Windows.Markup.AmbientAttribute>在类型级别应用) 可用于某些 XAML 处理情况下，其中属性类型需要解析顺序。  
  
## <a name="object-writer-scenarios"></a>对象编写器方案  
 如果你正在定义的 XAML 对象编写器，但遇到属性、 方法或类型其中<xref:System.Windows.Markup.AmbientAttribute>是应用，您通常必须访问的服务可以确定所需的写出对象的预期环境属性查找行为。 有关详情，请参阅<xref:System.Xaml.IAmbientProvider>。  
  
## <a name="value-converters"></a>值转换器  
 类型转换器或标记扩展可能需要知道的环境的信息，才能处理表示间接类型映射，例如通过使用或不限定字符串名称来指定成员或类型的属性的属性。 在此方案中，<xref:System.Windows.Markup.AmbientAttribute>不应直接用于值转换器代码逻辑。 相反，值转换器应依赖于将传递的 XAML 编写器处理行为<xref:System.Xaml.IAmbientProvider>中其值转换器方法调用时使用的服务上下文。  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>AmbientAttribute 的 WPF 方案  
  
-   属性<xref:System.Windows.Style>(<xref:System.Windows.Style.TargetType%2A>) 可以限定所需属性中的名称查找后备引用必要属性名称查找<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>值。  
  
-   中的所有内容`Resources`属性 (项的<xref:System.Windows.ResourceDictionary>) 以及模板的内容，应该能够访问其他对等节点作为值。 声明整个`Resources`属性作为环境调用，这在 WPF XAML 分析器中的逻辑。  
  
 请参阅<xref:System.Windows.ResourceDictionary>有关的设置的方案示例<xref:System.Windows.Markup.AmbientAttribute>在类型级别。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="http://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">自定义类型和库的 XAML 相关 CLR 特性</related>
    <related type="Article" href="http://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">定义与 .NET Framework XAML 服务一起使用的自定义类型</related>
    <related type="Article" href="http://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">NET XAML 服务概念文档</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.AmbientAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>