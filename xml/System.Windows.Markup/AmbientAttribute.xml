<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c8bd9-101">指定应将某个属性或类型视为环境。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-101">Specifies that a property or type should be treated as ambient.</span></span> <span data-ttu-id="c8bd9-102">环境概念涉及 XAML 处理器如何确定成员的类型所有者。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-102">The ambient concept relates to how XAML processors determine type owners of members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8bd9-103">环境属性是属性值的地方时创建对象图，但其典型的类型成员查找挂起为了直接的 XAML 节点集正在创建要分析器上下文中可用。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-103">An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</span></span> <span data-ttu-id="c8bd9-104">有两个主要方案的环境概念：</span><span class="sxs-lookup"><span data-stu-id="c8bd9-104">There are two main scenarios for the ambient concept:</span></span>  
  
-   <span data-ttu-id="c8bd9-105">相同的对象的其他某些属性可能影响和限定对象属性查找应如何。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-105">Some other property of the same object influences and qualifies how that object-property lookup should work.</span></span>  
  
-   <span data-ttu-id="c8bd9-106">该属性表示更大的延迟机制，用于查找成员值的环境功能扩展到包含在当前对象的所有对象。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-106">The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</span></span>  
  
 <span data-ttu-id="c8bd9-107">此属性可以将应用到具有预期启用环境属性查找行为的容器的特定属性，也可以应用于类，以启用中该属性的值类型的所有情况下的环境属性行为。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-107">This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</span></span>  
  
 <span data-ttu-id="c8bd9-108"><xref:System.Windows.Markup.AmbientAttribute> 此外可以应用于 CLR 方法，以支持归为环境的 XAML 可附加属性。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-108"><xref:System.Windows.Markup.AmbientAttribute> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</span></span> <span data-ttu-id="c8bd9-109">这是可能有必要的因为在 CLR 实现 XAML 附加的属性实现/表示指向访问器模式与作为反射`get`和`set`方法。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-109">This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with `get` and `set` methods.</span></span> <span data-ttu-id="c8bd9-110">到属性没有实际的 CLR 属性存在，因此限制的使用情况<xref:System.AttributeTargets>到`Property`将不启用指定可附加成员为环境。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-110">No actual CLR property to attribute exists, so restricting usage for <xref:System.AttributeTargets> to `Property` would not have enabled specifying an attachable member as ambient.</span></span> <span data-ttu-id="c8bd9-111">对于你想要报告为环境可附加成员，特性`get`访问器。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-111">For an attachable member that you want to report as ambient, attribute the `get` accessor.</span></span> <span data-ttu-id="c8bd9-112">不应尝试对不是专门的支持方法可附加成员的属性方法。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-112">You should not attempt to attribute methods that are not specifically support methods of attachable members.</span></span>  
  
 <span data-ttu-id="c8bd9-113">在以前版本的.NET Framework 中，此类特定于 WPF 程序集 WindowsBase 中存在。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-113">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="c8bd9-114">在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.AmbientAttribute>位于 System.Xaml 程序集中。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-114">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="c8bd9-115">有关详细信息，请参阅[类型从 WPF 迁移到 System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-115">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 <span data-ttu-id="c8bd9-116">环境类型 (类型 where<xref:System.Windows.Markup.AmbientAttribute>应用于类型级别) 可以使用其中一个属性的类型需要解析无序某些 XAML 处理情况。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-116">Ambient types (types where <xref:System.Windows.Markup.AmbientAttribute> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</span></span>  
  
## <a name="object-writer-scenarios"></a><span data-ttu-id="c8bd9-117">对象编写器方案</span><span class="sxs-lookup"><span data-stu-id="c8bd9-117">Object Writer Scenarios</span></span>  
 <span data-ttu-id="c8bd9-118">如果你正在定义 XAML 对象编写器，并且在遇到属性、 方法或类型其中<xref:System.Windows.Markup.AmbientAttribute>是应用，你通常必须访问服务，以确定所需的写出对象的目标环境的属性查找行为。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-118">If you are defining a XAML object writer, and you encounter a property, method or type where <xref:System.Windows.Markup.AmbientAttribute> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</span></span> <span data-ttu-id="c8bd9-119">有关详情，请参阅<xref:System.Xaml.IAmbientProvider>。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-119">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
## <a name="value-converters"></a><span data-ttu-id="c8bd9-120">值转换器</span><span class="sxs-lookup"><span data-stu-id="c8bd9-120">Value Converters</span></span>  
 <span data-ttu-id="c8bd9-121">类型转换器或标记扩展可能需要了解环境的信息才能处理表示间接类型映射，例如通过使用或不限定的字符串名称来指定成员或类型的属性的属性。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-121">Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</span></span> <span data-ttu-id="c8bd9-122">在此方案中，<xref:System.Windows.Markup.AmbientAttribute>不应直接用于值转换器代码逻辑。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-122">In this scenario, <xref:System.Windows.Markup.AmbientAttribute> is not intended to be used directly for value converter code logic.</span></span> <span data-ttu-id="c8bd9-123">相反，值转换器应依赖于 XAML 编写器处理行为的说明进行操作，将传递<xref:System.Xaml.IAmbientProvider>其到值转换器方法调用时使用的服务上下文中。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-123">Rather, the value converter should rely on the XAML writer processing behavior, which will pass <xref:System.Xaml.IAmbientProvider> in its service contexts to your value converter methods when called.</span></span>  
  
## <a name="wpf-scenarios-for-ambientattribute"></a><span data-ttu-id="c8bd9-124">WPF AmbientAttribute 方案</span><span class="sxs-lookup"><span data-stu-id="c8bd9-124">WPF Scenarios for AmbientAttribute</span></span>  
  
-   <span data-ttu-id="c8bd9-125">一个属性<xref:System.Windows.Style>(<xref:System.Windows.Style.TargetType%2A>) 可以限定必要的属性名称查找所需的后备引用查找中的属性名称<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-125">A property of a <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values.</span></span>  
  
-   <span data-ttu-id="c8bd9-126">中的所有内容`Resources`属性 (项的<xref:System.Windows.ResourceDictionary>) 模板内容，以及应该能够访问值作为其他对等节点。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-126">All content within a `Resources` property (items of a <xref:System.Windows.ResourceDictionary>) as well as template content, should be able to access other peers as values.</span></span> <span data-ttu-id="c8bd9-127">声明整个`Resources`属性作为环境时，可以实现此 WPF XAML 分析器中的逻辑将调用。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-127">Declaring the entire `Resources` property as ambient invokes logic that enables this in the WPF XAML parser.</span></span>  
  
 <span data-ttu-id="c8bd9-128">请参阅<xref:System.Windows.ResourceDictionary>有关的设置的一种方案示例<xref:System.Windows.Markup.AmbientAttribute>级别类型。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-128">See <xref:System.Windows.ResourceDictionary> for an example of a scenario for setting <xref:System.Windows.Markup.AmbientAttribute> at type level.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8bd9-129">初始化 <see cref="T:System.Windows.Markup.AmbientAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c8bd9-129">Initializes a new instance of the <see cref="T:System.Windows.Markup.AmbientAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>