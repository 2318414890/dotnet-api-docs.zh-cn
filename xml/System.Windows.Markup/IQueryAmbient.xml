<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d4497235ac96c9f7db24eb5de821fa75e1ed4de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>查询是否应将指定的属性视为当前范围中的环境属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 环境属性机制的用途是通过告知 XAML 对象编写器，以避免实例化某些对象，在其中已知的对象为典型的运行时是临时的且不是有用的值的情况下提高分析的时间应用程序。 通常情况下，XAML 查找或属性 get 访问器的 XAML 处理需要实例化此类对象来填充对象图表示形式与准备就绪，可以使用值。  
  
 <xref:System.Windows.Markup.IQueryAmbient> 包含一个成员： <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>。  
  
 <xref:System.Windows.Markup.IQueryAmbient> 是为并行机制<xref:System.Windows.Markup.AmbientAttribute>。 <xref:System.Windows.Markup.IQueryAmbient> 是专用的机制，可避免使用反射来确定信息，并且还可以包含 act 函数 (给定的对象无法选择报表`true`或`false`为<xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>)，而该属性是实质上是静态分析）。 <xref:System.Windows.Markup.AmbientAttribute> 是，可以使用由 XAML 对象编写器，并且通常关联到专用的 XAML 类型系统属性的常规机制<xref:System.Xaml.XamlMember.IsAmbient%2A>和<xref:System.Xaml.XamlType.IsAmbient%2A>。  
  
## <a name="wpf-implementations-of-iqueryambient"></a>WPF 实现 IQueryAmbient  
 在 WPF 中，<xref:System.Windows.Markup.IQueryAmbient>用于资源字典查找过程。 查找进程获取连续`Resources`整个 WPF 逻辑树的值，致力于资源作用域的根之前密钥找不到或确定键在作用域中不存在。 通常，此操作需要实例化<xref:System.Windows.ResourceDictionary>每次接收结果。 声明的内容`Resources`只要为环境`Resources`存在来优化此查找过程。 在 WPF 中，系统会在以下情况下实现此接口：  
  
-   <xref:System.Windows.FrameworkElement> 实现<xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A>返回`true`对所有的属性名，如果它包含的现有<xref:System.Windows.ResourceDictionary>为<xref:System.Windows.FrameworkElement.Resources%2A>，并且只要查询不是针对<xref:System.Windows.FrameworkElement.Resources%2A>属性本身。  
  
-   <xref:System.Windows.Style> 实现的相同模式其<xref:System.Windows.Style.Resources%2A>。  
  
-   <xref:System.Windows.Application> 实现的相同模式其<xref:System.Windows.Application.Resources%2A>。  
  
-   <xref:System.Windows.FrameworkContentElement> 实现的相同模式其<xref:System.Windows.FrameworkContentElement.Resources%2A>。  
  
-   <xref:System.Windows.FrameworkTemplate> 实现的相同模式其<xref:System.Windows.FrameworkTemplate.Resources%2A>。 它还报告<xref:System.Windows.FrameworkTemplate.Template%2A>内容与环境，但是返回`false`如果查询<xref:System.Windows.FrameworkTemplate.Template%2A>本身。  
  
-   在这些情况下，相关的每个`Resources`属性 (和<xref:System.Windows.FrameworkTemplate.Template%2A>) 特性化为<xref:System.Windows.Markup.AmbientAttribute>。 典型用法就是对查询不是属性<xref:System.Windows.Markup.AmbientAttribute>特性化的定义的接口的对象的属性。 换而言之，处理程序，但前提是为了创建对象图时提供的潜在的运行的时间值存在的资源字典，除了资源字典属性容器以外的任何其他属性可视为环境。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">要检查其环境状态的属性的名称。</param>
        <summary>查询可否将指定的命名属性视为当前范围中的环境属性。</summary>
        <returns>
          如果所请求的属性可视为环境属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>