<Type Name="ConstructorArgumentAttribute" FullName="System.Windows.Markup.ConstructorArgumentAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="617f14c36b80f59fad31d7452e2f3ad147456f87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656361" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConstructorArgumentAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConstructorArgumentAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ConstructorArgumentAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstructorArgumentAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorArgumentAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定可以使用非默认构造函数语法来初始化对象，而且由指定名称的属性提供构造信息。  此信息主要用于 XAML 序列化。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此特性指定关联的属性可以初始化由构造函数参数，且如果构造函数用于构造实例，则在 XAML 序列化时应忽略。 这样可以更好的往返过程表示形式进行参数化构造函数语法而不是默认构造函数实例化加特定的属性。  
  
 保留标记扩展用法和将其重建而不是依赖于一个框架可能支持`ProvideValue`输出序列化的对象树。 在这种情况下，<xref:System.Windows.Markup.ConstructorArgumentAttribute>信息在用于生成准确地反映典型的标记扩展用法的序列化过程很有用。 有关标记扩展的详细信息，请参阅[的标记扩展 XAML 概述](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)。  
  
 若要对有效<xref:System.Windows.Markup.ConstructorArgumentAttribute>归属，一种类型的公共非默认构造函数必须支持只有一个参数。 参数的名称必须对应于读/写属性。 属性必须是可序列化。 此属性用于创建在构造函数参数的名称和属性之间的对应关系。 具体而言，你将此特性应用于连接的读/写属性的属性级别定义。  
  
 使用者<xref:System.Windows.Markup.ConstructorArgumentAttribute>在情况下可能会引发其中<xref:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName%2A>不能解决类型支持，或当应用于不具有适当的构造自变量和 arity 类型。  
  
 在以前版本的.NET Framework 中，此类特定于 WPF 程序集 WindowsBase 中存在。 在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.ConstructorArgumentAttribute>位于 System.Xaml 程序集中。 有关详细信息，请参阅[类型从 WPF 迁移到 System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。  
  
## <a name="wpf-usage-notes"></a>WPF 用法说明  
 有关标记扩展和 WPF 的详细信息，请参阅[标记扩展和 WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConstructorArgumentAttribute (string argumentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string argumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConstructorArgumentAttribute(System::String ^ argumentName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argumentName">将初始化关联属性的构造函数的名称。</param>
        <summary>初始化 <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentName">
      <MemberSignature Language="C#" Value="public string ArgumentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ArgumentName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ArgumentName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取将初始化关联的属性的构造函数的 name 参数。</summary>
        <value>构造函数的名称。 假定具有 CLR 支持，那么这对应于相关构造函数参数的 <see cref="P:System.Reflection.ParameterInfo.Name" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>