<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea60377fc932098230fdd7a1a5006bcc7b0f7edc" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48742730" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0c12c-101">为可以由 .NET Framework XAML 服务及其他 XAML 读取器和 XAML 编写器支持的 XAML 标记扩展实现提供基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c12c-101">Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c12c-102">标记扩展将对象返回给调用方，根据输入的字符串属性值或 XAML 中的标记元素。</span><span class="sxs-lookup"><span data-stu-id="0c12c-102">Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</span></span> <span data-ttu-id="0c12c-103">标记扩展不是单独的类型转换器可以完成更复杂一些的方法中返回对象。</span><span class="sxs-lookup"><span data-stu-id="0c12c-103">Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</span></span> <span data-ttu-id="0c12c-104">在 XAML 对象编写器调用的类型转换器，因为类型或成员具有与之关联的类型转换器实现。</span><span class="sxs-lookup"><span data-stu-id="0c12c-104">A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</span></span> <span data-ttu-id="0c12c-105">从 CLR 框架的引用，这意味着类型或成员是<xref:System.ComponentModel.TypeConverterAttribute>特性化。</span><span class="sxs-lookup"><span data-stu-id="0c12c-105">From the CLR frame of reference, this means that a type or member is <xref:System.ComponentModel.TypeConverterAttribute> attributed.</span></span> <span data-ttu-id="0c12c-106">从 XAML 类型系统角度来看，这意味着 XAML 类型或 XAML 成员具有的值及其`TypeConverter`属性。</span><span class="sxs-lookup"><span data-stu-id="0c12c-106">From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its `TypeConverter` property.</span></span> <span data-ttu-id="0c12c-107">类型转换器的调用绑定到的类型或属性的定义，并始终由 XAML 处理这种情况下调用。</span><span class="sxs-lookup"><span data-stu-id="0c12c-107">The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</span></span> <span data-ttu-id="0c12c-108">与此相反，标记扩展是详细的用户代码和用户生成的标记，控制下，每当应用程序方案需要它可以应用。</span><span class="sxs-lookup"><span data-stu-id="0c12c-108">In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</span></span> <span data-ttu-id="0c12c-109">标记扩展可以调用，并且可用于设置不同的类型成员的值，只要标记扩展的返回类型是分配给该值。</span><span class="sxs-lookup"><span data-stu-id="0c12c-109">A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</span></span>  
  
 <span data-ttu-id="0c12c-110">有关创建自定义标记扩展的信息，请参阅<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c12c-110">For information on creating a custom markup extension, see <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>.</span></span> <span data-ttu-id="0c12c-111">在常规中的标记扩展的详细信息，请参阅[Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0c12c-111">For more information on markup extensions in general, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span> <span data-ttu-id="0c12c-112">如果您构建于 WPF 和使用或创建的 XAML 标记扩展，可以在本主题中找到的其他相关信息[标记扩展和 WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="0c12c-112">If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="0c12c-113"><xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>的每个标记扩展实现的方法可以使用<xref:System.IServiceProvider>在可提供上下文的运行时。</span><span class="sxs-lookup"><span data-stu-id="0c12c-113">The <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of each markup extension implementation can use an <xref:System.IServiceProvider> at run time that can provide context.</span></span> <span data-ttu-id="0c12c-114">这<xref:System.IServiceProvider>然后查询的特定服务传递信息，如<xref:System.Windows.Markup.IProvideValueTarget>或<xref:System.Windows.Markup.IXamlTypeResolver>。</span><span class="sxs-lookup"><span data-stu-id="0c12c-114">This  <xref:System.IServiceProvider> is then queried for specific services that pass information, such as <xref:System.Windows.Markup.IProvideValueTarget> or <xref:System.Windows.Markup.IXamlTypeResolver>.</span></span> <span data-ttu-id="0c12c-115">对于标记扩展使用的服务上下文的详细信息，请参阅[可用于类型转换器和标记扩展的上下文服务](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。</span><span class="sxs-lookup"><span data-stu-id="0c12c-115">For more information on service contexts for a markup extension, see [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="0c12c-116">派生的类应使用特性化<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>以通知的最具体的返回类型可从标记扩展的使用者<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>实现。</span><span class="sxs-lookup"><span data-stu-id="0c12c-116">Derived classes should be attributed with <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> to inform consumers of the most specific return type available from the markup extension's <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">
      <span data-ttu-id="0c12c-117">类型转换器或 XAML 的标记扩展</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c12c-117">Type Converters or Markup Extensions for XAML</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">
      <span data-ttu-id="0c12c-118">XAML 的标记扩展概述</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c12c-118">Markup Extensions for XAML Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c12c-119">初始化从 <see cref="T:System.Windows.Markup.MarkupExtension" /> 派生的类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c12c-119">Initializes a new instance of a class derived from <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c12c-120"><xref:System.Windows.Markup.MarkupExtension>抽象类不拥有需要初始化任何私有值。</span><span class="sxs-lookup"><span data-stu-id="0c12c-120">The <xref:System.Windows.Markup.MarkupExtension> abstract class does not hold any private values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c12c-121">功能的标记扩展应定义其自己的公共默认构造函数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-121">A functional markup extension should define its own public default constructor.</span>
            </span>
            <span data-ttu-id="0c12c-122">此外，标记扩展应实现适用于扩展的预期的功能和标记用法的构造函数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-122">Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage.</span>
            </span>
            <span data-ttu-id="0c12c-123">有关详细信息，请参阅[Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-123">For more information, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="0c12c-124">可为标记扩展提供服务的服务提供程序帮助程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c12c-124">A service provider helper that can provide services for the markup extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c12c-125">当在派生类中实现时，返回用作此标记扩展的目标属性值的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c12c-125">When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c12c-126">要在应用了扩展的属性上设置的对象值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c12c-126">The object value to set on the property where the extension is applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c12c-127">当 XAML 处理器处理一个类型节点和成员值，该值是标记扩展时，它将调用<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>此标记扩展的方法并将结果写入到的对象关系图或序列化流。</span><span class="sxs-lookup"><span data-stu-id="0c12c-127">When a XAML processor processes a type node and member value that is a markup extension, it invokes the <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of that markup extension and writes the result into the object graph or serialization stream.</span></span> <span data-ttu-id="0c12c-128">XAML 对象编写器将服务上下文传递给每个此类实现通过`serviceProvider`参数。</span><span class="sxs-lookup"><span data-stu-id="0c12c-128">The XAML object writer passes service context to each such implementation through the `serviceProvider` parameter.</span></span>  
  
 <span data-ttu-id="0c12c-129">有关如何实现的详细信息，请参阅"为实施者说明"部分<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>中自定义标记扩展。</span><span class="sxs-lookup"><span data-stu-id="0c12c-129">See "Notes to Implementers" section for more information on how to implement <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in a custom markup extension.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="0c12c-130">WPF 用法说明</span><span class="sxs-lookup"><span data-stu-id="0c12c-130">WPF Usage Notes</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0c12c-131">具有与标记设置操作的特定交互的 WPF 类不应依赖于<xref:System.Windows.Markup.IReceiveMarkupExtension>为[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]实现。</span><span class="sxs-lookup"><span data-stu-id="0c12c-131">WPF classes that have specific interactions with markup set operations should not rely on <xref:System.Windows.Markup.IReceiveMarkupExtension> for a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementation.</span></span> <span data-ttu-id="0c12c-132">使用<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-改为特性化回调。</span><span class="sxs-lookup"><span data-stu-id="0c12c-132">Use <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-attributed callbacks instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c12c-133">返回默认服务提供程序，通常可用于自定义的或现有的通用服务<see cref="T:System.Windows.Markup.MarkupExtension" />实现包括以下主要服务。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-133">Common services returned by the default service provider that is typically available to a custom or existing <see cref="T:System.Windows.Markup.MarkupExtension" /> implementation include the following primary services.</span>
            </span>
            <span data-ttu-id="0c12c-134">
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> 报告的对象引用和标记扩展使用其中的上下文中的属性标识符</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-134">
-   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> reports the object reference and a property identifier from the context where the markup extension is used</span>
            </span>
            <span data-ttu-id="0c12c-135">
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> 公开服务，它与常规的 XAML 对象编写可以提供的行为<see cref="T:System.Type" />基于 XAML 类型名称。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-135">
-   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> exposes a service that parallels the general XAML object writing behavior that can provide a <see cref="T:System.Type" /> based on a XAML type name.</span>
            </span>
            <span data-ttu-id="0c12c-136">该名称可以根据需要包含映射的 XAML 命名空间的前缀。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-136">The name can optionally include a prefix for a mapped XAML namespace.</span>
            </span>
            <span data-ttu-id="0c12c-137">
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> 直接公开活动的 XAML 架构上下文。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-137">
-   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> exposes the active XAML schema context directly.</span>
            </span>
            <span data-ttu-id="0c12c-138">从报告<see cref="T:System.Xaml.XamlSchemaContext" />，你可以获取 XAML 架构上下文信息如如何为类型支持，在程序集中，首选前缀映射的程序集列出了每个<see cref="T:System.Xaml.XamlType" />中程序集，依次类推。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-138">From the reported <see cref="T:System.Xaml.XamlSchemaContext" />, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <see cref="T:System.Xaml.XamlType" /> in an assembly, and so on.</span>
            </span>
            <span data-ttu-id="0c12c-139">的可用于更专业的标记扩展方案其他服务包括：</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c12c-139">-   Other services available for more specialized markup extension scenarios include:</span>
            </span> 
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" /><span data-ttu-id="0c12c-140">可能的实现<see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />可以忽略<paramref name="serviceProvider" />参数。</span><span class="sxs-lookup"><span data-stu-id="0c12c-140">Potentially, implementations of <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> can ignore the <paramref name="serviceProvider" /> parameter.</span></span><span data-ttu-id="0c12c-141">这是可用于某些基本的情况下，其中没有上下文根本是所必需的返回值。</span><span class="sxs-lookup"><span data-stu-id="0c12c-141">This is viable for some basic scenarios, where no context at all is required for returning a value.</span></span><span data-ttu-id="0c12c-142">在典型用法中，.NET Framework XAML 服务和实现的 XAML 对象编写器将提供服务提供商到 XAML 期间调用的所有值转换器方法处理。</span><span class="sxs-lookup"><span data-stu-id="0c12c-142">In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing.</span></span><span data-ttu-id="0c12c-143">但是，为实现可靠性，你应提供代码路径为 null 值的服务提供程序本身以及任何请求的服务。</span><span class="sxs-lookup"><span data-stu-id="0c12c-143">However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service.</span></span><span data-ttu-id="0c12c-144">Null 值可能会出现如果标记扩展应用在以下情况，提供由 XAML 处理器基础结构的典型的服务支持不可用。</span><span class="sxs-lookup"><span data-stu-id="0c12c-144">Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.</span></span><span data-ttu-id="0c12c-145">从 XAML 服务提供程序上下文和如何使用它们的可用服务的详细信息，请参阅[Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="0c12c-145">For more information on available services from the XAML service provider context and how to use them, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span></span><span data-ttu-id="0c12c-146">需要某个服务必须可用才能生成一个很有用的实现<see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />结果会引发异常，如果该服务不可用。</span><span class="sxs-lookup"><span data-stu-id="0c12c-146">Implementations that require a certain service to be available in order to produce a useful <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> result are expected to throw exceptions if that service is not available.</span></span><span data-ttu-id="0c12c-147">建议要引发的异常是<see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="0c12c-147">The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</span></span><span data-ttu-id="0c12c-148">如果自定义标记扩展提供一个值为 null，所需的自变量之一无效对于其数据类型，或不包含标记扩展是能够处理的一个值，实现也可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="0c12c-148">The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing.</span></span><span data-ttu-id="0c12c-149">建议要引发的异常是<see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="0c12c-149">The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
        <related type="Article" href="http://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">
          <span data-ttu-id="0c12c-150">类型转换器或 XAML 的标记扩展</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c12c-150">Type Converters or Markup Extensions for XAML</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/261b2b11-2dc0-462f-8c66-55b8c9c6e436">
          <span data-ttu-id="0c12c-151">XAML 的标记扩展概述</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c12c-151">Markup Extensions for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>