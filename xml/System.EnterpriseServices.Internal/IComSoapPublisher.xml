<Type Name="IComSoapPublisher" FullName="System.EnterpriseServices.Internal.IComSoapPublisher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="11cdfc81d2494fff9c34860681db70645d992251" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48633855" /></Metadata><TypeSignature Language="C#" Value="public interface IComSoapPublisher" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComSoapPublisher" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComSoapPublisher" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComSoapPublisher" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComSoapPublisher" />
  <TypeSignature Language="F#" Value="type IComSoapPublisher = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("d8013eee-730b-45e2-ba24-874b7242c425")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51b32-101">为启用 SOAP 的 COM+ 应用程序发布 COM 接口。</span><span class="sxs-lookup"><span data-stu-id="51b32-101">Publishes COM interfaces for SOAP-enabled COM+ applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-102">实现<xref:System.EnterpriseServices.Internal.IComSoapPublisher>是<xref:System.EnterpriseServices.Internal.Publish>; 请参阅该主题的详细信息。</span><span class="sxs-lookup"><span data-stu-id="51b32-102">The implementation of <xref:System.EnterpriseServices.Internal.IComSoapPublisher> is <xref:System.EnterpriseServices.Internal.Publish>; see that topic for specifics.</span></span>  
  
 <span data-ttu-id="51b32-103"><xref:System.EnterpriseServices.Internal.IComSoapPublisher> 由.NET Framework 在内部使用。</span><span class="sxs-lookup"><span data-stu-id="51b32-103"><xref:System.EnterpriseServices.Internal.IComSoapPublisher> is used internally by the .NET Framework.</span></span> <span data-ttu-id="51b32-104">不需要在代码中直接使用它。</span><span class="sxs-lookup"><span data-stu-id="51b32-104">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateMailBox">
      <MemberSignature Language="C#" Value="public void CreateMailBox (string RootMailServer, string MailBox, out string SmtpName, out string Domain, out string PhysicalPath, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateMailBox(string RootMailServer, string MailBox, [out] string&amp; SmtpName, [out] string&amp; Domain, [out] string&amp; PhysicalPath, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateMailBox (RootMailServer As String, MailBox As String, ByRef SmtpName As String, ByRef Domain As String, ByRef PhysicalPath As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateMailBox(System::String ^ RootMailServer, System::String ^ MailBox, [Runtime::InteropServices::Out] System::String ^ % SmtpName, [Runtime::InteropServices::Out] System::String ^ % Domain, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member CreateMailBox : string * string *  *  *  *  -&gt; unit" Usage="iComSoapPublisher.CreateMailBox (RootMailServer, MailBox, SmtpName, Domain, PhysicalPath, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootMailServer" Type="System.String" />
        <Parameter Name="MailBox" Type="System.String" />
        <Parameter Name="SmtpName" Type="System.String" RefType="out" />
        <Parameter Name="Domain" Type="System.String" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String" RefType="out" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootMailServer"><span data-ttu-id="51b32-105">根邮件服务器的 URL。</span><span class="sxs-lookup"><span data-stu-id="51b32-105">The URL for the root mail server.</span></span></param>
        <param name="MailBox"><span data-ttu-id="51b32-106">要创建的邮箱。</span><span class="sxs-lookup"><span data-stu-id="51b32-106">The mailbox to create.</span></span></param>
        <param name="SmtpName"><span data-ttu-id="51b32-107">此方法返回时，此参数包含该邮箱所在的简单邮件传输协议 (SMTP) 服务器的名称。</span><span class="sxs-lookup"><span data-stu-id="51b32-107">When this method returns, this parameter contains the name of the Simple Mail Transfer Protocol (SMTP) server containing the mailbox.</span></span></param>
        <param name="Domain"><span data-ttu-id="51b32-108">此方法返回时，此参数包含 SMTP 服务器的域。</span><span class="sxs-lookup"><span data-stu-id="51b32-108">When this method returns, this parameter contains the domain of the SMTP server.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="51b32-109">此方法返回时，此参数包含邮箱的文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-109">When this method returns, this parameter contains the file system path for the mailbox.</span></span></param>
        <param name="Error"><span data-ttu-id="51b32-110">此方法返回时，此参数包含错误信息（如果遇到了问题）。</span><span class="sxs-lookup"><span data-stu-id="51b32-110">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="51b32-111">在指定的 URL 处，创建启用 SOAP 的 COM+ 应用程序邮箱。</span><span class="sxs-lookup"><span data-stu-id="51b32-111">Creates a SOAP-enabled COM+ application mailbox at a specified URL.</span></span> <span data-ttu-id="51b32-112">没有完全实现。</span><span class="sxs-lookup"><span data-stu-id="51b32-112">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-113">未完全实现;当前不会创建邮箱。</span><span class="sxs-lookup"><span data-stu-id="51b32-113">Not fully implemented; does not currently create a mailbox.</span></span> <span data-ttu-id="51b32-114">返回的错误消息"COM + SOAP 服务不支持 SMTP 发布。"</span><span class="sxs-lookup"><span data-stu-id="51b32-114">Returns the error message "COM+ SOAP services SMTP publication is not supported."</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-115">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-115">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualRoot">
      <MemberSignature Language="C#" Value="public void CreateVirtualRoot (string Operation, string FullUrl, out string BaseUrl, out string VirtualRoot, out string PhysicalPath, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRoot(string Operation, string FullUrl, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot, [out] string&amp; PhysicalPath, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRoot (Operation As String, FullUrl As String, ByRef BaseUrl As String, ByRef VirtualRoot As String, ByRef PhysicalPath As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateVirtualRoot(System::String ^ Operation, System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRoot : string * string *  *  *  *  -&gt; unit" Usage="iComSoapPublisher.CreateVirtualRoot (Operation, FullUrl, BaseUrl, VirtualRoot, PhysicalPath, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operation" Type="System.String" />
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String" RefType="out" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Operation"><span data-ttu-id="51b32-116">要执行的操作。</span><span class="sxs-lookup"><span data-stu-id="51b32-116">The operation to perform.</span></span></param>
        <param name="FullUrl"><span data-ttu-id="51b32-117">虚拟根目录的完整 URL 地址。</span><span class="sxs-lookup"><span data-stu-id="51b32-117">The complete URL address for the virtual root.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="51b32-118">此方法返回时，此参数包含基 URL 地址。</span><span class="sxs-lookup"><span data-stu-id="51b32-118">When this method returns, this parameter contains the base URL address.</span></span></param>
        <param name="VirtualRoot"><span data-ttu-id="51b32-119">此方法返回时，此参数包含虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="51b32-119">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="51b32-120">此方法返回时，此参数包含虚拟根目录的文件路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-120">When this method returns, this parameter contains the file path for the virtual root.</span></span></param>
        <param name="Error"><span data-ttu-id="51b32-121">此方法返回时，此参数包含错误信息（如果遇到了问题）。</span><span class="sxs-lookup"><span data-stu-id="51b32-121">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="51b32-122">创建启用 SOAP 的 COM+ 应用程序虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="51b32-122">Creates a SOAP-enabled COM+ application virtual root.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-123">建议<xref:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx%2A>而不是使用<xref:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot%2A>。</span><span class="sxs-lookup"><span data-stu-id="51b32-123">It is recommended that <xref:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx%2A> be used instead of <xref:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-124">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-124">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
<span data-ttu-id="51b32-125">或</span><span class="sxs-lookup"><span data-stu-id="51b32-125">-or-</span></span> 
<span data-ttu-id="51b32-126">调用方没有访问域名系统 (DNS) 信息的权限。</span><span class="sxs-lookup"><span data-stu-id="51b32-126">The caller does not have permission to access Domain Name System (DNS) information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51b32-127"><paramref name="FullUrl" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51b32-127"><paramref name="FullUrl" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="51b32-128">解析本地主机名时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="51b32-128">An error is encountered when resolving the local host name.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="51b32-129"><paramref name="FullUrl" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="51b32-129"><paramref name="FullUrl" /> is empty.</span></span>  
  
<span data-ttu-id="51b32-130">或</span><span class="sxs-lookup"><span data-stu-id="51b32-130">-or-</span></span> 
<span data-ttu-id="51b32-131"><paramref name="FullUrl" /> 中指定的方案无效。</span><span class="sxs-lookup"><span data-stu-id="51b32-131">The scheme specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="51b32-132">或</span><span class="sxs-lookup"><span data-stu-id="51b32-132">-or-</span></span> 
 <span data-ttu-id="51b32-133"><paramref name="FullUrl" /> 包含两个以上的连续斜杠。</span><span class="sxs-lookup"><span data-stu-id="51b32-133"><paramref name="FullUrl" /> contains more than two consecutive slashes.</span></span>  
  
<span data-ttu-id="51b32-134">或</span><span class="sxs-lookup"><span data-stu-id="51b32-134">-or-</span></span> 
<span data-ttu-id="51b32-135"><paramref name="FullUrl" /> 中指定的密码无效。</span><span class="sxs-lookup"><span data-stu-id="51b32-135">The password specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="51b32-136">或</span><span class="sxs-lookup"><span data-stu-id="51b32-136">-or-</span></span> 
<span data-ttu-id="51b32-137"><paramref name="FullUrl" /> 中指定的主机名无效。</span><span class="sxs-lookup"><span data-stu-id="51b32-137">The host name specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="51b32-138">或</span><span class="sxs-lookup"><span data-stu-id="51b32-138">-or-</span></span> 
<span data-ttu-id="51b32-139"><paramref name="FullUrl" /> 中指定的文件名无效。</span><span class="sxs-lookup"><span data-stu-id="51b32-139">The file name specified in <paramref name="FullUrl" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteMailBox">
      <MemberSignature Language="C#" Value="public void DeleteMailBox (string RootMailServer, string MailBox, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMailBox(string RootMailServer, string MailBox, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteMailBox (RootMailServer As String, MailBox As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteMailBox(System::String ^ RootMailServer, System::String ^ MailBox, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member DeleteMailBox : string * string *  -&gt; unit" Usage="iComSoapPublisher.DeleteMailBox (RootMailServer, MailBox, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootMailServer" Type="System.String" />
        <Parameter Name="MailBox" Type="System.String" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootMailServer"><span data-ttu-id="51b32-140">根邮件服务器的 URL。</span><span class="sxs-lookup"><span data-stu-id="51b32-140">The URL for the root mail server.</span></span></param>
        <param name="MailBox"><span data-ttu-id="51b32-141">要删除的邮箱。</span><span class="sxs-lookup"><span data-stu-id="51b32-141">The mailbox to delete.</span></span></param>
        <param name="Error"><span data-ttu-id="51b32-142">此方法返回时，此参数包含错误信息（如果遇到了问题）。</span><span class="sxs-lookup"><span data-stu-id="51b32-142">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="51b32-143">删除指定 URL 上启用 SOAP 的 COM+ 应用程序邮箱。</span><span class="sxs-lookup"><span data-stu-id="51b32-143">Deletes a SOAP-enabled COM+ application mailbox at a specified URL.</span></span> <span data-ttu-id="51b32-144">没有完全实现。</span><span class="sxs-lookup"><span data-stu-id="51b32-144">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-145">未完全实现;不会删除邮箱。</span><span class="sxs-lookup"><span data-stu-id="51b32-145">Not fully implemented; does not delete the mailbox.</span></span> <span data-ttu-id="51b32-146">返回的错误消息"COM + SOAP 服务不支持 SMTP 发布。"</span><span class="sxs-lookup"><span data-stu-id="51b32-146">Returns the error message "COM+ SOAP services SMTP publication is not supported."</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-147">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-147">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRoot">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRoot (string RootWebServer, string FullUrl, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRoot(string RootWebServer, string FullUrl, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRoot (RootWebServer As String, FullUrl As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteVirtualRoot(System::String ^ RootWebServer, System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRoot : string * string *  -&gt; unit" Usage="iComSoapPublisher.DeleteVirtualRoot (RootWebServer, FullUrl, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootWebServer" Type="System.String" />
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootWebServer"><span data-ttu-id="51b32-148">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="51b32-148">The root Web server.</span></span></param>
        <param name="FullUrl"><span data-ttu-id="51b32-149">虚拟根目录的完整 URL 地址。</span><span class="sxs-lookup"><span data-stu-id="51b32-149">The complete URL address for the virtual root.</span></span></param>
        <param name="Error"><span data-ttu-id="51b32-150">此方法返回时，此参数包含错误信息（如果遇到了问题）。</span><span class="sxs-lookup"><span data-stu-id="51b32-150">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="51b32-151">删除启用 SOAP 的 COM+ 应用程序虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="51b32-151">Deletes a SOAP-enabled COM+ application virtual root.</span></span> <span data-ttu-id="51b32-152">没有完全实现。</span><span class="sxs-lookup"><span data-stu-id="51b32-152">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-153">有关功能<xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A>尚不可用。</span><span class="sxs-lookup"><span data-stu-id="51b32-153">The functionality for <xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A> is not yet available.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="51b32-154">此方法当前返回且不出错，但不是删除虚拟根目录。</span><span class="sxs-lookup"><span data-stu-id="51b32-154">The method currently returns without an error, but the virtual root is not deleted.</span></span>  
  
 <span data-ttu-id="51b32-155">当功能变为可用时，建议的方法将<xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>。</span><span class="sxs-lookup"><span data-stu-id="51b32-155">When the functionality becomes available, the recommended method will be <xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-156">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-156">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GacInstall">
      <MemberSignature Language="C#" Value="public void GacInstall (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GacInstall(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GacInstall (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GacInstall(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member GacInstall : string -&gt; unit" Usage="iComSoapPublisher.GacInstall AssemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="51b32-157">程序集的文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-157">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="51b32-158">将程序集安装在全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="51b32-158">Installs an assembly in the global assembly cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-159">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-159">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GacRemove">
      <MemberSignature Language="C#" Value="public void GacRemove (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GacRemove(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GacRemove (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GacRemove(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member GacRemove : string -&gt; unit" Usage="iComSoapPublisher.GacRemove AssemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="51b32-160">程序集的文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-160">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="51b32-161">从全局程序集缓存中移除程序集。</span><span class="sxs-lookup"><span data-stu-id="51b32-161">Removes an assembly from the global assembly cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51b32-162"><paramref name="AssemblyPath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51b32-162"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51b32-163"><paramref name="AssemblyPath" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="51b32-163"><paramref name="AssemblyPath" /> is empty.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="51b32-164"><paramref name="AssemblyPath" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="51b32-164"><paramref name="AssemblyPath" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="51b32-165">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="51b32-165">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="51b32-166"><paramref name="AssemblyPath" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="51b32-166"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyNameForCache">
      <MemberSignature Language="C#" Value="public void GetAssemblyNameForCache (string TypeLibPath, out string CachePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetAssemblyNameForCache(string TypeLibPath, [out] string&amp; CachePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAssemblyNameForCache (TypeLibPath As String, ByRef CachePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAssemblyNameForCache(System::String ^ TypeLibPath, [Runtime::InteropServices::Out] System::String ^ % CachePath);" />
      <MemberSignature Language="F#" Value="abstract member GetAssemblyNameForCache : string *  -&gt; unit" Usage="iComSoapPublisher.GetAssemblyNameForCache (TypeLibPath, CachePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TypeLibPath" Type="System.String" />
        <Parameter Name="CachePath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="TypeLibPath"><span data-ttu-id="51b32-167">包含类型库的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-167">The path for the file that contains the typelib.</span></span></param>
        <param name="CachePath"><span data-ttu-id="51b32-168">此方法返回时，此参数包含 SoapCache 目录中的代理程序集的完整路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-168">When this method returns, this parameter contains the full path of the proxy assembly in the SoapCache directory.</span></span></param>
        <summary><span data-ttu-id="51b32-169">返回 SoapCache 目录中生成的强名称签名程序集的完整路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-169">Returns the full path for a strong-named signed generated assembly in the SoapCache directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-170">非托管 COM + 组件以通过.NET 远程处理 SOAP 终结点发布，代理需要生成以向.NET Framework 提供的非托管的组件。</span><span class="sxs-lookup"><span data-stu-id="51b32-170">For an unmanaged COM+ component to be published through .NET remoting as a SOAP endpoint, a proxy needs to be generated to make the unmanaged components available to the .NET Framework.</span></span> <span data-ttu-id="51b32-171">这是通过以编程方式执行与类型库导入程序 (Tlbimp.exe) 相同的步骤[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]工具，用于将非托管的 COM + 类型库转换为代理的元数据程序集。</span><span class="sxs-lookup"><span data-stu-id="51b32-171">This is done by programmatically performing the same steps as Type Library Importer (Tlbimp.exe), the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)] tool that is used to convert unmanaged COM+ type libraries to proxy metadata assemblies.</span></span> <span data-ttu-id="51b32-172">但是，对于通过 SOAP 成功的客户端激活，客户端和服务器计算机必须共享相同的强名称签名的元数据代理服务器。</span><span class="sxs-lookup"><span data-stu-id="51b32-172">For client activation over SOAP to succeed, however, client and server machines must share the same strong-named signed metadata proxies.</span></span> <span data-ttu-id="51b32-173">出于此原因，托管的代理程序集的非托管 COM + 组件，生成时强名称密钥还生成和使用代理程序集进行签名。</span><span class="sxs-lookup"><span data-stu-id="51b32-173">For this reason, when a managed proxy assembly is generated for an unmanaged COM+ component, a strong name key is also generated and used to sign the proxy assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51b32-174"><paramref name="TypeLibPath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51b32-174"><paramref name="TypeLibPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-175">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="51b32-175">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="51b32-176">文件名为空，仅包含空格，或包含无效字符。</span><span class="sxs-lookup"><span data-stu-id="51b32-176">The file name is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="51b32-177">拒绝访问 <paramref name="TypeLibPath" />。</span><span class="sxs-lookup"><span data-stu-id="51b32-177">Access to <paramref name="TypeLibPath" /> is denied.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="51b32-178">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="51b32-178">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="51b32-179"><paramref name="TypeLibPath" /> 在字符串中间包含一个冒号 (:)。</span><span class="sxs-lookup"><span data-stu-id="51b32-179"><paramref name="TypeLibPath" /> contains a colon (:) in the middle of the string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeNameFromProgId">
      <MemberSignature Language="C#" Value="public string GetTypeNameFromProgId (string AssemblyPath, string ProgId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeNameFromProgId(string AssemblyPath, string ProgId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeNameFromProgId (AssemblyPath As String, ProgId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTypeNameFromProgId(System::String ^ AssemblyPath, System::String ^ ProgId);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeNameFromProgId : string * string -&gt; string" Usage="iComSoapPublisher.GetTypeNameFromProgId (AssemblyPath, ProgId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="51b32-180">程序集的文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-180">The file system path for the assembly.</span></span></param>
        <param name="ProgId"><span data-ttu-id="51b32-181">类的编程标识符。</span><span class="sxs-lookup"><span data-stu-id="51b32-181">The programmatic identifier of the class.</span></span></param>
        <summary><span data-ttu-id="51b32-182">在程序集上反射，并返回与 ProgID 匹配的类型名。</span><span class="sxs-lookup"><span data-stu-id="51b32-182">Reflects over an assembly and returns the type name that matches the ProgID.</span></span></summary>
        <returns><span data-ttu-id="51b32-183">与 ProgID 匹配的类型名。</span><span class="sxs-lookup"><span data-stu-id="51b32-183">The type name that matches the ProgID.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-184">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-184">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessClientTlb">
      <MemberSignature Language="C#" Value="public void ProcessClientTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, out string AssemblyName, out string TypeName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessClientTlb(string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, [out] string&amp; AssemblyName, [out] string&amp; TypeName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessClientTlb (ProgId As String, SrcTlbPath As String, PhysicalPath As String, VRoot As String, BaseUrl As String, Mode As String, Transport As String, ByRef AssemblyName As String, ByRef TypeName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessClientTlb(System::String ^ ProgId, System::String ^ SrcTlbPath, System::String ^ PhysicalPath, System::String ^ VRoot, System::String ^ BaseUrl, System::String ^ Mode, System::String ^ Transport, [Runtime::InteropServices::Out] System::String ^ % AssemblyName, [Runtime::InteropServices::Out] System::String ^ % TypeName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member ProcessClientTlb : string * string * string * string * string * string * string *  *  *  -&gt; unit" Usage="iComSoapPublisher.ProcessClientTlb (ProgId, SrcTlbPath, PhysicalPath, VRoot, BaseUrl, Mode, Transport, AssemblyName, TypeName, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="SrcTlbPath" Type="System.String" />
        <Parameter Name="PhysicalPath" Type="System.String" />
        <Parameter Name="VRoot" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
        <Parameter Name="Transport" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" RefType="out" />
        <Parameter Name="TypeName" Type="System.String" RefType="out" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ProgId"><span data-ttu-id="51b32-185">类的编程标识符。</span><span class="sxs-lookup"><span data-stu-id="51b32-185">The programmatic identifier of the class.</span></span></param>
        <param name="SrcTlbPath"><span data-ttu-id="51b32-186">包含类型库的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-186">The path for the file that contains the typelib.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="51b32-187">Web 应用程序目录。</span><span class="sxs-lookup"><span data-stu-id="51b32-187">The Web application directory.</span></span></param>
        <param name="VRoot"><span data-ttu-id="51b32-188">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="51b32-188">The name of the virtual root.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="51b32-189">包含虚拟根目录的基 URL。</span><span class="sxs-lookup"><span data-stu-id="51b32-189">The base URL that contains the virtual root.</span></span></param>
        <param name="Mode"><span data-ttu-id="51b32-190">激活模式。</span><span class="sxs-lookup"><span data-stu-id="51b32-190">The activation mode.</span></span></param>
        <param name="Transport"><span data-ttu-id="51b32-191">未使用。</span><span class="sxs-lookup"><span data-stu-id="51b32-191">Not used.</span></span> <span data-ttu-id="51b32-192">为此参数指定 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51b32-192">Specify <see langword="null" /> for this parameter.</span></span></param>
        <param name="AssemblyName"><span data-ttu-id="51b32-193">此方法返回时，此参数包含程序集的显示名称。</span><span class="sxs-lookup"><span data-stu-id="51b32-193">When this method returns, this parameter contains the display name of the assembly.</span></span></param>
        <param name="TypeName"><span data-ttu-id="51b32-194">此方法返回时，此参数包含程序集的完全限定类型名称。</span><span class="sxs-lookup"><span data-stu-id="51b32-194">When this method returns, this parameter contains the fully-qualified type name of the assembly.</span></span></param>
        <param name="Error"><span data-ttu-id="51b32-195">此方法返回时，此参数包含错误信息（如果遇到了问题）。</span><span class="sxs-lookup"><span data-stu-id="51b32-195">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="51b32-196">处理客户端类型库，在客户端上创建配置文件。</span><span class="sxs-lookup"><span data-stu-id="51b32-196">Processes a client type library, creating a configuration file on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-197">此方法上的客户端代理导入用于生成远程处理配置文件。</span><span class="sxs-lookup"><span data-stu-id="51b32-197">This method is used on a client proxy import to generate a remoting configuration file.</span></span>  
  
 <span data-ttu-id="51b32-198">在实现中，如果`Mode`参数是"wellknownobject"或空字符串 ("")，则假定为已知对象;否则，假定客户端激活。</span><span class="sxs-lookup"><span data-stu-id="51b32-198">In the implementation, if the `Mode` parameter is either "wellknownobject" or an empty string (""), a well-known object is assumed; otherwise, client activation is assumed.</span></span>  
  
 <span data-ttu-id="51b32-199">建议<xref:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx%2A>而不是使用<xref:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb%2A>。</span><span class="sxs-lookup"><span data-stu-id="51b32-199">It is recommended that <xref:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx%2A> be used instead of <xref:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-200">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-200">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessServerTlb">
      <MemberSignature Language="C#" Value="public void ProcessServerTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, out string AssemblyName, out string TypeName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessServerTlb(string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, [out] string&amp; AssemblyName, [out] string&amp; TypeName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessServerTlb (ProgId As String, SrcTlbPath As String, PhysicalPath As String, Operation As String, ByRef AssemblyName As String, ByRef TypeName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessServerTlb(System::String ^ ProgId, System::String ^ SrcTlbPath, System::String ^ PhysicalPath, System::String ^ Operation, [Runtime::InteropServices::Out] System::String ^ % AssemblyName, [Runtime::InteropServices::Out] System::String ^ % TypeName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member ProcessServerTlb : string * string * string * string *  *  *  -&gt; unit" Usage="iComSoapPublisher.ProcessServerTlb (ProgId, SrcTlbPath, PhysicalPath, Operation, AssemblyName, TypeName, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="SrcTlbPath" Type="System.String" />
        <Parameter Name="PhysicalPath" Type="System.String" />
        <Parameter Name="Operation" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" RefType="out" />
        <Parameter Name="TypeName" Type="System.String" RefType="out" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ProgId"><span data-ttu-id="51b32-201">类的编程标识符。</span><span class="sxs-lookup"><span data-stu-id="51b32-201">The programmatic identifier of the class.</span></span></param>
        <param name="SrcTlbPath"><span data-ttu-id="51b32-202">包含类型库的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-202">The path for the file that contains the type library.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="51b32-203">Web 应用程序目录。</span><span class="sxs-lookup"><span data-stu-id="51b32-203">The Web application directory.</span></span></param>
        <param name="Operation"><span data-ttu-id="51b32-204">要执行的操作。</span><span class="sxs-lookup"><span data-stu-id="51b32-204">The operation to perform.</span></span></param>
        <param name="AssemblyName"><span data-ttu-id="51b32-205">此方法返回时，此参数包含程序集的显示名称。</span><span class="sxs-lookup"><span data-stu-id="51b32-205">When this method returns, this parameter contains the display name of the assembly.</span></span></param>
        <param name="TypeName"><span data-ttu-id="51b32-206">此方法返回时，此参数包含程序集的完全限定类型名称。</span><span class="sxs-lookup"><span data-stu-id="51b32-206">When this method returns, this parameter contains the fully-qualified type name of the assembly.</span></span></param>
        <param name="Error"><span data-ttu-id="51b32-207">此方法返回时，此参数包含错误信息（如果遇到了问题）。</span><span class="sxs-lookup"><span data-stu-id="51b32-207">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="51b32-208">处理服务器类型库，从而向 Web.config 和 Default.disco 文件中添加或删除组件项。</span><span class="sxs-lookup"><span data-stu-id="51b32-208">Processes a server type library, either adding or deleting component entries to the Web.config and Default.disco files.</span></span> <span data-ttu-id="51b32-209">必要时生成代理。</span><span class="sxs-lookup"><span data-stu-id="51b32-209">Generates a proxy if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-210">生成 COM + 组件的 Web.config 和 Default.disco 文件条目。</span><span class="sxs-lookup"><span data-stu-id="51b32-210">Generates Web.config and Default.disco file entries for COM+ components.</span></span> <span data-ttu-id="51b32-211">必要时生成代理。</span><span class="sxs-lookup"><span data-stu-id="51b32-211">Generates a proxy if necessary.</span></span>  
  
 <span data-ttu-id="51b32-212">建议<xref:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb%2A>并<xref:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb%2A>而不是使用<xref:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb%2A>。</span><span class="sxs-lookup"><span data-stu-id="51b32-212">It is recommended that <xref:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb%2A> and <xref:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb%2A> be used instead of <xref:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-213">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-213">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="51b32-214"><paramref name="SrcTlbPath" /> 参数引用了 scrobj.dll；因此，不支持通过 SOAP 发布脚本组件。</span><span class="sxs-lookup"><span data-stu-id="51b32-214">The <paramref name="SrcTlbPath" /> parameter referenced scrobj.dll; therefore, SOAP publication of script components is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterAssembly">
      <MemberSignature Language="C#" Value="public void RegisterAssembly (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAssembly(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAssembly (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterAssembly(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member RegisterAssembly : string -&gt; unit" Usage="iComSoapPublisher.RegisterAssembly AssemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="51b32-215">程序集的文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-215">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="51b32-216">为 COM 互操作注册程序集。</span><span class="sxs-lookup"><span data-stu-id="51b32-216">Registers an assembly for COM interop.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-217">实现<xref:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly%2A>使用程序集注册工具 (Regasm.exe) 来注册程序集中的可创建类。</span><span class="sxs-lookup"><span data-stu-id="51b32-217">The implementation of <xref:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly%2A> uses the Assembly Registration tool (Regasm.exe) to register the creatable classes in the assembly.</span></span> <span data-ttu-id="51b32-218">有关详细信息，请参阅[Regasm.exe （程序集注册工具）](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="51b32-218">For more information, see [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException"><span data-ttu-id="51b32-219">输入程序集没有强名称。</span><span class="sxs-lookup"><span data-stu-id="51b32-219">The input assembly does not have a strong name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-220">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-220">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
<span data-ttu-id="51b32-221">或</span><span class="sxs-lookup"><span data-stu-id="51b32-221">-or-</span></span> 
<span data-ttu-id="51b32-222">在没有所需 <see cref="T:System.Net.WebPermission" /> 的情况下，指定了不以“file://”开始的基本代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-222">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51b32-223"><paramref name="AssemblyPath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51b32-223"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="51b32-224">找不到 <paramref name="AssemblyPath" /> 或者未指定文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="51b32-224"><paramref name="AssemblyPath" /> is not found, or a file name extension is not specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="51b32-225"><paramref name="AssemblyPath" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="51b32-225"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="51b32-226">用两个不同的证据将一个程序集或模块加载了两次，或程序集名称超过系统指定的最大长度。</span><span class="sxs-lookup"><span data-stu-id="51b32-226">An assembly or module was loaded twice with two different evidences, or the assembly name exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51b32-227">使用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法不是 <see langword="static" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="51b32-227">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not <see langword="static" />.</span></span>  
  
<span data-ttu-id="51b32-228">或</span><span class="sxs-lookup"><span data-stu-id="51b32-228">-or-</span></span> 
<span data-ttu-id="51b32-229">在层次结构的给定级别有多个用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法。</span><span class="sxs-lookup"><span data-stu-id="51b32-229">There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.</span></span>  
  
<span data-ttu-id="51b32-230">或</span><span class="sxs-lookup"><span data-stu-id="51b32-230">-or-</span></span> 
<span data-ttu-id="51b32-231">用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法的签名无效。</span><span class="sxs-lookup"><span data-stu-id="51b32-231">The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterAssembly">
      <MemberSignature Language="C#" Value="public void UnRegisterAssembly (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterAssembly(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterAssembly (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnRegisterAssembly(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterAssembly : string -&gt; unit" Usage="iComSoapPublisher.UnRegisterAssembly AssemblyPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="51b32-232">程序集的文件系统路径。</span><span class="sxs-lookup"><span data-stu-id="51b32-232">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="51b32-233">注销 COM 互操作程序集。</span><span class="sxs-lookup"><span data-stu-id="51b32-233">Unregisters a COM interop assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b32-234">实现<xref:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly%2A>使用 Regasm.exe 来注销的程序集中的可创建类。</span><span class="sxs-lookup"><span data-stu-id="51b32-234">The implementation of <xref:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly%2A> uses Regasm.exe to unregister the creatable classes in the assembly.</span></span> <span data-ttu-id="51b32-235">有关详细信息，请参阅[Regasm.exe （程序集注册工具）](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="51b32-235">For more information, see [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="51b32-236">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-236">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
<span data-ttu-id="51b32-237">或</span><span class="sxs-lookup"><span data-stu-id="51b32-237">-or-</span></span> 
<span data-ttu-id="51b32-238">在没有所需 <see cref="T:System.Net.WebPermission" /> 的情况下，指定了不以“file://”开始的基本代码。</span><span class="sxs-lookup"><span data-stu-id="51b32-238">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51b32-239"><paramref name="AssemblyPath" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51b32-239"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="51b32-240">找不到 <paramref name="AssemblyPath" /> 或者未指定文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="51b32-240"><paramref name="AssemblyPath" /> is not found, or a file name extension is not specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="51b32-241"><paramref name="AssemblyPath" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="51b32-241"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="51b32-242">用两个不同的证据将一个程序集或模块加载了两次，或程序集名称超过系统指定的最大长度。</span><span class="sxs-lookup"><span data-stu-id="51b32-242">An assembly or module was loaded twice with two different evidences, or the assembly name exceeds the syste-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51b32-243">使用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法不是 <see langword="static" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="51b32-243">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not <see langword="static" />.</span></span>  
  
<span data-ttu-id="51b32-244">或</span><span class="sxs-lookup"><span data-stu-id="51b32-244">-or-</span></span> 
<span data-ttu-id="51b32-245">在层次结构的给定级别有多个用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法。</span><span class="sxs-lookup"><span data-stu-id="51b32-245">There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.</span></span>  
  
<span data-ttu-id="51b32-246">或</span><span class="sxs-lookup"><span data-stu-id="51b32-246">-or-</span></span> 
<span data-ttu-id="51b32-247">用 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 标记的方法的签名无效。</span><span class="sxs-lookup"><span data-stu-id="51b32-247">The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>