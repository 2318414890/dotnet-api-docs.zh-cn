<Type Name="BaseControlArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="899df63c31493793f8ab9a9a73c79dd418f9a419" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53504592" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BaseControlArray extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseControlArray&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseControlArray abstract : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type BaseControlArray = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f3c4d-101">实现从 Visual Basic 6.0 升级的应用程序中控件数组的通用基本功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-101">Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-102">您通常不继承自`BaseControlArray`。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-102">You do not typically inherit from `BaseControlArray`.</span></span> <span data-ttu-id="f3c4d-103">若要创建你自己的控件数组，从一个中的控件数组类继承`Microsoft.VisualBasic.Compatibility.VB6`命名空间。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-103">To create your own control array, inherit from one of the control array classes in the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-104"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-104">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-105">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-105">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-106">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-106">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f3c4d-107">初始化 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3c4d-108">初始化 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-109"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-109">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f3c4d-110">因为该类通常不用于创建类的实例，此构造函数通常不直接调用，但而通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-110">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-111"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-111">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-112">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-112">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-113">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-113">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container"><span data-ttu-id="f3c4d-114">将在其中承载控件数组的 <see cref="T:System.ComponentModel.IContainer" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-114">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</span></span></param>
        <summary><span data-ttu-id="f3c4d-115">初始化 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> 类的新实例，并且可以选择指定一个容器。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-115">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-116"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-116">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f3c4d-117">因为该类通常不用于创建类的实例，此构造函数通常不直接调用，但而通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-117">Because this class is not typically used to create an instance of the class, this constructor is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-118"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-118">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-119">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-119">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-120">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-120">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCanExtend">
      <MemberSignature Language="C#" Value="protected bool BaseCanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseCanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseCanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseCanExtend(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.BaseCanExtend : obj -&gt; bool" Usage="baseControlArray.BaseCanExtend target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f3c4d-121">要测试的 <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-121">The <see cref="T:System.Windows.Forms.Control" /> to test.</span></span></param>
        <summary><span data-ttu-id="f3c4d-122">获取一个值，该值指示控件是否为控件数组的成员。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-122">Gets a value that indicates whether a control is a member of a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-123">如果控件是控件数组的一个成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-123"><see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-124"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-124">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f3c4d-125">因为该类通常不用于创建类的实例，所以，通常不直接调用此 `Protected` 方法，而是通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-125">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-126"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-126">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-127">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-127">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-128">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-128">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f3c4d-129">派生的类应确保<paramref name="target" />是控件数组的正确类型。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-129">Derived classes should make sure that <paramref name="target" /> is of the correct type for the control array.</span></span>  
  
<span data-ttu-id="f3c4d-130">当您重写<see langword="BaseCanExtend" />在派生类中，不要调用<see langword="BaseCanExtend" />基类的方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-130">When you override <see langword="BaseCanExtend" /> in a derived class, do not call the <see langword="BaseCanExtend" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetIndex">
      <MemberSignature Language="C#" Value="protected short BaseGetIndex (object ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance int16 BaseGetIndex(object ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetIndex (ctl As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; short BaseGetIndex(System::Object ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.BaseGetIndex : obj -&gt; int16" Usage="baseControlArray.BaseGetIndex ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="f3c4d-131">希望检索其索引的 <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-131">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="f3c4d-132">获取控件数组中控件的索引。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-132">Gets the index of a control in a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-133">一个 <see langword="Short" /> 整数，表示控件数组中控件的索引。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-133">A <see langword="Short" /> integer representing the index of the control in the control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-134"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-134">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f3c4d-135">因为该类通常不用于创建类的实例，所以，通常不直接调用此 `Protected` 方法，而是通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-135">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-136"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-136">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-137">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-137">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-138">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-138">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f3c4d-139">当您重写<see langword="BaseGetIndex" />在派生类中，不要调用<see langword="BaseGetIndex" />基类的方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-139">When you override <see langword="BaseGetIndex" /> in a derived class, do not call the <see langword="BaseGetIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetItem">
      <MemberSignature Language="C#" Value="protected object BaseGetItem (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance object BaseGetItem(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetItem (Index As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGetItem(short Index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetItem : int16 -&gt; obj" Usage="baseControlArray.BaseGetItem Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="f3c4d-140">一个整数，表示控件数组中控件的索引。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-140">An integer that represents the index of the control in the control array.</span></span></param>
        <summary><span data-ttu-id="f3c4d-141">获取控件数组中指定索引的控件。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-141">Gets the control for a specified index in a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-142">指定 <paramref name="Index" /> 处的 <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-142">The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-143"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-143">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f3c4d-144">因为该类通常不用于创建类的实例，所以，通常不直接调用此 `Protected` 方法，而是通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-144">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-145"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-145">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-146">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-146">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-147">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-147">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f3c4d-148">当您重写<see langword="BaseGetItem" />在派生类中，不要调用<see langword="BaseGetItem" />基类的方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-148">When you override <see langword="BaseGetItem" /> in a derived class, do not call the <see langword="BaseGetItem" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseResetIndex">
      <MemberSignature Language="C#" Value="protected void BaseResetIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseResetIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseResetIndex (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseResetIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseResetIndex : obj -&gt; unit" Usage="baseControlArray.BaseResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f3c4d-149"><see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-149">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="f3c4d-150">在 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> 类中不受支持。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-150">Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-151">不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-151">This method is not supported.</span></span>  
  
 <span data-ttu-id="f3c4d-152"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-152">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> -  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-153"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-153">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-154">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-154">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-155">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-155">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSetIndex">
      <MemberSignature Language="C#" Value="protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseSetIndex(object ctl, int16 Index, bool fIsDynamic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSetIndex (ctl As Object, Index As Short, Optional fIsDynamic As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.BaseSetIndex : obj * int16 * bool -&gt; unit" Usage="baseControlArray.BaseSetIndex (ctl, Index, fIsDynamic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
        <Parameter Name="Index" Type="System.Int16" />
        <Parameter Name="fIsDynamic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="f3c4d-156">希望设置其索引的 <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-156">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</span></span></param>
        <param name="Index"><span data-ttu-id="f3c4d-157">一个 <see langword="Short" /> 整数，表示控件的索引。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-157">A <see langword="Short" /> integer that represents the index for the control.</span></span></param>
        <param name="fIsDynamic"><span data-ttu-id="f3c4d-158">可选。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-158">Optional.</span></span> <span data-ttu-id="f3c4d-159">一个 <see langword="Boolean" />，指定是在设计时 (<see langword="false" />) 创建控件还是在运行时 (<see langword="true" />) 创建控件。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-159">A <see langword="Boolean" /> specifying whether the control was created at design time (<see langword="false" />) or at run time (<see langword="true" />).</span></span></param>
        <summary><span data-ttu-id="f3c4d-160">设置控件数组中控件的索引。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-160">Sets the index for a control in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-161"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-161">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f3c4d-162">因为该类通常不用于创建类的实例，所以，通常不直接调用此 `Protected` 方法，而是通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-162">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-163"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-163">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-164">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-164">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-165">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-165">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f3c4d-166">当您重写<see langword="BaseSetIndex" />在派生类中，不要调用<see langword="BaseSetIndex" />基类的方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-166">When you override <see langword="BaseSetIndex" /> in a derived class, do not call the <see langword="BaseSetIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseShouldSerializeIndex">
      <MemberSignature Language="C#" Value="protected bool BaseShouldSerializeIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseShouldSerializeIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseShouldSerializeIndex (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseShouldSerializeIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseShouldSerializeIndex : obj -&gt; bool" Usage="baseControlArray.BaseShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f3c4d-167"><see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-167">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="f3c4d-168">返回一个值，该值指示控件是否为控件数组的成员。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-168">Returns a value that indicates whether a control is a member of a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-169">如果控件是控件数组的一个成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-169"><see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-170"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-170">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f3c4d-171">此类不通常用于创建类的实例，因为这`Protected`方法通常不直接调用，但而通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-171">Because this class is not typically used to create an instance of the class, this `Protected` method is usually  not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-172"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-172">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-173">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-173">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-174">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-174">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f3c4d-175">当您重写<see langword="BaseShouldSerialiazeIndex" />在派生类中，不要调用<see langword="BaseShouldSerialiazeIndex" />基类的方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-175">When you override <see langword="BaseShouldSerialiazeIndex" /> in a derived class, do not call the <see langword="BaseShouldSerialiazeIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="components">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.IContainer components;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.ComponentModel.IContainer components" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberSignature Language="VB.NET" Value="Protected components As IContainer " />
      <MemberSignature Language="C++ CLI" Value="protected: System::ComponentModel::IContainer ^ components;" />
      <MemberSignature Language="F#" Value="val mutable components : System.ComponentModel.IContainer" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3c4d-176">存储控件数组的容器。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-176">Stores the container for a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-177"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-177">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-178"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-178">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-179">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-179">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-180">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-180">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controlAddedAtDesignTime">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controlAddedAtDesignTime;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controlAddedAtDesignTime" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberSignature Language="VB.NET" Value="Protected controlAddedAtDesignTime As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controlAddedAtDesignTime;" />
      <MemberSignature Language="F#" Value="val mutable controlAddedAtDesignTime : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3c4d-181">存储值以跟踪是在设计时还是在运行时创建控件数组中的控件。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-181">Stores values to track whether a control in a control array was created at design time or at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-182"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-182">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-183"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-183">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-184">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-184">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-185">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-185">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controls">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controls;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controls" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberSignature Language="VB.NET" Value="Protected controls As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controls;" />
      <MemberSignature Language="F#" Value="val mutable controls : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3c4d-186">存储表示控件数组中的控件的值。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-186">Stores values that represent the controls in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-187"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-187">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-188"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-188">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-189">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-189">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-190">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-190">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public short Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public Function Count () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short Count();" />
      <MemberSignature Language="F#" Value="member this.Count : unit -&gt; int16" Usage="baseControlArray.Count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3c4d-191">返回控件数组中的控件数。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-191">Returns the number of controls in a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-192">一个包含控件数的 Short。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-192">A Short that contains the number of controls.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-193">可以使用此属性在[为...下一条语句](~/docs/visual-basic/language-reference/statements/for-next-statement.md)控件数组中执行控件上的操作。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-193">You can use this property in a [For...Next Statement](~/docs/visual-basic/language-reference/statements/for-next-statement.md) to perform an operation on the controls in a control array.</span></span>  
  
 <span data-ttu-id="f3c4d-194"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-194">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-195"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-195">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-196">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-196">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-197">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-197">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="baseControlArray.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f3c4d-198">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-198"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f3c4d-199">释放控件数组中控件使用的非托管资源，还可以选择释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-199">Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-200">调用此方法由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-200">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f3c4d-201">`Dispose()` 调用受保护`Dispose(Boolean)`方法释放参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-201">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="f3c4d-202"><xref:System.Object.Finalize%2A> 调用`Dispose`释放参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-202"><xref:System.Object.Finalize%2A> invokes `Dispose` with the disposing parameter set to `false`.</span></span>  
  
 <span data-ttu-id="f3c4d-203">当处置参数为`true`，此方法释放此控件引用任何托管对象所持有的所有资源。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-203">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this control references.</span></span> <span data-ttu-id="f3c4d-204">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-204">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f3c4d-205">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-205">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="f3c4d-206">当您重写<see langword="Dispose(Boolean)" />，请确保不要引用已经释放的早期调用中的对象<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-206">When you override <see langword="Dispose(Boolean)" />, make sure not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="f3c4d-207">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-207">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span> <span data-ttu-id="f3c4d-208">有关详细信息<see langword="Dispose" />并<see cref="M:System.Object.Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-208">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="fIsEndInitCalled">
      <MemberSignature Language="C#" Value="protected bool fIsEndInitCalled;" />
      <MemberSignature Language="ILAsm" Value=".field family bool fIsEndInitCalled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberSignature Language="VB.NET" Value="Protected fIsEndInitCalled As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected: bool fIsEndInitCalled;" />
      <MemberSignature Language="F#" Value="val mutable fIsEndInitCalled : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3c4d-209">存储一个值，该值指示控件数组容器的初始化代码是否已经执行完毕。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-209">Stores a value indicating whether the initialization code for a control array's container has finished executing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-210"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-210">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-211"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-211">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-212">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-212">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-213">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-213">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected abstract Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="abstract member GetControlInstanceType : unit -&gt; Type" Usage="baseControlArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3c4d-214">返回控件数组中控件的类型。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-214">Returns the type of a control in a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-215">必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-215">This method must be overridden.</span></span>  
  
<span data-ttu-id="f3c4d-216"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-216">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="f3c4d-217">因为该类通常不用于创建类的实例，所以，通常不直接调用此 <see langword="Protected" /> 方法，而是通过派生类调用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-217">Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="f3c4d-218"><see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-218">Functions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-219">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-219">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-220">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-220">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
</para></block></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f3c4d-221">当您重写<see langword="GetControlInstanceType" />在派生类中，不要调用<see langword="GetControlInstanceType" />基类的方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-221">When you override <see langword="GetControlInstanceType" /> in a derived class, do not call the <see langword="GetControlInstanceType" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="baseControlArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3c4d-222">返回一个对枚举数对象的引用，该对象用于循环访问控件数组。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-222">Returns a reference to an enumerator object, which is used to iterate over a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-223">一个 <see cref="T:System.Collections.IEnumerator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-223">A <see cref="T:System.Collections.IEnumerator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-224"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-224">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-225"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-225">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-226">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-226">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-227">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-227">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected abstract void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member HookUpControlEvents : obj -&gt; unit" Usage="baseControlArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f3c4d-228"><see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-228">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="f3c4d-229">为控件数组中的控件添加事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-229">Adds event handlers for a control in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-230">必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-230">This method must be overridden.</span></span>  
  
 <span data-ttu-id="f3c4d-231"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-231">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-232"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-232">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-233">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-233">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-234">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-234">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f3c4d-235">当您重写<see langword="HookUpControlEvents" />在派生类中，不要调用<see langword="HookUpControlEvents" />基类的方法。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-235">When you override <see langword="HookUpControlEvents" /> in a derived class, do not call the <see langword="HookUpControlEvents" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="indices">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable indices;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable indices" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberSignature Language="VB.NET" Value="Protected indices As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ indices;" />
      <MemberSignature Language="F#" Value="val mutable indices : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3c4d-236">存储控件数组的索引。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-236">Stores the indices for a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-237"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-237">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-238"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-238">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-239">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-239">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-240">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-240">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public short LBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 LBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound" />
      <MemberSignature Language="VB.NET" Value="Public Function LBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short LBound();" />
      <MemberSignature Language="F#" Value="member this.LBound : unit -&gt; int16" Usage="baseControlArray.LBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3c4d-241">返回的 <see langword="Short" /> 包含控件数组的最小可用下标。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-241">Returns a <see langword="Short" /> that contains the smallest available subscript for a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-242">一个 <see langword="Short" />，包含控件数组的下限。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-242">A <see langword="Short" /> that contains the lower bounds of a control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-243">`LBound`函数用于处理<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A>函数来确定控件数组的大小。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-243">The `LBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="f3c4d-244"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-244">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-245"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-245">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-246">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-246">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-247">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-247">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Load(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(short Index);" />
      <MemberSignature Language="F#" Value="member this.Load : int16 -&gt; unit" Usage="baseControlArray.Load Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="f3c4d-248">一个 <see langword="Short" />，表示新控件的索引。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-248">A <see langword="Short" /> that represents the index of the new control.</span></span></param>
        <summary><span data-ttu-id="f3c4d-249">创建控件数组中的新元素。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-249">Creates a new element in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-250">此方法等效于 Visual Basic 6.0`Load`用于动态创建新的控件数组元素的函数。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-250">This method is the equivalent of the Visual Basic 6.0 `Load` function for dynamically creating a new control array element.</span></span>  
  
 <span data-ttu-id="f3c4d-251"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-251">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-252"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-252">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-253">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-253">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-254">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-254">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit" ExplicitInterfaceMemberName="BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3c4d-255">开始控件的初始化。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-255">Begins the initialization of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-256">设计环境通常使用此方法开始初始化在窗体上使用或由另一个组件使用的组件。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-256">Design environments typically use this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="f3c4d-257"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit>方法结束初始化。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-257">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> method ends the initialization.</span></span> <span data-ttu-id="f3c4d-258">使用`BeginInit`和<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit>方法可以防止该控件完全初始化之前使用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-258">Using the `BeginInit` and <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="f3c4d-259">初始化发生在运行时。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-259">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-260"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-260">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-261">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-261">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-262">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-262">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit" ExplicitInterfaceMemberName="EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3c4d-263">结束控件的初始化。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-263">Ends the initialization of a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-264">设计环境通常使用此方法完成初始化在窗体上使用或由另一个组件使用的组件。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-264">Design environments typically use this method to finish the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="f3c4d-265">`EndInit`方法结束初始化。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-265">The `EndInit` method ends the initialization.</span></span> <span data-ttu-id="f3c4d-266">使用<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A>和`EndInit`方法可以防止该控件完全初始化之前使用。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-266">Using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A> and `EndInit` methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="f3c4d-267">初始化发生在运行时。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-267">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-268"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-268">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-269">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-269">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-270">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-270">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public short UBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 UBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound" />
      <MemberSignature Language="VB.NET" Value="Public Function UBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short UBound();" />
      <MemberSignature Language="F#" Value="member this.UBound : unit -&gt; int16" Usage="baseControlArray.UBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3c4d-271">返回的 <see langword="Short" /> 包含控件数组的最大可用下标。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-271">Returns a <see langword="Short" /> that contains the largest available subscript for a control array.</span></span></summary>
        <returns><span data-ttu-id="f3c4d-272">一个 <see langword="Short" />，包含控件数组的上限。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-272">A <see langword="Short" /> that contains the upper bounds of a control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-273">`UBound`函数用于处理<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A>函数来确定控件数组的大小。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-273">The `UBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="f3c4d-274"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>类是在从 Visual Basic 6.0 升级的应用程序中使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-274">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-275"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-275">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-276">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-276">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-277">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-277">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Unload(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(short Index);" />
      <MemberSignature Language="F#" Value="member this.Unload : int16 -&gt; unit" Usage="baseControlArray.Unload Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="f3c4d-278">一个 <see langword="Short" />，表示要移除的控件的索引。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-278">A <see langword="Short" /> that represents the index of the control to remove.</span></span></param>
        <summary><span data-ttu-id="f3c4d-279">从控件数组中移除控件。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-279">Removes a control from a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3c4d-280">此方法等效于 Visual Basic 6.0`Unload`动态删除控件的数组元素的函数。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-280">This method is the equivalent of the Visual Basic 6.0 `Unload` function for dynamically removing a control array element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-281">通过使用动态添加的控件<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>方法可以从控件数组中移除。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-281">Only controls that were added dynamically by using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method can be removed from the control array.</span></span>  
  
 <span data-ttu-id="f3c4d-282"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> 类是从 Visual Basic 6.0 升级的应用程序中所使用的所有控件数组的基类。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-282">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3c4d-283"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象用于工具从 Visual Basic 6.0 升级到 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-283">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="f3c4d-284">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-284">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="f3c4d-285">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="f3c4d-285">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>