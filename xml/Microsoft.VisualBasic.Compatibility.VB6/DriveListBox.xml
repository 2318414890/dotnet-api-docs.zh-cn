<Type Name="DriveListBox" FullName="Microsoft.VisualBasic.Compatibility.VB6.DriveListBox">
  <TypeSignature Language="C#" Value="public class DriveListBox : System.Windows.Forms.ComboBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DriveListBox extends System.Windows.Forms.ComboBox" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class DriveListBox&#xA;Inherits ComboBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class DriveListBox : System::Windows::Forms::ComboBox" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ComboBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(Microsoft.VisualBasic.Compatibility.VB6.CompatibilityComboBoxDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="38750-101">使用户能够在运行时选择有效的磁盘驱动器。</span><span class="sxs-lookup"><span data-stu-id="38750-101">Enables a user to select a valid disk drive at run time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-102">此控件用于在用户的系统中显示的所有有效的驱动器列表。</span><span class="sxs-lookup"><span data-stu-id="38750-102">Use this control to display a list of all the valid drives in a user's system.</span></span> <span data-ttu-id="38750-103">你可以创建使用户能够从任何可用的驱动器中的磁盘上的文件的列表中打开文件的对话框。</span><span class="sxs-lookup"><span data-stu-id="38750-103">You can create dialog boxes that enable the user to open a file from a list of files on a disk in any available drive.</span></span>  
  
 <span data-ttu-id="38750-104">如果还显示<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox>和<xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox>控件，你可以编写代码以将它们与同步`DriveListBox`控件并与每个其他。</span><span class="sxs-lookup"><span data-stu-id="38750-104">If you also display the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> and <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> controls, you can write code to synchronize them with the `DriveListBox` control and with each other.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-105">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-105">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-106">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-106">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-107">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-107">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DriveListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DriveListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38750-108">初始化 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="38750-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-109">A`DriveListBox`控件使用户能够在运行时选择有效的磁盘驱动器。</span><span class="sxs-lookup"><span data-stu-id="38750-109">A `DriveListBox` control enables a user to select a valid disk drive at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-110">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-110">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-111">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-111">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-112">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-112">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-113">获取或设置 <see cref="T:System.Windows.Forms.ComboBox" /> 的数据源。</span><span class="sxs-lookup"><span data-stu-id="38750-113">Gets or sets the data source for a <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="38750-114">一个实现 <see cref="T:System.Collections.IList" /> 或 <see cref="T:System.ComponentModel.IListSource" /> 接口的对象，如 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="38750-114">An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Array" />.</span></span> <span data-ttu-id="38750-115">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="38750-115">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-116">此属性不应设置为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件; 它提供，仅因为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件继承自<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-116">This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control inherits from <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-117">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-117">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-118">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-118">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-119">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-119">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMember">
      <MemberSignature Language="C#" Value="public string DisplayMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DisplayMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-120">获取或设置要为此 <see cref="T:System.Windows.Forms.ListControl" /> 显示的属性。</span><span class="sxs-lookup"><span data-stu-id="38750-120">Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl" />.</span></span></summary>
        <value><span data-ttu-id="38750-121">一个 <see langword="String" />，表示对象属性的名称并且包含在 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" /> 属性指定的集合中。</span><span class="sxs-lookup"><span data-stu-id="38750-121">A <see langword="String" /> that represents the name of an object property and is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" /> property.</span></span> <span data-ttu-id="38750-122">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="38750-122">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-123">此属性不应设置为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件; 它提供，仅因为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件继承自<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-123">This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control inherits from <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-124">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-124">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-125">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-125">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-126">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-126">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="38750-127">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38750-127"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="38750-128">释放 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 控件使用的非托管资源，还可以选择释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="38750-128">Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> control and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-129">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38750-129">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="38750-130">`Dispose()` 调用受保护`Dispose(Boolean)`方法释放参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="38750-130">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="38750-131"><xref:System.Object.Finalize%2A> 调用`Dispose`释放参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="38750-131"><xref:System.Object.Finalize%2A> invokes `Dispose` with the disposing parameter set to `false`.</span></span>  
  
 <span data-ttu-id="38750-132">当处置参数是`true`，此方法释放由该控件引用任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="38750-132">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this control references.</span></span> <span data-ttu-id="38750-133">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="38750-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-134">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-134">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-135">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-135">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-136">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-136">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="38750-137"><see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="38750-137"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="38750-138">当你重写<see langword="Dispose(Boolean)" />，请确保不以引用已释放的以前调用中的对象<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="38750-138">When you override <see langword="Dispose(Boolean)" />, make sure not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="38750-139">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="38750-139">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span> <span data-ttu-id="38750-140">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="38750-140">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawMode DrawMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-141">获取或设置 <see cref="T:System.Windows.Forms.ComboBox" /> 的绘制模式。</span><span class="sxs-lookup"><span data-stu-id="38750-141">Gets or sets the drawing mode for a <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="38750-142">一个表示控件项绘制模式的 <see cref="P:System.Windows.Forms.ComboBox.DrawMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="38750-142">One of the <see cref="P:System.Windows.Forms.ComboBox.DrawMode" /> values that represent the mode for drawing the items of the control.</span></span> <span data-ttu-id="38750-143">默认值为 <see cref="F:System.Windows.Forms.DrawMode.Normal" />。</span><span class="sxs-lookup"><span data-stu-id="38750-143">The default is <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-144">此属性不应设置为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件; 它提供，仅因为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件继承自<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-144">This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control inherits from <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-145">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-145">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-146">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-146">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-147">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-147">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drive">
      <MemberSignature Language="C#" Value="public string Drive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Drive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive" />
      <MemberSignature Language="VB.NET" Value="Public Property Drive As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Drive { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-148">运行时获取或设置选定的驱动器。</span><span class="sxs-lookup"><span data-stu-id="38750-148">Gets or sets the selected drive at run time.</span></span></summary>
        <value><span data-ttu-id="38750-149">一个指定选定驱动器的 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="38750-149">A <see langword="String" /> expression that specifies the selected drive.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-150">有效驱动器`Drive`属性包括所有驱动器中存在或连接到系统，创建或在运行时刷新控件时。</span><span class="sxs-lookup"><span data-stu-id="38750-150">The valid drives for the `Drive` property include all drives present in or connected to the system when the control is created or refreshed at run time.</span></span> <span data-ttu-id="38750-151">默认设置`Drive`属性是当前的驱动器。</span><span class="sxs-lookup"><span data-stu-id="38750-151">The default setting of the `Drive` property is the current drive.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-152">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-152">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-153">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-153">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-154">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-154">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBoxStyle DropDownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ComboBoxStyle DropDownStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DropDownStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownStyle As ComboBoxStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBoxStyle DropDownStyle { System::Windows::Forms::ComboBoxStyle get(); void set(System::Windows::Forms::ComboBoxStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBoxStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-155">获取或设置一个指定 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 组合框样式的值。</span><span class="sxs-lookup"><span data-stu-id="38750-155">Gets or sets a value that specifies the style of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> combo box.</span></span></summary>
        <value><span data-ttu-id="38750-156"><see cref="T:System.Windows.Forms.ComboBoxStyle" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="38750-156">One of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values.</span></span> <span data-ttu-id="38750-157">默认值为 <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown" />。</span><span class="sxs-lookup"><span data-stu-id="38750-157">The default is <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-158">`DropDownStyle`属性控制向用户显示的接口。</span><span class="sxs-lookup"><span data-stu-id="38750-158">The `DropDownStyle` property controls the interface that is presented to the user.</span></span> <span data-ttu-id="38750-159">你可以输入一个值，提供列表始终显示一个简单的下拉列表框、 下拉列表框中，其中是不可编辑的文本部分，你必须选择箭头以查看下拉列表或默认下拉列表框中，其中的文本部分是编辑可以，用户必须按箭头键以查看的列表。</span><span class="sxs-lookup"><span data-stu-id="38750-159">You can enter a value that provides a simple drop-down list box, where the list always appears, a drop-down list box, where the text portion is not editable and you must select an arrow to view the drop-down, or the default drop-down list box, where the text portion is editable and the user must press the arrow key to view the list.</span></span> <span data-ttu-id="38750-160">若要始终显示用户不能编辑的列表，请使用<xref:System.Windows.Forms.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="38750-160">To always display a list that the user cannot edit, use a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 <span data-ttu-id="38750-161">如果你设置`DropDownStyle`属性<xref:System.Windows.Forms.ComboBoxStyle.DropDownList>，你可以从列表中选择有效的值。</span><span class="sxs-lookup"><span data-stu-id="38750-161">If you set the `DropDownStyle` property to <xref:System.Windows.Forms.ComboBoxStyle.DropDownList>, you can select only valid values from the list.</span></span> <span data-ttu-id="38750-162">如果你设置`DropDownStyle`属性<xref:System.Windows.Forms.ComboBoxStyle.DropDown>，您可以在的可编辑区域中键入的任何值<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-162">If you set the `DropDownStyle` property to <xref:System.Windows.Forms.ComboBoxStyle.DropDown>, you can type any value in the editable area of the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-163">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-163">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-164">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-164">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-165">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-165">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-166">获取 <see cref="T:System.Windows.Forms.ComboBox" /> 中某项的高度。</span><span class="sxs-lookup"><span data-stu-id="38750-166">Gets the height of an item in the <see cref="T:System.Windows.Forms.ComboBox" />.</span></span></summary>
        <value><span data-ttu-id="38750-167">控件中项的高度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="38750-167">The height, in pixels, of an item in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-168"><xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> 控件不需要此属性；<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> 不支持具有可变高度的项。</span><span class="sxs-lookup"><span data-stu-id="38750-168">This property is not required for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control; the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> does not support items of variable height.</span></span> <span data-ttu-id="38750-169">之所以提供它，只是因为 <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> 控件继承自 <xref:System.Windows.Forms.ListBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-169">It is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control inherits from <xref:System.Windows.Forms.ListBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-170">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-170">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-171">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-171">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-172">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-172">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Items">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38750-173">获取 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 中包含的项。</span><span class="sxs-lookup"><span data-stu-id="38750-173">Gets the items that are contained in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ComboBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ComboBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBox::ObjectCollection ^ Items { System::Windows::Forms::ComboBox::ObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-174">获取 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 中包含的项。</span><span class="sxs-lookup"><span data-stu-id="38750-174">Gets the items that are contained in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</span></span></summary>
        <value><span data-ttu-id="38750-175">一个 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />，表示 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> 中的项。</span><span class="sxs-lookup"><span data-stu-id="38750-175">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-176">使用此属性可检索的中当前显示的驱动器列表<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-176">Use this property to retrieve a list of drives that are currently displayed in a <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-177">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-177">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-178">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-178">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-179">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-179">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public string Items[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Items(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Items(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items(Index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Items[int] { System::String ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="38750-180">列表中某个特定项的编号。</span><span class="sxs-lookup"><span data-stu-id="38750-180">The number of a specific item in the list.</span></span></param>
        <summary><span data-ttu-id="38750-181">获取 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 中指定索引的项。</span><span class="sxs-lookup"><span data-stu-id="38750-181">Gets the item for a specified index in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</span></span></summary>
        <value><span data-ttu-id="38750-182">一个 <see langword="String" />，包含指定 <paramref name="Index" /> 处的驱动器的名称。</span><span class="sxs-lookup"><span data-stu-id="38750-182">A <see langword="String" /> that contains the name of the drive at the specified <paramref name="Index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-183">使用此属性来检索名称中的驱动器<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-183">Use this property to retrieve the name of a drive in a <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-184">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-184">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-185">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-185">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-186">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-186">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-187">获取或设置一个值，该值指定 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 中显示的文本的最大长度。</span><span class="sxs-lookup"><span data-stu-id="38750-187">Gets or sets a value that specifies the maximum length of text displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</span></span></summary>
        <value><span data-ttu-id="38750-188">一个 <see langword="Integer" />，指定 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive" /> 属性的最大长度。</span><span class="sxs-lookup"><span data-stu-id="38750-188">An <see langword="Integer" /> that specifies the maximum length for the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-189">使用此属性来限制用户可以键入的文本的长度<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-189">Use this property to limit the length of text that a user can enter into the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-190">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-190">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-191">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-191">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-192">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-192">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="38750-193">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="38750-193">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="38750-194">引发 <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="38750-194">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-195">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="38750-195">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="38750-196">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="38750-196">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="38750-197">`OnBackColorChanged`方法还允许派生的类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="38750-197">The `OnBackColorChanged` method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="38750-198">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="38750-198">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-199">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-199">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-200">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-200">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-201">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-201">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="38750-202">当你重写<see langword="OnBackColorChanged" />在派生类中，一定要调用<see langword="OnBackColorChanged" />方法的基类，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="38750-202">When you override <see langword="OnBackColorChanged" /> in a derived class, be sure to call the <see langword="OnBackColorChanged" /> method of the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected override void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="38750-203">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="38750-203">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="38750-204">引发 <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="38750-204">Raise the <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-205">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="38750-205">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="38750-206">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="38750-206">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="38750-207">`OnDrawItem`方法还允许派生的类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="38750-207">The `OnDrawItem` method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="38750-208">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="38750-208">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-209">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-209">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-210">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-210">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-211">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-211">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="38750-212">在重写<see langword="OnDrawItem" />在派生类中，请确保调用<see langword="OnDrawItem" />方法的基类，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="38750-212">When overriding <see langword="OnDrawItem" /> in a derived class, make sure to call the <see langword="OnDrawItem" /> method of the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="38750-213">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="38750-213">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="38750-214">引发 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="38750-214">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-215">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="38750-215">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="38750-216">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="38750-216">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="38750-217">`OnFontChanged`方法还允许派生的类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="38750-217">The `OnFontChanged` method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="38750-218">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="38750-218">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-219">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-219">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-220">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-220">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-221">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-221">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="38750-222">在重写<see langword="OnFontChanged" />在派生类中，请确保调用<see langword="OnFontChanged" />方法的基类，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="38750-222">When overriding <see langword="OnFontChanged" /> in a derived class, make sure to call the <see langword="OnFontChanged" /> method of the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="38750-223">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="38750-223">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="38750-224">引发 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="38750-224">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-225">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="38750-225">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="38750-226">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="38750-226">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="38750-227">`OnHandleCreated`方法还允许派生的类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="38750-227">The `OnHandleCreated` method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="38750-228">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="38750-228">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-229">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-229">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-230">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-230">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-231">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-231">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="38750-232">在重写<see langword="OnHandleCreated" />在派生类中，请确保调用<see langword="OnHandleCreated" />方法的基类，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="38750-232">When overriding <see langword="OnHandleCreated" /> in a derived class, make sure to call the <see langword="OnHandleCreated" /> method of the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="38750-233">包含事件数据的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="38750-233">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="38750-234">引发 <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="38750-234">Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-235">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="38750-235">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="38750-236">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="38750-236">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="38750-237">`OnSelectedIndexChanged`方法还允许派生的类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="38750-237">The `OnSelectedIndexChanged` method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="38750-238">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="38750-238">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-239">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-239">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-240">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-240">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-241">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-241">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="38750-242">在重写<see langword="OnSelectedIndexChanged" />在派生类中，请确保调用<see langword="OnSelectedIndexChanged" />方法的基类，以便已注册的委托对事件进行接收。</span><span class="sxs-lookup"><span data-stu-id="38750-242">When overriding <see langword="OnSelectedIndexChanged" /> in a derived class, make sure to call the <see langword="OnSelectedIndexChanged" /> method of the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38750-243">强制控件使其工作区无效并立即重绘自己。</span><span class="sxs-lookup"><span data-stu-id="38750-243">Forces the control to invalidate its client area and immediately redraw itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38750-244">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-244">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-245">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-245">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-246">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-246">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="38750-247">当你重写<see langword="Refresh" />在派生类中，请确保调用<see langword="Refresh" />方法，以便失效并在重绘控件及其子控件。</span><span class="sxs-lookup"><span data-stu-id="38750-247">When you override <see langword="Refresh" /> in a derived class, make sure to call the <see langword="Refresh" /> method so the control and its child controls are invalidated and redrawn.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-248">获取一个值，该值指示 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 中的项是否按字母顺序排序。</span><span class="sxs-lookup"><span data-stu-id="38750-248">Gets a value indicating whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> is sorted alphabetically.</span></span></summary>
        <value>
          <span data-ttu-id="38750-249">如果排序控件中的项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38750-249"><see langword="true" /> if items in the control are sorted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="38750-250">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="38750-250">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-251">有关<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件，`Sorted`始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="38750-251">For the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control, `Sorted` always returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-252">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-252">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-253">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-253">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-254">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-254">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-255">获取 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 中所显示的文本。</span><span class="sxs-lookup"><span data-stu-id="38750-255">Gets the text displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</span></span></summary>
        <value><span data-ttu-id="38750-256">一个包含所显示的文本的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="38750-256">A <see langword="String" /> that contains the text that is displayed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-257">如果`Text`是有效的驱动器的值`Text`属性是相同 e 作为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="38750-257">If the `Text` is a valid drive, the value of the `Text` property is the same e as the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-258">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-258">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-259">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-259">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-260">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-260">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.ValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38750-261">获取或设置一个属性，该属性将用作 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> 中项的实际值。</span><span class="sxs-lookup"><span data-stu-id="38750-261">Gets or sets the property to use as the actual value for the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</span></span></summary>
        <value><span data-ttu-id="38750-262">一个 <see langword="String" />，表示对象属性的名称并且包含在 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" /> 属性指定的集合中。</span><span class="sxs-lookup"><span data-stu-id="38750-262">A <see langword="String" /> that represents the name of an object property and is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" /> property.</span></span> <span data-ttu-id="38750-263">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="38750-263">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-264">此属性不应设置为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件; 它提供，仅因为<xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox>控件继承自<xref:System.Windows.Forms.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="38750-264">This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> control inherits from <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-265">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-265">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-266">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-266">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-267">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-267">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="38750-268">要处理的 Windows 消息。</span><span class="sxs-lookup"><span data-stu-id="38750-268">The Windows Message to process.</span></span></param>
        <summary><span data-ttu-id="38750-269">处理 Windows 消息。</span><span class="sxs-lookup"><span data-stu-id="38750-269">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38750-270">所有消息都发送到`WndProc`方法之后要筛选通过<xref:System.Windows.Forms.Control.PreProcessMessage%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38750-270">All messages are sent to the `WndProc` method after being filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.</span></span>  
  
 <span data-ttu-id="38750-271">`WndProc` 方法与 Windows `WindowProc` 函数完全对应。</span><span class="sxs-lookup"><span data-stu-id="38750-271">The `WndProc` method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="38750-272">有关处理 Windows 消息的详细信息，请参阅`WindowProc`Windows 平台 SDK 参考中的函数文档位于[MSDN 库](http://go.microsoft.com/fwlink/?LinkId=98124)Web 站点。</span><span class="sxs-lookup"><span data-stu-id="38750-272">For more information about processing Windows messages, see the `WindowProc` function documentation in the Windows Platform SDK reference located on the [MSDN Library](http://go.microsoft.com/fwlink/?LinkId=98124) Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38750-273">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="38750-273">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="38750-274">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="38750-274">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="38750-275">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="38750-275">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="38750-276">继承控件应调用<see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />基类来处理它们不处理任何消息的方法。</span><span class="sxs-lookup"><span data-stu-id="38750-276">Inheriting controls should call the <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> method for the base class to process any messages that they do not handle.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>