<Type Name="MBindingCollection" FullName="Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection">
  <TypeSignature Language="C#" Value="public class MBindingCollection : IDisposable, Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi MBindingCollection extends System.Object implements class Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class MBindingCollection&#xA;Implements DBindingCollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MBindingCollection : IDisposable, Microsoft::VisualBasic::Compatibility::VB6::DBindingCollection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="71a80-101">提供一个接口，以在从 Visual Basic 6.0 升级的应用程序中替换基于 COM 的数据绑定。</span><span class="sxs-lookup"><span data-stu-id="71a80-101">Provides an interface to replace COM-based data binding in an application upgraded from Visual Basic 6.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-102">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-102">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-103">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-103">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-104">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-104">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MBindingCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MBindingCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71a80-105">初始化 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="71a80-105">Initializes an instance of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-106">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-106">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-107">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-107">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-108">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-108">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71a80-109">将 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> 添加到 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-109">Adds a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> to a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Compatibility.VB6.DBinding Add (object obj, string propertyName, string dataField, Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp dataFormat = null, string key = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualBasic.Compatibility.VB6.DBinding Add(object obj, string propertyName, string dataField, class Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp dataFormat, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Add(System.Object,System.String,System.String,Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (obj As Object, propertyName As String, dataField As String, Optional dataFormat As IDataFormatDisp = null, Optional key As String = null) As DBinding" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Add(System.Object,System.String,System.String,Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.DBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataField" Type="System.String" />
        <Parameter Name="dataFormat" Type="Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="71a80-110">一个包含数据的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-110">An <see cref="T:System.Object" /> that contains data.</span></span></param>
        <param name="propertyName"><span data-ttu-id="71a80-111">一个包含属性名称的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-111">A <see langword="String" /> that contains a property name.</span></span></param>
        <param name="dataField"><span data-ttu-id="71a80-112">一个包含数据字段名称的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-112">A <see langword="String" /> that contains the name of a data field.</span></span></param>
        <param name="dataFormat"><span data-ttu-id="71a80-113">可选。</span><span class="sxs-lookup"><span data-stu-id="71a80-113">Optional.</span></span> <span data-ttu-id="71a80-114">一个 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="71a80-114">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</span></span></param>
        <param name="key"><span data-ttu-id="71a80-115">可选。</span><span class="sxs-lookup"><span data-stu-id="71a80-115">Optional.</span></span> <span data-ttu-id="71a80-116">一个包含键值的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-116">A <see langword="String" /> that contains the key value.</span></span></param>
        <summary><span data-ttu-id="71a80-117">将 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> 添加到 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-117">Adds a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> to a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <returns><span data-ttu-id="71a80-118">一个 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="71a80-118">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-119">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-119">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-120">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-120">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-121">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-121">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Compatibility.VB6.DBinding Add (object obj, string propertyName, string dataField, Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp dataFormat, string key, bool immediateBind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.VisualBasic.Compatibility.VB6.DBinding Add(object obj, string propertyName, string dataField, class Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp dataFormat, string key, bool immediateBind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Add(System.Object,System.String,System.String,Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (obj As Object, propertyName As String, dataField As String, dataFormat As IDataFormatDisp, key As String, immediateBind As Boolean) As DBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualBasic::Compatibility::VB6::DBinding ^ Add(System::Object ^ obj, System::String ^ propertyName, System::String ^ dataField, Microsoft::VisualBasic::Compatibility::VB6::IDataFormatDisp ^ dataFormat, System::String ^ key, bool immediateBind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.DBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataField" Type="System.String" />
        <Parameter Name="dataFormat" Type="Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="immediateBind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="71a80-122">一个包含数据的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-122">An <see cref="T:System.Object" /> that contains data.</span></span></param>
        <param name="propertyName"><span data-ttu-id="71a80-123">一个包含属性名称的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-123">A <see langword="String" /> that contains a property name.</span></span></param>
        <param name="dataField"><span data-ttu-id="71a80-124">一个包含数据字段名称的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-124">A <see langword="String" /> that contains the name of a data field.</span></span></param>
        <param name="dataFormat"><span data-ttu-id="71a80-125">一个 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="71a80-125">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</span></span></param>
        <param name="key"><span data-ttu-id="71a80-126">一个包含键值的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-126">A <see langword="String" /> that contains the key value.</span></span></param>
        <param name="immediateBind">
          <span data-ttu-id="71a80-127">如为 <see langword="true" />，则立即绑定；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-127"><see langword="true" /> to bind immediately; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71a80-128">将 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> 添加到 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-128">Adds a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> to a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <returns><span data-ttu-id="71a80-129">一个 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="71a80-129">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-130">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-130">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-131">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-131">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-132">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-132">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear() = Microsoft::VisualBasic::Compatibility::VB6::DBindingCollection::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71a80-133">清除绑定对象的集合。</span><span class="sxs-lookup"><span data-stu-id="71a80-133">Clears the collection of binding objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-134">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-134">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-135">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-135">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-136">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-136">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a80-137">获取 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 中绑定的总数。</span><span class="sxs-lookup"><span data-stu-id="71a80-137">Gets the total number of bindings in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <value><span data-ttu-id="71a80-138">一个包含计数的 <see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-138">An <see langword="Integer" /> that contains the count.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-139">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-139">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-140">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-140">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-141">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-141">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a80-142">获取或设置 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 的数据成员。</span><span class="sxs-lookup"><span data-stu-id="71a80-142">Gets or sets the data member for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <value><span data-ttu-id="71a80-143">一个包含数据成员名称的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-143">A <see langword="String" /> that contains the name of the data member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-144">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-144">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-145">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-145">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-146">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-146">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public msdatasrc.DataSource DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class msdatasrc.DataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As DataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property msdatasrc::DataSource ^ DataSource { msdatasrc::DataSource ^ get(); void set(msdatasrc::DataSource ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>msdatasrc.DataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a80-147">获取或设置 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 的数据源。</span><span class="sxs-lookup"><span data-stu-id="71a80-147">Gets or sets the data source for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <value><span data-ttu-id="71a80-148">一个基于 COM 的 <see langword="msdatasrc.DataSource" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-148">A COM-based <see langword="msdatasrc.DataSource" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-149">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-149">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-150">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-150">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-151">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-151">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="T:System.Windows.Forms.BindingSource" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71a80-152">释放由 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="71a80-152">Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> and optionally releases the managed resources.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71a80-153">释放由 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 占用的非托管资源。</span><span class="sxs-lookup"><span data-stu-id="71a80-153">Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a80-154">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="71a80-154">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71a80-155">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-155">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-156">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-156">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-157">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-157">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="71a80-158">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-158"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="71a80-159">释放由 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="71a80-159">Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a80-160">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="71a80-160">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="71a80-161">`Dispose()` 调用受保护`Dispose(Boolean)`方法释放参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="71a80-161">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="71a80-162"><xref:System.Object.Finalize%2A> 调用`Dispose`释放参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="71a80-162"><xref:System.Object.Finalize%2A> invokes `Dispose` with the disposing parameter set to `false`.</span></span>  
  
 <span data-ttu-id="71a80-163">当处置参数是`true`，此方法释放由该控件引用任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="71a80-163">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this control references.</span></span> <span data-ttu-id="71a80-164">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="71a80-164">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71a80-165">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-165">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-166">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-166">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-167">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-167">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71a80-168">获取 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 的枚举数。</span><span class="sxs-lookup"><span data-stu-id="71a80-168">Gets an enumerator for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <returns><span data-ttu-id="71a80-169">集合的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-169">An <see cref="T:System.Collections.IEnumerator" /> for the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-170">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-170">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-171">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-171">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-172">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-172">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Compatibility.VB6.DBinding this[object index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Compatibility.VB6.DBinding Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Object) As DBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Compatibility::VB6::DBinding ^ default[System::Object ^] { Microsoft::VisualBasic::Compatibility::VB6::DBinding ^ get(System::Object ^ index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.DBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="71a80-173">一个表示索引的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-173">An <see cref="T:System.Object" /> that represents the index.</span></span></param>
        <summary><span data-ttu-id="71a80-174">获取位于指定索引处的 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-174">Gets the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> at the specified index.</span></span></summary>
        <value><span data-ttu-id="71a80-175">一个 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="71a80-175">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-176">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-176">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-177">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-177">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-178">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-178">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object index);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Remove(object index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (index As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ index) = Microsoft::VisualBasic::Compatibility::VB6::DBindingCollection::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="71a80-179">一个表示索引的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-179">An <see cref="T:System.Object" /> that represents the index.</span></span></param>
        <summary><span data-ttu-id="71a80-180">从 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> 中移除 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="71a80-180">Removes a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface from a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-181">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-181">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-182">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-182">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-183">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-183">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SavePendingChanges">
      <MemberSignature Language="C#" Value="public void SavePendingChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SavePendingChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.SavePendingChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SavePendingChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SavePendingChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71a80-184">确定是否保存 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 中的更改。</span><span class="sxs-lookup"><span data-stu-id="71a80-184">Determines whether to save changes in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-185">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-185">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-186">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-186">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-187">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-187">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateControls">
      <MemberSignature Language="C#" Value="public void UpdateControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void UpdateControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateControls" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateControls ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateControls() = Microsoft::VisualBasic::Compatibility::VB6::DBindingCollection::UpdateControls;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateControls</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71a80-188">从 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> 对象的数据源获取当前行并重置通过该对象绑定的控件的内容。</span><span class="sxs-lookup"><span data-stu-id="71a80-188">Gets the current row from the data source of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> object and resets the contents of controls bound through the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-189">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-189">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-190">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-190">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-191">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-191">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Compatibility.VB6.UpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Compatibility.VB6.UpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Compatibility::VB6::UpdateMode UpdateMode { Microsoft::VisualBasic::Compatibility::VB6::UpdateMode get(); void set(Microsoft::VisualBasic::Compatibility::VB6::UpdateMode value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.UpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71a80-192">获取或设置 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateMode" /> 的 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />。</span><span class="sxs-lookup"><span data-stu-id="71a80-192">Gets or sets the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateMode" /> for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</span></span></summary>
        <value><span data-ttu-id="71a80-193"><see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode" /> 枚举。</span><span class="sxs-lookup"><span data-stu-id="71a80-193">A <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="71a80-194">函数和对象在<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空间提供用于连接通过从 Visual Basic 6.0 升级到 Visual Basic 的工具。</span><span class="sxs-lookup"><span data-stu-id="71a80-194">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="71a80-195">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="71a80-195">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="71a80-196">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="71a80-196">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>