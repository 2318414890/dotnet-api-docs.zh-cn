<Type Name="IEnumConnectionPoints" FullName="Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dac802c7e768b519a221841c72d77cadbe21de27" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumConnectionPoints" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumConnectionPoints" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumConnectionPoints" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumConnectionPoints" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("B196B285-BAB4-101A-B69C-00AA00341D07")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="05832-101">管理 <see langword="IEnumConnectionPoints" /> 接口的定义。</span>
      <span class="sxs-lookup">
        <span data-stu-id="05832-101">Manages the definition of the <see langword="IEnumConnectionPoints" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05832-102">对于新开发，使用<xref:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints>。</span><span class="sxs-lookup"><span data-stu-id="05832-102">For new development, use <xref:System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05832-103"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象是提供给用于将 Visual Basic 6.0 升级到 [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] 的工具使用的。</span><span class="sxs-lookup"><span data-stu-id="05832-103">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="05832-104">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="05832-104">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="05832-105">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="05832-105">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints ecp);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Clone([out] class Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints&amp; ecp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ecp As IEnumConnectionPoints)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] Microsoft::VisualBasic::Compatibility::VB6::IEnumConnectionPoints ^ % ecp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ecp" Type="Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ecp">
          <span data-ttu-id="05832-106">此方法返回时，包含对该新创建的枚举数的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-106">When this method returns, contains a reference to the newly created enumerator.</span>
          </span>
          <span data-ttu-id="05832-107">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-107">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05832-108">创建与当前枚举数包含相同枚举状态的一个新枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-108">Creates a new enumerator that contains the same enumeration state as the current one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="05832-109"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象是提供给用于将 Visual Basic 6.0 升级到 [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] 的工具使用的。</span><span class="sxs-lookup"><span data-stu-id="05832-109">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="05832-110">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="05832-110">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="05832-111">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="05832-111">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public void Next (int cConnections, out Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[] cp, out int cFetched);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Next([in]int32 cConnections, [out] class Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]&amp; cp, [out] int32&amp; cFetched) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Next (cConnections As Integer, ByRef cp As IConnectionPoint(), ByRef cFetched As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Next(int cConnections, [Runtime::InteropServices::Out] cli::array &lt;Microsoft::VisualBasic::Compatibility::VB6::IConnectionPoint ^&gt; ^ % cp, [Runtime::InteropServices::Out] int % cFetched);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cConnections" Type="System.Int32" />
        <Parameter Name="cp" Type="Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]&amp;" RefType="out" />
        <Parameter Name="cFetched" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cConnections">
          <span data-ttu-id="05832-112">要在 <c>cp</c> 中返回的 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint" /> 引用的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-112">The number of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint" /> references to return in <c>cp</c>.</span>
          </span>
        </param>
        <param name="cp">
          <span data-ttu-id="05832-113">此方法返回时，包含对枚举连接的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-113">When this method returns, contains a reference to the enumerated connections.</span>
          </span>
          <span data-ttu-id="05832-114">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-114">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="cFetched">
          <span data-ttu-id="05832-115">当此方法返回时，包含对 <c>cp</c> 中枚举的实际连接数的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-115">When this method returns, contains a reference to the actual number of connections enumerated in <c>cp</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05832-116">检索枚举序列中指定数目的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-116">Retrieves a specified number of items in the enumeration sequence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="05832-117"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象是提供给用于将 Visual Basic 6.0 升级到 [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] 的工具使用的。</span><span class="sxs-lookup"><span data-stu-id="05832-117">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="05832-118">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="05832-118">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="05832-119">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="05832-119">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05832-120">将枚举序列重置到开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-120">Resets the enumeration sequence to the beginning.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="05832-121"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象是提供给用于将 Visual Basic 6.0 升级到 [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] 的工具使用的。</span><span class="sxs-lookup"><span data-stu-id="05832-121">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="05832-122">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="05832-122">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="05832-123">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="05832-123">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public void Skip (int cConnections);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Skip([in]int32 cConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skip (cConnections As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skip(int cConnections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cConnections" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cConnections">
          <span data-ttu-id="05832-124">枚举中要跳过的元素数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-124">The number of elements to skip in the enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05832-125">跳过枚举序列中指定数目的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="05832-125">Skips a specified number of items in the enumeration sequence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="05832-126"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空间中的函数和对象是提供给用于将 Visual Basic 6.0 升级到 [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] 的工具使用的。</span><span class="sxs-lookup"><span data-stu-id="05832-126">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="05832-127">大多数情况下，这些函数和对象可再现 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中其他命名空间的功能。</span><span class="sxs-lookup"><span data-stu-id="05832-127">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="05832-128">只有 Visual Basic 6.0 代码模型与 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 实现有显著区别时才需要这些函数和对象。</span><span class="sxs-lookup"><span data-stu-id="05832-128">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>