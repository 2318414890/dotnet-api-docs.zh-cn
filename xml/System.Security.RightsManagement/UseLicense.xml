<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UseLicense.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5803db9a829116ebfa9f031814373e17787b4eb6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">803db9a829116ebfa9f031814373e17787b4eb6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.RightsManagement.UseLicense">
          <source>Represents a license that enables access to protected rights managed content.</source>
          <target state="translated">表示使用户可以访问受保护的权限管理内容的许可证。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.RightsManagement.UseLicense">
          <source>As with other <ph id="ph1">&lt;xref:System.Security.RightsManagement&gt;</ph> types, <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> is only usable in full trust applications.</source>
          <target state="translated">与其他<ph id="ph1">&lt;xref:System.Security.RightsManagement&gt;</ph>类型，<ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>只能是在完全信任应用程序中可用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.RightsManagement.UseLicense">
          <source>The following example shows how to use this class to initialize a <ph id="ph1">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用此类可以初始化<ph id="ph1">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
          <source>A use license in serialized <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> form.</source>
          <target state="translated">一个采用序列化 <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> 形式的使用许可证。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="useLicense" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="useLicense" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="useLicense" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="useLicense" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.</source>
          <target state="translated">获取应用程序数据字典，该字典包括从发布应用程序传递给使用应用程序的键/值对。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.</source>
          <target state="translated">应用程序数据字典，该字典包括从发布应用程序传递给使用应用程序的键/值对。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>One data key/value pair that is processed by a Rights Management Services (RMS) server is the string pair "Allow_Server_Editing"/"True".</source>
          <target state="translated">Rights Management Services (RMS) 服务器处理的一个数据键/值对是字符串对"Allow_Server_Editing"/"True"。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>When the issuance license "Allow_Server_Editing"/"True" is set, the service, or any trusted service, can reuse the content key.</source>
          <target state="translated">当对颁发许可证"Allow_Server_Editing"/"True"设置，该服务或任何受信任的服务，则可以重复使用内容密钥。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>The key/value pair "NOLICCACHE" / "1" controls the Use License embedding policy of consuming applications.</source>
          <target state="translated">键/值对"NOLICCACHE"/"1"控制嵌入的消费应用程序的策略使用许可证。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ApplicationData">
          <source>When "NOLICCACHE" / "1" is set, applications are expected not to embed the Use License within the rights managed document.</source>
          <target state="translated">当"NOLICCACHE"/"1"设置、 应用程序应不嵌入权限管理文档中使用许可证。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>The environment to bind the license to.</source>
          <target state="translated">要将许可证绑定到的环境。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>Binds the license to a given <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.SecureEnvironment" /&gt;</ph>.</source>
          <target state="translated">将许可证绑定到给定的 <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.SecureEnvironment" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.CryptoProvider" /&gt;</ph> instance if the license binding succeeded; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果许可证绑定成功，则为 <ph id="ph1">&lt;see cref="T:System.Security.RightsManagement.CryptoProvider" /&gt;</ph> 实例；否则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>After the license is bound to a secure environment, the application can examine and exercise the rights granted by the license.</source>
          <target state="translated">将许可证绑定到安全的环境中后，应用程序可以检查和测试由许可证授予的权限。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>The returned <ph id="ph1">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> instance provides decryption and access to the protected rights managed content.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph>实例提供解密和对受保护的权限管理内容访问权限。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source>The following example shows how to use this method to initialize a <ph id="ph1">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用此方法初始化<ph id="ph1">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
          <source><ph id="ph1">&lt;paramref name="secureEnvironment" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="secureEnvironment" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Security.RightsManagement.UseLicense.ContentId">
          <source>Gets the content identifier created by the publisher.</source>
          <target state="translated">获取发布者创建的内容标识符。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ContentId">
          <source>The content identifier created by the publisher.</source>
          <target state="translated">发布者创建的内容标识符。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.ContentId">
          <source><ph id="ph1">&lt;xref:System.Security.RightsManagement.UseLicense.ContentId%2A&gt;</ph> is created by the publisher and can be used to match content to a <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.RightsManagement.UseLicense.ContentId%2A&gt;</ph> 由发布者创建并且可以用于匹配到内容<ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph>和<ph id="ph3">&lt;xref:System.Security.RightsManagement.PublishLicense&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
          <source>The license to compare.</source>
          <target state="translated">要比较的许可证。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
          <source>Indicates if this license is equivalent to another given license.</source>
          <target state="translated">指示此许可证是否与另一个给定许可证等效。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if both licenses are the equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果两个许可证等效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Security.RightsManagement.UseLicense.Equals%2A&gt;</ph> tests for equivalence comparing the serialized <ph id="ph2">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> strings specified to the <ph id="ph3">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.RightsManagement.UseLicense.Equals%2A&gt;</ph> 针对等效性进行比较的序列化的测试<ph id="ph2">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph>到指定的字符串<ph id="ph3">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.GetHashCode">
          <source>Returns the hash code associated with this license.</source>
          <target state="translated">返回与此许可证关联的哈希代码。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.GetHashCode">
          <source>A hash code for this license.</source>
          <target state="translated">此许可证的哈希代码。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.RightsManagement.UseLicense.GetHashCode">
          <source>The returned hash code is based on the serialized <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string passed to the <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">基于返回的哈希代码上的序列化<ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph>字符串传递给<ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Security.RightsManagement.UseLicense.Owner">
          <source>Gets the owner of the license.</source>
          <target state="translated">获取许可证的所有者。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.Owner">
          <source>The owner of the license.</source>
          <target state="translated">许可证的所有者。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.RightsManagement.UseLicense.Owner">
          <source>The license owner is obtained from the serialized <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string passed to the <ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">获取许可证所有者从序列化<ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph>字符串传递给<ph id="ph2">&lt;xref:System.Security.RightsManagement.UseLicense.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.ToString">
          <source>Returns the serialized <ph id="ph1">[!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)]</ph> string used to create this license.</source>
          <target state="translated">返回用于创建此许可证的序列化 <ph id="ph1">[!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)]</ph> 字符串。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.RightsManagement.UseLicense.ToString">
          <source>The serialized <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> string originally passed to the <ph id="ph2">&lt;see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" /&gt;</ph> constructor.</source>
          <target state="translated">最初传递给 <ph id="ph2">&lt;see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" /&gt;</ph> 构造函数的序列化 <ph id="ph1">[!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]</ph> 字符串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>