<Type Name="ContentUser" FullName="System.Security.RightsManagement.ContentUser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e6ef85aac4da02301708c4e7af2d5984c8bda2c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498501" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContentUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentUser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.ContentUser" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentUser" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示要为其授予权限管理内容访问权限的用户或用户组。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与其他<xref:System.Security.RightsManagement>类型，<xref:System.Security.RightsManagement.ContentUser>只能是在完全信任应用程序中可用。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A>要分配此类型的变量的属性。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubunpublic)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubunpublic)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentUser (string name, System.Security.RightsManagement.AuthenticationType authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.RightsManagement.AuthenticationType authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentUser(System::String ^ name, System::Security::RightsManagement::AuthenticationType authenticationType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="authenticationType" Type="System.Security.RightsManagement.AuthenticationType" />
      </Parameters>
      <Docs>
        <param name="name">用户或用户组名称。</param>
        <param name="authenticationType">身份验证的方法。</param>
        <summary>初始化 <see cref="T:System.Security.RightsManagement.ContentUser" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户或组`name`通常是个人电子邮件地址的形式 (如johndoe@contoso.com) 或电子邮件分发列表 (如marketing@contoso.com)。  
  
   
  
## Examples  
 下面的示例演示如何使用此构造函数创建安全的环境。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnyoneUser">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.ContentUser AnyoneUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.RightsManagement.ContentUser AnyoneUser" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.AnyoneUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AnyoneUser As ContentUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::RightsManagement::ContentUser ^ AnyoneUser { System::Security::RightsManagement::ContentUser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取“Anyone”<see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的实例。</summary>
        <value>“Anyone”<see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的一个实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.ContentUser.AnyoneUser%2A> 具有<xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>"内部"和<xref:System.Security.RightsManagement.ContentUser.Name%2A>"任何人"。  
  
 如果<xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>"内部"与<xref:System.Security.RightsManagement.ContentUser.Name%2A>"任何人"在发布期间授予权限，则身份验证服务器将发出<xref:System.Security.RightsManagement.UseLicense>到任何请求，并将附加到请求的用户的许可证。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.ContentUser.OwnerUser" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.AuthenticationType AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.RightsManagement.AuthenticationType AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As AuthenticationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::RightsManagement::AuthenticationType AuthenticationType { System::Security::RightsManagement::AuthenticationType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.AuthenticationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取为 <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 构造函数指定的 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />。</summary>
        <value>为 <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 构造函数指定的 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要比较是否等效的用户实例。</param>
        <summary>返回一个值，该值指示此 <see cref="T:System.Security.RightsManagement.ContentUser" /> 是否与另一个给定实例等效。</summary>
        <returns>
          如果 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 对于此用户和给定用户是相同的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回基于用户 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 计算出的哈希代码。</summary>
        <returns>基于用户 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 计算出的哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthenticated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAuthenticated () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthenticated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个值，该值指示当前是否已验证用户的身份。</summary>
        <returns>
          如果当前已验证用户的身份，则为 <see langword="true" />；否则为 <see langword="false" />。  在进行身份验证之前，默认值为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 给定的用户<xref:System.Security.RightsManagement.ContentUser.Name%2A>进行身份验证基于给定<xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>。  
  
 用户已经过身份验证后和<xref:System.Security.RightsManagement.ContentUser.IsAuthenticated%2A>是`true`，用户对话框并提示确认身份验证不会再显示在创建时<xref:System.Security.RightsManagement.SecureEnvironment>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取为 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> 构造函数指定的用户或用户组名称。</summary>
        <value>为 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> 构造函数指定的用户或用户组名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerUser">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.ContentUser OwnerUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.RightsManagement.ContentUser OwnerUser" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.OwnerUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OwnerUser As ContentUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::RightsManagement::ContentUser ^ OwnerUser { System::Security::RightsManagement::ContentUser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取“Owner”<see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的实例。</summary>
        <value>“Owner”<see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的一个实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.ContentUser.OwnerUser%2A> 具有<xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>"内部"和<xref:System.Security.RightsManagement.ContentUser.Name%2A>"所有者"。  
  
 <xref:System.Security.RightsManagement.ContentUser.OwnerUser%2A> 使用服务器端模板来创建受保护的文档时向提供特殊权限的内容的作者或发布者。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.ContentUser.AnyoneUser" />
      </Docs>
    </Member>
  </Members>
</Type>