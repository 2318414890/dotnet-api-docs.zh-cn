<Type Name="ScriptMethodAttribute" FullName="System.Web.Script.Services.ScriptMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e746b231716e23a563d1d48538f543cc25813249" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ScriptMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScriptMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.ScriptMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScriptMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptMethodAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定用于调用方法的 HTTP 谓词以及响应的格式。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于指定可以从客户端脚本调用的方法的信息。 该属性允许您指定的 HTTP 谓词 （GET 或 POST） 可用于调用方法。 它还允许你指定的响应是否通过使用 JavaScript 对象表示法 (JSON) 或 XML 格式。  
  
 <xref:System.Web.Script.Services.ScriptMethodAttribute> 属性是可选项。 (但是，可以从客户端脚本调用的方法必须具有<xref:System.Web.Services.WebMethodAttribute?displayProperty=nameWithType>应用的属性。)。 如果方法不使用标记<xref:System.Web.Script.Services.ScriptMethodAttribute>、 使用 HTTP POST 命令将调用方法和响应将序列化为 JSON。 不能重写此设置从脚本。  
  
 <xref:System.Web.Script.Services.ScriptMethodAttribute> 只采用命名参数。 以下是的属性<xref:System.Web.Script.Services.ScriptMethodAttribute>可以用作命名参数的类：  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>  
  
     指定是否将使用 HTTP GET 命令调用该方法。 默认值为 `false`。  
  
    > [!IMPORTANT]
    >  设置<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>属性`true`可能会带来安全风险，你的应用程序，如果你正在使用敏感数据或事务。 在 GET 请求中，消息为 URL 编码由浏览器，因此更容易遭到篡改。 对于 GET 和 POST 请求，应遵循安全指导原则来保护敏感数据。  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>  
  
     指定为 JSON 或 XML，是否将序列化响应。 默认值为 `Json`。 <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>属性可用于将 XML 指定为返回类型，该方法返回时<xref:System.Xml.XmlDocument>或<xref:System.Xml.XmlElement>对象。  
  
-   <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>  
  
     指定是否所有的返回类型，包括字符串类型扩展会序列化为 XML。 值<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>响应序列化为 JSON 时，将忽略属性。  
  
 有关如何使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下面的示例演示如何将应用<xref:System.Web.Script.Services.ScriptMethodAttribute>到`GetXmlDocument`和`EchoStringAndDate`方法以指定要使用并指定响应格式的 HTTP 谓词。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.WebMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.ScriptMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Script.Services.ScriptMethodAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Script.Services.ResponseFormat ResponseFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseFormat As ResponseFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Script::Services::ResponseFormat ResponseFormat { System::Web::Script::Services::ResponseFormat get(); void set(System::Web::Script::Services::ResponseFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Script.Services.ResponseFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置方法响应的格式。</summary>
        <value>
          <see cref="T:System.Web.Script.Services.ResponseFormat" /> 值之一。 默认值为 <see langword="Json" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>当你想要指定为返回类型的格式的 XML 时，属性。 这是有用的该方法返回时<xref:System.Xml.XmlDocument>或<xref:System.Xml.XmlElement>对象。  
  
 当<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>属性设置为`Xml`，公共字段和属性的返回类型具有<xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>应用属性不会被忽略。 这是因为它们将使用序列化<xref:System.Xml.Serialization.XmlSerializer>对象而不是<xref:System.Web.Script.Serialization.JavaScriptSerializer>对象。 您必须首先应用<xref:System.Xml.Serialization.XmlIgnoreAttribute>特性使<xref:System.Xml.Serialization.XmlSerializer>忽略，或跳过，这些公共字段和属性的返回类型。  
  
   
  
## Examples  
 下面的示例演示如何将应用<xref:System.Web.Script.Services.ScriptMethodAttribute>属性设为与某一 Web 方法<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>属性设置为`Xml`。 将序列化为 XML 的方法的返回值，并且将其作为类型的对象发送给成功的回调函数<xref:System.Xml.XmlDocument>。 此代码示例摘自更大的示例为提供<xref:System.Web.Script.Services.ScriptMethodAttribute>类。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="UseHttpGet">
      <MemberSignature Language="C#" Value="public bool UseHttpGet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHttpGet" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet" />
      <MemberSignature Language="VB.NET" Value="Public Property UseHttpGet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseHttpGet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否通过使用 HTTP GET 调用方法。</summary>
        <value>
          如果通过使用 HTTP GET 命令调用方法，则为 <see langword="true" />；如果通过使用 HTTP POST 命令调用方法，则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不能重写从 ECMAScript (JavaScript) 客户端上的此属性。 如果此属性设置为`true`，调用方法中的，从脚本将始终需要使用 HTTP GET。  
  
 当此属性设置为`true`，客户端代理代码使用 HTTP GET 调用 Web 服务。 方法中的每个输入的参数将显示为用于调用 Web 方法的 URL 中的查询参数。 通过 JavaScript 对象表示法 (JSON) 序列化和 URL 编码的参数值获取参数值。  
  
 用于的 HTTP GET 调用 Web 服务方法遵循用于任何其他 Web 交互相同的准则。 应仅用于操作使用 HTTP GET，未公开任何敏感的数据和服务器操作没有副作用时。  
  
> [!IMPORTANT]
>  设置<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>属性`true`可能会带来安全风险，你的应用程序，如果你正在使用敏感数据或事务。 在 GET 请求中，消息为 URL 编码由浏览器，因此更容易遭到篡改。  
  
   
  
## Examples  
 下面的示例演示如何将应用<xref:System.Web.Script.Services.ScriptMethodAttribute>到具有的 Web 方法<xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>属性设置为`true`。 此代码示例摘自更大的示例为提供<xref:System.Web.Script.Services.ScriptMethodAttribute>类。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSerializeString">
      <MemberSignature Language="C#" Value="public bool XmlSerializeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlSerializeString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSerializeString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlSerializeString { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否将所有返回类型都序列化为包含字符串类型的 XML。</summary>
        <value>
          如果所有返回类型都序列化为 XML，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性设置为`false`，所有返回类型扩展会序列化为 XML，字符串，将被解释为 XML 标记除外。 如果值为`false`，并且如果返回类型是一个字符串，并且如果字符串不包含对应于格式正确的 XML 文档的 XML 标记，成功的回调函数将调用但是所生成序列化的字符串将`null`.  
  
 值<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>时，将忽略<xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>属性设置为`Json`。  
  
   
  
## Examples  
 下面的示例演示如何将应用<xref:System.Web.Script.Services.ScriptMethodAttribute>到具有的 Web 方法<xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>属性设置为`true`。 此代码示例摘自更大的示例为提供<xref:System.Web.Script.Services.ScriptMethodAttribute>类。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>