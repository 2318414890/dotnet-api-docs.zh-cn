<Namespace Name="System.Diagnostics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30734991" /></Metadata><Docs>
    <summary><see cref="N:System.Diagnostics" /> 命名空间提供类，使您能够与系统进程、事件日志和性能计数器进行交互。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Diagnostics.EventLog>组件提供了功能来向事件日志中写入、 读取事件日志项，并创建和删除事件日志和网络上的事件源。 <xref:System.Diagnostics.EntryWrittenEventHandler>使您能够以异步方式与事件日志进行交互。 支持类提供对更细致的控制访问权限包括： 权限限制，以及若要指定事件日志类型 （控件的事件日志条目写入的默认数据类型），并循环访问集合的事件日志的功能条目。 有关这些任务的详细信息，请参阅<xref:System.Diagnostics.EventLogPermission>， <xref:System.Diagnostics.EventLogEntryType>，和<xref:System.Diagnostics.EventLogEntryCollection>类。  
  
-   <xref:System.Diagnostics.Process>类提供跨网络监视系统进程还可以启动和停止本地系统进程的功能。 除了检索正在运行的进程 （通过指定计算机、 进程名称或进程 id） 或查看有关当前有权访问处理器过程的信息的列表，可以获得的进程线程的详细的知识和模块这两个通过<xref:System.Diagnostics.Process>本身，并通过与之交互<xref:System.Diagnostics.ProcessThread>和<xref:System.Diagnostics.ProcessModule>类。 <xref:System.Diagnostics.ProcessStartInfo>类，可指定各种用来启动一个新进程，例如输入、 输出和错误流、 工作目录、 命令行谓词和自变量的元素。 这些报告提供对您的流程的行为进行精细控制。 其他相关的类使你可以指定窗口样式、 进程和线程优先级，以及与集合的线程和模块进行交互。  
  
-   <xref:System.Diagnostics.PerformanceCounter>类可用于监视系统性能，而<xref:System.Diagnostics.PerformanceCounterCategory>类提供了一种方法来创建新的自定义计数器和类别。 可以将写入到本地的自定义计数器，并从本地和远程计数器 （系统，以及自定义） 中读取。 可以使用的计数器进行采样<xref:System.Diagnostics.PerformanceCounter>类，并计算中使用连续的性能计数器样本的结果<xref:System.Diagnostics.CounterSample>类。 <xref:System.Diagnostics.CounterCreationData>类，可创建多个计数器类别中，并指定其类型。 与性能计数器组件关联的其他类提供对计数器，计数器权限和计数器类型的集合的访问。  
  
 <xref:System.Diagnostics>命名空间还提供类，使您能够调试应用程序，并跟踪你的代码的执行。 有关更多信息，请参见 <xref:System.Diagnostics.Trace> 和 <xref:System.Diagnostics.Debug> 类。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>