<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1090d44d40e28b0d29477f2237034a9f61aeea09" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37711897" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a property, event, and methods for interacting with the network to which the computer is connected.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表列出了所涉及的任务的示例`My.Computer.Network`对象。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|检查连接状态|[如何：检查连接状态](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到http://www.cohowinery.com/uploads。  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Network" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，`DownloadFile`方法不会覆盖现有文件。 可以使用的其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>方法以指示它覆盖现有文件，提供用户凭据，或指定特定的超时值。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，`DownloadFile`方法不会覆盖现有文件。 可以使用的其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>方法以指示它覆盖现有文件，提供用户凭据，或指定特定的超时值。 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，`DownloadFile`方法不会覆盖现有文件。 可以使用的其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>方法以指示它可以覆盖现有文件或指定特定的超时值。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，`DownloadFile`方法不会覆盖现有文件。 可以使用的其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>方法以指示它可以覆盖现有文件或指定特定的超时值。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <see langword="String" /> or <see cref="T:System.Uri" />. Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">
          <see langword="String" />. File name and path of the downloaded file.</param>
        <param name="networkCredentials">
          <see cref="T:System.Net.ICredentials" />. Credentials to be supplied.</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，其中显示操作的进度会出现一个对话框; 对话框的包含**取消**可用于取消操作的按钮。 对话框的不是模式对话框，并因此不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定`connectionTimeout`，将取消该操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">
          <see cref="T:System.Int32" />. Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，其中显示操作的进度会出现一个对话框; 对话框的包含**取消**可用于取消操作的按钮。 对话框的不是模式对话框，并因此不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定`connectionTimeout`，将取消该操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="networkCredentials">Credentials to be supplied.</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>showUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，其中显示操作的进度会出现一个对话框; 对话框的包含**取消**可用于取消操作的按钮。 对话框的不是模式对话框，并因此不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定`connectionTimeout`，将取消该操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，其中显示操作的进度会出现一个对话框; 对话框的包含**取消**可用于取消操作的按钮。 对话框的不是模式对话框，并因此不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定`connectionTimeout`，将取消该操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>ShowUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，其中显示操作的进度会出现一个对话框; 对话框的包含**取消**可用于取消操作的按钮。 对话框的不是模式对话框，并因此不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定`connectionTimeout`，将取消该操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>ShowUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，其中显示操作的进度会出现一个对话框; 对话框的包含**取消**可用于取消操作的按钮。 对话框的不是模式对话框，并因此不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定`connectionTimeout`，将取消该操作，并引发异常。  
  
 `DownloadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  `DownloadFile`方法不会发送可选 HTTP 标头。 如果缺少可选的用户代理标头，某些服务器可能会返回 500 （内部服务器错误）。 若要发送可选标头，必须构造请求使用<xref:System.Net.WebClient>类。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.DownloadFile`方法。  
  
|到|查看|  
|-|-|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 此示例会将文件下载`WineList.txt`从`http://www.cohowinery.com/downloads`并将其保存到`C:\Documents and Settings\All Users\Documents`，指定超时间隔设置为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether a computer is connected to a network.</summary>
        <value>
          <see langword="True" /> 如果计算机连接到网络;否则为<see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` 始终返回`False`从调用时`Click Once`应用程序或用户没有<xref:System.Net.NetworkInformation.NetworkInformationPermission>。  
  
 下表列出了所涉及的任务的示例`My.Computer.Network.IsAvailable`属性。  
  
|到|查看|  
|-|-|  
|检查计算机是否已连接到网络|[如何：检查连接状态](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 此示例检查属性的状态并进行报告。  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the network availability changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序引发的`NetworkAvailabilityChanged`每次在网络可用性更改事件。 可以使用<xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>属性的`e`参数，以获取新的网络连接的状态。 若要获取的网络连接的当前状态，请使用<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>属性。  
  
 在 Windows 窗体应用程序中，与其他用户界面事件的应用程序的主线程上引发此事件。 这允许直接访问应用程序的用户界面的事件处理程序。 但是，如果应用程序正忙于处理另一个用户界面事件时将引发此事件，此事件之前，无法处理其他事件处理程序完成，或调用<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>方法。  
  
 不能使用`Handles`语句来处理`NetworkAvailabilityChanged`事件; 必须使用`AddHandler`语句。  
  
 在 Windows 窗体应用程序中`MyApplication`对象将公开`NetworkAvailabilityChanged`事件提供相同的功能，为此事件，但你可以处理其与`Handles`语句。  
  
> [!NOTE]
>  许多网络中心可提供网络连接，即使较大的网络断开连接的中心。 因此，对于有线连接，此事件指示计算机和中心之间的连接中的更改。  
  
> [!NOTE]
>  `NetworkAvailabilityChanged`由 Windows 95 和 Windows 98 运行的应用程序或由非管理员身份运行 Windows 2000 的应用程序不会引发事件。 如果你的应用程序可能会在这些平台上运行，使用<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>属性。  
  
   
  
## Examples  
 此示例使用`My.Computer.Network.NetworkAvailabilityChanged`要更新的用户界面的窗体或控件的事件。  
  
 此代码应在窗体或控件具有<xref:System.Windows.Forms.Label>名为`Label1`。  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pings the specified server.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`方法不是防故障来确定远程计算机的可用性： 目标计算机上的 ping 端口可能已关闭或者 ping 请求可能会阻止通过防火墙或路由器。  
  
 地址传递给`Ping`方法必须是可解析的 DNS，而且不能在加"http://"。  
  
   
  
## Examples  
 此示例报告是否可通过确定服务器执行 ping 操作是否`Ping`方法将返回`True`。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 替换为`"198.01.01.01"`要成功进行 ping 操作的服务器的 IP 地址、 URL 或计算机名称。  
  
 此示例报告是否可通过确定服务器执行 ping 操作是否`Ping`方法返回`True`，并指定超时间隔设置为 1000年毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 替换为`"www.cohowinery.com"`要成功进行 ping 操作的服务器的 IP 地址、 URL 或计算机名称。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">描述一组应用于代码的安全权限。 关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.SocketPermission">若要建立或接受连接的传输地址上的控件权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">控制对 Windows NT 性能计数器组件访问。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">控制对本地计算机网络的信息和通信统计信息的访问。 关联枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />。</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">The URI of the server to ping.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`方法不是防故障来确定远程计算机的可用性： 目标计算机上的 ping 端口可能已关闭或者 ping 请求可能会阻止通过防火墙或路由器。  
  
 地址传递给`Ping`方法必须是可解析的 DNS，而且不能在加"http://"。  
  
   
  
## Examples  
 此示例报告是否可通过确定服务器执行 ping 操作是否`Ping`方法将返回`True`。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 替换为`"198.01.01.01"`要成功进行 ping 操作的服务器的 IP 地址、 URL 或计算机名称。  
  
 此示例报告是否可通过确定服务器执行 ping 操作是否`Ping`方法返回`True`，并指定超时间隔设置为 1000年毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 替换为`"www.cohowinery.com"`要成功进行 ping 操作的服务器的 IP 地址、 URL 或计算机名称。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">描述一组应用于代码的安全权限。 关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.SocketPermission">若要建立或接受连接的传输地址上的控件权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">控制对 Windows NT 性能计数器组件访问。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">控制对本地计算机网络的信息和通信统计信息的访问。 关联枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />。</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
        <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`方法不是防故障来确定远程计算机的可用性： 目标计算机上的 ping 端口可能已关闭或者 ping 请求可能会阻止通过防火墙或路由器。  
  
 地址传递给`Ping`方法必须是可解析的 DNS，而且不能在加"http://"。  
  
   
  
## Examples  
 此示例报告是否可通过确定服务器执行 ping 操作是否`Ping`方法将返回`True`。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 替换为`"198.01.01.01"`要成功进行 ping 操作的服务器的 IP 地址、 URL 或计算机名称。  
  
 此示例报告是否可通过确定服务器执行 ping 操作是否`Ping`方法返回`True`，并指定超时间隔设置为 1000年毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 替换为`"www.cohowinery.com"`要成功进行 ping 操作的服务器的 IP 地址、 URL 或计算机名称。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">描述一组应用于代码的安全权限。 关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.SocketPermission">若要建立或接受连接的传输地址上的控件权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">控制对 Windows NT 性能计数器组件访问。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">控制对本地计算机网络的信息和通信统计信息的访问。 关联枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />。</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">The URI of the server to ping.</param>
        <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`方法不是防故障来确定远程计算机的可用性： 目标计算机上的 ping 端口可能已关闭或者 ping 请求可能会阻止通过防火墙或路由器。  
  
 地址传递给`Ping`方法必须是可解析的 DNS，而且不能在加"http://"。  
  
   
  
## Examples  
 此示例报告是否可通过确定服务器执行 ping 操作是否`Ping`方法将返回`True`。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 替换为`"198.01.01.01"`要成功进行 ping 操作的服务器的 IP 地址、 URL 或计算机名称。  
  
 此示例报告是否可通过确定服务器执行 ping 操作是否`Ping`方法返回`True`，并指定超时间隔设置为 1000年毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 替换为`"www.cohowinery.com"`要成功进行 ping 操作的服务器的 IP 地址、 URL 或计算机名称。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">描述一组应用于代码的安全权限。 关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.SocketPermission">若要建立或接受连接的传输地址上的控件权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">控制对 Windows NT 性能计数器组件访问。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">控制对本地计算机网络的信息和通信统计信息的访问。 关联枚举： <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />。</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends the specified file to the specified host address.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用的其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>方法以提供用户凭据或指定特定的超时值。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用的其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>方法以提供用户凭据或指定特定的超时值。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用的其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>方法，以指定特定的超时值。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用的其他重载之一<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>方法，以指定特定的超时值。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="networkCredentials">Credentials for authentication.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 由于对话框的不是模式，它不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 由于对话框的不是模式，它不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="networkCredentials">Credentials for authentication.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 由于对话框的不是模式，它不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 由于对话框的不是模式，它不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">Whether to display progress of the operation. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 由于对话框的不是模式，它不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">Whether to display progress of the operation. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`showUI`设置为`True`，对话框中显示操作的进度，其中包括**取消**用户可以单击以取消操作的按钮。 由于对话框的不是模式，它不会阻止其他 windows 程序中的用户输入。  
  
 如果服务器没有响应中指定的间隔内`connectionTimeout`，将取消该操作并引发异常。  
  
 `My.Computer.Network.UploadFile` 在应用程序中启用网络跟踪后，跟踪信息输出。 有关详细信息，请参阅[启用网络跟踪](~/docs/framework/network-programming/enabling-network-tracing.md)。  
  
> [!NOTE]
>  FTP 协议发送的信息，包括以纯文本密码，并不应使用用于传输敏感信息。  
  
 下表列出的任务涉及示例`My.Computer.Network.UploadFile`方法。  
  
|到|查看|  
|-|-|  
|上传文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 此示例将文件上传`Order.txt`到`http://www.cohowinery.com/uploads`。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 此示例在不提供用户名或密码的情况下将文件 `Order.txt` 上传到 `http://www.cohowinery.com/uploads`显示了上传操作的进度，并将将超时间隔为 500 毫秒。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制与用户界面和剪贴板相关的权限。 关联枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <permission cref="T:System.Net.WebPermission">控制访问 HTTP Internet 资源的权限。 关联枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
  </Members>
</Type>