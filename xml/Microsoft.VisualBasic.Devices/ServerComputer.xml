<Type Name="ServerComputer" FullName="Microsoft.VisualBasic.Devices.ServerComputer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="93b29a307e7343a80a7790ea30245c20d079264d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30349711" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServerComputer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ServerComputer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.ServerComputer" />
  <TypeSignature Language="VB.NET" Value="Public Class ServerComputer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServerComputer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供了用于操控计算机组件（如音频、时钟、键盘、文件系统等）的属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公开的属性`My.Computer`对象返回有关在其部署应用程序，该计算机的信息，如在运行时确定。 通常情况下，此数据不同于开发计算机上可用。  
  
 一些成员，如`My.Computer.Audio`对象，仅可用于非服务器应用程序。  
  
 下表列出了所涉及的任务的示例`My.Computer`对象。  
  
|到|查看|  
|--------|---------|  
|请检查连接状态|[如何：检查连接状态](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|上载文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|创建注册表项|[如何：创建注册表项并设置其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|访问剪贴板|[将数据存储到剪贴板以及从剪贴板读取数据](~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md)|  
  
   
  
## Examples  
 此示例使用`My.Computer.Name`属性显示的代码在其运行的计算机的名称。  
  
 [!code-vb[VbVbalrMyComputer#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Audio" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Clock" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.FileSystemProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Keyboard" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Mouse" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Ports" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerComputer ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServerComputer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Clock ^ Clock { Microsoft::VisualBasic::Devices::Clock ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象可提供用于从系统时钟访问当前的本地时间和协调通用时间（与格林尼治标准时间相同）的属性。</summary>
        <value>计算机的 <see langword="My.Computer.Clock" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问`My.Computer.Clock`对象。 有关详情，请参阅<xref:Microsoft.VisualBasic.Devices.Clock>。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 `My.Computer.Audio.Play`方法将在后台播放指定的声音时`AudioPlayMode.Background`指定。  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 仅在 Windows 窗体应用程序可以运行此代码。  
  
 文件名称应引用你系统上的.wav 声音文件。  
  
 若要简化的管理的声音文件，请考虑将文件存储为应用程序资源。 然后可以通过访问这些文件[My.Resources 对象](~/docs/visual-basic/language-reference/objects/my-resources-object.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Clock" />
      </Docs>
    </Member>
    <Member MemberName="FileSystem">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.MyServices.FileSystemProxy FileSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.MyServices.FileSystemProxy FileSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSystem As FileSystemProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::MyServices::FileSystemProxy ^ FileSystem { Microsoft::VisualBasic::MyServices::FileSystemProxy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MyServices.FileSystemProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于处理驱动器、文件和目录的属性和方法。</summary>
        <value>计算机的 <see langword="My.Computer.FileSystem" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问<xref:Microsoft.VisualBasic.MyServices.FileSystemProxy>对象。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 此示例检查以确定是否文件夹`C:\backup\logs`存在，并检查其属性。  
  
 [!code-vb[VbVbcnMyFileSystem#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MyServices.FileSystemProxy" />
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.ComputerInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.ComputerInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Info" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Info As ComputerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::ComputerInfo ^ Info { Microsoft::VisualBasic::Devices::ComputerInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.ComputerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于获取有关计算机内存、已加载的程序集、名称和操作系统的信息的属性。</summary>
        <value>计算机的 <see langword="My.Computer.Info" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问`My.Computer.Info`对象。 有关详情，请参阅<xref:Microsoft.VisualBasic.Devices.ComputerInfo>。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 此示例使用`My.Computer.Info.AvailablePhysicalMemory`属性显示的代码在其上运行的计算机的可用物理内存量。  
  
 [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取计算机名称。</summary>
        <value>一个包含此计算机的名称的 <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Name`属性提供的功能类似于<xref:System.Environment.MachineName%2A>属性。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 此示例使用`My.Computer.Name`属性显示的代码在其运行的计算机的名称。  
  
 [!code-vb[VbVbalrMyComputer#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Environment.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="Network">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Network Network { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Network Network" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Network" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Network As Network" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Network ^ Network { Microsoft::VisualBasic::Devices::Network ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Network</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于与计算机所连接的网络进行交互的属性和方法。</summary>
        <value>计算机的 <see langword="My.Computer.Network" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问<xref:Microsoft.VisualBasic.Devices.Network>对象。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|**是**|  
|Windows 服务|**是**|  
|网站|**是**|  
  
   
  
## Examples  
 此示例将文件上载`Order.txt`到http://www.cohowinery.com/uploads。  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
      </Docs>
    </Member>
    <Member MemberName="Registry">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.MyServices.RegistryProxy Registry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.MyServices.RegistryProxy Registry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Registry As RegistryProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::MyServices::RegistryProxy ^ Registry { Microsoft::VisualBasic::MyServices::RegistryProxy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MyServices.RegistryProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于操作注册表的属性和方法。</summary>
        <value>计算机的 <see langword="My.Computer.Registry" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问<xref:Microsoft.VisualBasic.MyServices.RegistryProxy>对象。  
  
   
  
## Examples  
 此示例将读取值`Name`从`HKEY_CURRENT_USER\Software\MyApp`并将其显示在消息框中。  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
      </Docs>
    </Member>
  </Members>
</Type>