<Type Name="Computer" FullName="Microsoft.VisualBasic.Devices.Computer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df21d855c79d45fe141980a934c7ecd6e7ee5c18" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36727346" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Computer : Microsoft.VisualBasic.Devices.ServerComputer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Computer extends Microsoft.VisualBasic.Devices.ServerComputer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Computer" />
  <TypeSignature Language="VB.NET" Value="Public Class Computer&#xA;Inherits ServerComputer" />
  <TypeSignature Language="C++ CLI" Value="public ref class Computer : Microsoft::VisualBasic::Devices::ServerComputer" />
  <TypeSignature Language="F#" Value="type Computer = class&#xA;    inherit ServerComputer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Devices.ServerComputer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供了用于操控计算机组件（如音频、时钟、键盘、文件系统等）的属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 公开的属性`My.Computer`对象返回有关在其部署应用程序，该计算机的信息，如在运行时确定。 通常情况下，此数据不同于开发计算机上可用。  
  
 一些成员，如`My.Computer.Audio`对象，仅可用于非服务器应用程序。  
  
 下表列出了所涉及的任务的示例`My.Computer`对象。  
  
|到|查看|  
|--------|---------|  
|请检查连接状态|[如何：检查连接状态](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
|下载的文件|[如何：下载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|上载文件|[如何：上载文件](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|创建注册表项|[如何：创建注册表项并设置其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|访问剪贴板|[将数据存储到剪贴板以及从剪贴板读取数据](~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md)|  
  
   
  
## Examples  
 此示例使用`My.Computer.Name`属性显示的代码在其运行的计算机的名称。  
  
 [!code-vb[VbVbalrMyComputer#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Audio" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Clock" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.FileSystemProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Keyboard" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Mouse" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.Ports" />
    <altmember cref="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
    <altmember cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Computer ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Computer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Computer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [对象](http://msdn.microsoft.com/library/651c73e4-dca8-402b-9c6b-e3902b3a3f4b)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Audio">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Audio Audio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Audio Audio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Audio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Audio As Audio" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Audio ^ Audio { Microsoft::VisualBasic::Devices::Audio ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Audio : Microsoft.VisualBasic.Devices.Audio" Usage="Microsoft.VisualBasic.Devices.Computer.Audio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Audio</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象为用于播放声音的方法提供属性。</summary>
        <value>计算机的 <see langword="My.Computer.Audio" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问`My.Computer.Audio`对象。 有关详细信息，请参阅<xref:Microsoft.VisualBasic.Devices.Audio>对象。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|否|  
|Windows 服务|**是**|  
|网站|否|  
  
   
  
## Examples  
 `My.Computer.Audio.Play`方法将在后台播放指定的声音时`AudioPlayMode.Background`指定。  
  
 [!code-vb[VbVbalrMyComputer#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#15)]  
  
 仅在 Windows 窗体应用程序可以运行此代码。  
  
 文件名称应引用你系统上的.wav 声音文件。  
  
 若要简化的管理的声音文件，请考虑将文件存储为应用程序资源。 然后可以通过访问这些文件`My.Resources`对象。 有关详细信息，请参阅[My.Resources 对象](~/docs/visual-basic/language-reference/objects/my-resources-object.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Audio" />
      </Docs>
    </Member>
    <Member MemberName="Clipboard">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.MyServices.ClipboardProxy Clipboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.MyServices.ClipboardProxy Clipboard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Clipboard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clipboard As ClipboardProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::MyServices::ClipboardProxy ^ Clipboard { Microsoft::VisualBasic::MyServices::ClipboardProxy ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clipboard : Microsoft.VisualBasic.MyServices.ClipboardProxy" Usage="Microsoft.VisualBasic.Devices.Computer.Clipboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MyServices.ClipboardProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于操作剪贴板的方法。</summary>
        <value>计算机的 <see langword="My.Computer.Clipboard" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问<xref:Microsoft.VisualBasic.MyServices.ClipboardProxy>对象。  
  
 此属性是仅适用于非服务器应用程序。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|否|  
|Windows 服务|**是**|  
|网站|否|  
  
   
  
## Examples  
 此示例将文本从剪贴板读取到字符串`textOnClipboard`。  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 如果在剪贴板上没有任何文本，此例子将失败。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
      </Docs>
    </Member>
    <Member MemberName="Keyboard">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Keyboard Keyboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Keyboard Keyboard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Keyboard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keyboard As Keyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Keyboard ^ Keyboard { Microsoft::VisualBasic::Devices::Keyboard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keyboard : Microsoft.VisualBasic.Devices.Keyboard" Usage="Microsoft.VisualBasic.Devices.Computer.Keyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Keyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供了用于访问键盘当前状态（例如，当前按下了什么键）的属性，并提供了向活动窗口发送键击的方法。</summary>
        <value>计算机的 <see langword="My.Computer.Keyboard" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问`My.Computer.Keyboard`对象。 有关详细信息，请参阅<xref:Microsoft.VisualBasic.Devices.Keyboard>对象。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|否|  
|Windows 服务|**是**|  
|网站|否|  
  
   
  
## Examples  
 此示例使用`My.Computer.Keyboard.CtrlKeyDown`属性来确定当前是否按下计算机的 CTRL 键。  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Keyboard" />
      </Docs>
    </Member>
    <Member MemberName="Mouse">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Mouse Mouse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Mouse Mouse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Mouse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mouse As Mouse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Mouse ^ Mouse { Microsoft::VisualBasic::Devices::Mouse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mouse : Microsoft.VisualBasic.Devices.Mouse" Usage="Microsoft.VisualBasic.Devices.Computer.Mouse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Mouse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于获取有关本地计算机中安装的鼠标的格式和配置信息的属性。</summary>
        <value>计算机的 <see langword="My.Computer.Mouse" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问`My.Computer.Mouse`对象。 有关详细信息，请参阅<xref:Microsoft.VisualBasic.Devices.Mouse>对象。  
  
 此属性是仅适用于非服务器应用程序。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|否|  
|Windows 服务|**是**|  
|网站|否|  
  
   
  
## Examples  
 此示例使用`My.Computer.Mouse.WheelExists`和`My.Computer.Mouse.WheelScrollLines`属性来确定如果的鼠标具有滚动轮的鼠标和多少到滚动它旋转时。  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="Ports">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Devices.Ports Ports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Devices.Ports Ports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Ports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ports As Ports" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Devices::Ports ^ Ports { Microsoft::VisualBasic::Devices::Ports ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Ports : Microsoft.VisualBasic.Devices.Ports" Usage="Microsoft.VisualBasic.Devices.Computer.Ports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.Ports</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象提供用于访问计算机的串行端口的属性和方法。</summary>
        <value>
          <see langword="My.Computer.Ports" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性提供轻松访问`My.Computer.Ports`对象。 有关详细信息，请参阅<xref:Microsoft.VisualBasic.Devices.Ports>对象。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|否|  
|Windows 服务|**是**|  
|网站|否|  
  
   
  
## Examples  
 本示例介绍了如何将字符串发送到计算机的`COM1`串行端口。  
  
 `Using` 块允许应用程序在即使会生成异常的情况下也关闭串行端口。 操作的串行端口的所有代码应都出现在此块中，或在`Try...Catch...Finally`块调用来使用<xref:System.IO.Ports.SerialPort.Close%2A>方法。  
  
 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 方法将数据发送到串行端口。  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 有关详细信息，请参阅[如何： 将字符串发送到串行端口](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Ports" />
      </Docs>
    </Member>
    <Member MemberName="Screen">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Screen Screen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Screen Screen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Computer.Screen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Screen As Screen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Screen ^ Screen { System::Windows::Forms::Screen ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Screen : System.Windows.Forms.Screen" Usage="Microsoft.VisualBasic.Devices.Computer.Screen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Screen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示计算机的主显示屏幕的 <see cref="T:System.Windows.Forms.Screen" /> 对象。</summary>
        <value>表示计算机主屏幕的 <see cref="T:System.Windows.Forms.Screen" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Screen`属性提供的功能类似于<xref:System.Windows.Forms.Screen.PrimaryScreen%2A>属性。  
  
## <a name="availability-by-project-type"></a>项目类型的可用性  
  
|项目类型|可用|  
|------------------|---------------|  
|Windows 窗体应用程序|**是**|  
|类库|**是**|  
|控制台应用程序|**是**|  
|Windows 窗体控件库|**是**|  
|Web 控件库|否|  
|Windows 服务|**是**|  
|网站|否|  
  
   
  
## Examples  
 此示例使用<xref:System.Windows.Forms.Screen.WorkingArea%2A>属性`My.Computer.Screen`属性来确定计算机的工作区域的主显示，并且然后调整窗体来填充的工作区域的大小。  
  
 [!code-vb[VbVbalrMyComputer#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#10)]  
  
 此示例需要在 Windows 窗体应用程序中运行。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制文件和文件夹的访问权限。 关联枚举：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="T:System.Windows.Forms.Screen" />
        <altmember cref="P:System.Windows.Forms.Screen.PrimaryScreen" />
      </Docs>
    </Member>
  </Members>
</Type>