<Type Name="OleDbConnection" FullName="System.Data.OleDb.OleDbConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="158d8e47380b21ed86d2db780e3f659b4a16c908" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37677624" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type OleDbConnection = class&#xA;    inherit DbConnection&#xA;    interface ICloneable&#xA;    interface IDbConnection&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b2e36-101">表示到数据源的连接是打开的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b2e36-101">Represents an open connection to a data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-102"><xref:System.Data.OleDb.OleDbConnection>对象表示与数据源的唯一连接。</span><span class="sxs-lookup"><span data-stu-id="b2e36-102">An <xref:System.Data.OleDb.OleDbConnection> object represents a unique connection to a data source.</span></span> <span data-ttu-id="b2e36-103">使用客户端/服务器数据库系统，它相当于网络连接到服务器。</span><span class="sxs-lookup"><span data-stu-id="b2e36-103">With a client/server database system, it is equivalent to a network connection to the server.</span></span> <span data-ttu-id="b2e36-104">具体取决于本机 OLE DB 访问接口、 某个方法或属性的支持的功能<xref:System.Data.OleDb.OleDbConnection>对象可能不可用。</span><span class="sxs-lookup"><span data-stu-id="b2e36-104">Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <xref:System.Data.OleDb.OleDbConnection> object may not be available.</span></span>  
  
 <span data-ttu-id="b2e36-105">创建的实例时<xref:System.Data.OleDb.OleDbConnection>，所有属性都设置为其初始值。</span><span class="sxs-lookup"><span data-stu-id="b2e36-105">When you create an instance of <xref:System.Data.OleDb.OleDbConnection>, all properties are set to their initial values.</span></span> <span data-ttu-id="b2e36-106">有关这些值的列表，请参阅<xref:System.Data.OleDb.OleDbConnection>构造函数。</span><span class="sxs-lookup"><span data-stu-id="b2e36-106">For a list of these values, see the <xref:System.Data.OleDb.OleDbConnection> constructor.</span></span>  
  
 <span data-ttu-id="b2e36-107">您可以打开多个 DataReader 的单个<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-107">You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>.</span></span> <span data-ttu-id="b2e36-108">如果您使用的 OLE DB 访问接口不支持在单个连接上多个 DataReader，提供程序将为每个隐式打开其他连接。</span><span class="sxs-lookup"><span data-stu-id="b2e36-108">If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.</span></span>  
  
 <span data-ttu-id="b2e36-109">如果<xref:System.Data.OleDb.OleDbConnection>超出范围，它没有闭合。</span><span class="sxs-lookup"><span data-stu-id="b2e36-109">If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed.</span></span> <span data-ttu-id="b2e36-110">因此，必须显式关闭连接通过调用<xref:System.Data.OleDb.OleDbConnection.Close%2A>或**Dispose**，或使用<xref:System.Data.OleDb.OleDbConnection>对象内`Using`语句。</span><span class="sxs-lookup"><span data-stu-id="b2e36-110">Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or by using the <xref:System.Data.OleDb.OleDbConnection> object within a `Using` statement.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2e36-111">若要部署高性能应用程序，必须使用连接池。</span><span class="sxs-lookup"><span data-stu-id="b2e36-111">To deploy high-performance applications, you must use connection pooling.</span></span> <span data-ttu-id="b2e36-112">当用于 OLE DB 使用.NET Framework 数据提供程序时，您无需启用连接池，因为提供程序会自动管理。</span><span class="sxs-lookup"><span data-stu-id="b2e36-112">When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically.</span></span> <span data-ttu-id="b2e36-113">详细了解如何使用连接池与.NET Framework 数据提供程序用于 OLE DB，请参阅[OLE DB、 ODBC 和 Oracle 连接池](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-113">For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see [OLE DB, ODBC, and Oracle Connection Pooling](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).</span></span>  
  
 <span data-ttu-id="b2e36-114">如果严重<xref:System.Data.OleDb.OleDbException>(例如，SQL Server 严重级别为 20 或更高版本） 生成的方法执行<xref:System.Data.OleDb.OleDbCommand>，则<xref:System.Data.OleDb.OleDbConnection>可能已关闭。</span><span class="sxs-lookup"><span data-stu-id="b2e36-114">If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection> might be closed.</span></span> <span data-ttu-id="b2e36-115">但是，用户可以重新打开连接并继续操作。</span><span class="sxs-lookup"><span data-stu-id="b2e36-115">However, the user can reopen the connection and continue.</span></span>  
  
 <span data-ttu-id="b2e36-116">创建的实例的应用程序<xref:System.Data.OleDb.OleDbConnection>对象可以要求所有直接和间接调用方拥有足够的权限的代码通过设置声明性或命令性安全要求。</span><span class="sxs-lookup"><span data-stu-id="b2e36-116">An application that creates an instance of the <xref:System.Data.OleDb.OleDbConnection> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.</span></span> <span data-ttu-id="b2e36-117"><xref:System.Data.OleDb.OleDbConnection> 可以使用的安全要求<xref:System.Data.OleDb.OleDbPermission>对象。</span><span class="sxs-lookup"><span data-stu-id="b2e36-117"><xref:System.Data.OleDb.OleDbConnection> makes security demands using the <xref:System.Data.OleDb.OleDbPermission> object.</span></span> <span data-ttu-id="b2e36-118">用户可以验证其代码通过使用具有足够的权限<xref:System.Data.OleDb.OleDbPermissionAttribute>对象。</span><span class="sxs-lookup"><span data-stu-id="b2e36-118">Users can verify that their code has sufficient permissions by using the <xref:System.Data.OleDb.OleDbPermissionAttribute> object.</span></span> <span data-ttu-id="b2e36-119">用户和管理员还可以使用[Caspol.exe （代码访问安全策略工具）](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)修改计算机、 用户和企业级别的安全策略。</span><span class="sxs-lookup"><span data-stu-id="b2e36-119">Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) to modify security policy at the computer, user, and enterprise levels.</span></span> <span data-ttu-id="b2e36-120">有关详细信息，请参阅[代码访问安全性和 ADO.NET](~/docs/framework/data/adonet/code-access-security.md)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-120">For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 <span data-ttu-id="b2e36-121">有关处理来自数据服务器的警告和信息性消息的详细信息，请参阅[连接事件](~/docs/framework/data/adonet/connection-events.md)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-121">For more information about handling warning and informational messages from the data server, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2e36-122"><xref:System.Data.OleDb.OleDbConnection>对象不支持设置或检索特定于 OLE DB 访问接口的动态属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-122">The <xref:System.Data.OleDb.OleDbConnection> object does not support setting or retrieving dynamic properties specific to an OLE DB provider.</span></span> <span data-ttu-id="b2e36-123">只支持可在 OLE DB 提供程序连接字符串中传递的属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-123">Only properties that can be passed in the connection string for the OLE DB provider are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-124">下面的示例创建<xref:System.Data.OleDb.OleDbCommand>和一个<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-124">The following example creates an <xref:System.Data.OleDb.OleDbCommand> and an <xref:System.Data.OleDb.OleDbConnection>.</span></span> <span data-ttu-id="b2e36-125"><xref:System.Data.OleDb.OleDbConnection>打开，并设置为<xref:System.Data.OleDb.OleDbCommand.Connection%2A>为<xref:System.Data.OleDb.OleDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-125">The <xref:System.Data.OleDb.OleDbConnection> is opened and set as the <xref:System.Data.OleDb.OleDbCommand.Connection%2A> for the <xref:System.Data.OleDb.OleDbCommand>.</span></span> <span data-ttu-id="b2e36-126">该示例然后调用<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>和关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b2e36-126">The example then calls <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> and closes the connection.</span></span> <span data-ttu-id="b2e36-127">若要实现此目的，<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>传递连接字符串和一个 SQL INSERT 语句的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="b2e36-127">To accomplish this, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-128">初始化 <see cref="T:System.Data.OleDb.OleDbConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-128">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-129">初始化 <see cref="T:System.Data.OleDb.OleDbConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-129">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-130">新实例时<xref:System.Data.OleDb.OleDbConnection>创建读/写属性设置为以下初始值，除非专门设置使用在其关联的关键字<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-130">When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.</span></span>  
  
|<span data-ttu-id="b2e36-131">属性</span><span class="sxs-lookup"><span data-stu-id="b2e36-131">Properties</span></span>|<span data-ttu-id="b2e36-132">初始值</span><span class="sxs-lookup"><span data-stu-id="b2e36-132">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|<span data-ttu-id="b2e36-133">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="b2e36-133">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|<span data-ttu-id="b2e36-134">15</span><span class="sxs-lookup"><span data-stu-id="b2e36-134">15</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|<span data-ttu-id="b2e36-135">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="b2e36-135">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|<span data-ttu-id="b2e36-136">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="b2e36-136">empty string ("")</span></span>|  
  
 <span data-ttu-id="b2e36-137">您可以更改这些属性的值只能通过使用<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-137">You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-138">下面的示例创建并打开<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-138">The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbConnection : string -&gt; System.Data.OleDb.OleDbConnection" Usage="new System.Data.OleDb.OleDbConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="b2e36-139">用于打开数据库的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-139">The connection used to open the database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2e36-140">使用指定的连接字符串初始化 <see cref="T:System.Data.OleDb.OleDbConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-140">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" /> class with the specified connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-141">新实例时<xref:System.Data.OleDb.OleDbConnection>创建读/写属性设置为以下初始值，除非专门设置使用在其关联的关键字<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-141">When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.</span></span>  
  
|<span data-ttu-id="b2e36-142">属性</span><span class="sxs-lookup"><span data-stu-id="b2e36-142">Properties</span></span>|<span data-ttu-id="b2e36-143">初始值</span><span class="sxs-lookup"><span data-stu-id="b2e36-143">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|<span data-ttu-id="b2e36-144">15</span><span class="sxs-lookup"><span data-stu-id="b2e36-144">15</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|<span data-ttu-id="b2e36-145">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="b2e36-145">empty string ("")</span></span>|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|<span data-ttu-id="b2e36-146">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="b2e36-146">empty string ("")</span></span>|  
  
 <span data-ttu-id="b2e36-147">您可以更改这些属性的值只能通过使用<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-147">You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-148">下面的示例创建并打开<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-148">The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="oleDbConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-149">开始数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-149">Starts a database transaction.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.OleDb.OleDbTransaction" Usage="oleDbConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-150">以当前的 <see cref="T:System.Data.IsolationLevel" /> 值开始数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-150">Starts a database transaction with the current <see cref="T:System.Data.IsolationLevel" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2e36-151">表示新事务的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-151">An object representing the new transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-152">您必须显式提交或回滚事务使用<xref:System.Data.OleDb.OleDbTransaction.Commit%2A>或<xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b2e36-152">You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method.</span></span> <span data-ttu-id="b2e36-153">若要确保正确执行.NET Framework Data Provider for OLE DB 事务管理模型，请避免使用其他事务管理模型，如所提供的数据源。</span><span class="sxs-lookup"><span data-stu-id="b2e36-153">To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-154">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>和一个<xref:System.Data.OleDb.OleDbTransaction>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-154">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>.</span></span> <span data-ttu-id="b2e36-155">它还演示了如何使用<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>， <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>，和<xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b2e36-155">It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b2e36-156">不支持并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-156">Parallel transactions are not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.OleDb.OleDbTransaction" Usage="oleDbConnection.BeginTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">
          <span data-ttu-id="b2e36-157">事务应在其下运行的隔离级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-157">The isolation level under which the transaction should run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2e36-158">以指定的隔离级别启动数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-158">Starts a database transaction with the specified isolation level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2e36-159">表示新事务的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-159">An object representing the new transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-160">您必须显式提交或回滚事务使用<xref:System.Data.OleDb.OleDbTransaction.Commit%2A>或<xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b2e36-160">You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method.</span></span> <span data-ttu-id="b2e36-161">若要确保正确执行.NET Framework Data Provider for OLE DB 事务管理模型，请避免使用其他事务管理模型，如所提供的数据源。</span><span class="sxs-lookup"><span data-stu-id="b2e36-161">To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2e36-162">如果不指定隔离级别，使用基础提供程序的默认隔离级别。</span><span class="sxs-lookup"><span data-stu-id="b2e36-162">If you do not specify an isolation level, the default isolation level for the underlying provider is used.</span></span> <span data-ttu-id="b2e36-163">若要指定隔离级别，其中<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>方法中，使用的重载的`isolationLevel`参数。</span><span class="sxs-lookup"><span data-stu-id="b2e36-163">To specify an isolation level with the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> method, use the overload that takes the `isolationLevel` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-164">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>和一个<xref:System.Data.OleDb.OleDbTransaction>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-164">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>.</span></span> <span data-ttu-id="b2e36-165">它还演示了如何使用<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>、 一个<xref:System.Data.OleDb.OleDbTransaction.Commit%2A>，和<xref:System.Data.OleDb.OleDbTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b2e36-165">It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b2e36-166">不支持并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-166">Parallel transactions are not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="oleDbConnection.ChangeDatabase value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b2e36-167">数据库名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-167">The database name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2e36-168">更改已打开的 <see cref="T:System.Data.OleDb.OleDbConnection" /> 的当前数据库。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-168">Changes the current database for an open <see cref="T:System.Data.OleDb.OleDbConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-169">中提供的值`database`参数必须是有效的数据库名称。</span><span class="sxs-lookup"><span data-stu-id="b2e36-169">The value supplied in the `database` parameter must be a valid database name.</span></span> <span data-ttu-id="b2e36-170">`database`参数不能包含 null 值、 空字符串或仅有空白字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="b2e36-170">The `database` parameter cannot contain a null value, an empty string, or a string with only blank characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-171">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>并显示它的一些只读属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-171">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b2e36-172">数据库名称无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-172">The database name is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b2e36-173">连接未打开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-173">The connection is not open.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OleDb.OleDbException">
          <span data-ttu-id="b2e36-174">不能更改数据库。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-174">Cannot change the database.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oleDbConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-175">关闭到数据源的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-175">Closes the connection to the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-176"><xref:System.Data.OleDb.OleDbConnection.Close%2A>方法将回滚所有挂起的事务。</span><span class="sxs-lookup"><span data-stu-id="b2e36-176">The <xref:System.Data.OleDb.OleDbConnection.Close%2A> method rolls back any pending transactions.</span></span> <span data-ttu-id="b2e36-177">然后释放到连接池连接，或如果禁用连接池时关闭连接。</span><span class="sxs-lookup"><span data-stu-id="b2e36-177">It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</span></span> <span data-ttu-id="b2e36-178">如果<xref:System.Data.OleDb.OleDbConnection.Close%2A>调用时处理<xref:System.Data.Common.DbConnection.StateChange>事件，无需额外<xref:System.Data.Common.DbConnection.StateChange>的事件触发。</span><span class="sxs-lookup"><span data-stu-id="b2e36-178">If <xref:System.Data.OleDb.OleDbConnection.Close%2A> is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.</span></span>  
  
 <span data-ttu-id="b2e36-179">应用程序可以调用<xref:System.Data.OleDb.OleDbConnection.Close%2A>不止一次。</span><span class="sxs-lookup"><span data-stu-id="b2e36-179">An application can call <xref:System.Data.OleDb.OleDbConnection.Close%2A> more than one time.</span></span> <span data-ttu-id="b2e36-180">不会生成异常。</span><span class="sxs-lookup"><span data-stu-id="b2e36-180">No exception is generated.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b2e36-181">不要调用<xref:System.Data.OleDb.OleDbConnection.Close%2A>或**释放**上<xref:System.Data.OleDb.OleDbConnection>，则<xref:System.Data.OleDb.OleDbDataReader>，或在任何其他托管的对象`Finalize`类的方法。</span><span class="sxs-lookup"><span data-stu-id="b2e36-181">Do not call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** on an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbDataReader>, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="b2e36-182">在终结器中，您应仅释放类直接拥有的非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="b2e36-182">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="b2e36-183">如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="b2e36-183">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="b2e36-184">有关详细信息，请参阅[垃圾回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-184">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-185">获取或设置用于打数据库的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-185">Gets or sets the string used to open a database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2e36-186">OLE DB 提供程序连接字符串，它包括建立初始连接所必需的数据源名称和其他参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-186">The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection.</span>
          </span>
          <span data-ttu-id="b2e36-187">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-187">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-188"><xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>旨在符合 OLE DB 连接字符串的格式为尽可能有以下例外：</span><span class="sxs-lookup"><span data-stu-id="b2e36-188">The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> is designed to match OLE DB connection string format as closely as possible with the following exceptions:</span></span>  
  
-   <span data-ttu-id="b2e36-189">"提供程序 = `value` "子句是必需的。</span><span class="sxs-lookup"><span data-stu-id="b2e36-189">The "Provider = `value` " clause is required.</span></span> <span data-ttu-id="b2e36-190">但是，不能使用"提供程序 = MSDASQL"因为 OLE DB 的.NET Framework 数据提供程序不支持 OLE DB Provider for ODBC (MSDASQL)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-190">However, you cannot use "Provider = MSDASQL" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL).</span></span> <span data-ttu-id="b2e36-191">若要访问 ODBC 数据源，请使用<xref:System.Data.Odbc.OdbcConnection>对象，它是在<xref:System.Data.Odbc>命名空间。</span><span class="sxs-lookup"><span data-stu-id="b2e36-191">To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.</span></span>  
  
-   <span data-ttu-id="b2e36-192">不同于 ODBC 或 ADO，则返回的连接字符串是与用户设置相同<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>，减去安全信息如果`Persist Security Info`设置为`false`（默认值）。</span><span class="sxs-lookup"><span data-stu-id="b2e36-192">Unlike ODBC or ADO, the connection string that is returned is the same as the user-set <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, minus security information if `Persist Security Info` is set to `false` (default).</span></span> <span data-ttu-id="b2e36-193">用于 OLE DB.NET Framework 数据提供程序不会持久保存或连接字符串中返回密码，除非您设置`Persist Security Info`关键字`true`（不推荐）。</span><span class="sxs-lookup"><span data-stu-id="b2e36-193">The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended).</span></span> <span data-ttu-id="b2e36-194">若要维护高级别的安全性，强烈建议你使用`Integrated Security`关键字`Persist Security Info`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="b2e36-194">To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.</span></span>  
  
 <span data-ttu-id="b2e36-195">可以使用<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>属性，以连接到各种数据源。</span><span class="sxs-lookup"><span data-stu-id="b2e36-195">You can use the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property to connect to a variety of data sources.</span></span> <span data-ttu-id="b2e36-196">下面的示例说明了几个可能的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="b2e36-196">The following example illustrates several possible connection strings.</span></span>  
  
```  
"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes"  
  
"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\bin\LocalAccess40.mdb"  
  
"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI"  
```  
  
 <span data-ttu-id="b2e36-197">如果`Data Source`关键字未指定连接字符串中，则提供程序将尝试连接到本地服务器，如果有可用。</span><span class="sxs-lookup"><span data-stu-id="b2e36-197">If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.</span></span>  
  
 <span data-ttu-id="b2e36-198">有关连接字符串的详细信息，请参阅[将连接字符串关键字用于 SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-198">For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).</span></span>  
  
 <span data-ttu-id="b2e36-199"><xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>仅当连接关闭时，可以设置属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-199">The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property can be set only when the connection is closed.</span></span> <span data-ttu-id="b2e36-200">许多连接字符串值都有相应的只读属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-200">Many of the connection string values have corresponding read-only properties.</span></span> <span data-ttu-id="b2e36-201">设置连接字符串时，会更新这些属性，除非检测到错误。</span><span class="sxs-lookup"><span data-stu-id="b2e36-201">When the connection string is set, these properties are updated, except when an error is detected.</span></span> <span data-ttu-id="b2e36-202">在这种情况下，不会更新任何属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-202">In this case, none of the properties are updated.</span></span> <span data-ttu-id="b2e36-203"><xref:System.Data.OleDb.OleDbConnection> 属性返回中包含的那些设置<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-203"><xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.</span></span>  
  
 <span data-ttu-id="b2e36-204">重置<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>关闭的连接将重置所有连接字符串值和相关的属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-204">Resetting the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> on a closed connection resets all connection string values and related properties.</span></span> <span data-ttu-id="b2e36-205">这包括密码。</span><span class="sxs-lookup"><span data-stu-id="b2e36-205">This includes the password.</span></span> <span data-ttu-id="b2e36-206">例如，如果设置包含的连接字符串"Initial Catalog = AdventureWorks"，然后重置的连接字符串"提供程序 = SQLOLEDB; 数据源 = MySQLServer; IntegratedSecurity = SSPI"，则<xref:System.Data.OleDb.OleDbConnection.Database%2A>属性不再设置为AdventureWorks。</span><span class="sxs-lookup"><span data-stu-id="b2e36-206">For example, if you set a connection string that includes "Initial Catalog= AdventureWorks", and then reset the connection string to "Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks.</span></span> <span data-ttu-id="b2e36-207">(连接字符串的初始目录值对应于`Database`属性。)</span><span class="sxs-lookup"><span data-stu-id="b2e36-207">(The Initial Catalog value of the connection string corresponds to the `Database` property.)</span></span>  
  
 <span data-ttu-id="b2e36-208">将属性设置时执行的连接字符串的初始验证。</span><span class="sxs-lookup"><span data-stu-id="b2e36-208">A preliminary validation of the connection string is performed when the property is set.</span></span> <span data-ttu-id="b2e36-209">如果值为`Provider`， `Connect Timeout`， `Persist Security Info`，或`OLE DB Services`包含在字符串中，检查这些值。</span><span class="sxs-lookup"><span data-stu-id="b2e36-209">If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked.</span></span> <span data-ttu-id="b2e36-210">当应用程序调用<xref:System.Data.OleDb.OleDbConnection.Open%2A>完全验证方法中，连接字符串。</span><span class="sxs-lookup"><span data-stu-id="b2e36-210">When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated.</span></span> <span data-ttu-id="b2e36-211">如果连接字符串包含无效或不受支持属性中，运行时异常，如<xref:System.ArgumentException>，生成。</span><span class="sxs-lookup"><span data-stu-id="b2e36-211">If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b2e36-212">它是可以提供连接信息<xref:System.Data.OleDb.OleDbConnection>在通用数据链接 (UDL) 文件中; 但是您应避免这样做。</span><span class="sxs-lookup"><span data-stu-id="b2e36-212">It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so.</span></span> <span data-ttu-id="b2e36-213">UDL 文件未加密，并公开以明文形式的连接字符串信息。</span><span class="sxs-lookup"><span data-stu-id="b2e36-213">UDL files are not encrypted and expose connection string information in clear text.</span></span> <span data-ttu-id="b2e36-214">因为 UDL 文件对您的应用程序来说是一个基于文件的外部资源，所以无法使用 .NET Framework 保护该文件。</span><span class="sxs-lookup"><span data-stu-id="b2e36-214">Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.</span></span>  
  
 <span data-ttu-id="b2e36-215">连接字符串的基本格式包含一系列的关键字/值对之间用分号分隔。</span><span class="sxs-lookup"><span data-stu-id="b2e36-215">The basic format of a connection string includes a series of keyword/value pairs separated by semicolons.</span></span> <span data-ttu-id="b2e36-216">每个关键字和它的值之间用等号 (=) 连接。</span><span class="sxs-lookup"><span data-stu-id="b2e36-216">The equal sign (=) connects each keyword and its value.</span></span> <span data-ttu-id="b2e36-217">若要包含的值包含分号、 单引号字符或双引号字符，则该值必须括在双引号。</span><span class="sxs-lookup"><span data-stu-id="b2e36-217">To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks.</span></span> <span data-ttu-id="b2e36-218">如果值包含分号和双引号字符，则该值可以用单引号引起来。</span><span class="sxs-lookup"><span data-stu-id="b2e36-218">If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks.</span></span> <span data-ttu-id="b2e36-219">单引号还是双引号字符开头的值的情况下很有用。</span><span class="sxs-lookup"><span data-stu-id="b2e36-219">The single quotation mark is also useful if the value starts with a double-quote character.</span></span> <span data-ttu-id="b2e36-220">相反，如果的值以单引号开头，则可以使用双引号。</span><span class="sxs-lookup"><span data-stu-id="b2e36-220">Conversely, the double quotation mark can be used if the value starts with a single quotation mark.</span></span> <span data-ttu-id="b2e36-221">如果值包含单引号和双引号字符，用于将值括起来的引号字符必须成对每次它发生时的值中出现。</span><span class="sxs-lookup"><span data-stu-id="b2e36-221">If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.</span></span>  
  
 <span data-ttu-id="b2e36-222">中的字符串值包含前导或尾随空格，则该值必须括在单引号或双引号引起来。</span><span class="sxs-lookup"><span data-stu-id="b2e36-222">To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks.</span></span> <span data-ttu-id="b2e36-223">周围的整数、 布尔值或枚举的值的任何前导或尾随空格将被忽略，即使用引号括起来。</span><span class="sxs-lookup"><span data-stu-id="b2e36-223">Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks.</span></span> <span data-ttu-id="b2e36-224">但是，会保留空格的字符串字面常数关键字或值中。</span><span class="sxs-lookup"><span data-stu-id="b2e36-224">However, spaces within a string literal keyword or value are preserved.</span></span> <span data-ttu-id="b2e36-225">而不使用分隔符，可能的连接字符串中使用单引号或双引号括起来 (例如，`Data Source= my'Server`或`Data Source= my"Server`) 如果英文引号连用字符不是值中的第一个或最后一个字符。</span><span class="sxs-lookup"><span data-stu-id="b2e36-225">Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my"Server`) unless a quotation-mark character is the first or last character in the value.</span></span>  
  
 <span data-ttu-id="b2e36-226">若要在关键字或值中包含等号 （=），它的前面必须通过另一个等号。</span><span class="sxs-lookup"><span data-stu-id="b2e36-226">To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign.</span></span> <span data-ttu-id="b2e36-227">例如，在假设的连接字符串</span><span class="sxs-lookup"><span data-stu-id="b2e36-227">For example, in the hypothetical connection string</span></span>  
  
```  
"key==word=value"  
```  
  
 <span data-ttu-id="b2e36-228">关键字是"键 = word"，值为"value"。</span><span class="sxs-lookup"><span data-stu-id="b2e36-228">the keyword is "key=word" and the value is "value".</span></span>  
  
 <span data-ttu-id="b2e36-229">如果关键字中的特定关键字 = 的值对中出现多次连接字符串中设置的值使用列出的最后一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="b2e36-229">If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.</span></span>  
  
 <span data-ttu-id="b2e36-230">关键字不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="b2e36-230">Keywords are not case sensitive.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b2e36-231">构造基于用户输入，例如，从一个对话框，将其追加到连接字符串检索用户 ID 和密码信息时的连接字符串时应十分小心。</span><span class="sxs-lookup"><span data-stu-id="b2e36-231">You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string.</span></span> <span data-ttu-id="b2e36-232">应用程序应确保用户不能嵌入其他的连接字符串参数中的这些值，例如，输入密码作为"validpassword; database = somedb"尝试附加到不同的数据库中。</span><span class="sxs-lookup"><span data-stu-id="b2e36-232">The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as "validpassword;database= somedb" in an attempt to attach to a different database.</span></span> <span data-ttu-id="b2e36-233">如果使用 OLE DB 连接的扩展属性连接字符串参数，避免传递用户 Id 和密码，因为您应该避免存储用户 Id 和密码以明文形式，并且默认设置的`Persist Security Info= false`不影响`Extended Properties`参数。</span><span class="sxs-lookup"><span data-stu-id="b2e36-233">If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-234">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>和连接字符串中设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-234">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b2e36-235">提供了无效的连接字符串参数或未提供所需的连接字符串参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-235">An invalid connection string argument has been supplied or a required connection string argument has not been supplied.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-236">获取终止尝试并生成错误之前在尝试建立连接时所等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-236">Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2e36-237">等待连接打开的时间（以秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-237">The time in seconds to wait for a connection to open.</span>
          </span>
          <span data-ttu-id="b2e36-238">默认值为 15 秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-238">The default value is 15 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-239">值为 0 表示没有限制，并应避免在<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>因为连接尝试将无限期等待。</span><span class="sxs-lookup"><span data-stu-id="b2e36-239">A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> because an attempt to connect will wait indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-240">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>和连接字符串中设置的某些属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-240">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b2e36-241">设置的值小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-241">The value set is less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-242">创建并返回一个与该 <see cref="T:System.Data.OleDb.OleDbCommand" /> 关联的 <see cref="T:System.Data.OleDb.OleDbConnection" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-242">Creates and returns an <see cref="T:System.Data.OleDb.OleDbCommand" /> object associated with the <see cref="T:System.Data.OleDb.OleDbConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2e36-243">一个 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-243">An <see cref="T:System.Data.OleDb.OleDbCommand" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="oleDbConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.OleDb.OleDbConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-244">获取当前数据库的名称或打开连接后要使用的数据库的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-244">Gets the name of the current database or the database to be used after a connection is opened.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2e36-245">当前数据库的名称或打开连接后要使用的数据库的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-245">The name of the current database or the name of the database to be used after a connection is opened.</span>
          </span>
          <span data-ttu-id="b2e36-246">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-246">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-247"><xref:System.Data.OleDb.OleDbConnection.Database%2A>属性会动态更新。</span><span class="sxs-lookup"><span data-stu-id="b2e36-247">The <xref:System.Data.OleDb.OleDbConnection.Database%2A> property updates dynamically.</span></span> <span data-ttu-id="b2e36-248">如果您更改当前数据库使用 SQL 语句或<xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A>方法发送一条信息性消息和自动更新的属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-248">If you change the current database using a SQL statement or the <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-249">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>并显示它的一些只读属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-249">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-250">获取数据源的服务器名或文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-250">Gets the server name or file name of the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2e36-251">数据源的服务器名或文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-251">The server name or file name of the data source.</span>
          </span>
          <span data-ttu-id="b2e36-252">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-252">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-253">如果数据库的连接已关闭，`DataSource`属性返回中包含的任何内容`ConnectionString`为数据源的关键字。</span><span class="sxs-lookup"><span data-stu-id="b2e36-253">If the connection to the database is closed, the `DataSource` property returns whatever is contained in `ConnectionString` for the data source keyword.</span></span> <span data-ttu-id="b2e36-254">如果连接已打开并`ConnectionString`数据源关键字值以开始"&#124;datadirectory&#124;"，该属性返回中包含的任何内容`ConnectionString`为数据源关键字。</span><span class="sxs-lookup"><span data-stu-id="b2e36-254">If the connection is open and the `ConnectionString` data source keyword's value starts with "&#124;datadirectory&#124;", the property returns whatever is contained in `ConnectionString` for the data source keyword only.</span></span> <span data-ttu-id="b2e36-255">如果数据库的连接处于打开状态，该属性返回的本机提供程序返回有关`DBPROP_INIT_DATASOURCE,`如果为空，本机提供程序的`DBPROP_DATASOURCENAME`返回。</span><span class="sxs-lookup"><span data-stu-id="b2e36-255">If the connection to the database is open, the property returns what the native provider returns for the `DBPROP_INIT_DATASOURCE,` and if that is empty, the native provider’s `DBPROP_DATASOURCENAME` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-256">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>并显示它的一些只读属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-256">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="oleDbConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="oleDbConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="b2e36-257">对用于登记的现有 <see cref="T:System.EnterpriseServices.ITransaction" /> 的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-257">A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2e36-258">在指定的事务中登记为分布式事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-258">Enlists in the specified transaction as a distributed transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-259">新增 ADO.NET 2.0 中功能支持使用<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>方法在分布式事务中登记。</span><span class="sxs-lookup"><span data-stu-id="b2e36-259">New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="b2e36-260">因为登记中的连接<xref:System.Transactions.Transaction>实例， **EnlistTransaction**利用中提供的功能<xref:System.Transactions>用于管理命名空间的分布式事务，使其优于**EnlistDistributedTransaction**实现此目的。</span><span class="sxs-lookup"><span data-stu-id="b2e36-260">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose.</span></span> <span data-ttu-id="b2e36-261">有关详细信息，请参阅[分布式事务](~/docs/framework/data/adonet/distributed-transactions.md)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-261">For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="b2e36-262">你可以继续在现有使用分布式的事务中登记<xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A>方法如果禁用自动登记。</span><span class="sxs-lookup"><span data-stu-id="b2e36-262">You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled.</span></span> <span data-ttu-id="b2e36-263">在现有分布式事务中登记可以确保，提交或回滚事务，如果数据源的代码所做的修改也提交或回滚。</span><span class="sxs-lookup"><span data-stu-id="b2e36-263">Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</span></span> <span data-ttu-id="b2e36-264">有关分布式事务的详细信息，请参阅[分布式事务](~/docs/framework/data/adonet/distributed-transactions.md)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-264">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="b2e36-265"><xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> 如果返回的异常<xref:System.Data.OleDb.OleDbConnection>已经启动了事务使用<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-265"><xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OleDb.OleDbConnection> has already started a transaction using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="b2e36-266">但是，如果该事务是在数据源启动的本地事务 (例如，通过显式执行 BEGIN TRANSACTION 语句使用<xref:System.Data.OleDb.OleDbCommand>对象)，<xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A>回滚本地事务，并在现有登记作为请求的分布式的事务。</span><span class="sxs-lookup"><span data-stu-id="b2e36-266">However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OleDb.OleDbCommand> object), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested.</span></span> <span data-ttu-id="b2e36-267">不会收到通知，本地事务已回滚，并且负责不管理任何本地事务启动使用<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-267">You won't receive notice that the local transaction was rolled back and are responsible for managing any local transactions not started using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="oleDbConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="b2e36-268">对用于登记的现有 <see cref="T:System.Transactions.Transaction" /> 的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-268">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2e36-269">在指定的事务中登记为分布式事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-269">Enlists in the specified transaction as a distributed transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-270">新增 ADO.NET 2.0 中功能支持使用<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>方法在分布式事务中登记。</span><span class="sxs-lookup"><span data-stu-id="b2e36-270">New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="b2e36-271">因为登记中的连接<xref:System.Transactions.Transaction>实例， **EnlistTransaction**利用中提供的功能<xref:System.Transactions>用于管理命名空间的分布式事务，使其优于**EnlistDistributedTransaction**，使用<xref:System.EnterpriseServices.ITransaction>对象。</span><span class="sxs-lookup"><span data-stu-id="b2e36-271">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a <xref:System.EnterpriseServices.ITransaction> object.</span></span> <span data-ttu-id="b2e36-272">它还具有略有不同的语义： 后显式事务上登记连接，不能取消登记或第一个事务完成之前在另一个事务中登记。</span><span class="sxs-lookup"><span data-stu-id="b2e36-272">It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</span></span> <span data-ttu-id="b2e36-273">有关分布式事务的详细信息，请参阅[分布式事务](~/docs/framework/data/adonet/distributed-transactions.md)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-273">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOleDbSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetOleDbSchemaTable(valuetype System.Guid schema, object[] restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOleDbSchemaTable (schema As Guid, restrictions As Object()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetOleDbSchemaTable(Guid schema, cli::array &lt;System::Object ^&gt; ^ restrictions);" />
      <MemberSignature Language="F#" Value="member this.GetOleDbSchemaTable : Guid * obj[] -&gt; System.Data.DataTable" Usage="oleDbConnection.GetOleDbSchemaTable (schema, restrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Guid" />
        <Parameter Name="restrictions" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="schema">
          <span data-ttu-id="b2e36-274">
            <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> 的值之一，它指定要返回的架构表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-274">One of the <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> values that specifies the schema table to return.</span>
          </span>
        </param>
        <param name="restrictions">
          <span data-ttu-id="b2e36-275">限制值的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-275">An <see cref="T:System.Object" /> array of restriction values.</span>
          </span>
          <span data-ttu-id="b2e36-276">这些值按照限制列的顺序来应用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-276">These are applied in the order of the restriction columns.</span>
          </span>
          <span data-ttu-id="b2e36-277">即，第一个限制值应用于第一个限制列，第二个限制值应用于第二个限制列，依此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-277">That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2e36-278">应用了指定的限制之后，按照 GUID 的指示从数据源返回架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-278">Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2e36-279">一个包含所请求的架构信息的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-279">A <see cref="T:System.Data.DataTable" /> that contains the requested schema information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-280">作为返回的架构表<xref:System.Data.DataTable>具有相同的格式与指定的 OLE DB 架构行集`schema`参数。</span><span class="sxs-lookup"><span data-stu-id="b2e36-280">The schema table is returned as a <xref:System.Data.DataTable> that has the same format as the OLE DB schema rowset specified by the `schema` parameter.</span></span> <span data-ttu-id="b2e36-281">使用`restrictions`参数中返回的行进行过滤<xref:System.Data.DataTable>（例如，通过指定表名称、 类型、 所有者或架构的限制）。</span><span class="sxs-lookup"><span data-stu-id="b2e36-281">Use the `restrictions` parameter to filter the rows to be returned in the <xref:System.Data.DataTable> (for example, by specifying restrictions for table name, type, owner, or schema).</span></span> <span data-ttu-id="b2e36-282">如果数组中传递的值，包括空字符串或包含 null 值，不包含值的数组元素。</span><span class="sxs-lookup"><span data-stu-id="b2e36-282">When you pass values in the array, include empty strings or nulls for array elements that do not contain values.</span></span> <span data-ttu-id="b2e36-283">如果传递到一个空数组`restrictions`，返回所有行 （一个用于每个表） 在默认顺序。</span><span class="sxs-lookup"><span data-stu-id="b2e36-283">If you pass an empty array to `restrictions`, all rows (one for each table) are returned in default order.</span></span> <span data-ttu-id="b2e36-284">数组中的值相对应的源表中列的顺序和<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-284">Values in the array correspond to the order of the columns in the source table and <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b2e36-285">限制数组中的每个元素与架构行集中的相应列的内容。</span><span class="sxs-lookup"><span data-stu-id="b2e36-285">Each element in the restrictions array is compared with the content of the corresponding column in the schema rowset.</span></span> <span data-ttu-id="b2e36-286">例如，与在行集中的第一列的限制数组中的第一个元素进行比较。</span><span class="sxs-lookup"><span data-stu-id="b2e36-286">For example, the first element in the restrictions array is compared to first column in the rowset.</span></span> <span data-ttu-id="b2e36-287">如果限制元素不为 null，只有与该限制的值完全匹配的行从架构行集将添加到生成<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-287">If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="b2e36-288"><xref:System.Data.OleDb.OleDbConnection>方法调用基础 OLE DB **idbschemarowset:: Getrowset**方法使用标准公共语言运行时转换规则。</span><span class="sxs-lookup"><span data-stu-id="b2e36-288">The <xref:System.Data.OleDb.OleDbConnection> method calls the underlying OLE DB **IDBSchemaRowset::GetRowset** method using standard common language runtime conversion rules.</span></span> <span data-ttu-id="b2e36-289">有关详细信息，请参阅[COM 数据类型](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-289">For more information, see [COM Data Types](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061).</span></span>  
  
 <span data-ttu-id="b2e36-290">可以使用检索文字信息<xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-290">You can retrieve information about literals by using <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>.</span></span> <span data-ttu-id="b2e36-291">这提供了信息等效于调用 OLE DB **IDBInfo::GetLiteralInfo**接口或 ADO **Connection.OpenSchema**方法替换`adSchemaDBInfoLiterals`常量。</span><span class="sxs-lookup"><span data-stu-id="b2e36-291">This provides information equivalent to calling the OLE DB **IDBInfo::GetLiteralInfo** interface, or the ADO **Connection.OpenSchema** method with the `adSchemaDBInfoLiterals` constant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-292">下面的示例返回数据库中的表的列表。</span><span class="sxs-lookup"><span data-stu-id="b2e36-292">The following sample returns a list of tables in a database.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OleDb.OleDbException">
          <span data-ttu-id="b2e36-293">指定的限制集无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-293">The specified set of restrictions is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b2e36-294">
            <see cref="T:System.Data.OleDb.OleDbConnection" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-294">The <see cref="T:System.Data.OleDb.OleDbConnection" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b2e36-295">OLE DB 提供程序不支持指定的架构行集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-295">The specified schema rowset is not supported by the OLE DB provider.</span>
          </span>
          <span data-ttu-id="b2e36-296">- 或 -  <paramref name="schema" /> 参数包含 <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> 的值，<paramref name="restrictions" /> 参数包含一条或多条限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-296">-or-  The <paramref name="schema" /> parameter contains a value of <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> and the <paramref name="restrictions" /> parameter contains one or more restrictions.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-297">返回此 <see cref="T:System.Data.OleDb.OleDbConnection" /> 的数据源的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-297">Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-298">返回此 <see cref="T:System.Data.OleDb.OleDbConnection" /> 的数据源的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-298">Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2e36-299">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-299">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">
          <span data-ttu-id="b2e36-300">指定要返回的架构的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-300">Specifies the name of the schema to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2e36-301">使用表示架构名称的指定字符串返回此 <see cref="T:System.Data.OleDb.OleDbConnection" /> 的数据源的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-301">Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" /> using the specified string for the schema name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2e36-302">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-302">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-303">当`collectionName`指定为 null，<xref:System.Data.DataTable>将包含有关可用的所有元数据和其限制的信息。</span><span class="sxs-lookup"><span data-stu-id="b2e36-303">When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">
          <span data-ttu-id="b2e36-304">指定要返回的架构的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-304">Specifies the name of the schema to return.</span>
          </span>
        </param>
        <param name="restrictionValues">
          <span data-ttu-id="b2e36-305">为请求的架构指定一组限制值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-305">Specifies a set of restriction values for the requested schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2e36-306">使用表示架构名称的指定字符串以及表示限制值的指定字符串数组返回此 <see cref="T:System.Data.OleDb.OleDbConnection" /> 的数据源的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-306">Returns schema information for the data source of this <see cref="T:System.Data.OleDb.OleDbConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2e36-307">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-307">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-308">当`collectionName`指定为 null，<xref:System.Data.DataTable>将包含有关可用的所有元数据和其限制的信息。</span><span class="sxs-lookup"><span data-stu-id="b2e36-308">When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions.</span></span>  
  
 <span data-ttu-id="b2e36-309">`restrictionValues`参数可以提供*n*深度的值指定的特定集合的限制集合。</span><span class="sxs-lookup"><span data-stu-id="b2e36-309">The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection.</span></span> <span data-ttu-id="b2e36-310">若要将值设置给定的限制，并且未设置其他限制的值，需要将前面的限制，则为 null，然后将放在你想要为指定值的限制为适当的值。</span><span class="sxs-lookup"><span data-stu-id="b2e36-310">In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</span></span>  
  
 <span data-ttu-id="b2e36-311">此示例是"表"集合。</span><span class="sxs-lookup"><span data-stu-id="b2e36-311">An example of this is the "Tables" collection.</span></span> <span data-ttu-id="b2e36-312">如果想要返回仅具有所有者"Carl"相关联的表，以及"Tables"集合存在三个限制 （数据库、 所有者和表名称），则必须传递 （至少） 以下值： null、"Carl"。</span><span class="sxs-lookup"><span data-stu-id="b2e36-312">If the "Tables" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner "Carl," you must pass in the following values (at a minimum): null, "Carl".</span></span> <span data-ttu-id="b2e36-313">如果未传入限制值，默认值用于该限制。</span><span class="sxs-lookup"><span data-stu-id="b2e36-313">If a restriction value is not passed in, the default values are used for that restriction.</span></span> <span data-ttu-id="b2e36-314">这将是相同的映射与传入 null，这是传入空字符串作为参数值不同。</span><span class="sxs-lookup"><span data-stu-id="b2e36-314">This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.</span></span> <span data-ttu-id="b2e36-315">在这种情况下，空字符串 ("") 被视为可指定参数的值。</span><span class="sxs-lookup"><span data-stu-id="b2e36-315">In that case, the empty string ("") is considered to be the value for the specified parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OleDbInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.OleDb.OleDbInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.OleDb.OleDbInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-316">在提供程序发送警告或信息性消息时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-316">Occurs when the provider sends a warning or an informational message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-317">要处理警告或信息性消息，由服务器发送客户端应创建<xref:System.Data.OleDb.OleDbInfoMessageEventHandler>委托来侦听此事件。</span><span class="sxs-lookup"><span data-stu-id="b2e36-317">Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegate to listen to this event.</span></span>  
  
 <span data-ttu-id="b2e36-318"><xref:System.Data.OleDb.OleDbConnection.InfoMessage>事件发生时从数据源返回严重性为低的消息。</span><span class="sxs-lookup"><span data-stu-id="b2e36-318">The <xref:System.Data.OleDb.OleDbConnection.InfoMessage> event occurs when a message with low severity is returned from the data source.</span></span> <span data-ttu-id="b2e36-319">低严重性消息是指那些不会导致异常。</span><span class="sxs-lookup"><span data-stu-id="b2e36-319">Low severity messages are those that do not cause an exception.</span></span> <span data-ttu-id="b2e36-320">这包括错误消息严重级别小于或等于 10 的 Microsoft SQL server</span><span class="sxs-lookup"><span data-stu-id="b2e36-320">For Microsoft SQL Server, this includes error messages that have a severity of 10 or less</span></span>  
  
 <span data-ttu-id="b2e36-321">有关详细信息和示例，请参阅[连接事件](~/docs/framework/data/adonet/connection-events.md)。</span><span class="sxs-lookup"><span data-stu-id="b2e36-321">For more information and an example, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="oleDbConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-322">使用由 <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" /> 指定的属性设置打开一个数据库连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-322">Opens a database connection with the property settings specified by the <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-323"><xref:System.Data.OleDb.OleDbConnection>绘制从连接池中的打开的连接，如果有可用。</span><span class="sxs-lookup"><span data-stu-id="b2e36-323">The <xref:System.Data.OleDb.OleDbConnection> draws an open connection from the connection pool if one is available.</span></span> <span data-ttu-id="b2e36-324">否则，它在建立与数据源的新连接。</span><span class="sxs-lookup"><span data-stu-id="b2e36-324">Otherwise, it establishes a new connection to the data source.</span></span> <span data-ttu-id="b2e36-325">您可以打开多个 DataReader 的单个<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-325">You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>.</span></span> <span data-ttu-id="b2e36-326">如果您使用的 OLEDB 访问接口不支持在单个连接上多个活动的 DataReader，OLEDB 访问接口将为每个隐式打开其他连接。</span><span class="sxs-lookup"><span data-stu-id="b2e36-326">If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2e36-327">如果<xref:System.Data.OleDb.OleDbConnection>超出范围，它没有闭合。</span><span class="sxs-lookup"><span data-stu-id="b2e36-327">If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed.</span></span> <span data-ttu-id="b2e36-328">因此，必须显式关闭连接通过调用<xref:System.Data.OleDb.OleDbConnection.Close%2A>或**Dispose**，或使用中的连接中`Using`语句。</span><span class="sxs-lookup"><span data-stu-id="b2e36-328">Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or using the connection within a `Using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b2e36-329">连接已打开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-329">The connection is already open.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OleDb.OleDbException">
          <span data-ttu-id="b2e36-330">打开连接时出现的连接级别错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-330">A connection-level error occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : string" Usage="System.Data.OleDb.OleDbConnection.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-331">获取在连接字符串的“Provider = ”子句中指定的 OLE DB 提供程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-331">Gets the name of the OLE DB provider specified in the "Provider= " clause of the connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2e36-332">在连接字符串的“Provider= ”子句中指定的提供程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-332">The name of the provider as specified in the "Provider= " clause of the connection string.</span>
          </span>
          <span data-ttu-id="b2e36-333">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-333">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2e36-334">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>并显示它的一些只读属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-334">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberSignature Language="F#" Value="static member ReleaseObjectPool : unit -&gt; unit" Usage="System.Data.OleDb.OleDbConnection.ReleaseObjectPool " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-335">指示可在释放最后一个基础连接时释放 <see cref="T:System.Data.OleDb.OleDbConnection" /> 对象池。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-335">Indicates that the <see cref="T:System.Data.OleDb.OleDbConnection" /> object pool can be released when the last underlying connection is released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-336">`ReleaseObjectPool` 可以将否则保留为共用的释放资源调用<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="b2e36-336">`ReleaseObjectPool` can be called to free resources that would otherwise be reserved for pooled <xref:System.Data.OleDb.OleDbConnection> objects.</span></span> <span data-ttu-id="b2e36-337">您可能想要如果为例，连接对象将不会使用 OLE DB services 通常将入池的连接活动的时间量内再次调用此方法。</span><span class="sxs-lookup"><span data-stu-id="b2e36-337">You might want to call this method if, for example, the connection object will not be used again for the amount of time that OLE DB services ordinarily keeps pooled connections active.</span></span> <span data-ttu-id="b2e36-338">请注意，仅仅调用此方法不会实际释放位于池中的活动连接。</span><span class="sxs-lookup"><span data-stu-id="b2e36-338">Note that calling the method alone does not actually release the active connections that exist in the pool.</span></span>  
  
 <span data-ttu-id="b2e36-339">最后释放该池之前，必须执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="b2e36-339">The following must occur before the pool is finally disposed:</span></span>  
  
1.  <span data-ttu-id="b2e36-340">调用<xref:System.Data.OleDb.OleDbConnection.Close%2A>以返回到池的连接对象。</span><span class="sxs-lookup"><span data-stu-id="b2e36-340">Call <xref:System.Data.OleDb.OleDbConnection.Close%2A> to return the connection object to the pool.</span></span>  
  
2.  <span data-ttu-id="b2e36-341">允许每个池的超时的连接对象。</span><span class="sxs-lookup"><span data-stu-id="b2e36-341">Allow each connection object to time out of the pool.</span></span>  
  
3.  <span data-ttu-id="b2e36-342">调用 <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>。</span><span class="sxs-lookup"><span data-stu-id="b2e36-342">Call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.</span></span>  
  
4.  <span data-ttu-id="b2e36-343">调用垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="b2e36-343">Invoke garbage collection.</span></span>  
  
 <span data-ttu-id="b2e36-344">相反，如果调用<xref:System.Data.OleDb.OleDbConnection.Close%2A>上的所有活动连接，并调用垃圾回收，但不是调用<xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>，保留用于共用的对象将保持可用的资源。</span><span class="sxs-lookup"><span data-stu-id="b2e36-344">Conversely, if you call <xref:System.Data.OleDb.OleDbConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, the resources reserved for the pooled objects will remain available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-345">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>、 将其打开、 显示的某些属性、 关闭的连接和释放对象池，以节省资源。</span><span class="sxs-lookup"><span data-stu-id="b2e36-345">The following example creates an <xref:System.Data.OleDb.OleDbConnection>, opens it, displays some of its properties, closes the connection, and releases the object pool to conserve resources.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberSignature Language="F#" Value="member this.ResetState : unit -&gt; unit" Usage="oleDbConnection.ResetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-346">更新 <see cref="P:System.Data.OleDb.OleDbConnection.State" /> 对象的 <see cref="T:System.Data.OleDb.OleDbConnection" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-346">Updates the <see cref="P:System.Data.OleDb.OleDbConnection.State" /> property of the <see cref="T:System.Data.OleDb.OleDbConnection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-347">某些 OLE DB 访问接口可以检查该连接的当前状态。</span><span class="sxs-lookup"><span data-stu-id="b2e36-347">Some OLE DB providers can check the current state of the connection.</span></span> <span data-ttu-id="b2e36-348">例如，如果数据库服务器已回收以来您打开你<xref:System.Data.OleDb.OleDbConnection>，则<xref:System.Data.OleDb.OleDbConnection.State%2A>属性将继续返回`Open`。</span><span class="sxs-lookup"><span data-stu-id="b2e36-348">For example, if the database server has recycled since you opened your <xref:System.Data.OleDb.OleDbConnection>, the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will continue to return `Open`.</span></span> <span data-ttu-id="b2e36-349">如果您正在使用 OLE DB 访问接口支持轮询有关此信息的实时连接，则调用<xref:System.Data.OleDb.OleDbConnection.ResetState%2A>方法，然后选中<xref:System.Data.OleDb.OleDbConnection.State%2A>属性会告诉您连接不再处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="b2e36-349">If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method and then checking the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will tell you that the connection is no longer open.</span></span> <span data-ttu-id="b2e36-350"><xref:System.Data.OleDb.OleDbConnection.ResetState%2A>方法依赖于 OLE DB 提供程序中以验证连接的当前状态的功能。</span><span class="sxs-lookup"><span data-stu-id="b2e36-350">The <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method relies on functionality in the OLE DB Provider to verify the current state of the connection.</span></span> <span data-ttu-id="b2e36-351">若要确定在 OLE DB 访问接口是否支持此功能，请检查有关 DBPROP_CONNECTIONSTATUS 信息的提供商的文档。</span><span class="sxs-lookup"><span data-stu-id="b2e36-351">To determine if your OLE DB Provider supports this functionality, check the provider's documentation for information on DBPROP_CONNECTIONSTATUS.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-352">获取一个包含客户端所连接到的服务器的版本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-352">Gets a string that contains the version of the server to which the client is connected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2e36-353">连接的服务器的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-353">The version of the connected server.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-354"><xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A>属性映射到 OLE DB DBPROP_DBMSVER 属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-354">The <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> property maps to the OLE DB DBPROP_DBMSVER property.</span></span> <span data-ttu-id="b2e36-355">如果<xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A>不支持由基础 OLE DB 提供程序，返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="b2e36-355">If <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> is not supported by the underlying OLE DB provider, an empty string is returned.</span></span>  
  
 <span data-ttu-id="b2e36-356">版本是窗体 *# #。 # #。 # # #*，其中前两个数字是否为主要版本，接下来的两位数字是次版本，而最后四个数字是否为发布版本。</span><span class="sxs-lookup"><span data-stu-id="b2e36-356">The version is of the form *##.##.####*, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.</span></span> <span data-ttu-id="b2e36-357">提供程序必须呈现此窗体中的产品版本，但也可以附加的特定于产品的版本 — 例如，"04.01.0000 Rdb 4.1"。</span><span class="sxs-lookup"><span data-stu-id="b2e36-357">The provider must render the product version in this form but can also append the product-specific version—for example, "04.01.0000 Rdb 4.1".</span></span> <span data-ttu-id="b2e36-358">字符串的形式*major.minor.build*，其中主要和次要恰好由两位数字，生成是四位数字。</span><span class="sxs-lookup"><span data-stu-id="b2e36-358">The string is of the form *major.minor.build*, where major and minor are exactly two digits and build is exactly four digits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2e36-359">下面的示例创建<xref:System.Data.OleDb.OleDbConnection>并显示它的一些只读属性。</span><span class="sxs-lookup"><span data-stu-id="b2e36-359">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b2e36-360">连接已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-360">The connection is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.OleDb.OleDbConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-361">获取连接的当前状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-361">Gets the current state of the connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2e36-362">
            <see cref="T:System.Data.ConnectionState" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-362">A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values.</span>
          </span>
          <span data-ttu-id="b2e36-363">默认值为 Closed。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-363">The default is Closed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-364">下面被允许的状态更改：</span><span class="sxs-lookup"><span data-stu-id="b2e36-364">The following are allowed state changes:</span></span>  
  
-   <span data-ttu-id="b2e36-365">从`Closed`到`Open`，并使用<xref:System.Data.OleDb.OleDbConnection.Open%2A>方法的<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="b2e36-365">From `Closed` to `Open`, using the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method of the <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
-   <span data-ttu-id="b2e36-366">从`Open`到`Closed`，使用<xref:System.Data.OleDb.OleDbConnection.Close%2A>方法或**释放**方法<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="b2e36-366">From `Open` to `Closed`, using either the <xref:System.Data.OleDb.OleDbConnection.Close%2A> method or the **Dispose** method of the <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2e36-367">在以前版本的.NET Framework 中，调用<xref:System.Data.OleDb.OleDbConnection.State%2A>属性增加应用程序开销，因为每次调用导致的 OLE DB DBPROP_CONNECTIONSTATUS 属性打开的连接进行的调用。</span><span class="sxs-lookup"><span data-stu-id="b2e36-367">In previous version of the .NET Framework, calling the <xref:System.Data.OleDb.OleDbConnection.State%2A> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection.</span></span> <span data-ttu-id="b2e36-368">随着.NET Framework 2.0 的发布，这不再是问题。</span><span class="sxs-lookup"><span data-stu-id="b2e36-368">With the release of the .NET Framework 2.0, this is no longer an issue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel isolationLevel) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2e36-369">有关此成员的说明，请参阅 <see cref="M:System.ICloneable.Clone" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-369">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b2e36-370">作为此实例副本的新 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2e36-370">A new <see cref="T:System.Object" /> that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2e36-371">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b2e36-371">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b2e36-372">它只能在 <xref:System.Data.OleDb.OleDbConnection> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b2e36-372">It can be used only when the <xref:System.Data.OleDb.OleDbConnection> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>