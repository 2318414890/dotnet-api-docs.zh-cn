<Type Name="OleDbConnectionStringBuilder" FullName="System.Data.OleDb.OleDbConnectionStringBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d84b836462e84b9ab6b08814d8699858ff2944e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OleDbConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Provider")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbConnectionStringBuilderConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="19d90-101">为创建和管理由 <see cref="T:System.Data.OleDb.OleDbConnection" /> 类使用的连接字符串的内容提供了一种简单方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="19d90-101">Provides a simple way to create and manage the contents of connection strings used by the <see cref="T:System.Data.OleDb.OleDbConnection" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-102">通过连接字符串生成器，开发人员可以使用该类的属性和方法，以编程方式创建语法正确的连接字符串以及分析和重新生成现有的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-102">The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class.</span></span> <span data-ttu-id="19d90-103">连接字符串生成器提供了与允许的 OLE DB 连接的已知的键/值对相对应的强类型的属性和开发人员可以添加的任何其他连接字符串值的任意键/值对。</span><span class="sxs-lookup"><span data-stu-id="19d90-103">The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by OLE DB connections, and developers can add arbitrary key/value pairs for any other connection string values.</span></span> <span data-ttu-id="19d90-104"><xref:System.Data.OleDb.OleDbConnectionStringBuilder> 类实现 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口。</span><span class="sxs-lookup"><span data-stu-id="19d90-104">The <xref:System.Data.OleDb.OleDbConnectionStringBuilder> class implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span> <span data-ttu-id="19d90-105">这意味着在设计时类适用于 Visual Studio.NET 设计器。</span><span class="sxs-lookup"><span data-stu-id="19d90-105">This means that the class works with Visual Studio .NET designers at design time.</span></span> <span data-ttu-id="19d90-106">当开发人员使用设计器生成强类型化数据集和 Visual Studio.NET 中的强类型的连接时，强类型化的连接字符串生成器类将显示其类型与关联的属性，也将具有转换器，可以将映射为已知键的常见值。</span><span class="sxs-lookup"><span data-stu-id="19d90-106">When developers use the designer to build strongly typed DataSets and strongly typed connections within Visual Studio .NET, the strongly typed connection string builder class will display the properties associated with its type and will also have converters that can map common values for known keys.</span></span>  
  
 <span data-ttu-id="19d90-107">需要在应用程序中创建连接字符串的开发人员可以使用 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 类生成和修改连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-107">Developers needing to create connection strings as part of applications can use the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> class to build and modify connection strings.</span></span> <span data-ttu-id="19d90-108">使用该类还可以轻松管理存储在应用程序配置文件中的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-108">The class also makes it easy to manage connection strings stored in an application configuration file.</span></span> <span data-ttu-id="19d90-109"><xref:System.Data.OleDb.OleDbConnectionStringBuilder>仅对有限的一组已知的键/值对执行检查。</span><span class="sxs-lookup"><span data-stu-id="19d90-109">The <xref:System.Data.OleDb.OleDbConnectionStringBuilder> performs checks only for the limited set of known key/value pairs.</span></span> <span data-ttu-id="19d90-110">因此，此类可以用于创建无效的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-110">Therefore, this class can be used to create invalid connection strings.</span></span> <span data-ttu-id="19d90-111">下表列出的已知的键和其对应的属性内<xref:System.Data.OleDb.OleDbConnectionStringBuilder>类，并且其默认值。</span><span class="sxs-lookup"><span data-stu-id="19d90-111">The following table lists the known keys and their corresponding properties within the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> class, and their default values.</span></span> <span data-ttu-id="19d90-112">除了这些特定的值，开发人员可以将任何键/值对添加到集合中包含<xref:System.Data.OleDb.OleDbConnectionStringBuilder>实例：</span><span class="sxs-lookup"><span data-stu-id="19d90-112">Besides these specific values, developers can add any key/value pairs to the collection that is contained within the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance:</span></span>  
  
|<span data-ttu-id="19d90-113">键</span><span class="sxs-lookup"><span data-stu-id="19d90-113">Key</span></span>|<span data-ttu-id="19d90-114">Property</span><span class="sxs-lookup"><span data-stu-id="19d90-114">Property</span></span>|<span data-ttu-id="19d90-115">默认值</span><span class="sxs-lookup"><span data-stu-id="19d90-115">Default value</span></span>|  
|---------|--------------|-------------------|  
|<span data-ttu-id="19d90-116">文件名</span><span class="sxs-lookup"><span data-stu-id="19d90-116">File Name</span></span>|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A>|<span data-ttu-id="19d90-117">""</span><span class="sxs-lookup"><span data-stu-id="19d90-117">""</span></span>|  
|<span data-ttu-id="19d90-118">提供程序</span><span class="sxs-lookup"><span data-stu-id="19d90-118">Provider</span></span>|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>|<span data-ttu-id="19d90-119">""</span><span class="sxs-lookup"><span data-stu-id="19d90-119">""</span></span>|  
|<span data-ttu-id="19d90-120">“数据源”</span><span class="sxs-lookup"><span data-stu-id="19d90-120">Data Source</span></span>|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A>|<span data-ttu-id="19d90-121">""</span><span class="sxs-lookup"><span data-stu-id="19d90-121">""</span></span>|  
|<span data-ttu-id="19d90-122">Persist Security Info</span><span class="sxs-lookup"><span data-stu-id="19d90-122">Persist Security Info</span></span>|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>|<span data-ttu-id="19d90-123">False</span><span class="sxs-lookup"><span data-stu-id="19d90-123">False</span></span>|  
|<span data-ttu-id="19d90-124">OLE DB 服务</span><span class="sxs-lookup"><span data-stu-id="19d90-124">OLE DB Services</span></span>|<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>|<span data-ttu-id="19d90-125">-13</span><span class="sxs-lookup"><span data-stu-id="19d90-125">-13</span></span>|  
  
 <span data-ttu-id="19d90-126"><xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A>属性处理尝试插入恶意项。</span><span class="sxs-lookup"><span data-stu-id="19d90-126">The <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> property handles attempts to insert malicious entries.</span></span> <span data-ttu-id="19d90-127">例如，下面的代码使用默认<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A>属性 （C# 中的索引器） 正确转义嵌套的键/值对：</span><span class="sxs-lookup"><span data-stu-id="19d90-127">For example, the following code, using the default <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> property (the indexer, in C#) correctly escapes the nested key/value pair:</span></span>  
  
```vb  
Dim builder As _  
    New System.Data.OleDb.OleDbConnectionStringBuilder  
builder("Provider") = "Microsoft.Jet.OLEDB.4.0"  
builder("Data Source") = "C:\Sample.mdb"  
builder("User Id") = "Admin;NewValue=Bad"  
```  
  
```csharp  
System.Data.OleDb.OleDbConnectionStringBuilder builder =   
    new System.Data.OleDb.OleDbConnectionStringBuilder();  
builder["Provider"] = "Microsoft.Jet.OLEDB.4.0";  
builder["Data Source"] = "C:\\Sample.mdb";  
builder["User Id"] = "Admin;NewValue=Bad";  
```  
  
 <span data-ttu-id="19d90-128">结果为以下连接字符串，该字符串以安全方式处理无效值：</span><span class="sxs-lookup"><span data-stu-id="19d90-128">The result is the following connection string that handles the invalid value in a safe manner:</span></span>  
  
```  
Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Sample.mdb;User ID="Admin;NewValue=Bad"  
```  
  
   
  
## Examples  
 <span data-ttu-id="19d90-129">以下控制台应用程序生成为几个 OLE DB 数据库的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-129">The following console application builds connection strings for several OLE DB databases.</span></span> <span data-ttu-id="19d90-130">首先，该示例创建 Microsoft Access 数据库的连接字符串，然后创建 IBM DB2 数据库的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-130">First, the example creates a connection string for a Microsoft Access database, and then creates a connection string for an IBM DB2 database.</span></span> <span data-ttu-id="19d90-131">该示例还分析现有的连接字符串，并演示操作的连接字符串的内容的各种方法。</span><span class="sxs-lookup"><span data-stu-id="19d90-131">The example also parses an existing connection string, and demonstrates various ways of manipulating the connection string's contents.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19d90-132">该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-132">This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings.</span></span> <span data-ttu-id="19d90-133">在您的应用程序中，建议使用 Windows 身份验证。</span><span class="sxs-lookup"><span data-stu-id="19d90-133">In your applications, we recommend that you use Windows Authentication.</span></span> <span data-ttu-id="19d90-134">如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="19d90-134">If you must use a password, do not include a hard-coded password in your application.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19d90-135">初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-135">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19d90-136">初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-136">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="19d90-137">对象内部连接信息的基础。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-137">The basis for the object's internal connection information.</span>
          </span>
          <span data-ttu-id="19d90-138">分析为键/值对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-138">Parsed into key/value pairs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d90-139">初始化 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-139">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> class.</span>
          </span>
          <span data-ttu-id="19d90-140">所提供的连接字符串为实例的内部连接信息提供数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-140">The provided connection string provides the data for the instance's internal connection information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-141">设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>属性，直接 (通过设置<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>属性) 或通过将连接字符串作为参数传递给构造函数，可能会影响中包含的键/值对的一套<xref:System.Data.OleDb.OleDbConnectionStringBuilder>实例。</span><span class="sxs-lookup"><span data-stu-id="19d90-141">Setting the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> property, either directly (by setting the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property) or by passing a connection string as a parameter to the constructor, may affect the set of key/value pairs that are contained within the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance.</span></span> <span data-ttu-id="19d90-142">设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>到"sqloledb，"的属性，例如，添加所有的标准 SQL 连接字符串属性。</span><span class="sxs-lookup"><span data-stu-id="19d90-142">Setting the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> property to "sqloledb," for example, adds all the standard SQL connection string properties.</span></span> <span data-ttu-id="19d90-143">请参阅有关此行为的演示本主题中的示例。</span><span class="sxs-lookup"><span data-stu-id="19d90-143">See the example in this topic for a demonstration of this behavior.</span></span>  
  
 <span data-ttu-id="19d90-144">对于某些提供程序，将连接字符串内的分配<xref:System.Data.OleDb.OleDbConnectionStringBuilder>构造函数将导致提供的键/值对的顺序重新排列。</span><span class="sxs-lookup"><span data-stu-id="19d90-144">For some providers, assigning a connection string within the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> constructor causes the order of supplied key/value pairs to be rearranged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-145">下面的示例创建多个<xref:System.Data.OleDb.OleDbConnectionStringBuilder>情况下，将不同的连接字符串传递给每个用例中的构造函数。</span><span class="sxs-lookup"><span data-stu-id="19d90-145">The following example creates multiple <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instances, passing a different connection string to the constructor in each case.</span></span> <span data-ttu-id="19d90-146">请注意如何设置与连接关联的提供程序更改的对象的集合中的预定义的键/值对集。</span><span class="sxs-lookup"><span data-stu-id="19d90-146">Note how setting the provider associated with the connection changes the set of predefined key/value pairs within the object's collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19d90-147">该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-147">This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings.</span></span> <span data-ttu-id="19d90-148">在您的应用程序中，建议使用 Windows 身份验证。</span><span class="sxs-lookup"><span data-stu-id="19d90-148">In your applications, we recommend that you use Windows Authentication.</span></span> <span data-ttu-id="19d90-149">如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="19d90-149">If you must use a password, do not include a hard-coded password in your application.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Ctor/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Ctor/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19d90-150">连接字符串的格式错误（可能是键/值对中缺少必需的“=”）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-150">The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19d90-151">清除 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 实例的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-151">Clears the contents of the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-152"><xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A>方法中移除所有键/值对，从<xref:System.Data.OleDb.OleDbConnectionStringBuilder>，并将所有对应的属性重置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="19d90-152">The <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A> method removes all key/value pairs from the <xref:System.Data.OleDb.OleDbConnectionStringBuilder>, and resets all corresponding properties to their default values.</span></span> <span data-ttu-id="19d90-153">这包括将 <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A> 属性设置为 0，并将 <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> 属性设置为空字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-153">This includes setting the <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A> property to 0, and setting the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property to an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-154">下面的示例演示调用的效果<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19d90-154">The following example demonstrates the effect of calling the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A> method.</span></span> <span data-ttu-id="19d90-155">此示例用一些键/值对填充 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>，然后调用 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A> 方法并显示结果。</span><span class="sxs-lookup"><span data-stu-id="19d90-155">This example populates the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> with some key/value pairs, and then calls the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A> method and shows the results.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19d90-156">该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-156">This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings.</span></span> <span data-ttu-id="19d90-157">在您的应用程序中，建议使用 Windows 身份验证。</span><span class="sxs-lookup"><span data-stu-id="19d90-157">In your applications, we recommend that you use Windows Authentication.</span></span> <span data-ttu-id="19d90-158">如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="19d90-158">If you must use a password, do not include a hard-coded password in your application.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Clear/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Clear/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="19d90-159">要在 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 中定位的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-159">The key to locate in the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d90-160">确定 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 是否包含特定键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-160">Determines whether the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19d90-161">如果 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 包含具有指定键的元素，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-161">true if the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> contains an element that has the specified key; otherwise false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-162">虽然设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>属性可能会隐式填充相应的键/值对中的提供程序<xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A>方法不返回`true`为隐式提供的键。</span><span class="sxs-lookup"><span data-stu-id="19d90-162">Although setting the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> property may implicitly fill in appropriate key/value pairs for the provider, the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A> method does not return `true` for implicitly provided keys.</span></span> <span data-ttu-id="19d90-163">此方法返回`true`仅为显式提供的键。</span><span class="sxs-lookup"><span data-stu-id="19d90-163">This method returns `true` only for explicitly provided keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-164">下面的示例创建<xref:System.Data.OleDb.OleDbConnectionStringBuilder>实例，设置它的一些属性，并尝试以确定是否存在各种键在该对象通过调用<xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19d90-164">The following example creates an <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19d90-165">
            <paramref name="keyword" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-165">
              <paramref name="keyword" /> is null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public string DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Data Source")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19d90-166">获取或设置要连接到的数据源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-166">Gets or sets the name of the data source to connect to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19d90-167">为 <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" /> 属性的值，或者，如果未提供任何值，则为 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-167">The value of the <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource" /> property, or <see langword="String.Empty" /> if none has been supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-168">如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="19d90-168">If the value passed in is null when you try to set the property, the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A> property is reset.</span></span> <span data-ttu-id="19d90-169">如果未设置值，并且在开发人员尝试检索该属性，则返回值是`String.Empty`。</span><span class="sxs-lookup"><span data-stu-id="19d90-169">If the value has not been set and the developer tries to retrieve the property, the return value is `String.Empty`.</span></span> <span data-ttu-id="19d90-170">此属性与连接字符串内的"数据源"键相对应。</span><span class="sxs-lookup"><span data-stu-id="19d90-170">This property corresponds to the "Data Source" key within the connection string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-171">下面的示例控制台应用程序创建一个新<xref:System.Data.OleDb.OleDbConnectionStringBuilder>实例，然后设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A>和<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19d90-171">The following example console application creates a new <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance, and then sets the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A> and <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> properties.</span></span> <span data-ttu-id="19d90-172">最后，示例创建一个新<xref:System.Data.OleDb.OleDbConnection>实例，并使用该对象以连接到指定的数据存储。</span><span class="sxs-lookup"><span data-stu-id="19d90-172">Finally, the example creates a new <xref:System.Data.OleDb.OleDbConnection> instance, and uses that object to connect to the indicated data store.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.DataSource/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("File Name")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19d90-173">获取或设置用于连接到数据源的通用数据链接 (UDL) 文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-173">Gets or sets the name of the Universal Data Link (UDL) file for connecting to the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19d90-174">为 <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" /> 属性的值，或者，如果未提供任何值，则为 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-174">The value of the <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.FileName" /> property, or <see langword="String.Empty" /> if none has been supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-175">如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="19d90-175">If the value passed in is null when you try to set the property, the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A> property is reset.</span></span> <span data-ttu-id="19d90-176">如果未设置值，并且在开发人员尝试检索该属性，则返回值是`String.Empty`。</span><span class="sxs-lookup"><span data-stu-id="19d90-176">If the value has not been set and the developer tries to retrieve the property, the return value is `String.Empty`.</span></span> <span data-ttu-id="19d90-177">此属性与连接字符串内的"FileName"键相对应。</span><span class="sxs-lookup"><span data-stu-id="19d90-177">This property corresponds to the "FileName" key within the connection string.</span></span>  
  
 <span data-ttu-id="19d90-178">设置此属性不会导致<xref:System.Data.OleDb.OleDbConnectionStringBuilder>实例以读取的引用的文件的内容，即使该文件存在并且包含有效的连接信息。</span><span class="sxs-lookup"><span data-stu-id="19d90-178">Setting this property does not cause the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance to read the contents of the referenced file, even if the file exists and contains valid connection information.</span></span> <span data-ttu-id="19d90-179">将此属性设置不起作用以外以指示要连接到数据源时读取的文件。</span><span class="sxs-lookup"><span data-stu-id="19d90-179">Setting this property has no effect other than to indicate the file to read when connecting to the data source.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetProperties(class System.Collections.Hashtable propertyDescriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetProperties (propertyDescriptors As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetProperties(System::Collections::Hashtable ^ propertyDescriptors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDescriptors" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="propertyDescriptors">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="19d90-180">要获取或设置的项的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-180">The key of the item to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d90-181">获取或设置与指定的键关联的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-181">Gets or sets the value associated with the specified key.</span>
          </span>
          <span data-ttu-id="19d90-182">在 C# 中，此属性为索引器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-182">In C#, this property is the indexer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19d90-183">与指定的键相关联的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-183">The value associated with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-184">因为设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>属性可能将对应的项添加到 （具体取决于特定的提供程序的行为） 的键/值对的集合，你可能能够检索您以前未显式设置键的值。</span><span class="sxs-lookup"><span data-stu-id="19d90-184">Because setting the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> property may add corresponding items to the collection of key/value pairs (depending on the behavior of the specific provider), you may be able to retrieve a value for a key you have not set explicitly.</span></span> <span data-ttu-id="19d90-185">例如，只要你已设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>属性为"sqloledb，"你可以检索"Workstation ID"值，即使你尚未设置它自己。</span><span class="sxs-lookup"><span data-stu-id="19d90-185">For example, as soon as you have set the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> property to "sqloledb," you can retrieve the "Workstation ID" value even if you have not set it yourself.</span></span> <span data-ttu-id="19d90-186">请参阅有关演示此主题中的示例。</span><span class="sxs-lookup"><span data-stu-id="19d90-186">See the example in this topic for a demonstration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-187">下面的示例使用<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A>属性 （C# 中的索引器） 来检索和设置的键/值对的集合中的值。</span><span class="sxs-lookup"><span data-stu-id="19d90-187">The following example uses the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A> property (the indexer, in C#) to retrieve and set values within the collection of key/value pairs.</span></span> <span data-ttu-id="19d90-188">请注意，设置提供程序，在这种情况下，还提供与所选提供程序关联的所有键/值对的默认值。</span><span class="sxs-lookup"><span data-stu-id="19d90-188">Note that setting the provider, in this case, also provides default values for all the key/value pairs associated with the selected provider.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Item/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19d90-189">连接字符串的格式错误（可能是键/值对中缺少必需的“=”）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-189">The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19d90-190">
            <paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-190">
              <paramref name="keyword" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19d90-191">获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-191">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19d90-192">一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 中的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-192">An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-193"><xref:System.Collections.ICollection> 中的值的顺序未指定，但与 <xref:System.Collections.ICollection> 属性返回的 <xref:System.Data.Common.DbConnectionStringBuilder.Values%2A> 中的关联值顺序相同。</span><span class="sxs-lookup"><span data-stu-id="19d90-193">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Data.Common.DbConnectionStringBuilder.Values%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-194">以下控制台应用程序示例新建一个 <xref:System.Data.OleDb.OleDbConnectionStringBuilder>。</span><span class="sxs-lookup"><span data-stu-id="19d90-194">The following console application example creates a new <xref:System.Data.OleDb.OleDbConnectionStringBuilder>.</span></span> <span data-ttu-id="19d90-195">该代码循环访问显示键/值对的 <xref:System.Collections.ICollection> 属性返回的 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Keys%2A>。</span><span class="sxs-lookup"><span data-stu-id="19d90-195">The code loops through the <xref:System.Collections.ICollection> returned by the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Keys%2A> property displaying the key/value pairs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19d90-196">该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-196">This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings.</span></span> <span data-ttu-id="19d90-197">在您的应用程序中，建议使用 Windows 身份验证。</span><span class="sxs-lookup"><span data-stu-id="19d90-197">In your applications, we recommend that you use Windows Authentication.</span></span> <span data-ttu-id="19d90-198">如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="19d90-198">If you must use a password, do not include a hard-coded password in your application.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Keys#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Keys/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Keys#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Keys/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OleDbServices">
      <MemberSignature Language="C#" Value="public int OleDbServices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OleDbServices" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices" />
      <MemberSignature Language="VB.NET" Value="Public Property OleDbServices As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OleDbServices { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("OLE DB Services")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbServicesConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19d90-199">获取或设置要为连接字符串内的 OLE DB Services 键传递的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-199">Gets or sets the value to be passed for the OLE DB Services key within the connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19d90-200">返回与连接字符串内的 OLE DB Services 键对应的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-200">Returns the value corresponding to the OLE DB Services key within the connection string.</span>
          </span>
          <span data-ttu-id="19d90-201">默认情况下，该值为 -13。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-201">By default, the value is -13.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-202">连接字符串内的 OLE DB 服务键定义，开发人员可以启用或禁用 OLE DB 服务的值的组合。</span><span class="sxs-lookup"><span data-stu-id="19d90-202">The OLE DB Services key within the connection string defines a combination of values that let developers enable or disable OLE DB services.</span></span> <span data-ttu-id="19d90-203">属性包含 OLE DB 文档中描述的值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="19d90-203">The property contains a bitwise combination of values, described in the OLE DB documentation.</span></span> <span data-ttu-id="19d90-204">有关为此属性的相应值的详细信息，请参阅 OLE DB 程序员参考，具体而言，"重写提供程序服务默认值。"</span><span class="sxs-lookup"><span data-stu-id="19d90-204">For more information about appropriate values for this property, see the OLE DB Programmer's Reference, in particular, "Overriding Provider Service Defaults."</span></span> <span data-ttu-id="19d90-205">此属性的默认值为-13。</span><span class="sxs-lookup"><span data-stu-id="19d90-205">The default value for this property is -13.</span></span> <span data-ttu-id="19d90-206">这对应于资源池、 自动事务登记、 会话级别聚合和任何客户端游标引擎的请求。</span><span class="sxs-lookup"><span data-stu-id="19d90-206">This corresponds to a request for resource pooling, automatic transaction enlistment, session-level aggregation, and no client cursor engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-207">下面的示例适用于<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>两种方式的属性。</span><span class="sxs-lookup"><span data-stu-id="19d90-207">The following example works with the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A> property in two ways.</span></span> <span data-ttu-id="19d90-208">首先，它将值分配直接向该属性，演示此操作生成的连接字符串上所产生的影响。</span><span class="sxs-lookup"><span data-stu-id="19d90-208">First, it assigns a value directly to the property, demonstrating the effect this action has on the resulting connection string.</span></span> <span data-ttu-id="19d90-209">然后，该示例在移除<xref:System.Data.OleDb.OleDbConnectionStringBuilder>并将分配包含 OLE DB 服务密钥的值的完整连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-209">Then, the example clears the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and assigns a complete connection string that contains a value for the OLE DB Services key.</span></span> <span data-ttu-id="19d90-210">此步骤演示了修改，连接字符串中的值设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A>属性，以及。</span><span class="sxs-lookup"><span data-stu-id="19d90-210">This step demonstrates that setting the value from the connection string modifies the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.OleDbServices%2A> property, as well.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.OleDbServices/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.OleDbServices#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.OleDbServices/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistSecurityInfo">
      <MemberSignature Language="C#" Value="public bool PersistSecurityInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistSecurityInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistSecurityInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistSecurityInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Persist Security Info")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19d90-211">获取或设置一个布尔值，该值指示如果连接是打开的或者一直处于打开状态，那么安全敏感信息（如密码）是否作为连接的一部分返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-211">Gets or sets a Boolean value that indicates whether security-sensitive information, such as the password, is returned as part of the connection if the connection is open or has ever been in an open state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19d90-212">为 <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" /> 属性的值，或者，如果未提供任何值，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-212">The value of the <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo" /> property, or <see langword="false" /> if none has been supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-213">此属性与连接字符串内的"Persist Security Info"键相对应。</span><span class="sxs-lookup"><span data-stu-id="19d90-213">This property corresponds to the "Persist Security Info" key within the connection string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-214">下面的示例适用于<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>两种方式的属性。</span><span class="sxs-lookup"><span data-stu-id="19d90-214">The following example works with the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A> property in two ways.</span></span> <span data-ttu-id="19d90-215">首先，它将值分配直接向该属性，演示此操作生成的连接字符串上所产生的影响。</span><span class="sxs-lookup"><span data-stu-id="19d90-215">First, it assigns a value directly to the property, demonstrating the effect this action has on the resulting connection string.</span></span> <span data-ttu-id="19d90-216">然后，该示例在移除<xref:System.Data.OleDb.OleDbConnectionStringBuilder>并将分配包含"Persist Security Info"密钥的值的完整连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-216">Then, the example clears the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and assigns a complete connection string that contains a value for the "Persist Security Info" key.</span></span> <span data-ttu-id="19d90-217">此步骤演示了修改，连接字符串中的值设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A>属性，以及。</span><span class="sxs-lookup"><span data-stu-id="19d90-217">This step demonstrates that setting the value from the connection string modifies the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo%2A> property, as well.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.PersistSecurityInfo/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Provider")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbConnectionStringBuilder/OleDbProviderConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19d90-218">获取或设置一个字符串，该字符串包含与内部连接字符串关联的数据提供程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-218">Gets or sets a string that contains the name of the data provider associated with the internal connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19d90-219">为 <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" /> 属性的值，或者，如果未提供任何值，则为 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-219">The value of the <see cref="P:System.Data.OleDb.OleDbConnectionStringBuilder.Provider" /> property, or <see langword="String.Empty" /> if none has been supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-220">如果在您尝试设置此属性时传入的值为 null，则将重置 <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="19d90-220">If the value passed in is null when you try to set the property, the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> property is reset.</span></span> <span data-ttu-id="19d90-221">如果未设置值，并且在开发人员尝试检索该属性，则返回值是`String.Empty`。</span><span class="sxs-lookup"><span data-stu-id="19d90-221">If the value has not been set and the developer tries to retrieve the property, the return value is `String.Empty`.</span></span> <span data-ttu-id="19d90-222">此属性与连接字符串内的"提供程序"键相对应。</span><span class="sxs-lookup"><span data-stu-id="19d90-222">This property corresponds to the "Provider" key within the connection string.</span></span>  
  
 <span data-ttu-id="19d90-223">值设置`Provider`属性，直接 (通过设置<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>属性) 或通过将连接字符串作为参数传递给构造函数，可能会影响中包含的键/值对的一套<xref:System.Data.OleDb.OleDbConnectionStringBuilder>实例。</span><span class="sxs-lookup"><span data-stu-id="19d90-223">Setting the value of the `Provider` property, either directly (by setting the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property) or by passing a connection string as a parameter to the constructor, may affect the set of key/value pairs that are contained within the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance.</span></span> <span data-ttu-id="19d90-224">设置<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A>到"sqloledb，"的属性，例如，添加所有的标准 SQL 连接字符串属性。</span><span class="sxs-lookup"><span data-stu-id="19d90-224">Setting the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A> property to "sqloledb," for example, adds all the standard SQL connection string properties.</span></span> <span data-ttu-id="19d90-225">请参阅有关此行为的演示本主题中的示例。</span><span class="sxs-lookup"><span data-stu-id="19d90-225">See the example in this topic for a demonstration of this behavior.</span></span>  
  
 <span data-ttu-id="19d90-226">对于某些提供程序，将连接字符串内的分配<xref:System.Data.OleDb.OleDbConnectionStringBuilder>构造函数将导致提供的键/值对的顺序重新排列。</span><span class="sxs-lookup"><span data-stu-id="19d90-226">For some providers, assigning a connection string within the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> constructor causes the order of supplied key/value pairs to be rearranged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-227">下面的示例创建多个<xref:System.Data.OleDb.OleDbConnectionStringBuilder>情况下，将不同的连接字符串传递给每个用例中的构造函数。</span><span class="sxs-lookup"><span data-stu-id="19d90-227">The following example creates multiple <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instances, passing a different connection string to the constructor in each case.</span></span> <span data-ttu-id="19d90-228">请注意如何设置与连接关联的提供程序更改的对象的集合中的预定义的键/值对集。</span><span class="sxs-lookup"><span data-stu-id="19d90-228">Note how setting the provider associated with the connection changes the set of predefined key/value pairs within the object's collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19d90-229">该示例包括一个密码以演示 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 如何使用连接字符串。</span><span class="sxs-lookup"><span data-stu-id="19d90-229">This example includes a password to demonstrate how <xref:System.Data.OleDb.OleDbConnectionStringBuilder> works with connection strings.</span></span> <span data-ttu-id="19d90-230">在您的应用程序中，建议使用 Windows 身份验证。</span><span class="sxs-lookup"><span data-stu-id="19d90-230">In your applications, we recommend that you use Windows Authentication.</span></span> <span data-ttu-id="19d90-231">如果必须使用密码，请不要在你的应用程序中包括硬编码的密码。</span><span class="sxs-lookup"><span data-stu-id="19d90-231">If you must use a password, do not include a hard-coded password in your application.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Provider#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Provider/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Provider#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Provider/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="19d90-232">要从此 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 中的连接字符串移除的键/值对中的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-232">The key of the key/value pair to be removed from the connection string in this <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d90-233">从 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 实例中移除具有指定的键的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-233">Removes the entry with the specified key from the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19d90-234">如果该键原本存在于连接字符串中但被移除，则为 <see langword="true" />；如果连接字符串中不存在该键，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-234">
              <see langword="true" /> if the key existed within the connection string and was removed, <see langword="false" /> if the key did not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-235">因为<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A>方法返回一个值，指示其是否成功，它不需要查找的键是否存在之前尝试删除的键/值对从<xref:System.Data.OleDb.OleDbConnectionStringBuilder>实例。</span><span class="sxs-lookup"><span data-stu-id="19d90-235">Because the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A> method returns a value that indicates its success, it is not required to look for the existence of a key before trying to remove the key/value pair from the <xref:System.Data.OleDb.OleDbConnectionStringBuilder> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-236">下面的示例创建<xref:System.Data.OleDb.OleDbConnectionStringBuilder>和演示的行为<xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19d90-236">The following example creates a <xref:System.Data.OleDb.OleDbConnectionStringBuilder> and demonstrates the behavior of the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A> method.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.Remove#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Remove/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.Remove/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19d90-237">
            <paramref name="keyword" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-237">
              <paramref name="keyword" /> is null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="19d90-238">要检索的项的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-238">The key of the item to retrieve.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="19d90-239">与 <c>keyword</c> 相对应的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-239">The value corresponding to <c>keyword.</c></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19d90-240">从 <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> 实例中检索与所提供的键对应的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-240">Retrieves a value corresponding to the supplied key from the <see cref="T:System.Data.OleDb.OleDbConnectionStringBuilder" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19d90-241">如果在连接字符串中找到 <paramref name="keyword" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-241">
              <see langword="true" /> if <paramref name="keyword" /> was found within the connection string; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19d90-242"><xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> 方法允许开发人员安全地从 <xref:System.Data.OleDb.OleDbConnectionStringBuilder> 中检索值，而无需验证提供的键名是否为有效的键名。</span><span class="sxs-lookup"><span data-stu-id="19d90-242">The <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> method lets developers safely retrieve a value from a <xref:System.Data.OleDb.OleDbConnectionStringBuilder> without needing to verify that the supplied key name is a valid key name.</span></span> <span data-ttu-id="19d90-243">因为<xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A>不会引发异常时调用它，传递中不存在的键，则不需要查找键检索其值之前。</span><span class="sxs-lookup"><span data-stu-id="19d90-243">Because <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> does not raise an exception when you call it, passing in a nonexistent key, you do not have to look for a key before retrieving its value.</span></span> <span data-ttu-id="19d90-244">调用<xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A>与不存在的键将值为 null (`Nothing`在 Visual Basic 中) 中`value`参数。</span><span class="sxs-lookup"><span data-stu-id="19d90-244">Calling <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> with a nonexistent key will place the value null (`Nothing` in Visual Basic) in the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19d90-245">下面的示例演示的行为<xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19d90-245">The following example demonstrates the behavior of the <xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A> method.</span></span>  
  
 [!code-csharp[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.TryGetValue/CS/source.cs#1)]
 [!code-vb[DataWorks OleDbConnectionStringBuilder.TryGetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks OleDbConnectionStringBuilder.TryGetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19d90-246">
            <paramref name="keyword" /> 包含一个 null 值（在 Visual Basic 中为 <see langword="Nothing" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19d90-246">
              <paramref name="keyword" /> contains a null value (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>