<Type Name="OleDbCommandBuilder" FullName="System.Data.OleDb.OleDbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b115617c9192c502a2c1876e1d32eaa8ba84486" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390341" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="04481-101">自动生成用于协调对 <see cref="T:System.Data.DataSet" /> 的更改与关联数据库的单表命令。</span>
      <span class="sxs-lookup">
        <span data-stu-id="04481-101">Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      </span>
      <span data-ttu-id="04481-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="04481-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-103"><xref:System.Data.OleDb.OleDbDataAdapter>不会自动生成所需进行对帐对所做更改的 SQL 语句<xref:System.Data.DataSet>与关联的数据源。</span><span class="sxs-lookup"><span data-stu-id="04481-103">The <xref:System.Data.OleDb.OleDbDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated data source.</span></span> <span data-ttu-id="04481-104">但是，你可以创建<xref:System.Data.OleDb.OleDbCommandBuilder>对象以自动生成单表更新的 SQL 语句，如果你设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>属性<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-104">However, you can create an <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span> <span data-ttu-id="04481-105">然后，你未设置任何其他 SQL 语句都由<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="04481-105">Then, any additional SQL statements that you do not set are generated by the <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span>  
  
 <span data-ttu-id="04481-106"><xref:System.Data.OleDb.OleDbCommandBuilder>将自己注册为侦听器<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>事件每当你设置<xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="04481-106">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> property.</span></span> <span data-ttu-id="04481-107">你可以仅将一个相关联<xref:System.Data.OleDb.OleDbDataAdapter>或<xref:System.Data.OleDb.OleDbCommandBuilder>与每个其他对象一次。</span><span class="sxs-lookup"><span data-stu-id="04481-107">You can only associate one <xref:System.Data.OleDb.OleDbDataAdapter> or <xref:System.Data.OleDb.OleDbCommandBuilder> object with each other at one time.</span></span>  
  
 <span data-ttu-id="04481-108">若要生成 INSERT、 UPDATE 或 DELETE 语句，<xref:System.Data.OleDb.OleDbCommandBuilder>使用<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>要自动检索所需的元数据集属性。</span><span class="sxs-lookup"><span data-stu-id="04481-108">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.OleDb.OleDbCommandBuilder> uses the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically.</span></span> <span data-ttu-id="04481-109">如果你更改<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>检索的元数据，如第一次更新，应调用后<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法来更新元数据。</span><span class="sxs-lookup"><span data-stu-id="04481-109">If you change the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> after the metadata is retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
 <span data-ttu-id="04481-110"><xref:System.Data.OleDb.OleDbCommandBuilder>还使用<xref:System.Data.OleDb.OleDbCommand.Connection%2A>， <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>，和<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>属性引用的<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-110">The <xref:System.Data.OleDb.OleDbCommandBuilder> also uses the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, and <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> properties referenced by the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="04481-111">用户应调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果修改一个或多个这些属性，或如果<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>本身被替换。</span><span class="sxs-lookup"><span data-stu-id="04481-111">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> itself is replaced.</span></span> <span data-ttu-id="04481-112">否则为<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>， <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>，和<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>属性保留其以前的值。</span><span class="sxs-lookup"><span data-stu-id="04481-112">Otherwise the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="04481-113">如果调用<xref:System.ComponentModel.Component.Dispose%2A>、<xref:System.Data.OleDb.OleDbCommandBuilder>与解除关联<xref:System.Data.OleDb.OleDbDataAdapter>，并且不再使用所生成的命令。</span><span class="sxs-lookup"><span data-stu-id="04481-113">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.OleDb.OleDbCommandBuilder> is disassociated from the <xref:System.Data.OleDb.OleDbDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04481-114">下面的示例使用<xref:System.Data.OleDb.OleDbCommand>、 以及<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.OleDb.OleDbConnection>，来从数据源选择的行。</span><span class="sxs-lookup"><span data-stu-id="04481-114">The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from a data source.</span></span> <span data-ttu-id="04481-115">该示例传递一个已初始化<xref:System.Data.DataSet>，连接字符串、 是一个 SQL SELECT 语句，查询字符串和是数据源表的名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="04481-115">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table.</span></span> <span data-ttu-id="04481-116">然后，示例创建<xref:System.Data.OleDb.OleDbCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="04481-116">The example then creates an <xref:System.Data.OleDb.OleDbCommandBuilder>.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="04481-117">初始化 <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-117">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04481-118">初始化 <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-118">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OleDbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbCommandBuilder(System::Data::OleDb::OleDbDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OleDb.OleDbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="04481-119">一个 <see cref="T:System.Data.OleDb.OleDbDataAdapter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-119">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-120">使用关联的 <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 对象初始化 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-120">Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class with the associated <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-121"><xref:System.Data.OleDb.OleDbCommandBuilder>将自己注册为侦听器<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>由生成的事件<xref:System.Data.OleDb.OleDbDataAdapter>此属性中指定。</span><span class="sxs-lookup"><span data-stu-id="04481-121">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OleDb.OleDbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="04481-122">当你创建的新实例<xref:System.Data.OleDb.OleDbCommandBuilder>，任何现有<xref:System.Data.OleDb.OleDbCommandBuilder>与此关联<xref:System.Data.OleDb.OleDbDataAdapter>释放。</span><span class="sxs-lookup"><span data-stu-id="04481-122">When you create a new instance <xref:System.Data.OleDb.OleDbCommandBuilder>, any existing <xref:System.Data.OleDb.OleDbCommandBuilder> associated with this <xref:System.Data.OleDb.OleDbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OleDbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbDataAdapter ^ DataAdapter { System::Data::OleDb::OleDbDataAdapter ^ get(); void set(System::Data::OleDb::OleDbDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04481-123">获取或设置为其自动生成 SQL 语句的 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-123">Gets or sets an <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object for which SQL statements are automatically generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04481-124">一个 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-124">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-125"><xref:System.Data.OleDb.OleDbCommandBuilder>将自己注册为侦听器<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>由生成的事件<xref:System.Data.OleDb.OleDbDataAdapter>此属性中指定。</span><span class="sxs-lookup"><span data-stu-id="04481-125">The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OleDb.OleDbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="04481-126">当你创建的新实例<xref:System.Data.OleDb.OleDbCommandBuilder>，任何现有<xref:System.Data.OleDb.OleDbCommandBuilder>与此关联<xref:System.Data.OleDb.OleDbDataAdapter>释放。</span><span class="sxs-lookup"><span data-stu-id="04481-126">When you create a new instance <xref:System.Data.OleDb.OleDbCommandBuilder>, any existing <xref:System.Data.OleDb.OleDbCommandBuilder> associated with this <xref:System.Data.OleDb.OleDbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OleDb.OleDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OleDb::OleDbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="04481-127">引用将从其中导出参数信息的存储过程的 <see cref="T:System.Data.OleDb.OleDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-127">The <see cref="T:System.Data.OleDb.OleDbCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span>
          </span>
          <span data-ttu-id="04481-128">将派生参数添加到 <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> 的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-128">The derived parameters are added to the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-129">从在 <see cref="T:System.Data.OleDb.OleDbCommand" /> 中指定的存储过程中检索参数信息并填充指定的 <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> 对象的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-129">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.OleDb.OleDbCommand" /> and populates the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection of the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-130"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 将覆盖任何现有参数信息<xref:System.Data.OleDb.OleDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="04481-130"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> overwrites any existing parameter information for the <xref:System.Data.OleDb.OleDbCommand>.</span></span>  
  
 <span data-ttu-id="04481-131"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> 需要更多调用数据源以获取信息。</span><span class="sxs-lookup"><span data-stu-id="04481-131"><xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> requires an additional call to the data source to obtain the information.</span></span> <span data-ttu-id="04481-132">如果在提前知道参数信息，则更有效地通过显式设置的信息填充的参数集合。</span><span class="sxs-lookup"><span data-stu-id="04481-132">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="04481-133">你只能使用<xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A>的存储过程。</span><span class="sxs-lookup"><span data-stu-id="04481-133">You can only use <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> with stored procedures.</span></span> <span data-ttu-id="04481-134">不能使用<xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A>来填充<xref:System.Data.OleDb.OleDbParameterCollection>使用任意 Transact SQL 语句，例如参数化的 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="04481-134">You cannot use <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> to populate the <xref:System.Data.OleDb.OleDbParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 <span data-ttu-id="04481-135">有关详细信息，请参阅[配置参数和参数数据类型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)。</span><span class="sxs-lookup"><span data-stu-id="04481-135">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="04481-136">基础 OLE DB 提供程序不支持返回存储过程参数信息，命令文本不是有效的存储过程名称，或者指定的 <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> 不是 <see langword="StoredProcedure" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-136">The underlying OLE DB provider does not support returning stored procedure parameter information, the command text is not a valid stored procedure name, or the <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> specified was not <see langword="StoredProcedure" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="04481-137">获取在数据源中执行删除操作所需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-137">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-138">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-138">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-139">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-139">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-140">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-140">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-141">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-141">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-142">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-142">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-143">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-143">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04481-144">获取在数据源中执行删除操作所需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-144">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-145">自动生成的、执行删除操作所需的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-145">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-146">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-146">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-147">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-147">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-148">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-148">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-149">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-149">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-150">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-150">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-151">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-151">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="04481-152">如果为 <see langword="true" />，则如有可能，将生成与列名相匹配的参数名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-152">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="04481-153">如果为 <see langword="false" />，则生成 @p1、@p2，以此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-153">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-154">获取在数据源中执行删除操作所需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-154">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-155">自动生成的、执行删除操作所需的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-155">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-156">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-156">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-157">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-157">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-158">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-158">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-159">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-159">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-160">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-160">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-161">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-161">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="04481-162">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="04481-162">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="04481-163">传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.OleDb.OleDbCommandBuilder>生成改为根据列名称的参数。</span><span class="sxs-lookup"><span data-stu-id="04481-163">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="04481-164">仅当满足以下条件，此操作将成功。</span><span class="sxs-lookup"><span data-stu-id="04481-164">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="04481-165"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</span><span class="sxs-lookup"><span data-stu-id="04481-165">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="04481-166">生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</span><span class="sxs-lookup"><span data-stu-id="04481-166">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="04481-167">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="04481-167">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="04481-168">获取在数据源中执行插入操作所需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-168">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-169">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>方法为信息性或故障排除目的，因为它返回的文本<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-169">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-170">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-170">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-171">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-171">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-172">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-172">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-173">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-173">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-174">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-174">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04481-175">获取在数据源中执行插入操作所需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-175">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-176">自动生成的、执行插入操作所需的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-176">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-177">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>方法为信息性或故障排除目的，因为它返回的文本<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-177">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-178">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-178">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-179">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-179">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-180">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-180">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-181">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-181">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-182">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-182">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="04481-183">如果为 <see langword="true" />，则如有可能，将生成与列名相匹配的参数名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-183">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="04481-184">如果为 <see langword="false" />，则生成 @p1、@p2，以此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-184">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-185">获取在数据源中执行插入操作所需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-185">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-186">自动生成的、执行插入操作所需的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-186">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-187">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>方法为信息性或故障排除目的，因为它返回的文本<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-187">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-188">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-188">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-189">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-189">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-190">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-190">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-191">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-191">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-192">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-192">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="04481-193">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="04481-193">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="04481-194">传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.OleDb.OleDbCommandBuilder>生成改为根据列名称的参数。</span><span class="sxs-lookup"><span data-stu-id="04481-194">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="04481-195">仅当满足以下条件，此操作将成功。</span><span class="sxs-lookup"><span data-stu-id="04481-195">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="04481-196"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</span><span class="sxs-lookup"><span data-stu-id="04481-196">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="04481-197">生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</span><span class="sxs-lookup"><span data-stu-id="04481-197">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="04481-198">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="04481-198">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="04481-199">获取在数据源中执行更新操作所需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-199">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-200">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-200">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-201">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-201">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-202">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-202">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-203">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-203">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-204">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-204">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-205">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-205">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04481-206">获取在数据源中执行更新操作所需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-206">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-207">自动生成的、执行更新所需的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-207">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-208">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-208">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-209">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-209">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-210">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-210">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-211">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-211">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-212">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-212">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-213">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-213">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="04481-214">如果为 <see langword="true" />，则如有可能，将生成与列名相匹配的参数名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-214">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="04481-215">如果为 <see langword="false" />，则生成 @p1、@p2，以此类推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-215">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-216">获取对数据源执行更新操作所必需的自动生成的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象，可选择使用列作为参数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-216">Gets the automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-217">自动生成的、执行更新所需的 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-217">The automatically generated <see cref="T:System.Data.OleDb.OleDbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04481-218">应用程序可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>方法为信息性或故障排除目的，因为它返回<xref:System.Data.OleDb.OleDbCommand>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="04481-218">An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="04481-219">你还可以使用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>作为修改命令的基础。</span><span class="sxs-lookup"><span data-stu-id="04481-219">You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="04481-220">例如，你可能会调用<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>值，然后上显式设置<xref:System.Data.OleDb.OleDbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="04481-220">For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.</span></span>  
  
 <span data-ttu-id="04481-221">当首次生成 SQL 语句后，应用程序必须显式调用<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果更改该语句以任何方式。</span><span class="sxs-lookup"><span data-stu-id="04481-221">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="04481-222">否则为<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>将仍将使用从上一条语句，这可能不是正确的信息。</span><span class="sxs-lookup"><span data-stu-id="04481-222">Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="04481-223">应用程序调用时，将首先生成 SQL 语句<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*>或<xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="04481-223">The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="04481-224">生成参数名称时的默认行为是使用@p1， @p2，有关的各种参数，依此类推。</span><span class="sxs-lookup"><span data-stu-id="04481-224">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="04481-225">传递`true`为`useColumnsForParameterNames`参数允许你强制<xref:System.Data.OleDb.OleDbCommandBuilder>生成改为根据列名称的参数。</span><span class="sxs-lookup"><span data-stu-id="04481-225">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="04481-226">仅当满足以下条件，此操作将成功。</span><span class="sxs-lookup"><span data-stu-id="04481-226">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="04481-227"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定并且其长度等于或大于生成的参数名。</span><span class="sxs-lookup"><span data-stu-id="04481-227">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="04481-228">生成的参数名满足中指定的条件<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正则表达式。</span><span class="sxs-lookup"><span data-stu-id="04481-228">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="04481-229">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="04481-229">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="04481-230">给定了具有正确的目录大小写设置且不带引号的标识符时，返回该标识符的正确的带引号形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-230">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="04481-231">这包括正确地转义该标识符中的任何嵌入引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-231">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="04481-232">不带引号的原始标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-232">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-233">给定了具有正确的目录大小写设置且不带引号的标识符时，返回该标识符的正确的带引号形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-233">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="04481-234">这包括正确地转义该标识符中的任何嵌入引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-234">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-235">带引号的标识符版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-235">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="04481-236">标识符内的嵌入引号被正确地转义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-236">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="04481-237">要以带引号的形式返回的不带引号的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-237">The unquoted identifier to be returned in quoted format.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="04481-238">当连接是通过时，会导致托管包装从获取 OLE DB 提供程序的引号字符，调用 SQLGetInfo 、、（SQL_IDENTIFIER_QUOTE_CHAR）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-238">When a connection is passed, causes the managed wrapper to get the quote character from the OLE DB provider.</span>
          </span>
          <span data-ttu-id="04481-239">如果连接未通过时，使用从 <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> 和 <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />的值中引用该字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-239">When no connection is passed, the string is quoted using values from <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> and <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-240">给定了具有正确的目录大小写设置且不带引号的标识符时，返回该标识符的正确的带引号形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-240">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="04481-241">这包括正确地转义该标识符中的任何嵌入引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-241">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-242">带引号的标识符版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-242">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="04481-243">标识符内的嵌入引号被正确地转义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-243">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="04481-244">给定了带引号的标识符时，返回该标识符的正确的不带引号的形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-244">Given a quoted identifier, returns the correct unquoted form of that identifier.</span>
          </span>
          <span data-ttu-id="04481-245">这包括正确地取消转义该标识符中的任何嵌入引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-245">This includes correctly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="04481-246">其嵌入引号将被移除的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-246">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-247">给定了带引号的标识符时，返回该标识符的正确的不带引号的形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-247">Given a quoted identifier, returns the correct unquoted form of that identifier.</span>
          </span>
          <span data-ttu-id="04481-248">这包括正确地取消转义该标识符中的任何嵌入引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-248">This includes correctly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-249">不带引号的标识符，其嵌入引号被正确地取消转义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-249">The unquoted identifier, with embedded quotes correctly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OleDbConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::OleDb::OleDbConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="04481-250">其嵌入引号将被移除的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-250">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="04481-251">
            <see cref="T:System.Data.OleDb.OleDbConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-251">The <see cref="T:System.Data.OleDb.OleDbConnection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04481-252">给定了带引号的标识符时，返回该标识符的正确的不带引号的形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-252">Given a quoted identifier, returns the correct unquoted form of that identifier.</span>
          </span>
          <span data-ttu-id="04481-253">这包括正确地取消转义该标识符中的任何嵌入引号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-253">This includes correctly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04481-254">不带引号的标识符，其嵌入引号被正确地取消转义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="04481-254">The unquoted identifier, with embedded quotes correctly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>