<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6589556a020e15a686acb1a793444ff0fe196df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e286a-101">定义一个协定，组件可使用该协定跨应用程序域和进程边界访问对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e286a-101">Defines a contract that components can use to access an object across application domain and process boundaries.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e286a-102">当实现<xref:System.AddIn.Contract.Automation.IRemoteObjectContract>某个类型上，组件可以使用该协定来访问类型的对象的类型信息。</span><span class="sxs-lookup"><span data-stu-id="e286a-102">When you implement <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> on a type, components can use the contract to access type information for objects of the type.</span></span> <span data-ttu-id="e286a-103">通过调用组件访问的类型信息<xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>方法来获取<xref:System.AddIn.Contract.Automation.IRemoteTypeContract>。</span><span class="sxs-lookup"><span data-stu-id="e286a-103">Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.</span></span> <span data-ttu-id="e286a-104"><xref:System.AddIn.Contract.Automation.IRemoteTypeContract>接口定义组件可用来访问特定类型和成员信息，并调用成员的协定。</span><span class="sxs-lookup"><span data-stu-id="e286a-104">The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e286a-105">返回一个 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />，它指定当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e286a-105">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the type of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e286a-106">一个 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />，它指定当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e286a-106">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the type of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e286a-107">使用<xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>方法来访问的远程成员对象的当前<xref:System.AddIn.Contract.Automation.IRemoteObjectContract>标识。</span><span class="sxs-lookup"><span data-stu-id="e286a-107">Use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">
          <span data-ttu-id="e286a-108">要将对象强制转换成的类型的规范名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e286a-108">The canonical name of the type to cast the object to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e286a-109">将当前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 标识的对象强制转换为指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e286a-109">Casts the object identified by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> to a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e286a-110">一个 <see cref="T:System.AddIn.Contract.RemoteArgument" />，表示强制转换操作的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e286a-110">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the result of the cast operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e286a-111">规范名称是全局唯一的名称，例如 GUID。</span><span class="sxs-lookup"><span data-stu-id="e286a-111">A canonical name is a globally unique name, such as a GUID.</span></span> <span data-ttu-id="e286a-112">格式字符串\<*程序集名称*>， \<*完全限定的类型名称*> 建议。</span><span class="sxs-lookup"><span data-stu-id="e286a-112">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended.</span></span> <span data-ttu-id="e286a-113">建议规范名称的一个示例是格式的"ShapeApp，Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application"。</span><span class="sxs-lookup"><span data-stu-id="e286a-113">An example of the recommended format of a canonical name is "ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application".</span></span>  
  
 <span data-ttu-id="e286a-114">组件中发布类型后，无法更改类型的规范名称。</span><span class="sxs-lookup"><span data-stu-id="e286a-114">The canonical name for a type cannot change after a type is published in a component.</span></span> <span data-ttu-id="e286a-115">更改之间的组件和已使用此类型的客户端组件会破坏兼容性的未来版本中的类型的规范名称。</span><span class="sxs-lookup"><span data-stu-id="e286a-115">Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 <span data-ttu-id="e286a-116">建议<xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A>实现引发<xref:System.InvalidCastException>如果强制转换操作失败。</span><span class="sxs-lookup"><span data-stu-id="e286a-116">It is recommended that <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implementations throw an <xref:System.InvalidCastException> if the cast operation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>