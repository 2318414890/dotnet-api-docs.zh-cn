<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRemoteTypeContract.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e828623e05f0027402df3db956a017bc005a571e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e828623e05f0027402df3db956a017bc005a571e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>Defines a contract that components can use to access type information and invoke members across application domain and process boundaries.</source>
          <target state="translated">定义一个协定，组件可使用该协定跨应用程序域和进程边界访问类型信息和调用成员。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get an <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>, components can call the <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method of an object that implements the <ph id="ph3">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> interface.</source>
          <target state="translated">若要获取<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>，组件可以调用<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph>方法的实现的对象<ph id="ph3">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get information about the type of an object, components call the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A&gt;</ph> method.</source>
          <target state="translated">若要获取有关类型的对象的信息，请组件调用<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get information about the members of an object, components call one of the methods that returns information about a particular kind of member.</source>
          <target state="translated">若要获取有关对象的成员的信息，请组件调用返回有关特定类型的成员的信息的方法之一。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>For example, to get information about the events of an object, components can use the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A&gt;</ph> method.</source>
          <target state="translated">例如，若要获取的对象有关的事件的信息，请组件可以使用<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To invoke a member of an object, components use the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A&gt;</ph> method.</source>
          <target state="translated">若要调用对象的成员，组件使用<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Returns the canonical name of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的规范名称。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>The canonical name of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的规范名称。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>The canonical name is a globally unique name, such as a fully qualified type name.</source>
          <target state="translated">规范名称是全局唯一的名称，如完全限定的类型名称。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>assembly name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>fully qualified type name<ept id="p2">*</ept>&gt; are recommended for managed types.</source>
          <target state="translated">格式字符串<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>程序集名称<ept id="p1">*</ept>&gt;， <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>完全限定的类型名称<ept id="p2">*</ept>&gt; 建议用于托管类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>type library name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>type name<ept id="p2">*</ept>&gt; are recommended for COM types.</source>
          <target state="translated">格式字符串<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>类型库名称<ept id="p1">*</ept>&gt;， <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>类型名称<ept id="p2">*</ept>&gt; COM 类型的建议。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Do not change the canonical name for a type after the type is published.</source>
          <target state="translated">发布类型后，不要更改类型的规范名称。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</source>
          <target state="translated">更改类型之间的组件和已使用此类型的客户端组件会破坏兼容性的未来版本中的规范名称。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The name of an event of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的事件的名称。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索事件的方式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> that provides access to a specified event of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph>，它提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定事件的访问。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> that provides access to the specified event, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到指定事件，则为一个提供对该事件的访问的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the events.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索事件的方式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> objects that provides access to the specified events of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> 对象的集合，该集合提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定事件的访问。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> objects that provides access to the events that match the specified binding constraints; otherwise, an empty <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph>，它提供对与指定绑定约束匹配的事件的访问；否则为一个空的 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The name of a field of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的字段的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the field.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索字段的方式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> that provides access to a specified field of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph>，它提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定字段的访问。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> that provides access to the specified field, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到指定字段，则为一个提供对该字段的访问的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the fields.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索字段的方式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> objects that provides access to the specified fields of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> 对象的集合，该集合提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定字段的访问。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> objects that provides access to the fields that match the specified binding constraints; otherwise, an empty <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph>，它提供对与指定绑定约束匹配的字段的访问；否则为一个空的 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>The canonical name of an interface that is implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">由当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 实现的接口的规范名称。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Returns an interface that is implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回由当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 实现的接口。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that represents the interface with the specified canonical name that this <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> implements.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，它表示此 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 实现的带有指定规范名称的接口。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> does not implement an interface with the specified canonical name.</source>
          <target state="translated">如果此 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 未实现带有指定规范名称的接口，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>A canonical name is a globally unique name, such as a GUID.</source>
          <target state="translated">规范名称是全局唯一的名称，例如 GUID。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>assembly name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>fully qualified type name<ept id="p2">*</ept>&gt; are recommended for managed types.</source>
          <target state="translated">格式字符串<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>程序集名称<ept id="p1">*</ept>&gt;， <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>完全限定的类型名称<ept id="p2">*</ept>&gt; 建议用于托管类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>type library name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>type name<ept id="p2">*</ept>&gt; are recommended for COM types.</source>
          <target state="translated">格式字符串<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>类型库名称<ept id="p1">*</ept>&gt;， <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>类型名称<ept id="p2">*</ept>&gt; COM 类型的建议。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Do not change the canonical name for a type after the type is published.</source>
          <target state="translated">发布类型后，不要更改类型的规范名称。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</source>
          <target state="translated">更改类型之间的组件和已使用此类型的客户端组件会破坏兼容性的未来版本中的规范名称。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces">
          <source>Returns the interfaces that are implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回由当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 实现的接口。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent all the interfaces that are implemented by the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，它表示由当前 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 实现的所有接口。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The name of a member of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的成员的名称。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The name can represent multiple members that have the same name.</source>
          <target state="translated">该名称可表示具有相同名称的多个成员。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> values that specifies the members to search for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> 值的一个按位组合，用于指定要搜索的成员。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the members.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索成员的方式。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to all the specified members of the specified member type in the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> 对象的集合，该集合提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 中的指定成员类型的所有指定成员的访问（通过使用指定的绑定约束）。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that represent the members of the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that have the specified name and that meet the criteria specified by the <ph id="ph4">&lt;paramref name="memberTypes" /&gt;</ph> and <ph id="ph5">&lt;paramref name="bindingFlags" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>，它表示具有指定名称且满足由 <ph id="ph4">&lt;paramref name="memberTypes" /&gt;</ph> 和 <ph id="ph5">&lt;paramref name="bindingFlags" /&gt;</ph> 参数指定的条件的当前 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的成员。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>This method can be used to get a single member, or to get multiple members that have the same name, such as constructor or method overloads.</source>
          <target state="translated">可以使用此方法，以获取单个成员，或获得多个具有相同的名称，如构造函数或方法的重载的成员。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the members.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索成员的方式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to all the members in the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> 对象的集合，该集合提供对与指定绑定约束匹配的当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 中的所有成员的访问。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to the members of the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that meet the specified binding constraints.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>，它提供对满足指定绑定约束的当前 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的成员的访问。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>The name of a method of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的方法的名称。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索方法的方式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent the number, order, and type of the parameters for the method to get.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，它表示要获取的方法参数的数量、顺序和类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> that provides access to a specified method of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph>，它提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定方法的访问。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> that provides access to the specified method, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到指定方法，则为一个提供对该方法的访问的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索方法的方式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> objects that provides access to the specified methods of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> 对象的集合，该集合提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定方法的访问。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> objects that provides access to the methods that match the specified binding constraints.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph>，它提供对与指定绑定约束匹配的方法的访问。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索属性的方式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> objects that provides access to the specified properties of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> 对象的集合，该集合提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定属性的访问。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> objects that provides access to the properties that match the specified binding constraints.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph>，它提供对与指定绑定约束匹配的属性的访问。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>The name of a property of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的属性的名称。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索方法的方式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that specifies the return type of the property.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，它指定属性的返回类型。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent the parameters for the specified property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，表示指定属性的参数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> that provides access to a specified property of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">返回一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph>，它提供对当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定属性的访问。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> that provides access to the specified property, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到指定属性，则为一个提供对该属性的访问的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData">
          <source>Returns type information about the object that the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> identifies.</source>
          <target state="translated">返回有关当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 标识的对象的类型信息。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /&gt;</ph> that contains information about the object that the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> identifies.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /&gt;</ph>，它包含有关当前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 标识的对象的信息。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The name of the member to invoke.</source>
          <target state="translated">要调用的成员的名称。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的一个按位组合，用于指定搜索成员的方式。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">要在其上调用指定成员的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /&gt;</ph> that contains the arguments to pass to the member to invoke.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /&gt;</ph>，其中包含传递给将调用的成员的参数。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>An array of Boolean values that indicate whether each of the <bpt id="p1">&lt;c&gt;</bpt>remoteArgs<ept id="p1">&lt;/c&gt;</ept> values is passed by reference.</source>
          <target state="translated">一个布尔值的数组，这些布尔值指示是否通过引用传递每个 <bpt id="p1">&lt;c&gt;</bpt>remoteArgs<ept id="p1">&lt;/c&gt;</ept> 值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A locale ID to use for locale-specific conversions that might be performed by the member being invoked.</source>
          <target state="translated">用于区域设置特定的转换的区域设置 ID，这类转换可由所调用的成员执行。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>Invokes the specified member of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">调用当前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定成员。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> that represents the return value of the invoked member.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph>，它表示被调用成员的返回值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The <ph id="ph1">`remoteArgModifiers`</ph> parameter is used only for components that are written using COM.</source>
          <target state="translated"><ph id="ph1">`remoteArgModifiers`</ph>参数仅用于使用 com。 编写的组件</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>Each value in the <ph id="ph1">`remoteArgModifiers`</ph> parameter indicates whether the corresponding value in the <ph id="ph2">`remoteArgs`</ph> parameter is passed by reference.</source>
          <target state="translated">中的每个值<ph id="ph1">`remoteArgModifiers`</ph>参数指示是否的对应值中<ph id="ph2">`remoteArgs`</ph>通过引用传递参数。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The length of <ph id="ph1">`remoteArgModifiers`</ph> should be the same as the length of <ph id="ph2">`remoteArgs`</ph>.</source>
          <target state="translated">长度<ph id="ph1">`remoteArgModifiers`</ph>应为相同的长度<ph id="ph2">`remoteArgs`</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`remoteArgModifiers`</ph>, this method uses default logic to determine whether an argument is passed by reference.</source>
          <target state="translated">如果你通过<ph id="ph1">`null`</ph>为<ph id="ph2">`remoteArgModifiers`</ph>，此方法使用默认逻辑来确定是否通过引用传递自变量。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>