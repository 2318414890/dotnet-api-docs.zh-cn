<Type Name="ObjectDataProvider" FullName="System.Windows.Data.ObjectDataProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2480cf45f8af52fd289c0a5f075fc4f72e219b0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37521611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataProvider : System.Windows.Data.DataSourceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataProvider extends System.Windows.Data.DataSourceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.ObjectDataProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataProvider&#xA;Inherits DataSourceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataProvider : System::Windows::Data::DataSourceProvider" />
  <TypeSignature Language="F#" Value="type ObjectDataProvider = class&#xA;    inherit DataSourceProvider" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.DataSourceProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>包装和创建可以用作绑定源的对象。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Windows.Data.ObjectDataProvider> 如果不具有给定的类型或成员上执行反射的权限，无法正常工作。 有关详细信息，请参阅中的权限要求[绑定源概述](~/docs/framework/wpf/data/binding-sources-overview.md)。  
  
 有许多方法来创建要用作绑定源对象。 例如，在的资源部分中创建您的对象在[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]页上，或者在代码中创建您的对象并将其设置为`DataContext`的您的窗口。  
  
 <xref:System.Windows.Data.ObjectDataProvider> 可以创建您的对象中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]并使其可用作绑定源。 它提供了以下属性，您可以在对象上执行查询并绑定到结果。  
  
-   使用<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>属性将参数传递给您的对象的构造函数。  
  
-   使用<xref:System.Windows.Data.ObjectDataProvider.MethodName%2A>属性来调用方法，并使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>属性将参数传递给方法。 然后可以绑定到方法的结果。  
  
 此外可以使用<xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous%2A>属性可指定是否执行对象创建的工作线程中或在活动上下文。  
  
 如果你想要用另一个对象替换当前绑定源对象并更新所有关联的绑定，此类也是很有用。  
  
 <xref:System.Windows.Data.ObjectDataProvider> 提供了方便地创建并将对象用作绑定源对象中的[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，但它不会替换现有的数据模型。  
  
 如果要实现您自己的数据绑定的对象，请参阅[绑定源概述](~/docs/framework/wpf/data/binding-sources-overview.md)有关的信息和建议。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.XmlDataProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginQuery">
      <MemberSignature Language="C#" Value="protected override void BeginQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.BeginQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BeginQuery();" />
      <MemberSignature Language="F#" Value="abstract member BeginQuery : unit -&gt; unit&#xA;override this.BeginQuery : unit -&gt; unit" Usage="objectDataProvider.BeginQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>根据 <see cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" /> 属性的值，立即开始创建请求的对象，或在后台线程上开始创建。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法<xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>和<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>基类的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IList ConstructorParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ConstructorParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructorParameters As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ ConstructorParameters { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorParameters : System.Collections.IList" Usage="System.Windows.Data.ObjectDataProvider.ConstructorParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要传递给该构造函数的参数列表。</summary>
        <value>要传递给该构造函数的参数列表。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 隐式更改此集合将导致<xref:System.Windows.Data.ObjectDataProvider>刷新。 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。  
  
<a name="xamlPropertyElementUsage_ConstructorParameters"></a>   
## <a name="xaml-property-element-usage"></a>XAML 属性元素用法  
  
```xaml  
<object>  
  <object.ConstructorParameters>  
    parameterValues  
  </object.ConstructorParameters>  
</object>  
```  

## Examples  
在以下示例使用突出显示的行<xref:System.Windows.Data.ObjectDataProvider>包装的`Person`对象。 `<ObjectDataProvider.ConstructorParameters>`元素将显示如何将传递<xref:System.String>给其构造函数的参数。 
  
 [!code-xaml[SimpleBinding#ObjectDataProvider.ConstructorParameters](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleBinding/VisualBasic/Page1.xaml?highlight=10-14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsynchronous">
      <MemberSignature Language="C#" Value="public bool IsAsynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsynchronous" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsynchronous { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAsynchronous : bool with get, set" Usage="System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是在辅助线程还是在活动上下文中执行对象创建。</summary>
        <value>如果为 <see langword="true" />，则在辅助线程中执行对象创建；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性是要绑定到外部数据对象的速度较慢，可用的情况下很有用。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Windows.Data.ObjectDataProvider.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要调用的方法的名称。</summary>
        <value>要调用的方法的名称。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于在对象上调用方法，并使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>属性将参数传递给方法。 然后可以绑定到方法的结果。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IList MethodParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList MethodParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.MethodParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodParameters As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ MethodParameters { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodParameters : System.Collections.IList" Usage="System.Windows.Data.ObjectDataProvider.MethodParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要传递给方法的参数列表。</summary>
        <value>要传递给方法的参数列表。 默认值为空列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Windows.Data.ObjectDataProvider.MethodName%2A>属性在对象上调用方法并使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>属性将参数传递给方法。 然后可以绑定到方法的结果。  
  
 隐式更改此集合将导致<xref:System.Windows.Data.ObjectDataProvider>对象刷新。 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。  
  
<a name="xamlPropertyElementUsage_MethodParameters"></a>   
## <a name="xaml-property-element-usage"></a>XAML 属性元素用法  
  
```  
<object>  
  <object.MethodParameters>  
    parameterValues  
  </object.MethodParameters>  
</object>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj with get, set" Usage="System.Windows.Data.ObjectDataProvider.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用作绑定源的对象。</summary>
        <value>对象的实例是从 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" />，或 <see cref="T:System.Windows.Data.DataSourceProvider" />（其中的 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 用作 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />）构造的。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>设置为非 null 值，指定类型的对象的属性保留<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>。 如果<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>分配用户，<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>属性返回的已分配对象的类型。 如果<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>设置为<xref:System.Windows.Data.DataSourceProvider>，则<xref:System.Windows.Data.ObjectDataProvider>使用<xref:System.Windows.Data.DataSourceProvider.Data%2A>分配的源提供程序作为有效的<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>。  
  
 如果<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>使用时，<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>并<xref:System.Windows.Data.DataSourceProvider.Data%2A>不会更新直到<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>调用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Data.ObjectDataProvider" /> 同时分配了 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，只允许分配一个。</exception>
      </Docs>
    </Member>
    <Member MemberName="ObjectType">
      <MemberSignature Language="C#" Value="public Type ObjectType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.ObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ObjectType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectType : Type with get, set" Usage="System.Windows.Data.ObjectDataProvider.ObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要创建其实例的对象的类型。</summary>
        <value>如果 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 未初始化或显式设置为 null，则该属性为 <see langword="null" />。 如果分配了 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，则 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 返回对象的类型或 null（如果对象为 null）。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>使用时，<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>并<xref:System.Windows.Data.DataSourceProvider.Data%2A>不会更新直到<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>调用。  
  
<a name="xamlAttributeUsage_ObjectType"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object ObjectType="myDataType"/>  
```  
  
<a name="xamlValues_ObjectType"></a>   
## <a name="xaml-values"></a>XAML 值  
 *myDataType*  
 要创建的实例的数据类型。 使用[X:type 标记扩展](~/docs/framework/xaml-services/x-type-markup-extension.md)设置类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Data.ObjectDataProvider" /> 同时分配了 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，只允许分配一个。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeConstructorParameters">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeConstructorParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeConstructorParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeConstructorParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeConstructorParameters();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeConstructorParameters : unit -&gt; bool" Usage="objectDataProvider.ShouldSerializeConstructorParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> 属性。</summary>
        <returns>如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>属性不具有简单的默认值。 此方法指示属性是否已从其默认值。 如果开发的设计器通常调用此方法<xref:System.Windows.Data.ObjectDataProvider>或开发您自己控件包含<xref:System.Windows.Data.ObjectDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMethodParameters">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMethodParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMethodParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMethodParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMethodParameters();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeMethodParameters : unit -&gt; bool" Usage="objectDataProvider.ShouldSerializeMethodParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.MethodParameters" /> 属性。</summary>
        <returns>如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>属性不具有简单的默认值。 此方法指示属性是否已从其默认值。 如果开发的设计器通常调用此方法<xref:System.Windows.Data.ObjectDataProvider>或开发您自己控件包含<xref:System.Windows.Data.ObjectDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeObjectInstance">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeObjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeObjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeObjectInstance () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeObjectInstance();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeObjectInstance : unit -&gt; bool" Usage="objectDataProvider.ShouldSerializeObjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> 属性。</summary>
        <returns>如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>属性不具有简单的默认值。 此方法指示属性是否已从其默认值。 如果开发的设计器通常调用此方法<xref:System.Windows.Data.ObjectDataProvider>或开发您自己控件包含<xref:System.Windows.Data.ObjectDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeObjectType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeObjectType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeObjectType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeObjectType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeObjectType : unit -&gt; bool" Usage="objectDataProvider.ShouldSerializeObjectType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 属性。</summary>
        <returns>如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>属性不具有简单的默认值。 此方法指示属性是否已从其默认值。 如果开发的设计器通常调用此方法<xref:System.Windows.Data.ObjectDataProvider>或开发您自己控件包含<xref:System.Windows.Data.ObjectDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>