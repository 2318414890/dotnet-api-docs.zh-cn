<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingOperations.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingOperations">
          <source>Provides static methods to manipulate bindings, including <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> objects.</source>
          <target state="translated">提供用于操作绑定的静态方法，包括 <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This class exposes a set of static methods that serve as helper operations for data bindings.</source>
          <target state="translated">此类公开一组作为帮助器操作的数据绑定的静态方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>The collection to access.</source>
          <target state="translated">要访问的集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>The action to perform on the collection.</source>
          <target state="translated">集合中要执行的操作。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>accessMethod<ept id="p1">&lt;/c&gt;</ept> will write to the collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>accessMethod<ept id="p1">&lt;/c&gt;</ept> 将写入集合，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
          <source>Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</source>
          <target state="translated">提供对集合的访问权限，方法是使用异步机制，该机制在应用程序调用 EnableCollectionSynchronization 时指定。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>The object from which to remove bindings.</source>
          <target state="translated">要从中删除绑定的对象。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>Removes all bindings, including bindings of type <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, from the specified <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">从指定的 <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> 删除所有绑定，包括类型 <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> 的绑定。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>If the specified object is not data-bound, this method has no effect.</source>
          <target state="translated">如果指定的对象不是数据绑定，则此方法无效。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="target" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object from which to remove the binding.</source>
          <target state="translated">要从中删除绑定的对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The dependency property from which to remove the binding.</source>
          <target state="translated">要从中删除绑定的依赖属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Removes the binding from a property if there is one.</source>
          <target state="translated">如果存在，则从属性中删除绑定。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If the given property is data-bound with a <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</source>
          <target state="translated">如果给定的属性被数据绑定与<ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>，此方法中删除相应的绑定表达式和通过绑定设置为其任何本地值之前的属性值的还原。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If the given property is not data-bound, this method has no effect.</source>
          <target state="translated">如果给定的属性不是数据绑定，则此方法无效。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.BindingOperations.CollectionRegistering">
          <source>Occurs when the data-binding system notices a collection.</source>
          <target state="translated">当数据绑定系统注意到集合时发生。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
          <source>Occurs when the data-binding system notices a collection view.</source>
          <target state="translated">当数据绑定系统注意到集合视图时发生。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
          <source>The collection to remove synchronized access from.</source>
          <target state="translated">要从中移除同步访问的集合。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
          <source>Remove the synchronization registered for the specified collection.</source>
          <target state="translated">移除指定的集合注册的同步。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Gets an object that replaces the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> when an item container is removed from the visual tree.</source>
          <target state="translated">当项容器从可视化树中移除时，获取替换 <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>An object that replaces the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> when an item container is removed from the visual tree.</source>
          <target state="translated">当从可视化树中移除一个项容器时，一个对象替换了 <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Use this property if you need to deal with the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of an item container.</source>
          <target state="translated">使用此属性，如果你需要处理<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>项容器。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>An item container is the UI element that displays an item in an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">项容器是显示中的项的用户界面元素<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>When an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> is data bound to a collection, an item container is generated for each item.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>是数据绑定到集合，项目容器为每个项生成。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>In some cases, item containers are removed from the visual tree.</source>
          <target state="translated">在某些情况下，会从可视化树中删除项容器。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>.</source>
          <target state="translated">删除项目容器的情况的两种典型情况是当从基础集合中移除项和上启用虚拟化<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>In these cases, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> property of the item container will be set to the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> property  You should check whether the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> is equal to the <ph id="ph4">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph> before accessing the <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> in the <ph id="ph6">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> event for item containers.</source>
          <target state="translated">在这些情况下，<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>项目容器的属性将设置为<ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph>属性应检查是否<ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>等同于<ph id="ph4">&lt;xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A&gt;</ph>之前访问<ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>中<ph id="ph6">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph>项事件容器。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingOperations.DisconnectedSource">
          <source>For more information about item containers and virtualization, see the remarks in the <ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph> class.</source>
          <target state="translated">有关项容器和虚拟化的详细信息，请参阅中的备注部分<ph id="ph1">&lt;xref:System.Windows.Controls.VirtualizingStackPanel&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingOperations">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection that is used on multiple threads.</source>
          <target state="translated">使 <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> 对象能够参与对多个线程上使用的集合的同步访问。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">WPF 应用程序可以显示的数据使用集合<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>或其子类之一 (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>，<ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>等。)。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF 通道进行所有其访问权限的一个子类通过集合<ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">同时<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>在其上具有到线程关联<ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>已创建，这意味着，在不同线程中使用它们禁止的将引发异常。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">实际上，此限制适用于集合以及。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">你可能想要使用多个线程上的集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">例如，你想要更新集合 （添加或删除项） 在"数据收集"线程"用户界面"线程上显示结果时，以便 UI 保持响应性时数据收集发生的情况。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</source>
          <target state="translated">在这种情况下，你有责任确保对集合的同步 （"线程安全的"） 访问。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.</source>
          <target state="translated">这通常是使用简单的锁定机制或更复杂的同步机制，如信号灯，重置事件，等等。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">而必须同步对集合的应用程序的访问，还必须从 WPF 保证该访问权限 (专门从<ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) 参与相同的同步机制。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>You do this by calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> method.</source>
          <target state="translated">为此，可调用 <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, an application has the following responsibilities:</source>
          <target state="translated">若要使用多个线程上的集合，其中之一是拥有的 UI 线程<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>，应用程序具有以下职责：</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Choose a synchronization mechanism.</source>
          <target state="translated">选择一种同步机制。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Synchronize all access from the application to the collection using that mechanism.</source>
          <target state="translated">同步应用程序中对使用该机制的集合的所有访问。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> to inform WPF of the mechanism.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph>以通知 WPF 的机制。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">调用必须在 UI 线程上发生。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">之前使用的集合在另一个线程或附加到的集合前，必须进行调用<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>，取二者中较更高版本。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> overload if using a simple lock mechanism; call the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload if using a more elaborate mechanism.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph>重载如果使用简单的锁定机制; 调用<ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph>重载如果使用更复杂的机制。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">确保对集合和所做的更改的通知的更改 (通过<ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) 是原子; 不能访问来自其他线程可以进行干预。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>(This is usually free.</source>
          <target state="translated">（这是通常可用。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For instance，<ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>保证，前提是所有更改都受同步。)</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>，调用还必须在 UI 线程上发生。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">如果你想要在多个 UI 线程上使用相同的集合，则必须调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph>(和<ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>，如果需要) 单独在每个 UI 线程上。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Avoid deadlock.</source>
          <target state="translated">避免死锁。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</source>
          <target state="translated">这是已应用程序的责任后它会选择要使用同步，但它还必须考虑到帐户 WPF 的参与同步时，如下面这一段中所述。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">反过来，WPF 提供以下行为：</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection using the given synchronization mechanism.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>访问使用给定的同步机制的集合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>维护用于集合中的"卷影副本"，在 UI 线程上。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> 事件会排队等候，当它们到达时 （在任何线程上）。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">挂起的事件应用于以异步方式在 UI 线程上的卷影复制时它有机会这样做。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> won't directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>不会直接使用任何其他同步机制对应用程序可见。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">这是 WPF 的方式帮助避免死锁 （请参阅上一项 7）。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">净效果是，你可以更改在任何线程上的集合和这些更改最终显示在<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>UI 线程时有时间"追赶"。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingOperations">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">实现已被优化以更改流入要保留背景的 UI 线程的速率从占满 UI 线程和缩短对普通用户输入的响应线程的限制。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The collection that needs synchronized access.</source>
          <target state="translated">需同步访问的集合。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The object to lock when accessing the collection.</source>
          <target state="translated">访问集合时要锁定的对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</source>
          <target state="translated">通过使用简单的锁定机制，使 <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> 对象能够参与对多个线程上使用的集合的同步访问。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">WPF 应用程序可以显示的数据使用集合<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>或其子类之一 (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>，<ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>等。)。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF 通道进行所有其访问权限的一个子类通过集合<ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">同时<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>在其上具有到线程关联<ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>已创建，这意味着，在不同线程中使用它们禁止的将引发异常。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">实际上，此限制适用于集合以及。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">你可能想要使用多个线程上的集合。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">例如，你想要更新集合 （添加或删除项） 在"数据收集"线程"用户界面"线程上显示结果时，以便 UI 保持响应性时数据收集发生的情况。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">在这种情况下，你有责任确保同步对集合和从 WPF，从而保证该访问权限 （"线程安全的"） 访问 (专门从<ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) 参与相同的同步机制。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>By calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> method, you can do this by using a simple lock mechanism.</source>
          <target state="translated">通过调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph>方法，你可以执行此操作通过使用简单的锁定机制。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you must do the following:</source>
          <target state="translated">若要使用多个线程上的集合，其中之一是拥有的 UI 线程<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>，你必须执行以下操作：</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Instantiate an object to lock when accessing the collection.</source>
          <target state="translated">实例化要锁定时访问该集合的对象。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Synchronize all access from the application to the collection by locking that object.</source>
          <target state="translated">通过锁定该对象同步应用程序中对集合的所有访问。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph> to inform WPF that you are using a simple lock mechanism.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)&gt;</ph>以通知 WPF 你正在使用简单的锁定机制。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">调用必须在 UI 线程上发生。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">之前使用的集合在另一个线程或附加到的集合前，必须进行调用<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>，取二者中较更高版本。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">确保对集合和所做的更改的通知的更改 (通过<ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) 是原子; 不能访问来自其他线程可以进行干预。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>(This is usually free.</source>
          <target state="translated">（这是通常可用。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For instance，<ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>保证，前提是所有更改都受同步。)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>，调用还必须在 UI 线程上发生。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">如果你想要在多个 UI 线程上使用相同的集合，则必须调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph>(和<ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>，如果需要) 单独在每个 UI 线程上。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Avoid deadlock.</source>
          <target state="translated">避免死锁。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</source>
          <target state="translated">这是已应用程序的责任，一旦它选择要使用同步，但它必须还考虑在同步过程中的 WPF 的参与。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>(See more, below.)</source>
          <target state="translated">（请参阅详细信息，下面。）</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">反过来，WPF 提供以下行为：</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection using the locking mechanism.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>访问使用锁定机制的集合。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>维护用于集合中的"卷影副本"，在 UI 线程上。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> 事件会排队等候，当它们到达时 （在任何线程上）。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">挂起的事件应用于以异步方式在 UI 线程上的卷影复制时它有机会这样做。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> will not directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>将不是直接使用任何其他同步机制对应用程序可见。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">这是 WPF 的方式帮助避免死锁 （请参阅上一项 7）。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">净效果是，你可以更改在任何线程上的集合和这些更改最终显示在<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>UI 线程时有时间"追赶"。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">实现已被优化以更改流入要保留背景的 UI 线程的速率从占满 UI 线程和缩短对普通用户输入的响应线程的限制。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The collection that needs synchronized access.</source>
          <target state="translated">需同步访问的集合。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>An object that is passed to the callback.</source>
          <target state="translated">传递给回调的对象。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The callback that is invoked whenever access to the collection is required.</source>
          <target state="translated">每当需要访问集合时，就会调用的回调。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You can use it to ensure that the collection is accessed by one thread at a time.</source>
          <target state="translated">可用于确保集合一次被一个线程访问。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</source>
          <target state="translated">通过使用机制而不是简单的锁定，使 <ph id="ph1">&lt;see cref="T:System.Windows.Data.CollectionView" /&gt;</ph> 对象能够参与对多个线程上使用的集合的同步访问。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>A WPF application can display a collection of data using an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> or one of its subclasses (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, etc.).</source>
          <target state="translated">WPF 应用程序可以显示的数据使用集合<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>或其子类之一 (<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Controls.DataGrid&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph>，<ph id="ph5">&lt;xref:System.Windows.Controls.ListView&gt;</ph>等。)。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>WPF channels all its access to the collection through a subclass of <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
          <target state="translated">WPF 通道进行所有其访问权限的一个子类通过集合<ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Both the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> have affinity to the thread on which the <ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> was created, meaning that using them on a different thread is forbidden and throws an exception.</source>
          <target state="translated">同时<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>在其上具有到线程关联<ph id="ph3">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>已创建，这意味着，在不同线程中使用它们禁止的将引发异常。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In effect, this restriction applies to the collection as well.</source>
          <target state="translated">实际上，此限制适用于集合以及。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You may want to use the collection on multiple threads.</source>
          <target state="translated">你可能想要使用多个线程上的集合。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</source>
          <target state="translated">例如，你想要更新集合 （添加或删除项） 在"数据收集"线程"用户界面"线程上显示结果时，以便 UI 保持响应性时数据收集发生的情况。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) participates in the same synchronization mechanism.</source>
          <target state="translated">在这种情况下，你有责任确保同步对集合和从 WPF，从而保证该访问权限 （"线程安全的"） 访问 (专门从<ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>) 参与相同的同步机制。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>By calling the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.</source>
          <target state="translated">通过调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph>方法，你可以执行此操作通过使用同步机制，例如信号量、 重置事件，等等。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>To use a collection on multiple threads, one of which is the UI thread that owns the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, you must do the following:</source>
          <target state="translated">若要使用多个线程上的集合，其中之一是拥有的 UI 线程<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>，你必须执行以下操作：</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Choose a synchronization mechanism.</source>
          <target state="translated">选择一种同步机制。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Synchronize all access from the application to the collection using that mechanism.</source>
          <target state="translated">同步应用程序中对使用该机制的集合的所有访问。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph> overload to inform WPF that you are using a mechanism other than simple locking.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)&gt;</ph>重载以通知 WPF 将以外简单锁定机制。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The call must occur on the UI thread.</source>
          <target state="translated">调用必须在 UI 线程上发生。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The call must occur before using the collection on a different thread or before attaching the collection to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, whichever is later.</source>
          <target state="translated">之前使用的集合在另一个线程或附加到的集合前，必须进行调用<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>，取二者中较更高版本。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Ensure that a change to the collection and the notification of that change (through <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) are atomic; no access from other threads can intervene.</source>
          <target state="translated">确保对集合和所做的更改的通知的更改 (通过<ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>) 是原子; 不能访问来自其他线程可以进行干预。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>(This is usually free.</source>
          <target state="translated">（这是通常可用。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>For instance, <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> guarantees this, provided that all changes are protected by synchronization.)</source>
          <target state="translated">For instance，<ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>保证，前提是所有更改都受同步。)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, that call must also occur on the UI thread.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>，调用还必须在 UI 线程上发生。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>If you want to use the same collection on multiple UI threads, you must call <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph> (and <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>, if needed) separately on each UI thread.</source>
          <target state="translated">如果你想要在多个 UI 线程上使用相同的集合，则必须调用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A&gt;</ph>(和<ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A&gt;</ph>，如果需要) 单独在每个 UI 线程上。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Avoid deadlock.</source>
          <target state="translated">避免死锁。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</source>
          <target state="translated">这是已应用程序的责任，一旦它选择要使用同步，但它必须还考虑在同步过程中的 WPF 的参与。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>(See more, below.)</source>
          <target state="translated">（请参阅详细信息，下面。）</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>In return, WPF provides the following behavior:</source>
          <target state="translated">反过来，WPF 提供以下行为：</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> accesses the collection by calling the registered <ph id="ph2">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> with the following arguments:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>访问集合，通过调用的已注册<ph id="ph2">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph>使用以下参数：</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`collection`</ph>: the collection of interest.</source>
          <target state="translated"><ph id="ph1">`collection`</ph>： 感兴趣的集合。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`context`</ph>: the registered context object.</source>
          <target state="translated"><ph id="ph1">`context`</ph>： 已注册的上下文对象。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`accessMethod`</ph>: a delegate that performs the actual access.</source>
          <target state="translated"><ph id="ph1">`accessMethod`</ph>： 用于执行实际访问委托。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`writeAccess`</ph>: <ph id="ph2">`true`</ph> if the delegate will modify the collection; <ph id="ph3">`false`</ph> otherwise.</source>
          <target state="translated"><ph id="ph1">`writeAccess`</ph>:<ph id="ph2">`true`</ph>委托将修改该集合; 如果<ph id="ph3">`false`</ph>否则为。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Your <ph id="ph1">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph> should establish synchronization on the collection (using the <ph id="ph2">`context`</ph> object and the <ph id="ph3">`writeAccess`</ph> value, as appropriate), call the <ph id="ph4">`accessMethod`</ph>, then release synchronization.</source>
          <target state="translated">你<ph id="ph1">&lt;xref:System.Windows.Data.CollectionSynchronizationCallback&gt;</ph>应建立同步对集合 (使用<ph id="ph2">`context`</ph>对象和<ph id="ph3">`writeAccess`</ph>值，根据需要)，调用<ph id="ph4">`accessMethod`</ph>，然后释放同步。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> maintains a "shadow copy" of the collection for use on the UI thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>维护用于集合中的"卷影副本"，在 UI 线程上。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> events are queued up as they arrive (on any thread).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.CollectionChanged&gt;</ph> 事件会排队等候，当它们到达时 （在任何线程上）。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</source>
          <target state="translated">挂起的事件应用于以异步方式在 UI 线程上的卷影复制时它有机会这样做。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> will not directly use any other synchronization mechanism visible to the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>将不是直接使用任何其他同步机制对应用程序可见。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>This is WPF's way of helping to avoid deadlock (see the previous item 7).</source>
          <target state="translated">这是 WPF 的方式帮助避免死锁 （请参阅上一项 7）。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The net effect is that you can change the collection on any thread, and those changes eventually appear in the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> when the UI thread has time to "catch up".</source>
          <target state="translated">净效果是，你可以更改在任何线程上的集合和这些更改最终显示在<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>UI 线程时有时间"追赶"。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</source>
          <target state="translated">实现已被优化以更改流入要保留背景的 UI 线程的速率从占满 UI 线程和缩短对普通用户输入的响应线程的限制。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>The <ph id="ph1">`context`</ph> parameter is an arbitrary object that is passed to the <ph id="ph2">`callback`</ph>.</source>
          <target state="translated"><ph id="ph1">`context`</ph>参数是一个任意对象传递给<ph id="ph2">`callback`</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source>You can use it to determine the synchronization mechanism used to control access to <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">你可以使用它来确定用于控制对的访问的同步机制<ph id="ph1">`collection`</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
          <source><ph id="ph1">`Context`</ph> can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`Context`</ph> 可以是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的对象。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">从中检索绑定的绑定目标属性。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">检索在指定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> object has been set.</source>
          <target state="translated">给定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> 对象，或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果尚未设置 <ph id="ph3">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> 对象）。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 null。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的对象。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object.</source>
          <target state="translated">从中检索 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> 对象的绑定目标属性。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">检索在指定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that is set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no binding object has been set.</source>
          <target state="translated">给定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> 对象，或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果尚未设置绑定对象）。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> class is the common base class for the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>类是公共类的基类<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBinding%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A&gt;</ph> methods if you know in advance the type of binding that is set on the property.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBinding%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A&gt;</ph>方法如果您事先知道的它绑定类型的属性上设置。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的绑定目标对象。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object.</source>
          <target state="translated">从中检索 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> 对象的绑定目标属性。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">返回与指定对象上的指定的绑定目标关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">与给定属性关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> 对象，或为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果不存在此类对象）。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If a <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object is set on the property, the <ph id="ph2">&lt;see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /&gt;</ph> is returned.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> 对象是在该属性上设置的，则会返回 <ph id="ph2">&lt;see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object maintains the connection between the binding source and the binding target.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>对象维护绑定源和绑定目标之间的连接。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can obtain the <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object by calling this static method or by calling the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> method on a data-bound <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> object.</source>
          <target state="translated">你可以获取<ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>对象通过调用此静态方法或通过调用<ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph>数据绑定方法<ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph>或<ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The following example shows the implementation of a <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler that uses the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> method to obtain the <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> and then calls the <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpression.DataItem%2A&gt;</ph> property to access the binding source object.</source>
          <target state="translated">下面的示例演示的实现<ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph>事件处理程序使用<ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>方法来获取<ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>，然后调用<ph id="ph4">&lt;xref:System.Windows.Data.BindingExpression.DataItem%2A&gt;</ph>属性来访问的绑定源对象。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph><ph id="ph2">`SavingsText`</ph> is the binding target object and <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph> is the binding target property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> <ph id="ph2">`SavingsText`</ph>为绑定目标对象和<ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt;</ph>是绑定目标属性。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的对象。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object.</source>
          <target state="translated">从中检索 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 对象的绑定目标属性。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">检索在指定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> object that is set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no binding object has been set.</source>
          <target state="translated">给定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 对象，或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果尚未设置绑定对象）。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> class is the common base class for the <ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBindingExpression&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph>类是公共类的基类<ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBindingExpression&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A&gt;</ph> methods if you know in advance type of binding that is set on the property.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A&gt;</ph>方法如果您事先知道的属性上设置的绑定的类型。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 null。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的对象。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">从中检索绑定的绑定目标属性。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">检索在指定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> object has been set.</source>
          <target state="translated">给定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> 对象，或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果尚未设置 <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> 对象）。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 null。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的绑定目标对象。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object.</source>
          <target state="translated">从中检索 <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> 对象的绑定目标属性。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">返回与指定对象上的指定的绑定目标关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">与给定属性关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> 对象，或为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果不存在此类对象）。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> object associated with the given property or <ph id="ph2">`null`</ph> if none exists.</source>
          <target state="translated">与给定属性关联的 <ph id="ph1">&lt;xref:System.Windows.Data.MultiBindingExpression&gt;</ph> 对象，或为 <ph id="ph2">`null`</ph>（如果不存在此类对象）。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的对象。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the binding.</source>
          <target state="translated">从中检索绑定的绑定目标属性。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object that is set on the specified property.</source>
          <target state="translated">检索在指定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object set on the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> object has been set.</source>
          <target state="translated">给定属性上设置的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> 对象，或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果尚未设置 <ph id="ph3">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> 对象）。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 null。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的绑定目标对象。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The binding target property from which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object.</source>
          <target state="translated">从中检索 <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> 对象的绑定目标属性。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object associated with the specified binding target property on the specified object.</source>
          <target state="translated">返回与指定对象上的指定的绑定目标关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> object associated with the given property or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if none exists.</source>
          <target state="translated">与给定属性关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> 对象，或为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果不存在此类对象）。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> and <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> parameters cannot be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> 参数不能为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> to get binding groups for.</source>
          <target state="translated">获取绑定组所用的根 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>This method returns <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that are associated with this element or its descendant elements.</source>
          <target state="translated">此方法返回与此元素或其后代元素相关的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>Gets all <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that have invalid values or target values have not been updated the source.</source>
          <target state="translated">获取所有无效值或没有进行源更新的目标值的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 对象的集合，这些对象与指定的元素关联，并具有无效值，或尚未更新资源的目标值。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A&gt;</ph> returns all <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> objects that are invalid or have not been updated.</source>
          <target state="translated">如果<ph id="ph1">`root`</ph>是<ph id="ph2">`null`</ph>，<ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A&gt;</ph>返回所有<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>无效或未更新的对象。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> to get binding groups for.</source>
          <target state="translated">获取绑定组所用的根 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>This method returns <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that are associated with this element or its descendant elements.</source>
          <target state="translated">此方法返回与此元素或其后代元素相关的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>Gets all <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that have invalid values or target values have not been updated the source.</source>
          <target state="translated">获取所有无效值或没有进行源更新的目标值的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 对象的集合，这些对象与指定的元素关联，并具有无效值，或尚未更新资源的目标值。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
          <source>If <ph id="ph1">`root`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A&gt;</ph> returns all <ph id="ph4">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> objects that are invalid or have not been updated.</source>
          <target state="translated">如果<ph id="ph1">`root`</ph>是<ph id="ph2">`null`</ph>，<ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A&gt;</ph>返回所有<ph id="ph4">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph>无效或未更新的对象。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The object where <bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> is.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>dp<ept id="p1">&lt;/c&gt;</ept> 所在的对象。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>The dependency property to check.</source>
          <target state="translated">要检查的依赖项属性。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>Returns a value that indicates whether the specified property is currently data-bound.</source>
          <target state="translated">返回一个值，该值指示指定的属性当前是否是数据绑定的。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property is data-bound; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的属性为数据绑定的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="target" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The binding target of the binding.</source>
          <target state="translated">绑定的绑定目标。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The target property of the binding.</source>
          <target state="translated">绑定的目标属性。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> object that describes the binding.</source>
          <target state="translated">描述绑定的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingBase" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>Creates and associates a new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> with the specified binding target property.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 的新实例，并将其与指定的绑定目标属性关联。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The instance of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> created for and associated with the specified property.</source>
          <target state="translated">为指定的属性创建并与之相关联的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> class is the base class of <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpressionBase" /&gt;</ph> 类是 <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBindingExpression" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.Windows.Data.PriorityBindingExpression" /&gt;</ph> 的基类。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph> and associates the instance with the given dependency property of the given object.</source>
          <target state="translated">此方法创建的新实例<ph id="ph1">&lt;xref:System.Windows.Data.BindingExpressionBase&gt;</ph>并将实例与给定的对象的给定的依赖项属性关联。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method is the way to attach a binding to an arbitrary <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> that may not expose its own SetBinding method.</source>
          <target state="translated">此方法是将一个绑定附加到一个任意<ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>，可能不会公开自己。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The following example shows how to use this method to set a binding.</source>
          <target state="translated">下面的示例演示如何使用此方法设置的绑定。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>In this example, <ph id="ph1">`myNewBindDef`</ph> is a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> object that describes the binding.</source>
          <target state="translated">在此示例中，<ph id="ph1">`myNewBindDef`</ph>是<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>说明的绑定的对象。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The binding target is <ph id="ph1">`myDateText`</ph>, an instance of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> class.</source>
          <target state="translated">绑定目标是<ph id="ph1">`myDateText`</ph>，实例<ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>The <ph id="ph1">&lt;paramref name="binding" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="binding" /&gt;</ph> 参数不能为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>