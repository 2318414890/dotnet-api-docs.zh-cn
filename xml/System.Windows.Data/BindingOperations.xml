<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30631071" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2f530-101">提供用于操作绑定的静态方法，包括 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" /> 和 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f530-101">Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-102">此类公开一组作为帮助器操作的数据绑定的静态方法。</span><span class="sxs-lookup"><span data-stu-id="2f530-102">This class exposes a set of static methods that serve as helper operations for data bindings.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="accessMethod" Type="System.Action" />
        <Parameter Name="writeAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="2f530-103">要访问的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-103">The collection to access.</span>
          </span>
        </param>
        <param name="accessMethod">
          <span data-ttu-id="2f530-104">集合中要执行的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-104">The action to perform on the collection.</span>
          </span>
        </param>
        <param name="writeAccess">
          <span data-ttu-id="2f530-105">如果 <c>accessMethod</c> 将写入集合，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-105">
              <see langword="true" /> if <c>accessMethod</c> will write to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-106">提供对集合的访问权限，方法是使用异步机制，该机制在应用程序调用 EnableCollectionSynchronization 时指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-106">Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-107">要从中删除绑定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-107">The object from which to remove bindings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-108">从指定的 <see cref="T:System.Windows.DependencyObject" /> 删除所有绑定，包括类型 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" /> 和 <see cref="T:System.Windows.Data.PriorityBinding" /> 的绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-108">Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-109">如果指定的对象不是数据绑定，则此方法无效。</span><span class="sxs-lookup"><span data-stu-id="2f530-109">If the specified object is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-110">如果 <paramref name="target" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-110">If <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-111">要从中删除绑定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-111">The object from which to remove the binding.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-112">要从中删除绑定的依赖属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-112">The dependency property from which to remove the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-113">如果存在，则从属性中删除绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-113">Removes the binding from a property if there is one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-114">如果给定的属性被数据绑定与<xref:System.Windows.Data.Binding>， <xref:System.Windows.Data.PriorityBinding>，或<xref:System.Windows.Data.MultiBinding>，此方法中删除相应的绑定表达式和通过绑定设置为其任何本地值之前的属性值的还原。</span><span class="sxs-lookup"><span data-stu-id="2f530-114">If the given property is data-bound with a <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, or <xref:System.Windows.Data.MultiBinding>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</span></span>  
  
 <span data-ttu-id="2f530-115">如果给定的属性不是数据绑定，则此方法无效。</span><span class="sxs-lookup"><span data-stu-id="2f530-115">If the given property is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-116">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-116">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f530-117">当数据绑定系统注意到集合时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-117">Occurs when the data-binding system notices a collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f530-118">当数据绑定系统注意到集合视图时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-118">Occurs when the data-binding system notices a collection view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="2f530-119">要从中移除同步访问的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-119">The collection to remove synchronized access from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-120">移除指定的集合注册的同步。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-120">Remove the synchronization registered for the specified collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f530-121">当项容器从可视化树中移除时，获取替换 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-121">Gets an object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f530-122">当从可视化树中移除一个项容器时，一个对象替换了 <see cref="P:System.Windows.FrameworkElement.DataContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-122">An object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-123">使用此属性，如果你需要处理<xref:System.Windows.FrameworkElement.DataContext%2A>项容器。</span><span class="sxs-lookup"><span data-stu-id="2f530-123">Use this property if you need to deal with the <xref:System.Windows.FrameworkElement.DataContext%2A> of an item container.</span></span>  <span data-ttu-id="2f530-124">项容器是显示中的项的用户界面元素<xref:System.Windows.Controls.ItemsControl>。</span><span class="sxs-lookup"><span data-stu-id="2f530-124">An item container is the UI element that displays an item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="2f530-125">当<xref:System.Windows.Controls.ItemsControl>是数据绑定到集合，项目容器为每个项生成。</span><span class="sxs-lookup"><span data-stu-id="2f530-125">When an <xref:System.Windows.Controls.ItemsControl> is data bound to a collection, an item container is generated for each item.</span></span>  <span data-ttu-id="2f530-126">在某些情况下，会从可视化树中删除项容器。</span><span class="sxs-lookup"><span data-stu-id="2f530-126">In some cases, item containers are removed from the visual tree.</span></span>  <span data-ttu-id="2f530-127">删除项目容器的情况的两种典型情况是当从基础集合中移除项和上启用虚拟化<xref:System.Windows.Controls.ItemsControl>。</span><span class="sxs-lookup"><span data-stu-id="2f530-127">Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="2f530-128">在这些情况下，<xref:System.Windows.FrameworkElement.DataContext%2A>项目容器的属性将设置为<xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>属性应检查是否<xref:System.Windows.FrameworkElement.DataContext%2A>等同于<xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>之前访问<xref:System.Windows.FrameworkElement.DataContext%2A>中<xref:System.Windows.FrameworkElement.DataContextChanged>项事件容器。</span><span class="sxs-lookup"><span data-stu-id="2f530-128">In these cases, the <xref:System.Windows.FrameworkElement.DataContext%2A> property of the item container will be set to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> property  You should check whether the <xref:System.Windows.FrameworkElement.DataContext%2A> is equal to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> before accessing the <xref:System.Windows.FrameworkElement.DataContext%2A> in the <xref:System.Windows.FrameworkElement.DataContextChanged> event for item containers.</span></span> <span data-ttu-id="2f530-129">有关项容器和虚拟化的详细信息，请参阅中的备注部分<xref:System.Windows.Controls.VirtualizingStackPanel>类。</span><span class="sxs-lookup"><span data-stu-id="2f530-129">For more information about item containers and virtualization, see the remarks in the <xref:System.Windows.Controls.VirtualizingStackPanel> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2f530-130">使 <see cref="T:System.Windows.Data.CollectionView" /> 对象能够参与对多个线程上使用的集合的同步访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-130">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection that is used on multiple threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="2f530-131">WPF 应用程序可以显示的数据使用集合<xref:System.Windows.Controls.ItemsControl>或其子类之一 (<xref:System.Windows.Controls.ListBox>， <xref:System.Windows.Controls.DataGrid>， <xref:System.Windows.Controls.TreeView>，<xref:System.Windows.Controls.ListView>等。)。</span><span class="sxs-lookup"><span data-stu-id="2f530-131">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="2f530-132">WPF 通道进行所有其访问权限的一个子类通过集合<xref:System.Windows.Data.CollectionView>。</span><span class="sxs-lookup"><span data-stu-id="2f530-132">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="2f530-133">同时<xref:System.Windows.Controls.ItemsControl>和<xref:System.Windows.Data.CollectionView>在其上具有到线程关联<xref:System.Windows.Controls.ItemsControl>已创建，这意味着，在不同线程中使用它们禁止的将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2f530-133">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="2f530-134">实际上，此限制适用于集合以及。</span><span class="sxs-lookup"><span data-stu-id="2f530-134">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="2f530-135">你可能想要使用多个线程上的集合。</span><span class="sxs-lookup"><span data-stu-id="2f530-135">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="2f530-136">例如，你想要更新集合 （添加或删除项） 在"数据收集"线程"用户界面"线程上显示结果时，以便 UI 保持响应性时数据收集发生的情况。</span><span class="sxs-lookup"><span data-stu-id="2f530-136">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="2f530-137">在这种情况下，你有责任确保对集合的同步 （"线程安全的"） 访问。</span><span class="sxs-lookup"><span data-stu-id="2f530-137">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</span></span>   <span data-ttu-id="2f530-138">这通常是使用简单的锁定机制或更复杂的同步机制，如信号灯，重置事件，等等。</span><span class="sxs-lookup"><span data-stu-id="2f530-138">This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.</span></span> 
 
<span data-ttu-id="2f530-139">而必须同步对集合的应用程序的访问，还必须从 WPF 保证该访问权限 (专门从<xref:System.Windows.Data.CollectionView>) 参与相同的同步机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-139">While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span>  <span data-ttu-id="2f530-140">为此，可调用 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2f530-140">You do this by calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> method.</span></span>
 
<span data-ttu-id="2f530-141">若要使用多个线程上的集合，其中之一是拥有的 UI 线程<xref:System.Windows.Controls.ItemsControl>，应用程序具有以下职责：</span><span class="sxs-lookup"><span data-stu-id="2f530-141">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, an application has the following responsibilities:</span></span>

1. <span data-ttu-id="2f530-142">选择一种同步机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-142">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="2f530-143">同步应用程序中对使用该机制的集合的所有访问。</span><span class="sxs-lookup"><span data-stu-id="2f530-143">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="2f530-144">调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>以通知 WPF 的机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-144">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> to inform WPF of the mechanism.</span></span>

   - <span data-ttu-id="2f530-145">调用必须在 UI 线程上发生。</span><span class="sxs-lookup"><span data-stu-id="2f530-145">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="2f530-146">之前使用的集合在另一个线程或附加到的集合前，必须进行调用<xref:System.Windows.Controls.ItemsControl>，取二者中较更高版本。</span><span class="sxs-lookup"><span data-stu-id="2f530-146">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

   - <span data-ttu-id="2f530-147">调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>重载如果使用简单的锁定机制; 调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>重载如果使用更复杂的机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-147">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> overload if using a simple lock mechanism; call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload if using a more elaborate mechanism.</span></span>

1. <span data-ttu-id="2f530-148">确保对集合和所做的更改的通知的更改 (通过<xref:System.Collections.Specialized.INotifyCollectionChanged>) 是原子; 不能访问来自其他线程可以进行干预。</span><span class="sxs-lookup"><span data-stu-id="2f530-148">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="2f530-149">（这是通常可用。</span><span class="sxs-lookup"><span data-stu-id="2f530-149">(This is usually free.</span></span> <span data-ttu-id="2f530-150">For instance，<xref:System.Collections.ObjectModel.ObservableCollection%601>保证，前提是所有更改都受同步。)</span><span class="sxs-lookup"><span data-stu-id="2f530-150">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="2f530-151">如果调用<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，调用还必须在 UI 线程上发生。</span><span class="sxs-lookup"><span data-stu-id="2f530-151">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="2f530-152">如果你想要在多个 UI 线程上使用相同的集合，则必须调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(和<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，如果需要) 单独在每个 UI 线程上。</span><span class="sxs-lookup"><span data-stu-id="2f530-152">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="2f530-153">避免死锁。</span><span class="sxs-lookup"><span data-stu-id="2f530-153">Avoid deadlock.</span></span>  <span data-ttu-id="2f530-154">这是已应用程序的责任后它会选择要使用同步，但它还必须考虑到帐户 WPF 的参与同步时，如下面这一段中所述。</span><span class="sxs-lookup"><span data-stu-id="2f530-154">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</span></span>

<span data-ttu-id="2f530-155">反过来，WPF 提供以下行为：</span><span class="sxs-lookup"><span data-stu-id="2f530-155">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="2f530-156"><xref:System.Windows.Data.CollectionView>访问使用给定的同步机制的集合。</span><span class="sxs-lookup"><span data-stu-id="2f530-156">The <xref:System.Windows.Data.CollectionView> accesses the collection using the given synchronization mechanism.</span></span>

- <span data-ttu-id="2f530-157"><xref:System.Windows.Data.CollectionView>维护用于集合中的"卷影副本"，在 UI 线程上。</span><span class="sxs-lookup"><span data-stu-id="2f530-157">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="2f530-158"><xref:System.Windows.Data.CollectionView.CollectionChanged> 事件会排队等候，当它们到达时 （在任何线程上）。</span><span class="sxs-lookup"><span data-stu-id="2f530-158"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="2f530-159">挂起的事件应用于以异步方式在 UI 线程上的卷影复制时它有机会这样做。</span><span class="sxs-lookup"><span data-stu-id="2f530-159">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="2f530-160"><xref:System.Windows.Data.CollectionView>不会直接使用任何其他同步机制对应用程序可见。</span><span class="sxs-lookup"><span data-stu-id="2f530-160">The <xref:System.Windows.Data.CollectionView> won't directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="2f530-161">这是 WPF 的方式帮助避免死锁 （请参阅上一项 7）。</span><span class="sxs-lookup"><span data-stu-id="2f530-161">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="2f530-162">净效果是，你可以更改在任何线程上的集合和这些更改最终显示在<xref:System.Windows.Controls.ItemsControl>UI 线程时有时间"追赶"。</span><span class="sxs-lookup"><span data-stu-id="2f530-162">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="2f530-163">实现已被优化以更改流入要保留背景的 UI 线程的速率从占满 UI 线程和缩短对普通用户输入的响应线程的限制。</span><span class="sxs-lookup"><span data-stu-id="2f530-163">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="lockObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="2f530-164">需同步访问的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-164">The collection that needs synchronized access.</span>
          </span>
        </param>
        <param name="lockObject">
          <span data-ttu-id="2f530-165">访问集合时要锁定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-165">The object to lock when accessing the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-166">通过使用简单的锁定机制，使 <see cref="T:System.Windows.Data.CollectionView" /> 对象能够参与对多个线程上使用的集合的同步访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-166">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="2f530-167">WPF 应用程序可以显示的数据使用集合<xref:System.Windows.Controls.ItemsControl>或其子类之一 (<xref:System.Windows.Controls.ListBox>， <xref:System.Windows.Controls.DataGrid>， <xref:System.Windows.Controls.TreeView>，<xref:System.Windows.Controls.ListView>等。)。</span><span class="sxs-lookup"><span data-stu-id="2f530-167">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="2f530-168">WPF 通道进行所有其访问权限的一个子类通过集合<xref:System.Windows.Data.CollectionView>。</span><span class="sxs-lookup"><span data-stu-id="2f530-168">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="2f530-169">同时<xref:System.Windows.Controls.ItemsControl>和<xref:System.Windows.Data.CollectionView>在其上具有到线程关联<xref:System.Windows.Controls.ItemsControl>已创建，这意味着，在不同线程中使用它们禁止的将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2f530-169">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="2f530-170">实际上，此限制适用于集合以及。</span><span class="sxs-lookup"><span data-stu-id="2f530-170">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="2f530-171">你可能想要使用多个线程上的集合。</span><span class="sxs-lookup"><span data-stu-id="2f530-171">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="2f530-172">例如，你想要更新集合 （添加或删除项） 在"数据收集"线程"用户界面"线程上显示结果时，以便 UI 保持响应性时数据收集发生的情况。</span><span class="sxs-lookup"><span data-stu-id="2f530-172">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="2f530-173">在这种情况下，你有责任确保同步对集合和从 WPF，从而保证该访问权限 （"线程安全的"） 访问 (专门从<xref:System.Windows.Data.CollectionView>) 参与相同的同步机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-173">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="2f530-174">通过调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>方法，你可以执行此操作通过使用简单的锁定机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-174">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> method, you can do this by using a simple lock mechanism.</span></span> 
 
<span data-ttu-id="2f530-175">若要使用多个线程上的集合，其中之一是拥有的 UI 线程<xref:System.Windows.Controls.ItemsControl>，你必须执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="2f530-175">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="2f530-176">实例化要锁定时访问该集合的对象。</span><span class="sxs-lookup"><span data-stu-id="2f530-176">Instantiate an object to lock when accessing the collection.</span></span>

1. <span data-ttu-id="2f530-177">通过锁定该对象同步应用程序中对集合的所有访问。</span><span class="sxs-lookup"><span data-stu-id="2f530-177">Synchronize all access from the application to the collection by locking that object.</span></span>

1. <span data-ttu-id="2f530-178">调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>以通知 WPF 你正在使用简单的锁定机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-178">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> to inform WPF that you are using a simple lock mechanism.</span></span>

   - <span data-ttu-id="2f530-179">调用必须在 UI 线程上发生。</span><span class="sxs-lookup"><span data-stu-id="2f530-179">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="2f530-180">之前使用的集合在另一个线程或附加到的集合前，必须进行调用<xref:System.Windows.Controls.ItemsControl>，取二者中较更高版本。</span><span class="sxs-lookup"><span data-stu-id="2f530-180">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="2f530-181">确保对集合和所做的更改的通知的更改 (通过<xref:System.Collections.Specialized.INotifyCollectionChanged>) 是原子; 不能访问来自其他线程可以进行干预。</span><span class="sxs-lookup"><span data-stu-id="2f530-181">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="2f530-182">（这是通常可用。</span><span class="sxs-lookup"><span data-stu-id="2f530-182">(This is usually free.</span></span> <span data-ttu-id="2f530-183">For instance，<xref:System.Collections.ObjectModel.ObservableCollection%601>保证，前提是所有更改都受同步。)</span><span class="sxs-lookup"><span data-stu-id="2f530-183">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="2f530-184">如果调用<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，调用还必须在 UI 线程上发生。</span><span class="sxs-lookup"><span data-stu-id="2f530-184">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="2f530-185">如果你想要在多个 UI 线程上使用相同的集合，则必须调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(和<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，如果需要) 单独在每个 UI 线程上。</span><span class="sxs-lookup"><span data-stu-id="2f530-185">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="2f530-186">避免死锁。</span><span class="sxs-lookup"><span data-stu-id="2f530-186">Avoid deadlock.</span></span>  <span data-ttu-id="2f530-187">这是已应用程序的责任，一旦它选择要使用同步，但它必须还考虑在同步过程中的 WPF 的参与。</span><span class="sxs-lookup"><span data-stu-id="2f530-187">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span> <span data-ttu-id="2f530-188">（请参阅详细信息，下面。）</span><span class="sxs-lookup"><span data-stu-id="2f530-188">(See more, below.)</span></span>

<span data-ttu-id="2f530-189">反过来，WPF 提供以下行为：</span><span class="sxs-lookup"><span data-stu-id="2f530-189">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="2f530-190"><xref:System.Windows.Data.CollectionView>访问使用锁定机制的集合。</span><span class="sxs-lookup"><span data-stu-id="2f530-190">The <xref:System.Windows.Data.CollectionView> accesses the collection using the locking mechanism.</span></span>

- <span data-ttu-id="2f530-191"><xref:System.Windows.Data.CollectionView>维护用于集合中的"卷影副本"，在 UI 线程上。</span><span class="sxs-lookup"><span data-stu-id="2f530-191">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="2f530-192"><xref:System.Windows.Data.CollectionView.CollectionChanged> 事件会排队等候，当它们到达时 （在任何线程上）。</span><span class="sxs-lookup"><span data-stu-id="2f530-192"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="2f530-193">挂起的事件应用于以异步方式在 UI 线程上的卷影复制时它有机会这样做。</span><span class="sxs-lookup"><span data-stu-id="2f530-193">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="2f530-194"><xref:System.Windows.Data.CollectionView>将不是直接使用任何其他同步机制对应用程序可见。</span><span class="sxs-lookup"><span data-stu-id="2f530-194">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="2f530-195">这是 WPF 的方式帮助避免死锁 （请参阅上一项 7）。</span><span class="sxs-lookup"><span data-stu-id="2f530-195">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="2f530-196">净效果是，你可以更改在任何线程上的集合和这些更改最终显示在<xref:System.Windows.Controls.ItemsControl>UI 线程时有时间"追赶"。</span><span class="sxs-lookup"><span data-stu-id="2f530-196">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="2f530-197">实现已被优化以更改流入要保留背景的 UI 线程的速率从占满 UI 线程和缩短对普通用户输入的响应线程的限制。</span><span class="sxs-lookup"><span data-stu-id="2f530-197">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="2f530-198">需同步访问的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-198">The collection that needs synchronized access.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="2f530-199">传递给回调的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-199">An object that is passed to the callback.</span>
          </span>
        </param>
        <param name="synchronizationCallback">
          <span data-ttu-id="2f530-200">每当需要访问集合时，就会调用的回调。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-200">The callback that is invoked whenever access to the collection is required.</span>
          </span>
          <span data-ttu-id="2f530-201">可用于确保集合一次被一个线程访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-201">You can use it to ensure that the collection is accessed by one thread at a time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-202">通过使用机制而不是简单的锁定，使 <see cref="T:System.Windows.Data.CollectionView" /> 对象能够参与对多个线程上使用的集合的同步访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-202">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="2f530-203">WPF 应用程序可以显示的数据使用集合<xref:System.Windows.Controls.ItemsControl>或其子类之一 (<xref:System.Windows.Controls.ListBox>， <xref:System.Windows.Controls.DataGrid>， <xref:System.Windows.Controls.TreeView>，<xref:System.Windows.Controls.ListView>等。)。</span><span class="sxs-lookup"><span data-stu-id="2f530-203">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="2f530-204">WPF 通道进行所有其访问权限的一个子类通过集合<xref:System.Windows.Data.CollectionView>。</span><span class="sxs-lookup"><span data-stu-id="2f530-204">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="2f530-205">同时<xref:System.Windows.Controls.ItemsControl>和<xref:System.Windows.Data.CollectionView>在其上具有到线程关联<xref:System.Windows.Controls.ItemsControl>已创建，这意味着，在不同线程中使用它们禁止的将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2f530-205">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="2f530-206">实际上，此限制适用于集合以及。</span><span class="sxs-lookup"><span data-stu-id="2f530-206">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="2f530-207">你可能想要使用多个线程上的集合。</span><span class="sxs-lookup"><span data-stu-id="2f530-207">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="2f530-208">例如，你想要更新集合 （添加或删除项） 在"数据收集"线程"用户界面"线程上显示结果时，以便 UI 保持响应性时数据收集发生的情况。</span><span class="sxs-lookup"><span data-stu-id="2f530-208">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="2f530-209">在这种情况下，你有责任确保同步对集合和从 WPF，从而保证该访问权限 （"线程安全的"） 访问 (专门从<xref:System.Windows.Data.CollectionView>) 参与相同的同步机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-209">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="2f530-210">通过调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>方法，你可以执行此操作通过使用同步机制，例如信号量、 重置事件，等等。</span><span class="sxs-lookup"><span data-stu-id="2f530-210">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.</span></span> 
 
<span data-ttu-id="2f530-211">若要使用多个线程上的集合，其中之一是拥有的 UI 线程<xref:System.Windows.Controls.ItemsControl>，你必须执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="2f530-211">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="2f530-212">选择一种同步机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-212">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="2f530-213">同步应用程序中对使用该机制的集合的所有访问。</span><span class="sxs-lookup"><span data-stu-id="2f530-213">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="2f530-214">调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>重载以通知 WPF 将以外简单锁定机制。</span><span class="sxs-lookup"><span data-stu-id="2f530-214">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload to inform WPF that you are using a mechanism other than simple locking.</span></span>

   - <span data-ttu-id="2f530-215">调用必须在 UI 线程上发生。</span><span class="sxs-lookup"><span data-stu-id="2f530-215">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="2f530-216">之前使用的集合在另一个线程或附加到的集合前，必须进行调用<xref:System.Windows.Controls.ItemsControl>，取二者中较更高版本。</span><span class="sxs-lookup"><span data-stu-id="2f530-216">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="2f530-217">确保对集合和所做的更改的通知的更改 (通过<xref:System.Collections.Specialized.INotifyCollectionChanged>) 是原子; 不能访问来自其他线程可以进行干预。</span><span class="sxs-lookup"><span data-stu-id="2f530-217">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="2f530-218">（这是通常可用。</span><span class="sxs-lookup"><span data-stu-id="2f530-218">(This is usually free.</span></span> <span data-ttu-id="2f530-219">For instance，<xref:System.Collections.ObjectModel.ObservableCollection%601>保证，前提是所有更改都受同步。)</span><span class="sxs-lookup"><span data-stu-id="2f530-219">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="2f530-220">如果调用<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，调用还必须在 UI 线程上发生。</span><span class="sxs-lookup"><span data-stu-id="2f530-220">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="2f530-221">如果你想要在多个 UI 线程上使用相同的集合，则必须调用<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(和<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，如果需要) 单独在每个 UI 线程上。</span><span class="sxs-lookup"><span data-stu-id="2f530-221">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="2f530-222">避免死锁。</span><span class="sxs-lookup"><span data-stu-id="2f530-222">Avoid deadlock.</span></span>  <span data-ttu-id="2f530-223">这是已应用程序的责任，一旦它选择要使用同步，但它必须还考虑在同步过程中的 WPF 的参与。</span><span class="sxs-lookup"><span data-stu-id="2f530-223">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span> <span data-ttu-id="2f530-224">（请参阅详细信息，下面。）</span><span class="sxs-lookup"><span data-stu-id="2f530-224">(See more, below.)</span></span>

<span data-ttu-id="2f530-225">反过来，WPF 提供以下行为：</span><span class="sxs-lookup"><span data-stu-id="2f530-225">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="2f530-226"><xref:System.Windows.Data.CollectionView>访问集合，通过调用的已注册<xref:System.Windows.Data.CollectionSynchronizationCallback>使用以下参数：</span><span class="sxs-lookup"><span data-stu-id="2f530-226">The <xref:System.Windows.Data.CollectionView> accesses the collection by calling the registered <xref:System.Windows.Data.CollectionSynchronizationCallback> with the following arguments:</span></span>

   - <span data-ttu-id="2f530-227">`collection`： 感兴趣的集合。</span><span class="sxs-lookup"><span data-stu-id="2f530-227">`collection`: the collection of interest.</span></span>
   - <span data-ttu-id="2f530-228">`context`： 已注册的上下文对象。</span><span class="sxs-lookup"><span data-stu-id="2f530-228">`context`: the registered context object.</span></span>
   - <span data-ttu-id="2f530-229">`accessMethod`： 用于执行实际访问委托。</span><span class="sxs-lookup"><span data-stu-id="2f530-229">`accessMethod`: a delegate that performs the actual access.</span></span>
   - <span data-ttu-id="2f530-230">`writeAccess`:`true`委托将修改该集合; 如果`false`否则为。</span><span class="sxs-lookup"><span data-stu-id="2f530-230">`writeAccess`: `true` if the delegate will modify the collection; `false` otherwise.</span></span>

   <span data-ttu-id="2f530-231">你<xref:System.Windows.Data.CollectionSynchronizationCallback>应建立同步对集合 (使用`context`对象和`writeAccess`值，根据需要)，调用`accessMethod`，然后释放同步。</span><span class="sxs-lookup"><span data-stu-id="2f530-231">Your <xref:System.Windows.Data.CollectionSynchronizationCallback> should establish synchronization on the collection (using the `context` object and the `writeAccess` value, as appropriate), call the `accessMethod`, then release synchronization.</span></span>

- <span data-ttu-id="2f530-232"><xref:System.Windows.Data.CollectionView>维护用于集合中的"卷影副本"，在 UI 线程上。</span><span class="sxs-lookup"><span data-stu-id="2f530-232">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="2f530-233"><xref:System.Windows.Data.CollectionView.CollectionChanged> 事件会排队等候，当它们到达时 （在任何线程上）。</span><span class="sxs-lookup"><span data-stu-id="2f530-233"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="2f530-234">挂起的事件应用于以异步方式在 UI 线程上的卷影复制时它有机会这样做。</span><span class="sxs-lookup"><span data-stu-id="2f530-234">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="2f530-235"><xref:System.Windows.Data.CollectionView>将不是直接使用任何其他同步机制对应用程序可见。</span><span class="sxs-lookup"><span data-stu-id="2f530-235">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="2f530-236">这是 WPF 的方式帮助避免死锁 （请参阅上一项 7）。</span><span class="sxs-lookup"><span data-stu-id="2f530-236">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="2f530-237">净效果是，你可以更改在任何线程上的集合和这些更改最终显示在<xref:System.Windows.Controls.ItemsControl>UI 线程时有时间"追赶"。</span><span class="sxs-lookup"><span data-stu-id="2f530-237">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="2f530-238">实现已被优化以更改流入要保留背景的 UI 线程的速率从占满 UI 线程和缩短对普通用户输入的响应线程的限制。</span><span class="sxs-lookup"><span data-stu-id="2f530-238">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 <span data-ttu-id="2f530-239">`context`参数是一个任意对象传递给`callback`。</span><span class="sxs-lookup"><span data-stu-id="2f530-239">The `context` parameter is an arbitrary object that is passed to the `callback`.</span></span> <span data-ttu-id="2f530-240">你可以使用它来确定用于控制对的访问的同步机制`collection`。</span><span class="sxs-lookup"><span data-stu-id="2f530-240">You can use it to determine the synchronization mechanism used to control access to `collection`.</span></span> <span data-ttu-id="2f530-241">`Context` 可以是`null`。</span><span class="sxs-lookup"><span data-stu-id="2f530-241">`Context` can be `null`.</span></span>  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-242">
            <c>dp</c> 所在的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-242">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-243">从中检索绑定的绑定目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-243">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-244">检索在指定属性上设置的 <see cref="T:System.Windows.Data.Binding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-244">Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-245">给定属性上设置的 <see cref="T:System.Windows.Data.Binding" /> 对象，或 <see langword="null" />（如果尚未设置 <see cref="T:System.Windows.Data.Binding" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-245">The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-246">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-246">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-247">
            <c>dp</c> 所在的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-247">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-248">从中检索 <see cref="T:System.Windows.Data.BindingBase" /> 对象的绑定目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-248">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-249">检索在指定属性上设置的 <see cref="T:System.Windows.Data.BindingBase" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-249">Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-250">给定属性上设置的 <see cref="T:System.Windows.Data.BindingBase" /> 对象，或 <see langword="null" />（如果尚未设置绑定对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-250">The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-251"><xref:System.Windows.Data.BindingBase>类是公共类的基类<xref:System.Windows.Data.Binding>， <xref:System.Windows.Data.PriorityBinding>，和<xref:System.Windows.Data.MultiBinding>类。</span><span class="sxs-lookup"><span data-stu-id="2f530-251">The <xref:System.Windows.Data.BindingBase> class is the common base class for the <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding> classes.</span></span> <span data-ttu-id="2f530-252">你可以使用<xref:System.Windows.Data.BindingOperations.GetBinding%2A>， <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>，和<xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A>方法如果您事先知道的它绑定类型的属性上设置。</span><span class="sxs-lookup"><span data-stu-id="2f530-252">You can use the <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> methods if you know in advance the type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-253">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-253">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-254">
            <c>dp</c> 所在的绑定目标对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-254">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-255">从中检索 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的绑定目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-255">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-256">返回与指定对象上的指定的绑定目标关联的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-256">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-257">与给定属性关联的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，或为 <see langword="null" />（如果不存在此类对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-257">The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
          <span data-ttu-id="2f530-258">如果 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象是在该属性上设置的，则会返回 <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-258">If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-259"><xref:System.Windows.Data.BindingExpression>对象维护绑定源和绑定目标之间的连接。</span><span class="sxs-lookup"><span data-stu-id="2f530-259">The <xref:System.Windows.Data.BindingExpression> object maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="2f530-260">你可以获取<xref:System.Windows.Data.BindingExpression>对象通过调用此静态方法或通过调用<xref:System.Windows.FrameworkElement.GetBindingExpression%2A>数据绑定方法<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>对象。</span><span class="sxs-lookup"><span data-stu-id="2f530-260">You can obtain the <xref:System.Windows.Data.BindingExpression> object by calling this static method or by calling the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f530-261">下面的示例演示的实现<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件处理程序使用<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>方法来获取<xref:System.Windows.Data.BindingExpression>，然后调用<xref:System.Windows.Data.BindingExpression.DataItem%2A>属性来访问的绑定源对象。</span><span class="sxs-lookup"><span data-stu-id="2f530-261">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="2f530-262"><xref:System.Windows.Controls.TextBlock> `SavingsText`为绑定目标对象和<xref:System.Windows.Controls.TextBlock.Text%2A>是绑定目标属性。</span><span class="sxs-lookup"><span data-stu-id="2f530-262">The <xref:System.Windows.Controls.TextBlock>`SavingsText` is the binding target object and <xref:System.Windows.Controls.TextBlock.Text%2A> is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-263">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-263">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-264">
            <c>dp</c> 所在的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-264">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-265">从中检索 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象的绑定目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-265">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-266">检索在指定属性上设置的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-266">Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-267">给定属性上设置的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象，或 <see langword="null" />（如果尚未设置绑定对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-267">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-268"><xref:System.Windows.Data.BindingExpressionBase>类是公共类的基类<xref:System.Windows.Data.BindingExpression>， <xref:System.Windows.Data.PriorityBindingExpression>，和<xref:System.Windows.Data.MultiBindingExpression>类。</span><span class="sxs-lookup"><span data-stu-id="2f530-268">The <xref:System.Windows.Data.BindingExpressionBase> class is the common base class for the <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, and <xref:System.Windows.Data.MultiBindingExpression> classes.</span></span> <span data-ttu-id="2f530-269">你可以使用<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>， <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>，和<xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A>方法如果您事先知道的属性上设置的绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="2f530-269">You can use the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> methods if you know in advance type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-270">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-270">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-271">
            <c>dp</c> 所在的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-271">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-272">从中检索绑定的绑定目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-272">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-273">检索在指定属性上设置的 <see cref="T:System.Windows.Data.MultiBinding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-273">Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-274">给定属性上设置的 <see cref="T:System.Windows.Data.MultiBinding" /> 对象，或 <see langword="null" />（如果尚未设置 <see cref="T:System.Windows.Data.MultiBinding" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-274">The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-275">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-275">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-276">
            <c>dp</c> 所在的绑定目标对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-276">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-277">从中检索 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象的绑定目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-277">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-278">返回与指定对象上的指定的绑定目标关联的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-278">Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-279">与给定属性关联的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象，或为 <see langword="null" />（如果不存在此类对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-279">The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-280">与给定属性关联的 <xref:System.Windows.Data.MultiBindingExpression> 对象，或为 `null`（如果不存在此类对象）。</span><span class="sxs-lookup"><span data-stu-id="2f530-280">The <xref:System.Windows.Data.MultiBindingExpression> object associated with the given property or `null` if none exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-281">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-281">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-282">
            <c>dp</c> 所在的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-282">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-283">从中检索绑定的绑定目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-283">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-284">检索在指定属性上设置的 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-284">Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-285">给定属性上设置的 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象，或 <see langword="null" />（如果尚未设置 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-285">The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-286">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-286">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-287">
            <c>dp</c> 所在的绑定目标对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-287">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-288">从中检索 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象的绑定目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-288">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-289">返回与指定对象上的指定的绑定目标关联的 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-289">Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-290">与给定属性关联的 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象，或为 <see langword="null" />（如果不存在此类对象）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-290">The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-291">
            <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-291">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root">
          <span data-ttu-id="2f530-292">获取绑定组所用的根 <see cref="T:System.Windows.UIElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-292">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span>
          </span>
          <span data-ttu-id="2f530-293">此方法返回与此元素或其后代元素相关的 <see cref="T:System.Windows.Data.BindingGroup" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-293">This method returns <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with this element or its descendant elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-294">获取所有无效值或没有进行源更新的目标值的 <see cref="T:System.Windows.Data.BindingGroup" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-294">Gets all <see cref="T:System.Windows.Data.BindingGroup" /> objects that have invalid values or target values have not been updated the source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-295">
            <see cref="T:System.Windows.Data.BindingGroup" /> 对象的集合，这些对象与指定的元素关联，并具有无效值，或尚未更新资源的目标值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-295">A collection of <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-296">如果`root`是`null`，<xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A>返回所有<xref:System.Windows.Data.BindingGroup>无效或未更新的对象。</span><span class="sxs-lookup"><span data-stu-id="2f530-296">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> returns all <xref:System.Windows.Data.BindingGroup> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root">
          <span data-ttu-id="2f530-297">获取绑定组所用的根 <see cref="T:System.Windows.UIElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-297">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span>
          </span>
          <span data-ttu-id="2f530-298">此方法返回与此元素或其后代元素相关的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-298">This method returns <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with this element or its descendant elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-299">获取所有无效值或没有进行源更新的目标值的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-299">Gets all <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that have invalid values or target values have not been updated the source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-300">
            <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象的集合，这些对象与指定的元素关联，并具有无效值，或尚未更新资源的目标值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-300">A collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-301">如果`root`是`null`，<xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A>返回所有<xref:System.Windows.Data.BindingExpressionBase>无效或未更新的对象。</span><span class="sxs-lookup"><span data-stu-id="2f530-301">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> returns all <xref:System.Windows.Data.BindingExpressionBase> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-302">
            <c>dp</c> 所在的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-302">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-303">要检查的依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-303">The dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-304">返回一个值，该值指示指定的属性当前是否是数据绑定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-304">Returns a value that indicates whether the specified property is currently data-bound.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-305">如果指定的属性为数据绑定的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-305">
              <see langword="true" /> if the specified property is data-bound; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-306">如果 <paramref name="target" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-306">If <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="2f530-307">绑定的绑定目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-307">The binding target of the binding.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="2f530-308">绑定的目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-308">The target property of the binding.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="2f530-309">描述绑定的 <see cref="T:System.Windows.Data.BindingBase" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-309">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f530-310">创建 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的新实例，并将其与指定的绑定目标属性关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-310">Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f530-311">为指定的属性创建并与之相关联的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-311">The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property.</span>
          </span>
          <span data-ttu-id="2f530-312">
            <see cref="T:System.Windows.Data.BindingExpressionBase" /> 类是 <see cref="T:System.Windows.Data.BindingExpression" />、<see cref="T:System.Windows.Data.MultiBindingExpression" /> 和 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 的基类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-312">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f530-313">此方法创建的新实例<xref:System.Windows.Data.BindingExpressionBase>并将实例与给定的对象的给定的依赖项属性关联。</span><span class="sxs-lookup"><span data-stu-id="2f530-313">This method creates a new instance of a <xref:System.Windows.Data.BindingExpressionBase> and associates the instance with the given dependency property of the given object.</span></span> <span data-ttu-id="2f530-314">此方法是将一个绑定附加到一个任意<xref:System.Windows.DependencyObject>，可能不会公开自己。</span><span class="sxs-lookup"><span data-stu-id="2f530-314">This method is the way to attach a binding to an arbitrary <xref:System.Windows.DependencyObject> that may not expose its own SetBinding method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f530-315">下面的示例演示如何使用此方法设置的绑定。</span><span class="sxs-lookup"><span data-stu-id="2f530-315">The following example shows how to use this method to set a binding.</span></span> <span data-ttu-id="2f530-316">在此示例中，`myNewBindDef`是<xref:System.Windows.Data.Binding>说明的绑定的对象。</span><span class="sxs-lookup"><span data-stu-id="2f530-316">In this example, `myNewBindDef` is a <xref:System.Windows.Data.Binding> object that describes the binding.</span></span> <span data-ttu-id="2f530-317">绑定目标是`myDateText`，实例<xref:System.Windows.Controls.TextBlock>类。</span><span class="sxs-lookup"><span data-stu-id="2f530-317">The binding target is `myDateText`, an instance of the <xref:System.Windows.Controls.TextBlock> class.</span></span>  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2f530-318">
            <paramref name="binding" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f530-318">The <paramref name="binding" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>