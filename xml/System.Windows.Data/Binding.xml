<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="138f046d17f4fb39057de8723a87b3eb924b6a06" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d0ee9-101">提供对绑定定义的高级访问，该绑定连接绑定目标对象（通常为 WPF 元素）的属性和任何数据源（例如数据库、XML 文件，或包含数据的任何对象）。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0ee9-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]<span data-ttu-id="d0ee9-102"> 数据绑定为应用程序呈现数据并与数据交互提供了一种简单且一致的方式。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-102"> data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="d0ee9-103">数据绑定可使你可以同步两个不同的对象的属性的值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="d0ee9-104">若要建立一个绑定，使用<xref:System.Windows.Data.Binding>类或继承的其他类之一<xref:System.Windows.Data.BindingBase>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="d0ee9-105">你正在绑定而不考虑哪些对象和数据源的性质，每个绑定遵循以下图所示的模型。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="d0ee9-106">![基本数据绑定示意图](~/add/media/databindingmostbasic.png "基本数据绑定示意图")</span><span class="sxs-lookup"><span data-stu-id="d0ee9-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="d0ee9-107">该图演示以下基本[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]数据绑定概念。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="d0ee9-108">每个绑定通常具有四个组件： 绑定目标对象、 目标属性、 绑定源和一个<xref:System.Windows.Data.Binding.Path%2A>到要使用的绑定源中的值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="d0ee9-109">例如，如果你想要绑定的内容<xref:System.Windows.Controls.TextBox>Employee 对象的名称属性中，你的目标对象是<xref:System.Windows.Controls.TextBox>，target 属性不<xref:System.Windows.Controls.TextBox.Text%2A>属性，要使用的值是名称，并且源对象是员工对象。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="d0ee9-110">目标属性必须为依赖属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-110">The target property must be a dependency property.</span></span> <span data-ttu-id="d0ee9-111">这也意味着你无法将的字段绑定。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="d0ee9-112">大部分属性<xref:System.Windows.UIElement>对象是依赖项属性，大多数依赖项属性，除了只读属性，默认情况下支持数据绑定。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="d0ee9-113">(仅<xref:System.Windows.DependencyObject>类型可以定义依赖项属性，所有<xref:System.Windows.UIElement>对象派生自<xref:System.Windows.DependencyObject>。)</span><span class="sxs-lookup"><span data-stu-id="d0ee9-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="d0ee9-114">尽管图中并未指出，但请注意，绑定源对象并不限于自定义 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 对象。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="d0ee9-115"> 数据绑定支持 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 对象和 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 形式的数据。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-115"> data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="d0ee9-116">若要提供一些示例，您的绑定源可能是<xref:System.Windows.UIElement>，任何列表对象、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]与关联的对象[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]数据或 Web 服务或包含是 XmlNode 你[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="d0ee9-117">使用<xref:System.Windows.Data.Binding.Mode%2A>属性来指定数据流的方向。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="d0ee9-118">若要检测源更改中单向或双向绑定，源必须实现适当的属性更改通知机制如<xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="d0ee9-119">有关示例，请参阅[如何： 实现属性更改通知](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-119">For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span> <span data-ttu-id="d0ee9-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>属性指定的源更新的计时。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="d0ee9-121">有关详细信息，请参阅"基本数据绑定概念"[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d0ee9-122">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="d0ee9-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d0ee9-123">XAML 值</span><span class="sxs-lookup"><span data-stu-id="d0ee9-123">XAML Values</span></span>  
 <span data-ttu-id="d0ee9-124">declaration</span><span class="sxs-lookup"><span data-stu-id="d0ee9-124">*declaration*</span></span>  
 <span data-ttu-id="d0ee9-125">用逗号 （，） 分隔的零个或多个属性赋值子句。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="d0ee9-126">有关详细信息，请参阅[绑定标记扩展](~/docs/framework/wpf/advanced/binding-markup-extension.md)或[绑定声明概述](~/docs/framework/wpf/data/binding-declarations-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-126">For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-127">初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-128">初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="d0ee9-129">绑定的初始 <see cref="P:System.Windows.Data.Binding.Path" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ee9-130">使用初始路径初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d0ee9-131">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="d0ee9-132">要添加的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-132">The handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ee9-133">为 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件添加处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-134">此方法支持中的附加的事件使用情况[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d0ee9-135">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="d0ee9-136">要添加的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-136">The handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ee9-137">为 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件添加处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-138">此方法支持中的附加的事件使用情况[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-139">获取或设置传递给异步数据调度程序的不透明数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-140">传递给异步数据调度程序的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-140">Data passed to the asynchronous data dispatcher.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-141">获取或设置一个值，该值指示是相对于数据项还是 <see cref="T:System.Windows.Data.DataSourceProvider" /> 对象计算 <see cref="P:System.Windows.Data.Binding.Path" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-142">若要相对于数据项自身计算路径，则为 <see langword="false" />；否则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-142">
              <see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="d0ee9-143">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-143">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-144">正常行为 (当此属性是`false`) 包括特殊处理的<xref:System.Windows.Data.DataSourceProvider>对象。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="d0ee9-145">在这种情况下，绑定引擎的计算结果<xref:System.Windows.Data.Binding.Path%2A>相对于获取从对象<xref:System.Windows.Data.DataSourceProvider.Data%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="d0ee9-146">此外，绑定还侦听<xref:System.Windows.Data.DataSourceProvider.DataChanged>事件并相应地作出反应。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="d0ee9-147">此属性设置为`true`重写此行为，并提供的属性绑定访问<xref:System.Windows.Data.DataSourceProvider>对象本身。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-148">获取或设置要使用的转换器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-148">Gets or sets the converter to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-149">一个 <see cref="T:System.Windows.Data.IValueConverter" /> 类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span>
          </span>
          <span data-ttu-id="d0ee9-150">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-150">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-151">尝试执行类型转换，源值和目标值之间的默认转换器隐式使用的绑定。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="d0ee9-152">如果不能进行转换，默认转换器会返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="d0ee9-153">如果你想要将自定义值转换器与绑定相关联，则应创建一个类以实现<xref:System.Windows.Data.IValueConverter>接口，并提供实现<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="d0ee9-154">值转换器可以将数据从一种类型更改为另一个、 区域性的详细信息，例如字符集，之间进行转换或修改其表示形式的其他方面。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="d0ee9-155">有关典型转换方案的示例，请参阅"数据转换"[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d0ee9-156">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="d0ee9-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d0ee9-157">XAML 值</span><span class="sxs-lookup"><span data-stu-id="d0ee9-157">XAML Values</span></span>  
 <span data-ttu-id="d0ee9-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="d0ee9-158">*myConverter*</span></span>  
 <span data-ttu-id="d0ee9-159">对实现的类的资源引用<xref:System.Windows.Data.IValueConverter>接口，包括的实现<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="d0ee9-160">若要引用的值转换器，请使用[否则标记扩展](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-160">To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-161">获取或设置计算转换器要使用的区域性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-161">Gets or sets the culture in which to evaluate the converter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-162">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-162">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-163">如果未设置此属性，则绑定引擎会使用`Language`绑定目标对象的属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="d0ee9-164">在[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]这默认为"EN-US"或从根元素 （或任何元素） 的页上，如果已显式设置了一个继承值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="d0ee9-165">有关数据转换的信息，请参阅中的数据转换部分[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-166">获取或设置要传递给 <see cref="P:System.Windows.Data.Binding.Converter" /> 的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-167">要传递给 <see cref="P:System.Windows.Data.Binding.Converter" /> 的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          </span>
          <span data-ttu-id="d0ee9-168">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-168">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-169">你可以使用<xref:System.Windows.Data.Binding.ConverterParameter%2A>属性来指定如何将对象转换。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="d0ee9-170">此属性将其他信息传递给绑定使用的转换器。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="d0ee9-171">当指定<xref:System.Windows.Data.Binding.ConverterParameter%2A>的值传递给<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法作为`parameter`参数。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="d0ee9-172">有关示例，请参阅[如何： 生成值基于绑定的项列表](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span></span> <span data-ttu-id="d0ee9-173">该示例演示如何实现<xref:System.Windows.Data.IMultiValueConverter>但用法同样适用。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-174">用作返回值以指示绑定引擎不执行任何操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-174">Used as a returned value to instruct the binding engine not to perform any action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-175">绑定源属性或转换器可以返回<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>以指示绑定引擎不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="d0ee9-176">例如，若要指示绑定引擎不传输到绑定目标，不能移动到下一个值<xref:System.Windows.Data.Binding>中<xref:System.Windows.Data.PriorityBinding>，或不是使用`FallBackValue`或默认值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-177">获取或设置要用作绑定源对象的元素的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-177">Gets or sets the name of the element to use as the binding source object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-178">值<see langword="Name" />属性或[X:name 指令](~/docs/framework/xaml-services/x-name-directive.md)感兴趣的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-178">The value of the <see langword="Name" /> property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest.</span>
          </span>
          <span data-ttu-id="d0ee9-179">只有通过 <see langword="RegisterName" /> 将元素注册到适当的 <see cref="T:System.Windows.NameScope" /> 后，才能在代码中引用这些元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span>
          </span>
          <span data-ttu-id="d0ee9-180">有关详细信息，请参阅[WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-180">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span>
          </span>
          <span data-ttu-id="d0ee9-181">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-181">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-182">当你想要将绑定到你的应用程序中的其他元素的属性时，此属性很有用。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="d0ee9-183">例如，如果你想要使用<xref:System.Windows.Controls.Slider>来控制应用程序中的另一个控件的高度或如果你想要绑定<xref:System.Windows.Controls.ContentControl.Content%2A>的控件与<xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>属性你<xref:System.Windows.Controls.ListBox>控件。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="d0ee9-184">默认情况下，绑定继承指定的数据上下文`DataContext`属性，如果已设置完毕。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="d0ee9-185">但是，<xref:System.Windows.Data.Binding.ElementName%2A>属性是一种你可以显式设置的源的<xref:System.Windows.Data.Binding>和重写继承的数据上下文。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="d0ee9-186">有关详细信息，请参阅[如何： 指定绑定源](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-186">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="d0ee9-187"><xref:System.Windows.Data.Binding.Source%2A>和<xref:System.Windows.Data.Binding.RelativeSource%2A>属性<xref:System.Windows.Data.Binding>类还使你能够设置绑定源显式。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="d0ee9-188">但是，只有一个三个属性， <xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 都应该为每个集绑定，或可能出现冲突。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="d0ee9-189">如果绑定源冲突，此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d0ee9-190">要从中获取命名空间信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-190">The object from which to get namespace information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ee9-191">返回附加到指定对象的绑定所使用的 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 命名空间管理器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0ee9-192">一个返回的对象，用于查看与传递的对象元素上的绑定有关的 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span>
          </span>
          <span data-ttu-id="d0ee9-193">此对象应强制转换为 <see cref="T:System.Xml.XmlNamespaceManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-194">此方法支持的附加的属性使用情况<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>附加属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]<span data-ttu-id="d0ee9-195"> 命名空间管理器是仅当在绑定中的数据的来源时，才相关[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]绑定源 (<xref:System.Windows.Data.XmlDataProvider>对象)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-195"> namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="d0ee9-196">如果命名空间管理器在原始数据源创建或通过随后调用未专门应用<xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>上绑定，则此方法将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="d0ee9-197">此方法将始终返回`null`如果在绑定后面的数据不[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0ee9-198">
            <paramref name="target" /> 参数不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-199">用作 <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> 的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> 以指示索引器属性已更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-200">获取或设置一个值，该值指示 <see cref="T:System.Windows.Data.Binding" /> 是否应异步获取和设置值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-201">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-201">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-202">使用<xref:System.Windows.Data.Binding.IsAsync%2A>属性时`get`你绑定源属性的访问器可能需要很长时间。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="d0ee9-203">一个示例是与图像属性`get`从 Web 下载的访问器。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="d0ee9-204">设置<xref:System.Windows.Data.Binding.IsAsync%2A>到`true`可避免阻止[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]时进行下载。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="d0ee9-205">在等待要到达的值，该绑定报告<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的话，或默认值的绑定目标属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="d0ee9-206">但是，应留有很多情况下，你需要使用<xref:System.Windows.Data.Binding.IsAsync%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="d0ee9-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]准则建议您定义个数量级慢于字段集的属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="d0ee9-208">当创建你的类时，请考虑处理速度极慢操作之外`get`访问器和缓存结果。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span> <span data-ttu-id="d0ee9-209">有关详细信息，请参阅[NIB： 选择之间属性和方法](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-209">For more information, see [NIB: Choosing Between Properties and Methods](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-210">获取或设置一个值，该值指示绑定的数据流方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-210">Gets or sets a value that indicates the direction of the data flow in the binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-211">
            <see cref="T:System.Windows.Data.BindingMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-211">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span>
          </span>
          <span data-ttu-id="d0ee9-212">默认值是<see cref="F:System.Windows.Data.BindingMode.Default" />，它返回目标依赖属性的默认绑定模式值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-212">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span>
          </span>
          <span data-ttu-id="d0ee9-213">但是，每个依赖属性的默认值都不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-213">However, the default value varies for each dependency property.</span>
          </span>
          <span data-ttu-id="d0ee9-214">通常，用户可编辑的控件属性（如文本框和复选框的控件属性）默认为双向绑定，而其他大多数属性默认为单向绑定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-214">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span>
          </span>
          <span data-ttu-id="d0ee9-215">确定依赖属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-215">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-216">若要支持<xref:System.Windows.Data.BindingMode.OneWay>和<xref:System.Windows.Data.BindingMode.TwoWay>绑定，基础数据必须实现<xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-216">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="d0ee9-217">有关详细信息，请参阅[如何： 实现属性更改通知](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-217">For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span>  
  
 <span data-ttu-id="d0ee9-218">有关<xref:System.Windows.Data.BindingMode.TwoWay>或<xref:System.Windows.Data.BindingMode.OneWayToSource>绑定，可以通过设置来控制目标到源更新<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-218">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="d0ee9-219">有关详情，请参阅<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-219">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="d0ee9-220">有关不同的绑定模式的详细信息，请参阅[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-220">For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-221">获取或设置一个值，该值指示当值从绑定目标传输到绑定源时是否引发 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-221">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-222">
            <see langword="true" /> 如果<see cref="E:System.Windows.Data.Binding.SourceUpdated" />时绑定源值更新; 否则为应引发事件<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-222">
              <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d0ee9-223">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-223">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-224">获取或设置一个值，该值指示当值从绑定源传输到绑定目标时是否引发 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-224">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-225">
            <see langword="true" /> 如果<see cref="E:System.Windows.Data.Binding.TargetUpdated" />更新; 否则为绑定目标值时，应引发事件<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-225">
              <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d0ee9-226">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-227">获取或设置一个值，该值指示是否对绑定对象引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-227">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-228">
            <see langword="true" /> 如果<see cref="E:System.Windows.Controls.Validation.Error" />附加的事件应在源更新过程中存在验证错误时对绑定对象引发; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-228">
              <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d0ee9-229">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-229">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-230">如果绑定具有<xref:System.Windows.Data.Binding.ValidationRules%2A>与它关联，则绑定引擎将检查每个规则每次传输的目标属性值与源属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-230">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="d0ee9-231">如果规则将使值无效，绑定引擎创建<xref:System.Windows.Controls.ValidationError>对象，并将其添加到<xref:System.Windows.Controls.Validation>。<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="d0ee9-231">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="d0ee9-232">绑定对象的集合。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-232">collection of the bound object.</span></span> <span data-ttu-id="d0ee9-233">当<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>属性不为空，<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType>附加的属性的对象设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-233">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="d0ee9-234">如果<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>属性<xref:System.Windows.Data.Binding>设置为`true`，然后绑定引擎将引发<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>附加对象上的事件。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-234">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="d0ee9-235">验证过程的详细讨论，请参阅中的数据验证部分[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-235">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-236">获取或设置绑定源属性的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-236">Gets or sets the path to the binding source property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-237">绑定源的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-237">The path to the binding source.</span>
          </span>
          <span data-ttu-id="d0ee9-238">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-238">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-239">每个绑定通常具有四个组件： 绑定目标对象、 目标属性、 绑定源和要使用的绑定源中的值的路径。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-239">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="d0ee9-240">有关这些数据绑定概念的详细信息，请参阅[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-240">For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="d0ee9-241">使用<xref:System.Windows.Data.Binding.Path%2A>属性来指定想要绑定到源值：</span><span class="sxs-lookup"><span data-stu-id="d0ee9-241">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="d0ee9-242">在最简单的情况下，<xref:System.Windows.Data.Binding.Path%2A>属性值是要使用的绑定，如的源对象的属性的名称`Path=PropertyName`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-242">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="d0ee9-243">可以通过类似于在中使用的语法指定的属性的子属性[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-243">Subproperties of a property can be specified by a syntax similar to that used in [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)].</span></span> <span data-ttu-id="d0ee9-244">例如，子句 `Path=ShoppingCart.Order` 设置与对象或属性 `ShoppingCart` 的子属性 `Order` 的绑定。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-244">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="d0ee9-245">若要绑定到附加属性，请将附加属性置于括号中。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-245">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="d0ee9-246">例如，若要将绑定到附加的属性<xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>，语法是`Path=(DockPanel.Dock)`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-246">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="d0ee9-247">可以在已应用索引器的属性名后面的方括号内指定属性的索引器。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-247">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="d0ee9-248">例如，子句 `Path=ShoppingCart[0]` 将绑定设置为与属性的内部索引处理文本字符串“0”的方式对应的索引。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-248">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="d0ee9-249">此外支持多个索引器。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-249">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="d0ee9-250">可以在 `Path` 子句中混用索引器和子属性，例如 `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span><span class="sxs-lookup"><span data-stu-id="d0ee9-250">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="d0ee9-251">可以在索引器内使用多个由逗号 (,) 分隔的索引器参数。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-251">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="d0ee9-252">可以使用括号指定每个参数的类型。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-252">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="d0ee9-253">例如，可以使用 `Path="[(sys:Int32)42,(sys:Int32)24]"`，其中 `sys` 将映射到 `System` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-253">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="d0ee9-254">如果源是集合视图，则可以使用斜杠 (/) 指定当前项。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-254">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="d0ee9-255">例如，子句 `Path=/` 设置与视图中当前项的绑定。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-255">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="d0ee9-256">如果源是集合，则此语法指定默认集合视图的当前项。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-256">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="d0ee9-257">可以组合使用属性名和斜杠，以遍历作为集合的属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-257">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="d0ee9-258">例如，`Path=/Offices/ManagerName` 指定源集合的当前项，源集合中包含的 `Offices` 属性也是一个集合。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-258">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="d0ee9-259">它的当前项是一个包含 `ManagerName` 属性的对象。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-259">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="d0ee9-260">句点 (.) 路径也可以用于绑定到当前源。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-260">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="d0ee9-261">例如，`Text="{Binding}"` 与 `Text="{Binding Path=.}"` 等效。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-261">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="d0ee9-262">有关路径语法的信息，请参阅[绑定声明概述](~/docs/framework/wpf/data/binding-declarations-overview.md)或[PropertyPath XAML 语法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-262">For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 <span data-ttu-id="d0ee9-263">有关[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]绑定，请参阅<xref:System.Windows.Data.Binding.XPath%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-263">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="d0ee9-264">若要绑定到了将整个对象，你不必指定<xref:System.Windows.Data.Binding.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-264">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="d0ee9-265">有关详细信息，请参阅"指定路径值"[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-265">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0ee9-266">下面的示例演示创建样式触发器<xref:System.Windows.Controls.ToolTip>报告验证错误消息。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-266">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="d0ee9-267">Setter 的值将绑定到当前的错误内容<xref:System.Windows.Controls.TextBox>(<xref:System.Windows.Controls.TextBox>使用样式) 使用<xref:System.Windows.Data.Binding.RelativeSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-267">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="d0ee9-268">此示例的详细信息，请参阅[如何： 实现绑定验证](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-268">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-269">通过指定绑定源相对于绑定目标位置的位置，获取或设置此绑定源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-269">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-270">A<see cref="T:System.Windows.Data.RelativeSource" />对象，它指定要使用的绑定源的相对位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-270">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span>
          </span>
          <span data-ttu-id="d0ee9-271">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-271">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-272">此属性是通常用于将对象的一个属性绑定到的同一个对象，另一个属性，或用于在样式或模板中定义绑定。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-272">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="d0ee9-273">默认情况下，绑定继承指定的数据上下文`DataContext`属性，如果已设置完毕。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-273">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="d0ee9-274">但是，<xref:System.Windows.Data.Binding.RelativeSource%2A>属性是一种你可以显式设置的源的<xref:System.Windows.Data.Binding>和重写继承的数据上下文。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-274">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="d0ee9-275">有关详细信息，请参阅[如何： 指定绑定源](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-275">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="d0ee9-276"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>和<xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType>属性还允许你设置的绑定源显式。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-276">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="d0ee9-277">但是，只有一个三个属性， <xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 都应该为每个集绑定，或可能发生冲突。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-277">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="d0ee9-278">如果绑定源冲突，此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-278">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="d0ee9-279">有关[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]信息，请参阅[RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-279">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span></span>  
    
## Examples  
 <span data-ttu-id="d0ee9-280">下面的示例演示创建样式触发器<xref:System.Windows.Controls.ToolTip>报告验证错误消息。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-280">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="d0ee9-281">Setter 的值将绑定到当前的错误内容<xref:System.Windows.Controls.TextBox>(<xref:System.Windows.Controls.TextBox>使用样式) 使用<xref:System.Windows.Data.Binding.RelativeSource%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-281">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="d0ee9-282">此示例的详细信息，请参阅[如何： 实现绑定验证](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-282">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="d0ee9-283">若要查看完整的示例，请参阅[绑定验证示例](http://go.microsoft.com/fwlink/?LinkID=159972)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-283">To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d0ee9-284">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-284">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="d0ee9-285">要删除的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-285">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ee9-286">移除 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-286">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-287">此方法支持中的附加的事件使用情况[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-287">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="d0ee9-288">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-288">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="d0ee9-289">要删除的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-289">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ee9-290">移除 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-290">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-291">此方法支持中的附加的事件使用情况[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-291">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d0ee9-292">要从中获取命名空间信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-292">The object from which to get namespace information.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d0ee9-293">用于计算传递的元素中的命名空间的 <see cref="T:System.Xml.XmlNamespaceManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-293">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ee9-294">设置被附加到提供的元素的绑定所使用的命名空间管理器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-294">Sets a namespace manager object used by the binding attached to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-295">此方法支持的附加的属性使用情况<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>附加属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-295">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0ee9-296">
            <paramref name="target" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-296">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-297">指示是否应保持 <see cref="P:System.Windows.Data.Binding.Path" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-297">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0ee9-298">如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-298">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-299">这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.Binding.Path%2A>属性不具有简单的默认值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-299">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="d0ee9-300">此方法指示属性是否已从其默认值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-300">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="d0ee9-301">如果你也正在开发的设计器通常调用此方法<xref:System.Windows.Data.Binding>或开发你自己的控件包含<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-301">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-302">指示是否应保持 <see cref="P:System.Windows.Data.Binding.Source" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-302">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0ee9-303">如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-303">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-304">这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.Binding.Source%2A>属性不具有简单的默认值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-304">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="d0ee9-305">此方法指示属性是否已从其默认值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-305">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="d0ee9-306">如果你也正在开发的设计器通常调用此方法<xref:System.Windows.Data.Binding>或开发你自己的控件包含<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-306">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-307">指示是否应保持 <see cref="P:System.Windows.Data.Binding.ValidationRules" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-307">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0ee9-308">如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-308">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-309">这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.Binding.ValidationRules%2A>属性不具有简单的默认值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-309">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="d0ee9-310">此方法指示属性是否已从其默认值。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-310">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="d0ee9-311">如果你也正在开发的设计器通常调用此方法<xref:System.Windows.Data.Binding>或开发你自己的控件包含<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-311">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-312">获取或设置要用作绑定源的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-312">Gets or sets the object to use as the binding source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-313">要用作绑定源的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-313">The object to use as the binding source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-314">默认情况下，绑定继承指定的数据上下文`DataContext`属性，如果已设置完毕。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-314">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="d0ee9-315">但是，<xref:System.Windows.Data.Binding.Source%2A>属性是一种你可以显式设置的源的<xref:System.Windows.Data.Binding>和重写继承的数据上下文。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-315">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="d0ee9-316">如果你不需要建立中的作用域的功能的多个属性继承相同的数据上下文，则可以使用<xref:System.Windows.Data.Binding.Source%2A>属性而不是`DataContext`属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-316">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="d0ee9-317"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>和<xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType>属性还允许你设置的绑定源显式。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-317">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="d0ee9-318">但是，只有一个三个属性， <xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 都应该为每个集绑定，或可能发生冲突。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-318">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="d0ee9-319">如果绑定源冲突，此属性将引发异常。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-319">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="d0ee9-320">若要清除此属性，请将其设置为<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-320">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d0ee9-321">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="d0ee9-321">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d0ee9-322">XAML 值</span><span class="sxs-lookup"><span data-stu-id="d0ee9-322">XAML Values</span></span>  
 <span data-ttu-id="d0ee9-323">*object*</span><span class="sxs-lookup"><span data-stu-id="d0ee9-323">*object*</span></span>  
 <span data-ttu-id="d0ee9-324">现有对象。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-324">An existing object.</span></span> <span data-ttu-id="d0ee9-325">若要引用现有对象，使用[否则标记扩展](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span><span class="sxs-lookup"><span data-stu-id="d0ee9-325">To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0ee9-326">下面的示例使用`Person`具有名为的字符串属性对象`PersonName`中定义`SDKSample`命名空间，如第一个突出显示的行所示。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-326">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="d0ee9-327">在突出显示的行将包含`<src>`元素，它实例化`Person`对象`PersonName`属性值`Joe`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-327">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="d0ee9-328">将执行此操作`Resources`部分并分配`x:Key`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-328">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="d0ee9-329">突出显示的行将包含`<TextBlock>`元素演示如何将绑定到`PersonName`属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-329">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="d0ee9-330">因此，<xref:System.Windows.Controls.TextBlock>控件出现包含值"Joe"。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-330">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="d0ee9-331">在下面的示例中，<xref:System.Windows.Data.Binding.Source%2A>值<xref:System.Windows.Data.Binding>对象设置为`static`属性<xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="d0ee9-331">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="d0ee9-332">有关完整的示例，请参阅[数据绑定演示](http://go.microsoft.com/fwlink/?LinkID=163703)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-332">For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-333">标识 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-333">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-334">标识 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-334">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-335">获取或设置一个处理程序，可使用该程序提供自定义逻辑，旨在在更新绑定源值期间处理绑定引擎遇到的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-335">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span>
          </span>
          <span data-ttu-id="d0ee9-336">只有在将 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 与绑定进行关联之后，这才是适用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-336">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-337">一个提供自定义逻辑以在绑定源值更新过程中处理绑定引擎遇到的异常的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-337">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-338"><xref:System.Windows.Controls.ExceptionValidationRule>是内置的验证规则，用于检查的绑定源属性更新过程中引发的异常。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-338">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="d0ee9-339">如果关联<xref:System.Windows.Controls.ExceptionValidationRule>与你<xref:System.Windows.Data.Binding>对象，你可以使用此属性设置要用于处理这些异常中提供自定义逻辑的处理程序。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-339">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="d0ee9-340">如果<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>上未指定<xref:System.Windows.Data.Binding>，该绑定引擎创建<xref:System.Windows.Controls.ValidationError>出现异常并将其添加到<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>绑定元素的集合。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-340">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0ee9-341"><xref:System.Windows.Controls.TextBox.Text%2A>的以下属性<xref:System.Windows.Controls.TextBox>被数据绑定到源属性`Age3`类型`int`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-341">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="d0ee9-342"><xref:System.Windows.Controls.ExceptionValidationRule>检查 （例如当用户输入一个值，不能转换为整数） 的源属性更新过程中引发的异常。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-342">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="d0ee9-343">你可以提供自定义逻辑来处理这些异常。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-343">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="d0ee9-344">下面的示例演示如何使用<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>属性来设置<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-344">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="d0ee9-345">以下是示例实现的<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-345">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="d0ee9-346"><xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>还可以返回`null`，异常本身，或<xref:System.Windows.Controls.ValidationError>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-346">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="d0ee9-347">有关详情，请参阅<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-347">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="d0ee9-348">有关完整的示例，请参阅[绑定验证示例](http://go.microsoft.com/fwlink/?LinkID=159972)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-348">For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-349">获取或设置一个值，它可确定绑定源更新的计时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-349">Gets or sets a value that determines the timing of binding source updates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-350">
            <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-350">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span>
          </span>
          <span data-ttu-id="d0ee9-351">默认值是<see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，这将返回默认值<see cref="T:System.Windows.Data.UpdateSourceTrigger" />目标依赖项属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-351">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span>
          </span>
          <span data-ttu-id="d0ee9-352">但是，大多数依赖项属性的默认值是<see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，虽然<see cref="P:System.Windows.Controls.TextBox.Text" />属性具有默认值为<see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-352">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span>
          </span>
          <span data-ttu-id="d0ee9-353">以编程方式确定默认值<see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" />的依赖项属性的值是获取的属性使用的属性元数据<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />，然后检查的值<see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-353">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-354">绑定<xref:System.Windows.Data.BindingMode.TwoWay>或<xref:System.Windows.Data.BindingMode.OneWayToSource>侦听中的目标属性的更改并将它们传播回源。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-354">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="d0ee9-355">这称为更新源。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-355">This is known as updating the source.</span></span> <span data-ttu-id="d0ee9-356">通常，当目标属性发生更改时，可能发生这些更新。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-356">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="d0ee9-357">这是特别适用于的复选框和其他简单控件，但它不是通常适用于文本字段。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-357">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="d0ee9-358">更新后每次按键可能导致性能降低并拒绝用户进行此种常用的机会来退格键并在为新值提交之前修复键入错误。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-358">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="d0ee9-359">因此，默认值<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>值<xref:System.Windows.Controls.TextBox.Text%2A>属性是<xref:System.Windows.Data.UpdateSourceTrigger.LostFocus>而不<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-359">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="d0ee9-360">如果你设置<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>值赋给<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>，必须调用<xref:System.Windows.Data.BindingExpression.UpdateSource%2A>方法或所做的更改将不会传播回源。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-360">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-361">获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-361">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-362">如果包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-362">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-363">设置此属性，可以使用的替代方法<xref:System.Windows.Controls.DataErrorValidationRule>元素显式。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-363">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="d0ee9-364"><xref:System.Windows.Controls.DataErrorValidationRule>是内置的验证规则，可通过引发的错误检查<xref:System.ComponentModel.IDataErrorInfo>源对象的实现。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-364">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="d0ee9-365">如果引发错误，则绑定引擎创建<xref:System.Windows.Controls.ValidationError>出现错误并将其添加到<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>绑定元素的集合。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-365">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="d0ee9-366">错误缺乏清除此验证反馈，除非另一个规则会生成验证问题。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-366">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="d0ee9-367"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> 是.NET Framework 3.5 版中引入的。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-367"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="d0ee9-368">有关详细信息，请参见 [.NET Framework 版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-368">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0ee9-369">下面的示例使用<xref:System.ComponentModel.IDataErrorInfo>和<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>验证中的用户输入<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-369">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="d0ee9-370">第一个示例创建一个实现的数据类型<xref:System.ComponentModel.IDataErrorInfo>报告验证错误。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-370">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="d0ee9-371">下面的示例将绑定`Age`属性<xref:System.Windows.Controls.TextBox>和设置<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>到`true`上<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-371">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="d0ee9-372">当用户输入的值无效时中, 将出现一个红色边框<xref:System.Windows.Controls.TextBox>和<xref:System.Windows.Controls.ToolTip>报告的错误消息。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-372">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-373">获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-373">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-374">如果包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-374">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-375">设置此属性，可以使用的替代方法<xref:System.Windows.Controls.ExceptionValidationRule>元素显式。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-375">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="d0ee9-376"><xref:System.Windows.Controls.ExceptionValidationRule>是内置的验证规则，用于检查的源属性更新过程中引发的异常。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-376">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="d0ee9-377">如果引发异常，则绑定引擎创建<xref:System.Windows.Controls.ValidationError>出现异常并将其添加到<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>绑定元素的集合。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-377">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="d0ee9-378">错误缺乏清除此验证反馈，除非另一个规则会生成验证问题。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-378">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="d0ee9-379"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> 是.NET Framework 3.5 版中引入的。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-379"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="d0ee9-380">有关详细信息，请参见 [.NET Framework 版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-380">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0ee9-381">下面的示例使用<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>验证中的用户输入<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-381">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="d0ee9-382">第一个示例创建的数据类型，将引发异常时`Age`属性设置为无效的属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-382">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="d0ee9-383">下面的示例将绑定`Age`属性<xref:System.Windows.Controls.TextBox>和设置<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>到`true`上<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-383">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="d0ee9-384">当用户输入的值无效时中, 将出现一个红色边框<xref:System.Windows.Controls.TextBox>和<xref:System.Windows.Controls.ToolTip>报告的错误消息。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-384">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-385">获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-385">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-386">如果包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-386">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d0ee9-387">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-387">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-388">当<xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A>是`true`的绑定来查看和报告由实现的数据源引发的错误<xref:System.ComponentModel.INotifyDataErrorInfo>。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-388">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-389">获取用于检查用户输入有效性的规则的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-389">Gets a collection of rules that check the validity of the user input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-390">
            <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-390">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-391">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]数据绑定模型使您可以将相关联<xref:System.Windows.Data.Binding.ValidationRules%2A>与你<xref:System.Windows.Data.Binding>或<xref:System.Windows.Data.MultiBinding>对象。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-391">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="d0ee9-392">你可以通过从派生创建自定义规则<xref:System.Windows.Controls.ValidationRule>类并实现<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，或者可以使用内置<xref:System.Windows.Controls.ExceptionValidationRule>，这使无效值，如果在源更新过程中出现异常。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-392">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="d0ee9-393">绑定引擎将检查每个<xref:System.Windows.Controls.ValidationRule>每次输入的值 （绑定目标属性值） 传输到绑定源属性的绑定相关联。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-393">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="d0ee9-394">验证过程的详细讨论，请参阅中的数据验证部分[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-394">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0ee9-395">此属性可以在中设置[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]只能由使用集合语法所示，或者通过访问的集合对象，并使用它的各种方法，如`Add`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-395">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="d0ee9-396">要访问的集合对象的属性是只读的而集合本身是可读写。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-396">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="d0ee9-397">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="d0ee9-397">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d0ee9-398">XAML 值</span><span class="sxs-lookup"><span data-stu-id="d0ee9-398">XAML Values</span></span>  
 <span data-ttu-id="d0ee9-399">*oneOrMoreValidationRules*</span><span class="sxs-lookup"><span data-stu-id="d0ee9-399">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="d0ee9-400">一个或多个<xref:System.Windows.Controls.ValidationRule>对象。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-400">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="d0ee9-401">你可以使用<xref:System.Windows.Controls.ExceptionValidationRule>类或子类化来创建自定义规则<xref:System.Windows.Controls.ValidationRule>类。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-401">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-402">标识 <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-402">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0ee9-403">获取或设置 <see langword="XPath" /> 查询，该查询返回要使用的 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 绑定源上的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-403">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0ee9-404">
            <see langword="XPath" /> 查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-404">The <see langword="XPath" /> query.</span>
          </span>
          <span data-ttu-id="d0ee9-405">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ee9-405">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0ee9-406">绑定源时[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]数据而不是[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]对象，<xref:System.Windows.Data.Binding.XPath%2A>而不是使用属性<xref:System.Windows.Data.Binding.Path%2A>属性以指示要使用的绑定源上的值的路径。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-406">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="d0ee9-407">通过设置<xref:System.Windows.Data.Binding.XPath%2A>属性，则你创建`XPath`查询，以便选择的节点的集合 (<xref:System.Xml.XmlElement?displayProperty=nameWithType>和<xref:System.Xml.XmlAttribute?displayProperty=nameWithType>都派生自<xref:System.Xml.XmlNode?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-407">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="d0ee9-408"><xref:System.Xml.XmlNode?displayProperty=nameWithType> 是[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]对象，这意味着你可以将绑定到使用其属性<xref:System.Windows.Data.Binding.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-408"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="d0ee9-409"><xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>方法将处理`XPath`表达式从<xref:System.Windows.Data.Binding.XPath%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-409">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="d0ee9-410">`XPath` 不支持函数。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-410">`XPath` functions are not supported.</span></span> <span data-ttu-id="d0ee9-411">有关`XPath`表达式的信息，请参阅<xref:System.Xml.XmlNode.SelectNodes%2A>文档和示例部分中提供一些示例。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-411">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="d0ee9-412">对 XML 对象的 LINQ<xref:System.Xml.Linq.XDocument>和<xref:System.Xml.Linq.XElement>不使用`XPath`。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-412">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="d0ee9-413">有关详细信息，请参阅[如何： 为 XML 查询结果绑定到 XDocument、 XElement 或 LINQ](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)。</span><span class="sxs-lookup"><span data-stu-id="d0ee9-413">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>