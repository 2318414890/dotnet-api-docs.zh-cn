<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingBase.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56871bcc8808192513fe5930b08bd4db0522bbb17.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6871bcc8808192513fe5930b08bd4db0522bbb17</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingBase">
          <source>Defines the common characteristics of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> classes.</source>
          <target state="translated">定义 <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> 类的公共特性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingBase">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph> method is sealed, a custom binding class that derives from <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> will not function correctly as a <ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>方法密封类，派生自的自定义绑定类<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>将不正常作为<ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>标记扩展。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>Gets or sets the name of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> to which this binding belongs.</source>
          <target state="translated">获取或设置此绑定所属的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> to which this binding belongs.</source>
          <target state="translated">此绑定所属的 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is not set, the binding belongs to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> only if the binding's source and the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are the same object.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>未设置，绑定所属<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>仅当绑定的源和<ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>具有的父元素的<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>相同的对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is set to a value, the binding belongs to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> if the following conditions are true:</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>设置为值时，绑定所属<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>如果满足以下条件：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>是否相等。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> belongs to a parent element of the binding's target element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>所属的绑定目标元素的父元素。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is set to <ph id="ph2">`null`</ph>, the binding is never a part of a <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>设置为<ph id="ph2">`null`</ph>，绑定不属于<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>You can include bindings that have a source that is different from the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to the same value.</source>
          <target state="translated">你可以包含具有不同于源的绑定<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>具有的父元素的<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>通过设置<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph>的<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>的一种绑定到相同的值的属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>You can exclude bindings that have the same source as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to different values.</source>
          <target state="translated">你可以排除具有相同的源的绑定<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>具有的父元素的<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>通过设置<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph>的<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>的一种绑定到不同的值的属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</source>
          <target state="translated">以下示例是应用的检查用户是否已设置为相等的值的两个对象的属性的一部分。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The first example creates two <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which is data bound to a different source: The binding of the first <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is part of the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> because the <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> inherits the <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> from its parent <ph id="ph7">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph></source>
          <target state="translated">第一个示例创建两个<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>控件，其中每个被数据绑定到不同的源： 第一个绑定<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>属于<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>因为<ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>继承<ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>和<ph id="ph6">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>从其父 <ph id="ph7">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The binding on the second <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is part of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> because the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> of the <ph id="ph6">&lt;xref:System.Windows.Data.Binding&gt;</ph> are both set to <ph id="ph7">`bindingGroup`</ph>.</source>
          <target state="translated">在第二个绑定<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>属于<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>因为<ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph>的<ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>和<ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph>的<ph id="ph6">&lt;xref:System.Windows.Data.Binding&gt;</ph>都设置为<ph id="ph7">`bindingGroup`</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that the previous example uses.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>前面的示例使用。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, the example gets each source object from the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and checks whether the properties of the objects are equal.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph>方法，此示例获取从每个源对象<ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>并检查对象的属性是否相等。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</source>
          <target state="translated">获取或设置更新位于目标更改上的值之后的绑定源前要等待的时间（毫秒）。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>The amount of time, in milliseconds, to wait before updating the binding source.</source>
          <target state="translated">在更新绑定资源之前要等待的时间（以毫秒为单位）。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>When you use a binding to update the binding source whenever the value of the property changes on the target, you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> to <ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.</source>
          <target state="translated">当你使用绑定更新绑定源属性的值在目标上发生更改时，您设置<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>到<ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>In this situation, you can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph> property to specify whether there should be a time delay between when the target is changed and when the source is updated.</source>
          <target state="translated">在此情况下，你可以使用<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph>属性指定是否应之间更改了目标时，在更新源时的时间延迟。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</source>
          <target state="translated">当你想要使用户能够更改源对象的属性，但你不希望每次更改会立即提交到源时，这非常有用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>For example, suppose that you have a text box that is data two-way bound to a property of a data object.</source>
          <target state="translated">例如，假设你有一个被数据双向绑定到数据对象的属性的文本框。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>When the user changes the value in the text box, the source gets updated.</source>
          <target state="translated">当用户更改的值的文本框中时，源获取更新。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>To enable this scenario, you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> to <ph id="ph5">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.</source>
          <target state="translated">若要启用这种情况下，你可以设置<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>到<ph id="ph3">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>到<ph id="ph5">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>To avoid updating the source object with every keystroke, set the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph> property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</source>
          <target state="translated">若要避免每次按键使用更新的源对象，设置<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph>为合理的值导致要更新仅在用户停止键入经过这段时间后的绑定的属性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>Gets or sets the value to use when the binding is unable to return a value.</source>
          <target state="translated">获取或设置当绑定无法返回值时要使用的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>A binding returns a value successfully if:</source>
          <target state="translated">如果成功绑定返回一个值：</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The path to the binding source resolves successfully.</source>
          <target state="translated">已成功解析到绑定源的路径。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The value converter, if any, is able to convert the resulting value.</source>
          <target state="translated">值转换器，如果有的话，就能够将转换生成的值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The resulting value is valid for the binding target (target) property.</source>
          <target state="translated">生成的值是有效的绑定目标 （目标） 属性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>If 1 and 2 return <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>, the target property is set to the value of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, if one is available.</source>
          <target state="translated">如果 1 和 2 返回<ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>，目标属性设置为值<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>，如果有可用。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>If there is no <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, the default value of the target property is used.</source>
          <target state="translated">如果没有任何<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>，使用的目标属性的默认值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph> is not considered a successful return value.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>不被视为成功的返回值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 文本用法</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source><bpt id="p1">**</bpt>- or –<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>-或者-<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>XAML Values</source>
          <target state="translated">XAML 值</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source><bpt id="p1">*</bpt>fallbackValue<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fallbackValue<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>An attribute or object element value of the same type as the target property.</source>
          <target state="translated">与目标属性相同的类型属性或对象元素值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">请参阅 XAML 用法的信息的该类型的文档。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">该类型可能或可能不支持属性语法为它的值，或可能或可能不支持对象元素语法 （它需要对该类型的默认构造函数）。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The target property type will therefore influence which syntax you use for the value of the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph> property.</source>
          <target state="translated">目标属性类型将因此会影响你使用的值的语法<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The object that can provide services for the markup extension.</source>
          <target state="translated">可为标记扩展提供服务的对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>May be <ph id="ph1">&lt;see langword="null" /&gt;</ph>;</source>
          <target state="translated">可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>；</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Returns an object that should be set on the property where this binding and extension are applied.</source>
          <target state="translated">返回一个应在应用了此绑定和扩展的属性上设置的对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The value to set on the binding target property.</source>
          <target state="translated">要在绑定目标属性上设置的值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>This implementation provides the base syntax support for binding through <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> for all provided practical derived classes (<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>).</source>
          <target state="translated">这种实现提供通过绑定的基本语法支持<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>为所有提供的实际的派生的类 (<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> class implementation of this method is expected to return an expression object that is the result of a binding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>类实现此方法应返回一个表达式对象，它的绑定结果。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Binding a property works by targeting a given <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> on a given <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">绑定属性的工作原理是面向给定<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>上给定<ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>These two pieces of information are transmitted by querying for an <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> implementation on the <ph id="ph2">`serviceProvider`</ph>, which the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> reader makes available during parsing of a binding.</source>
          <target state="translated">这两个部分信息传输的查询<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>上的实现<ph id="ph2">`serviceProvider`</ph>，后者<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph><ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>读取器使可绑定的分析过程。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>This base class implementation is responsible for checking for a valid <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">此基类实现都负责检查是否存在有效<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</source>
          <target state="translated">如果找到这些，返回绑定表达式的实际实现将位于到各种派生类中，具有基类调用内部的抽象方法的实施方式。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Otherwise, the extension returns the binding object itself.</source>
          <target state="translated">否则，该扩展返回的绑定对象本身。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</source>
          <target state="translated">返回绑定本身会导致类型不匹配错误，但这不应在正常情况下发生。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Because the syntax for binding through <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> as implemented in this method relies on implementing an internal override, and because <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph> itself is sealed, a custom binding class that derives from <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> will not function correctly as a <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">因为通过绑定的语法<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>在中实现此方法依赖于实现内部重写，而且因为<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>本身密封类，派生自的自定义绑定类<ph id="ph3">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>将无法正常作为的工作<ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>标记扩展。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
          <source>Returns a value that indicates whether serialization processes should serialize the effective value of the <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> property on instances of this class.</source>
          <target state="translated">返回一个值，该值指示序列化进程是否应当对此类的实例的 <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> 有效属性值进行序列化。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应当序列化 <ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> 属性值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> property should be serialized.</source>
          <target state="translated">返回一个值，该值指示是否应序列化 <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> property should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> 属性应被序列化，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">获取或设置一个字符串，该字符串指定如果绑定值显示为字符串，应如何设置该绑定的格式。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>A string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">一个字符串，该字符串指定如果绑定值显示为字符串，应如何设置该绑定的格式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> can be a predefined, composite, or custom string format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 可以是预定义、 撰写的或自定义字符串格式。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>For more information about string formats, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关字符串格式的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Converter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> properties, the converter is applied to the data value first, and then the <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is applied.</source>
          <target state="translated">如果你设置<ph id="ph1">&lt;xref:System.Windows.Data.Binding.Converter%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>属性，则转换器应用于数据值第一次，然后<ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>应用。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> to a composite string format, you can specify only one parameter.</source>
          <target state="translated">当你将设置<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>上<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>为复合字符串格式，你可以指定只有一个参数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property applies only when it is set on the <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>属性适用仅当其设置上<ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> that is set on any child <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> objects is ignored.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>任何子级上设置<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>忽略的对象。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The number of parameters in a composite string format cannot exceed the number of child <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>.</source>
          <target state="translated">复合字符串格式中的参数数目不能超过子数<ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph>中的对象<ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, you can set the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, on child binding objects, or both.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>，你可以设置<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>上<ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>、 对子绑定对象，或者这两者。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is set on the child binding that is applied, that value is used.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>上就绑定的子级集应用时，将使用该值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is not set on the child binding that is applied, the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph> is applied if it is set.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>应用时，子绑定中未设置<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>的<ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>如果它被设置，则应用。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property to convert <ph id="ph2">`Price`</ph>, which is a <ph id="ph3">&lt;xref:System.Double&gt;</ph>, to a string that represents a currency.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>要转换的属性<ph id="ph2">`Price`</ph>，即<ph id="ph3">&lt;xref:System.Double&gt;</ph>，为一个字符串，表示一种货币。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> to build a string that includes the <ph id="ph3">`Description`</ph> and <ph id="ph4">`Price`</ph> of each item in a <ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>生成一个字符串，包含<ph id="ph3">`Description`</ph>和<ph id="ph4">`Price`</ph>中每一项<ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>Gets or sets the value that is used in the target when the value of the source is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">获取或设置当源的值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 时在目标中使用的值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>The value that is used in the target when the value of the source is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">当源的值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 时在目标中使用的值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 文本用法</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source><bpt id="p1">**</bpt>- or –<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>-或者-<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>XAML Values</source>
          <target state="translated">XAML 值</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source><bpt id="p1">*</bpt>nullValue<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>nullValue<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>An attribute or object element value of the same type as the target property.</source>
          <target state="translated">与目标属性相同的类型属性或对象元素值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">请参阅 XAML 用法的信息的该类型的文档。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">该类型可能或可能不支持属性语法为它的值，或可能或可能不支持对象元素语法 （它需要对该类型的默认构造函数）。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>The following example binds a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> to a property of an object.</source>
          <target state="translated">下面的示例将绑定<ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>对象的属性。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>If the property is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> displays "please enter a string."</source>
          <target state="translated">如果属性是<ph id="ph1">`null`</ph>、<ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>显示"请输入字符串。"</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>