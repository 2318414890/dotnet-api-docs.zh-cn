<Type Name="ListCollectionView" FullName="System.Windows.Data.ListCollectionView">
  <TypeSignature Language="C#" Value="public class ListCollectionView : System.Windows.Data.CollectionView, System.Collections.IComparer, System.ComponentModel.ICollectionViewLiveShaping, System.ComponentModel.IEditableCollectionView, System.ComponentModel.IEditableCollectionViewAddNewItem, System.ComponentModel.IItemProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListCollectionView extends System.Windows.Data.CollectionView implements class System.Collections.IComparer, class System.ComponentModel.ICollectionViewLiveShaping, class System.ComponentModel.IEditableCollectionView, class System.ComponentModel.IEditableCollectionViewAddNewItem, class System.ComponentModel.IItemProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.ListCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListCollectionView&#xA;Inherits CollectionView&#xA;Implements ICollectionViewLiveShaping, IComparer, IEditableCollectionView, IEditableCollectionViewAddNewItem, IItemProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListCollectionView : System::Windows::Data::CollectionView, System::Collections::IComparer, System::ComponentModel::ICollectionViewLiveShaping, System::ComponentModel::IEditableCollectionView, System::ComponentModel::IEditableCollectionViewAddNewItem, System::ComponentModel::IItemProperties" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.CollectionView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICollectionViewLiveShaping</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionViewAddNewItem</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IItemProperties</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f403a-101">表示实现 <see cref="T:System.Collections.IList" /> 的集合的集合视图。</span><span class="sxs-lookup"><span data-stu-id="f403a-101">Represents the collection view for collections that implement <see cref="T:System.Collections.IList" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-102">当你将绑定到数据收集时，你可能想要进行排序和筛选，或者对数据进行分组。</span><span class="sxs-lookup"><span data-stu-id="f403a-102">When you bind to a data collection, you may want to sort, filter, or group the data.</span></span> <span data-ttu-id="f403a-103">若要做到这一点，你可以使用集合视图。</span><span class="sxs-lookup"><span data-stu-id="f403a-103">To do that, you use collection views.</span></span> <span data-ttu-id="f403a-104">你可以将<xref:System.Windows.Data.CollectionView>作为绑定源集合，可用于导航和显示基于排序、 筛选和分组查询的源集合层，而无需操作基础所有源集合本身。</span><span class="sxs-lookup"><span data-stu-id="f403a-104">You can think of a <xref:System.Windows.Data.CollectionView> as the layer on top of the binding source collection that allows you to navigate and display the source collection based on sort, filter, and group queries, all without having to manipulate the underlying source collection itself.</span></span> <span data-ttu-id="f403a-105">如果源集合实现<xref:System.Collections.Specialized.INotifyCollectionChanged>接口，引发的更改<xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>事件传播到视图的视图。</span><span class="sxs-lookup"><span data-stu-id="f403a-105">If the source collection implements the <xref:System.Collections.Specialized.INotifyCollectionChanged> interface, the changes raised by the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event are propagated to the views.</span></span>  
  
 <span data-ttu-id="f403a-106">所有集合都有默认<xref:System.Windows.Data.CollectionView>。</span><span class="sxs-lookup"><span data-stu-id="f403a-106">All collections have a default <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="f403a-107">实现的所有集合<xref:System.Collections.IList>、<xref:System.Windows.Data.ListCollectionView>对象是默认视图对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-107">For all collections implementing <xref:System.Collections.IList>, the <xref:System.Windows.Data.ListCollectionView> object is the default view object.</span></span> <span data-ttu-id="f403a-108"><xref:System.Windows.Data.BindingListCollectionView>是用于实现的集合的集合视图类<xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="f403a-108">The <xref:System.Windows.Data.BindingListCollectionView> is the collection view class used for collections that implement <xref:System.ComponentModel.IBindingList>.</span></span> <span data-ttu-id="f403a-109">若要获取的默认视图，你可以使用<xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f403a-109">To get the default view, you use the <xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A> method.</span></span> <span data-ttu-id="f403a-110">有关示例，请参阅[如何： 获取数据收集的默认视图](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md)。</span><span class="sxs-lookup"><span data-stu-id="f403a-110">For an example, see [How to: Get the Default View of a Data Collection](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md).</span></span>  
  
 <span data-ttu-id="f403a-111">有关集合视图的详细信息，请参阅[数据绑定概述](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="f403a-111">For more information about collection views, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListCollectionView (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListCollectionView(System::Collections::IList ^ list);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="f403a-112">必须实现 <see cref="T:System.Collections.IList" /> 的基础集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-112">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="f403a-113">使用所提供的实现 <see cref="T:System.Windows.Data.ListCollectionView" /> 的集合来初始化 <see cref="T:System.Collections.IList" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f403a-113">Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView" /> class, using a supplied collection that implements <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer ActiveComparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ActiveComparer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ActiveComparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property ActiveComparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ ActiveComparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-114">获取或设置在排序时使用的当前活动比较器。</span><span class="sxs-lookup"><span data-stu-id="f403a-114">Gets or sets the current active comparer that is used in sorting.</span></span></summary>
        <value><span data-ttu-id="f403a-115">属于活动比较器的 <see cref="T:System.Collections.IComparer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-115">An <see cref="T:System.Collections.IComparer" /> object that is the active comparer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveFilter">
      <MemberSignature Language="C#" Value="protected Predicate&lt;object&gt; ActiveFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; ActiveFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ActiveFilter" />
      <MemberSignature Language="VB.NET" Value="Protected Property ActiveFilter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Predicate&lt;System::Object ^&gt; ^ ActiveFilter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-116">获取或设置当前活动的 <see cref="P:System.Windows.Data.CollectionView.Filter" /> 回调。</span><span class="sxs-lookup"><span data-stu-id="f403a-116">Gets or sets the current active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span></span></summary>
        <value><span data-ttu-id="f403a-117">活动的 <see cref="P:System.Windows.Data.CollectionView.Filter" /> 回调。</span><span class="sxs-lookup"><span data-stu-id="f403a-117">The active <see cref="P:System.Windows.Data.CollectionView.Filter" /> callback.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-118">开始添加事务并返回挂起的新项。</span><span class="sxs-lookup"><span data-stu-id="f403a-118">Starts an add transaction and returns the pending new item.</span></span></summary>
        <returns><span data-ttu-id="f403a-119">挂起的新项。</span><span class="sxs-lookup"><span data-stu-id="f403a-119">The pending new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-120">调用<xref:System.Windows.Data.ListCollectionView.AddNew%2A>启动添加事务。</span><span class="sxs-lookup"><span data-stu-id="f403a-120">Calling <xref:System.Windows.Data.ListCollectionView.AddNew%2A> starts an add transaction.</span></span> <span data-ttu-id="f403a-121">应调用<xref:System.Windows.Data.ListCollectionView.CommitNew%2A>或<xref:System.Windows.Data.ListCollectionView.CancelNew%2A>来结束添加事务。</span><span class="sxs-lookup"><span data-stu-id="f403a-121">You should call <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> to end the add transaction.</span></span> <span data-ttu-id="f403a-122">始终在集合视图中将出现一个新项。</span><span class="sxs-lookup"><span data-stu-id="f403a-122">A new item always appears in the collection view.</span></span> <span data-ttu-id="f403a-123">任何筛选、 排序或分组操作也将应用于该视图应用到新项时<xref:System.Windows.Data.ListCollectionView.CommitNew%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="f403a-123">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public object AddNewItem (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNewItem(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewItem (newItem As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNewItem(System::Object ^ newItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem"><span data-ttu-id="f403a-124">要添加到集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-124">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="f403a-125">将指定的对象添加到集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-125">Adds the specified object to the collection.</span></span></summary>
        <returns><span data-ttu-id="f403a-126">已添加到集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-126">The object that was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-127">调用<xref:System.Windows.Data.ListCollectionView.AddNewItem%2A>方法会启动添加事务。</span><span class="sxs-lookup"><span data-stu-id="f403a-127">Calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method starts an add transaction.</span></span> <span data-ttu-id="f403a-128">应调用<xref:System.Windows.Data.ListCollectionView.CommitNew%2A>或<xref:System.Windows.Data.ListCollectionView.CancelNew%2A>方法来结束添加事务。</span><span class="sxs-lookup"><span data-stu-id="f403a-128">You should call the <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> methods to end the add transaction.</span></span> <span data-ttu-id="f403a-129">始终在集合视图中将出现一个新项。</span><span class="sxs-lookup"><span data-stu-id="f403a-129">A new item always appears in the collection view.</span></span> <span data-ttu-id="f403a-130">任何筛选、 排序或分组操作也将应用于该视图应用到新项时<xref:System.Windows.Data.ListCollectionView.CommitNew%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="f403a-130">Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f403a-131">对象不能使用 <see cref="T:System.Windows.Data.ListCollectionView" /> 方法添加到 <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-131">An object cannot be added to the <see cref="T:System.Windows.Data.ListCollectionView" /> by using the <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> method.</span></span></exception>
        <altmember cref="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-132">获取一个值，该值指示是否可以将新项添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="f403a-132">Gets a value that indicates whether a new item can be added to the collection.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-133">如果可以将新项添加到集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-133"><see langword="true" /> if a new item can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-134"><xref:System.Windows.Data.ListCollectionView>可以创建集合的新项，如果没有发生编辑事务，如果该集合不为固定的大小，并且<xref:System.Windows.Data.ListCollectionView>可以创建正确类型的对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-134">The <xref:System.Windows.Data.ListCollectionView> can create a new item for the collection if there is no edit transaction occurring, if the collection is not a fixed size, and if the <xref:System.Windows.Data.ListCollectionView> can create an object of the correct type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      </Docs>
    </Member>
    <Member MemberName="CanAddNewItem">
      <MemberSignature Language="C#" Value="public bool CanAddNewItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanAddNewItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNewItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNewItem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-135">获取一个值，该值指示是否可以向集合中添加指定的对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-135">Gets a value that indicates whether a specified object can be added to the collection.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-136">如果可以将指定的对象添加到集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-136"><see langword="true" /> if a specified object can be added to the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-137">如果<xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A>属性是`true`，你可以指定通过调用添加到集合的对象<xref:System.Windows.Data.ListCollectionView.AddNewItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f403a-137">If the <xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> property is `true`, you can specify an object to add to the collection by calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method.</span></span> <span data-ttu-id="f403a-138"><xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> 是`false`如果不能向集合添加项。</span><span class="sxs-lookup"><span data-stu-id="f403a-138"><xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A> is `false` if items cannot be added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-139">获取一个值，该值指示集合视图是否可以放弃挂起的更改并还原所编辑对象的原始值。</span><span class="sxs-lookup"><span data-stu-id="f403a-139">Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-140">如果集合视图可以放弃挂起的更改并还原所编辑对象的原始值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-140"><see langword="true" /> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-141"><xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> 是`true`如果编辑的项实现<xref:System.ComponentModel.IEditableObject?displayProperty=nameWithType>接口。</span><span class="sxs-lookup"><span data-stu-id="f403a-141"><xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true` if the edited item implements the <xref:System.ComponentModel.IEditableObject?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="f403a-142">如果<xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A>是`false`，调用<xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>以使视图退出编辑状态，并提供逻辑，以还原在编辑过的对象上的更改。</span><span class="sxs-lookup"><span data-stu-id="f403a-142">If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `false`, call <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-143">结束编辑事务，并还原项的原始值（如有可能）。</span><span class="sxs-lookup"><span data-stu-id="f403a-143">Ends the edit transaction, and if possible, restores the original value to the item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-144"><xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> 设置<xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A>到`null`，并使集合视图退出编辑状态。</span><span class="sxs-lookup"><span data-stu-id="f403a-144"><xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> sets <xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state.</span></span> <span data-ttu-id="f403a-145">如果<xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A>是`true`，<xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>还将还原所编辑对象的原始值。</span><span class="sxs-lookup"><span data-stu-id="f403a-145">If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true`, <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> also restores the original values of the edited object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-146">结束添加事务并放弃挂起的新项。</span><span class="sxs-lookup"><span data-stu-id="f403a-146">Ends the add transaction and discards the pending new item.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveFiltering">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveFiltering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-147">获取一个值，该值指示集合视图是否支持打开或关闭实时筛选数据。</span><span class="sxs-lookup"><span data-stu-id="f403a-147">Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-148">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-148"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveGrouping">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveGrouping { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-149">获取一个值，该值指示集合视图是否支持在真实时间中打开或关闭分组数据。</span><span class="sxs-lookup"><span data-stu-id="f403a-149">Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-150">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-150"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeLiveSorting">
      <MemberSignature Language="C#" Value="public bool CanChangeLiveSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChangeLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanChangeLiveSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanChangeLiveSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-151">获取一个值，该值指示集合视图是否支持在真实时间中打开或关闭排序数据。</span><span class="sxs-lookup"><span data-stu-id="f403a-151">Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-152">在所有情况下均为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-152"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFilter">
      <MemberSignature Language="C#" Value="public override bool CanFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanFilter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-153">获取一个值，该值指示视图是否支持基于回调的筛选。</span><span class="sxs-lookup"><span data-stu-id="f403a-153">Gets a value that indicates whether the view supports callback-based filtering.</span></span></summary>
        <value><span data-ttu-id="f403a-154">对于 <see cref="T:System.Windows.Data.ListCollectionView" /> 的默认实例，此属性始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-154">For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-155">此属性用于测试当前的实现是否支持对继承分配回调之前筛选<xref:System.Windows.Data.CollectionView.Filter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f403a-155">Use this property to test whether the current implementation supports filtering before assigning a callback to the inherited <xref:System.Windows.Data.CollectionView.Filter%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGroup">
      <MemberSignature Language="C#" Value="public override bool CanGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanGroup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanGroup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-156">获取一个值，该值指示集合视图是否支持分组。</span><span class="sxs-lookup"><span data-stu-id="f403a-156">Gets a value that indicates whether the collection view supports grouping.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-157">如果集合视图支持分组，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-157"><see langword="true" /> if the collection view supports grouping; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-158">获取一个值，该值指示是否可以从集合中移除项。</span><span class="sxs-lookup"><span data-stu-id="f403a-158">Gets a value that indicates whether an item can be removed from the collection.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-159">如果可以从集合中移除项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-159"><see langword="true" /> if an item can be removed from the collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-160"><xref:System.Windows.Data.ListCollectionView.CanRemove%2A> 是`true`如果集合不是固定的大小，并且没有进行添加或编辑事务。</span><span class="sxs-lookup"><span data-stu-id="f403a-160"><xref:System.Windows.Data.ListCollectionView.CanRemove%2A> is `true` if the collection is not a fixed size and if an add or edit transaction is not occurring.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-161">获取一个值，该值指示集合视图是否支持排序。</span><span class="sxs-lookup"><span data-stu-id="f403a-161">Gets a value that indicates whether the collection view supports sorting.</span></span></summary>
        <value><span data-ttu-id="f403a-162">对于 <see cref="T:System.Windows.Data.ListCollectionView" /> 的默认实例，此属性始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-162">For a default instance of <see cref="T:System.Windows.Data.ListCollectionView" />, this property always returns <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CommitEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-163">结束编辑事务并保存挂起的更改。</span><span class="sxs-lookup"><span data-stu-id="f403a-163">Ends the edit transaction and saves the pending changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CommitNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-164">结束添加事务并保存挂起的新项。</span><span class="sxs-lookup"><span data-stu-id="f403a-164">Ends the add transaction and saves the pending new item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-165">任何筛选、 排序或分组操作也将应用于<xref:System.Windows.Data.ListCollectionView>应用到新项时<xref:System.Windows.Data.ListCollectionView.CommitNew%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="f403a-165">Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.ListCollectionView> is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected virtual int Compare (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Compare(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Compare (o1 As Object, o2 As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Compare(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="f403a-166">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-166">The first object to compare.</span></span></param>
        <param name="o2"><span data-ttu-id="f403a-167">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-167">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="f403a-168">比较两个对象并返回一个值，指示一个对象是小于、等于还是大于另一个对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-168">Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="f403a-169">如果 <paramref name="o1" /> 小于 <paramref name="o2" />，则小于零；如果 <paramref name="o1" /> 和 <paramref name="o2" /> 相等，则为零；如果 <paramref name="o1" /> 大于 <paramref name="o2" />，则大于零。</span><span class="sxs-lookup"><span data-stu-id="f403a-169">Less than zero if <paramref name="o1" /> is less than <paramref name="o2" />, zero if <paramref name="o1" /> and <paramref name="o2" /> are equal, or greater than zero if <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public override bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Contains(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f403a-170">要检查的对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-170">The object to check.</span></span></param>
        <summary><span data-ttu-id="f403a-171">返回一个值，该值指示给定项是否属于集合视图。</span><span class="sxs-lookup"><span data-stu-id="f403a-171">Returns a value that indicates whether a given item belongs to the collection view.</span></span></summary>
        <returns>
          <span data-ttu-id="f403a-172">如果项属于集合视图，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-172"><see langword="true" /> if the item belongs to the collection view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-173">此方法不会不进行任何假设项是否属于基础集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-173">This method does not make any assumptions about whether the item belongs to the underlying collection.</span></span> <span data-ttu-id="f403a-174">如果你知道该项属于基础集合，它会更加高效调用<xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>。</span><span class="sxs-lookup"><span data-stu-id="f403a-174">If you know that the item belongs to the underlying collection, it is more efficient to call <xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-175">获取记录的估计数量。</span><span class="sxs-lookup"><span data-stu-id="f403a-175">Gets the estimated number of records.</span></span></summary>
        <value><span data-ttu-id="f403a-176">以下项之一：</span><span class="sxs-lookup"><span data-stu-id="f403a-176">One of the following:</span></span>  
  
 <span data-ttu-id="f403a-177"><list type="table"><listheader><term> 值</span><span class="sxs-lookup"><span data-stu-id="f403a-177"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="f403a-178"></term><description> 含义</span><span class="sxs-lookup"><span data-stu-id="f403a-178"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="f403a-179"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="f403a-179"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="f403a-180"></term><description> 无法确定该集合的计数。</span><span class="sxs-lookup"><span data-stu-id="f403a-180"></term><description> Could not determine the count of the collection.</span></span> <span data-ttu-id="f403a-181">此值可能由“虚拟化”视图返回，这时视图特意不考虑基础集合中的所有项，因为它尝试提高效率，尽量降低整个集合始终都可用这一要求。</span><span class="sxs-lookup"><span data-stu-id="f403a-181">This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is trying to increase efficiency and minimize dependence on always having the whole collection available.</span></span>  
  
 <span data-ttu-id="f403a-182"></description></item><item><term> 任何其他整数</span><span class="sxs-lookup"><span data-stu-id="f403a-182"></description></item><item><term> any other integer</span></span>  
  
 <span data-ttu-id="f403a-183"></term><description> 集合的计数。</span><span class="sxs-lookup"><span data-stu-id="f403a-183"></term><description> The count of the collection.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-184">请注意，此计数表示已筛选的计数。</span><span class="sxs-lookup"><span data-stu-id="f403a-184">Note that this count represents the filtered count.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-185">获取当前添加事务过程中正在添加的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-185">Gets the item that is being added during the current add transaction.</span></span></summary>
        <value><span data-ttu-id="f403a-186">如果 <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> 为 <see langword="true" />，则为要添加的项；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-186">The item that is being added if <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-187">获取集合中正在编辑的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-187">Gets the item in the collection that is being edited.</span></span></summary>
        <value><span data-ttu-id="f403a-188">如果 <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> 是 <see langword="true" />，则为集合中正在编辑的项；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-188">The item in the collection that is being edited if <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> is <see langword="true" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      </Docs>
    </Member>
    <Member MemberName="CustomSort">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer CustomSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer CustomSort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.CustomSort" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomSort As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ CustomSort { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-189">获取或设置一个实现 <see cref="T:System.Collections.IComparer" /> 的自定义对象，用于在视图中对项进行排序。</span><span class="sxs-lookup"><span data-stu-id="f403a-189">Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer" /> to sort items in the view.</span></span></summary>
        <value><span data-ttu-id="f403a-190">作为 <see cref="T:System.Collections.IComparer" /> 的实现的排序条件。</span><span class="sxs-lookup"><span data-stu-id="f403a-190">The sort criteria as an implementation of <see cref="T:System.Collections.IComparer" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-191">设置此属性将导致执行即时刷新除非<xref:System.Windows.Data.CollectionView.DeferRefresh%2A>生效。</span><span class="sxs-lookup"><span data-stu-id="f403a-191">Setting this property causes an immediate refresh unless a <xref:System.Windows.Data.CollectionView.DeferRefresh%2A> is in effect.</span></span>  
  
 <span data-ttu-id="f403a-192">将设置此属性会清除以前设置<xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>值。</span><span class="sxs-lookup"><span data-stu-id="f403a-192">Setting this property clears a previously set <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EditItem(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f403a-193">要编辑的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-193">The item to edit.</span></span></param>
        <summary><span data-ttu-id="f403a-194">开始指定项的编辑事务。</span><span class="sxs-lookup"><span data-stu-id="f403a-194">Begins an edit transaction of the specified item.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public override Predicate&lt;object&gt; Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Predicate`1&lt;object&gt; Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Filter As Predicate(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Predicate&lt;System::Object ^&gt; ^ Filter { Predicate&lt;System::Object ^&gt; ^ get(); void set(Predicate&lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Predicate&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-195">获取或设置用于确定某个项是否适合包含在视图中的方法。</span><span class="sxs-lookup"><span data-stu-id="f403a-195">Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.</span></span></summary>
        <value><span data-ttu-id="f403a-196">一个委托，表示用于确定某个项是否适合包含在视图中的方法。</span><span class="sxs-lookup"><span data-stu-id="f403a-196">A delegate that represents the method that is used to determine whether an item is suitable for inclusion in the view.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-197">返回可用于枚举视图中的项的对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-197">Returns an object that you can use to enumerate the items in the view.</span></span></summary>
        <returns><span data-ttu-id="f403a-198">一个可用于枚举视图中的项的 <see cref="T:System.Collections.IEnumerator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-198">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to enumerate the items in the view.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-199">枚举器实例通常用于使的内容的一个集合，或在此情况下，视图的内容的异步检查。</span><span class="sxs-lookup"><span data-stu-id="f403a-199">Enumerator instances are typically used for making asynchronous checks of the contents of a collection, or in this case, the contents of the view.</span></span> <span data-ttu-id="f403a-200">例如，如果您正准备启动`foreach`视图的内容通过迭代，它可能更好的做法获取异步复制以确保，视图项的长度不意外循环期间发生更改。</span><span class="sxs-lookup"><span data-stu-id="f403a-200">For example, if you are about to start a `foreach` iteration over the contents of the view, it may be better to obtain an asynchronous copy to ensure that the length of the view items does not change unexpectedly midway through the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public override object GetItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetItemAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f403a-201">项所在位置的索引（从零开始）。</span><span class="sxs-lookup"><span data-stu-id="f403a-201">The zero-based index at which the item is located.</span></span></param>
        <summary><span data-ttu-id="f403a-202">检索位于视图中指定位置的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-202">Retrieves the item at the specified position in the view.</span></span></summary>
        <returns><span data-ttu-id="f403a-203">位于视图中指定位置的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-203">The item at the specified position in the view.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-204">此方法的计算结果的索引与任何<xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>， <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>， <xref:System.Windows.Data.CollectionView.Filter%2A>，和<xref:System.Windows.Data.ListCollectionView.CustomSort%2A>视图设置的属性。</span><span class="sxs-lookup"><span data-stu-id="f403a-204">This method evaluates the index with any <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>, <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>, <xref:System.Windows.Data.CollectionView.Filter%2A>, and <xref:System.Windows.Data.ListCollectionView.CustomSort%2A> properties that are set on the view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f403a-205">如果 <paramref name="index" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="f403a-205">If <paramref name="index" /> is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBySelector">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupBySelector As GroupDescriptionSelectorCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Data::GroupDescriptionSelectorCallback ^ GroupBySelector { System::Windows::Data::GroupDescriptionSelectorCallback ^ get(); void set(System::Windows::Data::GroupDescriptionSelectorCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.GroupDescriptionSelectorCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-206">获取或设置一个委托，用于将 <see cref="T:System.ComponentModel.GroupDescription" /> 选作父组及其级别的功能。</span><span class="sxs-lookup"><span data-stu-id="f403a-206">Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span></span></summary>
        <value><span data-ttu-id="f403a-207">一个方法，此方法提供用于将 <see cref="T:System.ComponentModel.GroupDescription" /> 选作父组及其级别的功能的逻辑。</span><span class="sxs-lookup"><span data-stu-id="f403a-207">A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription" /> as a function of the parent group and its level.</span></span> <span data-ttu-id="f403a-208">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-208">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="GroupDescriptions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt; GroupDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.ComponentModel.GroupDescription&gt; GroupDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GroupDescriptions As ObservableCollection(Of GroupDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ GroupDescriptions { System::Collections::ObjectModel::ObservableCollection&lt;System::ComponentModel::GroupDescription ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.ComponentModel.GroupDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-209">获取 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</span><span class="sxs-lookup"><span data-stu-id="f403a-209">Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span></span></summary>
        <value><span data-ttu-id="f403a-210"><see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</span><span class="sxs-lookup"><span data-stu-id="f403a-210">A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f403a-211">此属性只能设置的访问的集合对象，并使用它的各种方法，如`Add`。</span><span class="sxs-lookup"><span data-stu-id="f403a-211">This property can only be set by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="f403a-212">要访问集合对象本身的属性是只读的;集合本身是可读/写。</span><span class="sxs-lookup"><span data-stu-id="f403a-212">The property to access the collection object itself is read-only; the collection itself is read/write.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f403a-213">下面的示例演示如何使用此属性：</span><span class="sxs-lookup"><span data-stu-id="f403a-213">The following example shows how to use this property:</span></span>  
  
 [!code-csharp[DataBindingLab#6](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#6)]
 [!code-vb[DataBindingLab#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#6)]  
  
 <span data-ttu-id="f403a-214">有关完整示例，请参阅[数据绑定演示](http://go.microsoft.com/fwlink/?LinkID=163703)。</span><span class="sxs-lookup"><span data-stu-id="f403a-214">For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;object&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;object&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Groups As ReadOnlyObservableCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ Groups { System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-215">获取顶级组。</span><span class="sxs-lookup"><span data-stu-id="f403a-215">Gets the top-level groups.</span></span></summary>
        <value><span data-ttu-id="f403a-216">一个顶级组的只读集合；如果没有任何组，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-216">A read-only collection of the top-level groups, or <see langword="null" /> if there are no groups.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-217">集合中的项的类型是<xref:System.Windows.Data.CollectionViewGroup>。</span><span class="sxs-lookup"><span data-stu-id="f403a-217">The items in the collection are of type <xref:System.Windows.Data.CollectionViewGroup>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
        <altmember cref="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public override int IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IndexOf(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f403a-218">集合中要检查的对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-218">The object to check for in the collection.</span></span></param>
        <summary><span data-ttu-id="f403a-219">返回给定数据项在集合中所在位置的索引，如果该项的索引未知，则返回 -1。</span><span class="sxs-lookup"><span data-stu-id="f403a-219">Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown.</span></span></summary>
        <returns><span data-ttu-id="f403a-220">该项在集合中的索引；否则，如果集合中不存在该项，则为 <c>-1</c>。</span><span class="sxs-lookup"><span data-stu-id="f403a-220">The index of the item in the collection, or <c>-1</c> if the item does not exist in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalContains">
      <MemberSignature Language="C#" Value="protected bool InternalContains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool InternalContains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalContains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool InternalContains(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f403a-221">要定位的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-221">The item to locate.</span></span></param>
        <summary><span data-ttu-id="f403a-222">返回一个值，该值指示 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 是否包含此项。</span><span class="sxs-lookup"><span data-stu-id="f403a-222">Return a value that indicates whether the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item.</span></span></summary>
        <returns>
          <span data-ttu-id="f403a-223">如果 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 包含该项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-223"><see langword="true" /> if the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> contains the item; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalCount">
      <MemberSignature Language="C#" Value="protected int InternalCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.InternalCount" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InternalCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int InternalCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-224">获取 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中记录的数量。</span><span class="sxs-lookup"><span data-stu-id="f403a-224">Gets the number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <value><span data-ttu-id="f403a-225"><see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中的记录数。</span><span class="sxs-lookup"><span data-stu-id="f403a-225">The number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalGetEnumerator">
      <MemberSignature Language="C#" Value="protected System.Collections.IEnumerator InternalGetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.IEnumerator InternalGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalGetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::IEnumerator ^ InternalGetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-226">返回 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 的一个枚举数。</span><span class="sxs-lookup"><span data-stu-id="f403a-226">Returns an enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="f403a-227">用于 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 的枚举数。</span><span class="sxs-lookup"><span data-stu-id="f403a-227">An enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalIndexOf">
      <MemberSignature Language="C#" Value="protected int InternalIndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 InternalIndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalIndexOf (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int InternalIndexOf(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f403a-228">要返回其索引的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-228">The item to return an index for.</span></span></param>
        <summary><span data-ttu-id="f403a-229">返回指定项在 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中的索引。</span><span class="sxs-lookup"><span data-stu-id="f403a-229">Returns the index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="f403a-230">指定项在 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中的索引。</span><span class="sxs-lookup"><span data-stu-id="f403a-230">The index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalItemAt">
      <MemberSignature Language="C#" Value="protected object InternalItemAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object InternalItemAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InternalItemAt (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ InternalItemAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f403a-231">项所在位置的索引。</span><span class="sxs-lookup"><span data-stu-id="f403a-231">The index at which the item is located.</span></span></param>
        <summary><span data-ttu-id="f403a-232">返回 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中给定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-232">Returns the item at the given index in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList" />.</span></span></summary>
        <returns><span data-ttu-id="f403a-233">视图中位于从零开始的指定索引处的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-233">The item at the specified zero-based index in the view.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalList">
      <MemberSignature Language="C#" Value="protected System.Collections.IList InternalList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList InternalList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.InternalList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InternalList As IList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IList ^ InternalList { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-234">获取完整的且未经筛选的基础集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-234">Gets the complete and unfiltered underlying collection.</span></span></summary>
        <value><span data-ttu-id="f403a-235">必须实现 <see cref="T:System.Collections.IList" /> 的基础集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-235">The underlying collection, which must implement <see cref="T:System.Collections.IList" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-236">获取一个值，该值指示是否正在执行添加事务。</span><span class="sxs-lookup"><span data-stu-id="f403a-236">Gets a value that indicates whether an add transaction is in progress.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-237">如果正在进行添加事务，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-237"><see langword="true" /> if an add transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-238">通过调用开始添加事务<xref:System.Windows.Data.ListCollectionView.AddNew%2A>方法，并且你通过调用结束添加事务<xref:System.Windows.Data.ListCollectionView.CommitNew%2A>或<xref:System.Windows.Data.ListCollectionView.CancelNew%2A>。</span><span class="sxs-lookup"><span data-stu-id="f403a-238">You begin an add transaction by calling the <xref:System.Windows.Data.ListCollectionView.AddNew%2A> method, and you end the add transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      </Docs>
    </Member>
    <Member MemberName="IsDataInGroupOrder">
      <MemberSignature Language="C#" Value="public bool IsDataInGroupOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataInGroupOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDataInGroupOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDataInGroupOrder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-239">获取或设置一个值，该值指示项列表在应用排序功能和筛选器（如果有）后是否已处于可以进行分组的正确顺序。</span><span class="sxs-lookup"><span data-stu-id="f403a-239">Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-240">如果项列表已处于可以进行分组的正确顺序，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-240"><see langword="true" /> if the list of items is already in the correct order for grouping; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-241">此属性设置为`true`会通知视图的项的列表，已在进行分组的正确顺序，并允许视图以使用更有效的算法来生成组。</span><span class="sxs-lookup"><span data-stu-id="f403a-241">Setting this property to `true` informs the view that the list of items is already in the correct order for grouping and allows the view to use a more efficient algorithm to build the groups.</span></span> <span data-ttu-id="f403a-242">该数据会在正确的顺序如果：</span><span class="sxs-lookup"><span data-stu-id="f403a-242">The data is in the correct order if:</span></span>  
  
1.  <span data-ttu-id="f403a-243">属于给定组的所有项都显示连续，和</span><span class="sxs-lookup"><span data-stu-id="f403a-243">All items belonging to a given group appear consecutively, and</span></span>  
  
2.  <span data-ttu-id="f403a-244">如果<xref:System.ComponentModel.GroupDescription.GroupNames%2A>集合为非空中的组<xref:System.ComponentModel.GroupDescription.GroupNames%2A>显示之前的任何其他组，和中的相同顺序<xref:System.ComponentModel.GroupDescription.GroupNames%2A>。</span><span class="sxs-lookup"><span data-stu-id="f403a-244">If the <xref:System.ComponentModel.GroupDescription.GroupNames%2A> collection is non-empty, the groups in <xref:System.ComponentModel.GroupDescription.GroupNames%2A> appear before any other groups, and in the same order as in <xref:System.ComponentModel.GroupDescription.GroupNames%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-245">获取一个值，该值指示是否正在执行编辑事务。</span><span class="sxs-lookup"><span data-stu-id="f403a-245">Gets a value that indicates whether an edit transaction is in progress.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-246">如果正在执行编辑事务，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-246"><see langword="true" /> if an edit transaction is in progress; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-247">通过调用开始编辑事务<xref:System.Windows.Data.ListCollectionView.EditItem%2A>方法，并且你通过调用结束事务<xref:System.Windows.Data.ListCollectionView.CommitEdit%2A>或<xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>。</span><span class="sxs-lookup"><span data-stu-id="f403a-247">You begin an edit transaction by calling the <xref:System.Windows.Data.ListCollectionView.EditItem%2A> method, and you end the transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitEdit%2A> or <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public override bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-248">返回一个值，该值指示最终的（已筛选）视图是否为空。</span><span class="sxs-lookup"><span data-stu-id="f403a-248">Returns a value that indicates whether the resulting (filtered) view is empty.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-249">如果最终的视图为空，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-249"><see langword="true" /> if the resulting view is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGrouping">
      <MemberSignature Language="C#" Value="protected bool IsGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsGrouping" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsGrouping { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-250">获取一个值，该值指示视图中是否有组。</span><span class="sxs-lookup"><span data-stu-id="f403a-250">Gets a value that indicates whether there are groups in the view.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-251">如果视图中有组，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-251"><see langword="true" /> if there are groups in the view; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiveFiltering">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveFiltering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveFiltering As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveFiltering { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-252">获取或设置一个值，该值指示是否启用实时筛选数据。</span><span class="sxs-lookup"><span data-stu-id="f403a-252">Gets or sets a value that indicates whether filtering data in real time is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-253">如果已启用实时筛选数据，则为 <see langword="true" />；如果未启用活动筛选，则为 <see langword="false" />；如果不能确定集合视图是否实现活动筛选，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-253"><see langword="true" /> if filtering data in real time is enabled; <see langword="false" /> if live filtering is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live filtering.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f403a-254">无法将 <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-254"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLiveGrouping">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveGrouping As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveGrouping { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-255">获取或设置一个值，该值指示是否启用实时数据分组。</span><span class="sxs-lookup"><span data-stu-id="f403a-255">Gets or sets a value that indicates whether grouping data in real time is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-256">如果已启用实时分组数据，则为 <see langword="true" />；如果未启用活动分组，则为 <see langword="false" />；如果不能确定集合视图是否实现活动分组，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-256"><see langword="true" /> if grouping data in real time is enabled; <see langword="false" /> if live grouping is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live grouping.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f403a-257">无法将 <see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-257"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLiveSorting">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsLiveSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsLiveSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.IsLiveSorting" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLiveSorting As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsLiveSorting { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-258">获取或设置一个值，该值指示是否启用实时排序。</span><span class="sxs-lookup"><span data-stu-id="f403a-258">Gets or sets a value that indicates whether sorting in real time is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-259">如果已启用实时排序数据，则为 <see langword="true" />；如果未启用活动排序，则为 <see langword="false" />；如果不能确定集合视图是否实现活动排序，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-259"><see langword="true" /> if sorting data in real time is enabled; <see langword="false" /> if live sorting is not enabled; <see langword="null" /> if it cannot be determined whether the collection view implements live sorting.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f403a-260">无法将 <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-260"><see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> cannot be set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ItemProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt; ItemProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ComponentModel.ItemPropertyInfo&gt; ItemProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.ItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemProperties As ReadOnlyCollection(Of ItemPropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ ItemProperties { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ComponentModel::ItemPropertyInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ComponentModel.ItemPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-261">获取一个对象集合，该集合描述集合中项的属性。</span><span class="sxs-lookup"><span data-stu-id="f403a-261">Gets a collection of objects that describes the properties of the items in the collection.</span></span></summary>
        <value><span data-ttu-id="f403a-262">一个对象集合，该集合描述集合中项的属性。</span><span class="sxs-lookup"><span data-stu-id="f403a-262">A collection of objects that describes the properties of the items in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveFilteringProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveFilteringProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveFilteringProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveFilteringProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveFilteringProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-263">获取在真实时间中参与筛选数据的属性的字符集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-263">Gets a collection of strings that specify the properties that participate in filtering data in real time.</span></span></summary>
        <value><span data-ttu-id="f403a-264">指定参与真实时间中的筛选数据的属性的字符集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-264">A collection of strings that specify the properties that participate in filtering data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveGroupingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveGroupingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveGroupingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveGroupingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveGroupingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-265">获取在真实时间中参与分组数据的属性的字符集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-265">Gets a collection of strings that specify the properties that participate in grouping data in real time.</span></span></summary>
        <value><span data-ttu-id="f403a-266">指定参与真实时间中的分组数据的属性的字符集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-266">A collection of strings that specify the properties that participate in grouping data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiveSortingProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;string&gt; LiveSortingProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;string&gt; LiveSortingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.LiveSortingProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LiveSortingProperties As ObservableCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ LiveSortingProperties { System::Collections::ObjectModel::ObservableCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-267">获取在真实时间中参与排序数据的属性的字符集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-267">Gets a collection of strings that specify the properties that participate in sorting data in real time.</span></span></summary>
        <value><span data-ttu-id="f403a-268">指定参与真实时间中的排序数据的属性的字符集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-268">A collection of strings that specify the properties that participate in sorting data in real time.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCurrentToPosition">
      <MemberSignature Language="C#" Value="public override bool MoveCurrentToPosition (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveCurrentToPosition(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveCurrentToPosition (position As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveCurrentToPosition(int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="f403a-269">一个索引位置，位于该位置的项将设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-269">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> to.</span></span></param>
        <summary><span data-ttu-id="f403a-270">将位于指定索引位置的项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-270">Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> in the view.</span></span></summary>
        <returns>
          <span data-ttu-id="f403a-271">如果所生成的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-271"><see langword="true" /> if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> is an item within the view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f403a-272">在索引超出范围的情况下引发。</span><span class="sxs-lookup"><span data-stu-id="f403a-272">Thrown if the index is out of range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-273">获取或设置新项占位符在 <see cref="T:System.Windows.Data.ListCollectionView" /> 中的位置。</span><span class="sxs-lookup"><span data-stu-id="f403a-273">Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span></span></summary>
        <value><span data-ttu-id="f403a-274">用于指定新项占位符在 <see cref="T:System.Windows.Data.ListCollectionView" /> 中的位置的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="f403a-274">One of the enumeration values that specifies the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAllowsCrossThreadChangesChanged">
      <MemberSignature Language="C#" Value="protected override void OnAllowsCrossThreadChangesChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAllowsCrossThreadChangesChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAllowsCrossThreadChangesChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAllowsCrossThreadChangesChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-275">当 <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> 属性更改时发生。</span><span class="sxs-lookup"><span data-stu-id="f403a-275">Occurs when the <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginChangeLogging">
      <MemberSignature Language="C#" Value="protected override void OnBeginChangeLogging (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginChangeLogging(class System.Collections.Specialized.NotifyCollectionChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginChangeLogging (args As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginChangeLogging(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Replaced by OnAllowsCrossThreadChangesChanged")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="f403a-276">添加到更改日志的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-276">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object that is added to the change log.</span></span></param>
        <summary><span data-ttu-id="f403a-277">由基类调用，用于通知派生类已将 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件发送到消息队列。</span><span class="sxs-lookup"><span data-stu-id="f403a-277">Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event has been posted to the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-278">此通知的目的是信息的允许集合视图，通常是信息的数据收集后，需要在发布时的状态的快照。</span><span class="sxs-lookup"><span data-stu-id="f403a-278">The purpose of this notification is to allow collection views to take a snapshot of the information, which is often the state of the data collection, that is needed at the time of the post.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f403a-279">如果 <paramref name="args" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-279">If <paramref name="args" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PassesFilter">
      <MemberSignature Language="C#" Value="public override bool PassesFilter (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PassesFilter(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PassesFilter (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool PassesFilter(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f403a-280">要检查的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-280">The item to check.</span></span></param>
        <summary><span data-ttu-id="f403a-281">返回一个值，该值指示基础集合中的指定项是否属于视图。</span><span class="sxs-lookup"><span data-stu-id="f403a-281">Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</span></span></summary>
        <returns>
          <span data-ttu-id="f403a-282">如果指定项属于视图或未对集合视图设置筛选器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-282"><see langword="true" /> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-283">与不同<xref:System.Windows.Data.ListCollectionView.Contains%2A>方法，此方法假定指定的项属于基础集合。</span><span class="sxs-lookup"><span data-stu-id="f403a-283">Unlike the <xref:System.Windows.Data.ListCollectionView.Contains%2A> method, this method assumes that the specified item belongs to the underlying collection.</span></span> <span data-ttu-id="f403a-284">此方法将筛选器考虑在内。</span><span class="sxs-lookup"><span data-stu-id="f403a-284">This method takes filters into account.</span></span> <span data-ttu-id="f403a-285">通常情况下，你使用此方法在集合更改通知过程来确定是否需要处理添加或删除的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-285">Typically, you use this method during collection-changed notifications to determine whether the added or removed item requires processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void ProcessCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ProcessCollectionChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ProcessCollectionChanged (args As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ProcessCollectionChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="f403a-286">要处理的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-286">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> object to process.</span></span></param>
        <summary><span data-ttu-id="f403a-287">处理 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="f403a-287">Handles <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> events.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f403a-288">如果 <paramref name="args" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-288">If <paramref name="args" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshOverride">
      <MemberSignature Language="C#" Value="protected override void RefreshOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.RefreshOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshOverride ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshOverride();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f403a-289">重新创建该视图。</span><span class="sxs-lookup"><span data-stu-id="f403a-289">Recreates the view.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.CollectionView.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f403a-290">要移除的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-290">The item to remove.</span></span></param>
        <summary><span data-ttu-id="f403a-291">从集合中移除指定的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-291">Removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-292">如果`item`不在集合中，<xref:System.Windows.Data.ListCollectionView.Remove%2A>不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="f403a-292">If `item` is not in the collection, <xref:System.Windows.Data.ListCollectionView.Remove%2A> does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f403a-293">要移除的项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="f403a-293">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="f403a-294">从集合中删除指定位置的项。</span><span class="sxs-lookup"><span data-stu-id="f403a-294">Removes the item at the specified position from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f403a-295">`index` 是集合视图，而不是集合相对路径。</span><span class="sxs-lookup"><span data-stu-id="f403a-295">`index` is relative to the collection view, not the collection.</span></span>  <span data-ttu-id="f403a-296">例如，如果集合具有 10 项，并且视图具有<xref:System.ComponentModel.ICollectionView.Filter%2A>以便 7 项将出现，有效的值的`index`为 0 到 6。</span><span class="sxs-lookup"><span data-stu-id="f403a-296">For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of `index` are 0 through 6.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f403a-297"><paramref name="index" /> 小于 0 或大于集合视图中的项数。</span><span class="sxs-lookup"><span data-stu-id="f403a-297"><paramref name="index" /> is less than 0 or greater than the number of items in the collection view.</span></span></exception>
        <altmember cref="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.SortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SortDescriptions As SortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::SortDescriptionCollection ^ SortDescriptions { System::ComponentModel::SortDescriptionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.SortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-298">获取 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</span><span class="sxs-lookup"><span data-stu-id="f403a-298">Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describes how the items in the collection are sorted in the view.</span></span></summary>
        <value><span data-ttu-id="f403a-299"><see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</span><span class="sxs-lookup"><span data-stu-id="f403a-299">A collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f403a-300">此属性只能设置的访问的集合对象，并使用它的各种方法，如`Add`。</span><span class="sxs-lookup"><span data-stu-id="f403a-300">This property can only be set by accessing the collection object and using its various methods such as `Add`.</span></span> <span data-ttu-id="f403a-301">要访问集合对象本身的属性是只读的;集合本身是可读/写。</span><span class="sxs-lookup"><span data-stu-id="f403a-301">The property to access the collection object itself is read-only; the collection itself is read/write.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (o1 As Object, o2 As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ o1, System::Object ^ o2) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="f403a-302">要比较的第一个对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-302">The first object to compare.</span></span></param>
        <param name="o2"><span data-ttu-id="f403a-303">要比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="f403a-303">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="f403a-304">此成员支持 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基础结构，但不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="f403a-304">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="f403a-305">小于零的值意味着 <paramref name="o1" /> 小于 <paramref name="o2;" />；零值意味着对象相等；大于零的值则意味着 <paramref name="o1" /> 大于 <paramref name="o2" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-305">A value that is less than zero means <paramref name="o1" /> is less than <paramref name="o2;" /> a value of zero means the objects are equal; and a value that is over zero means <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesLocalArray">
      <MemberSignature Language="C#" Value="protected bool UsesLocalArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesLocalArray" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ListCollectionView.UsesLocalArray" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UsesLocalArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool UsesLocalArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f403a-306">获取一个值，该值指示排序和筛选是否需要数据的私有副本。</span><span class="sxs-lookup"><span data-stu-id="f403a-306">Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</span></span></summary>
        <value>
          <span data-ttu-id="f403a-307">如果排序和筛选需要数据的私有副本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-307"><see langword="true" /> if a private copy of the data is needed for sorting and filtering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f403a-308">如果存在 <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> 或 <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />，或者两者同时存在，则默认实现返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f403a-308">The default implementation returns <see langword="true" /> if there is an <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> or <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />, or both.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>