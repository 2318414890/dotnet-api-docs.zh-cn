<Type Name="XmlDataProvider" FullName="System.Windows.Data.XmlDataProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="199f4c78904b37256d90aba12a0acf8939b1ae9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDataProvider : System.Windows.Data.DataSourceProvider, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataProvider extends System.Windows.Data.DataSourceProvider implements class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.XmlDataProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataProvider&#xA;Inherits DataSourceProvider&#xA;Implements IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataProvider : System::Windows::Data::DataSourceProvider, System::Windows::Markup::IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.DataSourceProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("XmlSerializer")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许以声明方式访问数据绑定的 XML 数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  在部分信任沙盒，<xref:System.Windows.Data.XmlDataProvider>失败时它没有权限来访问给定的数据。 有关部分信任安全性的详细信息，请参阅[WPF 部分信任安全](~/docs/framework/wpf/wpf-partial-trust-security.md)。  
  
 <xref:System.Windows.Data.XmlDataProvider> 公开了以下方式来访问[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]数据。  
  
-   您可将内联[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据使用<xref:System.Windows.Data.XmlDataProvider>类。  
  
-   你可以设置<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据文件。  
  
-   你可以设置<xref:System.Windows.Data.XmlDataProvider.Document%2A>属性<xref:System.Xml.XmlDocument>。  
  
 <xref:System.Windows.Data.XmlDataProvider> 执行完全刷新的所有绑定时<xref:System.Xml.XmlDocument.NodeChanged?displayProperty=nameWithType>事件发生。 有特定的节点不进行优化。  
  
 <xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A?displayProperty=nameWithType>属性设置为`true`默认情况下，这意味着，<xref:System.Windows.Data.XmlDataProvider>检索数据并生成的集合[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]异步默认节点。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Data.XmlDataProvider" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="protected virtual Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此类型或成员支持 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基础结构，但不可直接在代码中使用。</summary>
        <value>基 URI。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginQuery">
      <MemberSignature Language="C#" Value="protected override void BeginQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.BeginQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BeginQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>准备加载内联 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 或外部 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 文件，以生成 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 节点的集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 执行是立即或在后台线程，基于值<xref:System.Windows.Data.XmlDataProvider.IsAsynchronous%2A>属性。  
  
 调用此方法<xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>和<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>基类方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument Document { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.Document" />
      <MemberSignature Language="VB.NET" Value="Public Property Document As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDocument ^ Document { System::Xml::XmlDocument ^ get(); void set(System::Xml::XmlDocument ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要用作绑定源的 <see cref="T:System.Xml.XmlDocument" />。</summary>
        <value>要用作绑定源的 <see cref="T:System.Xml.XmlDocument" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.XmlDataProvider> 公开了以下方式来访问[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]数据。  
  
-   您可将内联[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据使用<xref:System.Windows.Data.XmlDataProvider>类。  
  
-   你可以设置<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据文件。  
  
-   你可以将此属性设置为<xref:System.Xml.XmlDocument>。  
  
 <xref:System.Windows.Data.XmlDataProvider> 当对执行完全刷新的所有绑定<xref:System.Xml.XmlDocument.NodeChanged?displayProperty=nameWithType>事件发生。 有特定的节点不进行优化。  
  
 如果<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性是设置，那么任何内联[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据将被丢弃。 如果<xref:System.Windows.Data.XmlDataProvider.Document%2A>设置属性，则<xref:System.Windows.Data.XmlDataProvider.Source%2A>清除属性和任何内联[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据将被丢弃。  
  
 设置以下属性隐式将导致此<xref:System.Windows.Data.XmlDataProvider>若要刷新的对象： <xref:System.Windows.Data.XmlDataProvider.Source%2A>， <xref:System.Windows.Data.XmlDataProvider.Document%2A>， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="protected override void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.EndInit" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示此元素的初始化已完成。如果没有其他未完成的 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />，则这会导致 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsynchronous">
      <MemberSignature Language="C#" Value="public bool IsAsynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsynchronous" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsynchronous { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是在辅助线程还是在活动上下文中执行节点集合创建。</summary>
        <value>
          如果在辅助线程中执行节点集合创建，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应保持 <see cref="P:System.Windows.Data.XmlDataProvider.Source" /> 属性。</summary>
        <returns>
          如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性不具有简单的默认值。 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器通常调用此方法<xref:System.Windows.Data.XmlDataProvider>或开发你自己的控件包含<xref:System.Windows.Data.XmlDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeXmlSerializer">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeXmlSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeXmlSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeXmlSerializer () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeXmlSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应保持 <see cref="P:System.Windows.Data.XmlDataProvider.XmlSerializer" /> 属性。</summary>
        <returns>
          如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.XmlDataProvider.XmlSerializer%2A>属性不具有简单的默认值。 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器通常调用此方法<xref:System.Windows.Data.XmlDataProvider>或开发你自己的控件包含<xref:System.Windows.Data.XmlDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeXPath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeXPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeXPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXPath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeXPath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeXPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否应保持 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> 属性。</summary>
        <returns>
          如果属性值已更改，不再是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这`ShouldSerialize`提供方法，因为<xref:System.Windows.Data.XmlDataProvider.XPath%2A>属性不具有简单的默认值。 此方法指示属性是否已从其默认值。 如果你也正在开发的设计器通常调用此方法<xref:System.Windows.Data.XmlDataProvider>或开发你自己的控件包含<xref:System.Windows.Data.XmlDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要用作绑定源的 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 数据文件的 <see cref="T:System.Uri" />。</summary>
        <value>
          <see cref="T:System.Uri" />的[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]要用作绑定源的数据文件。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.XmlDataProvider> 公开了以下方式来访问[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]数据。  
  
-   您可将内联[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据使用<xref:System.Windows.Data.XmlDataProvider>类。  
  
-   你可以将此属性设置为<xref:System.Uri>的[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据文件。  
  
-   你可以设置<xref:System.Windows.Data.XmlDataProvider.Document%2A>属性<xref:System.Xml.XmlDocument>。  
  
 如果<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性是设置，那么任何内联[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据将被丢弃。 如果<xref:System.Windows.Data.XmlDataProvider.Document%2A>设置属性，则<xref:System.Windows.Data.XmlDataProvider.Source%2A>清除属性和任何内联[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据将被丢弃。  
  
 设置以下属性隐式将导致此<xref:System.Windows.Data.XmlDataProvider>若要刷新的对象： <xref:System.Windows.Data.XmlDataProvider.Source%2A>， <xref:System.Windows.Data.XmlDataProvider.Document%2A>， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。  
  
   
  
## Examples  
 在某些应用程序，嵌入[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]内联至[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]页可能很不方便，因为必须在编译时知道数据的确切内容。 因此，你可以获取数据从一个外部[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]文件，如以下示例所示。  
  
 [!code-xaml[XMLDataSource2#XmlFileExample](~/samples/snippets/csharp/VS_Snippets_Wpf/XmlDataSource2/CS/Window1.xaml#xmlfileexample)]  
  
 如果[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据驻留在远程[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]文件，你定义的访问权限的数据通过分配适当[!INCLUDE[TLA2#tla_url](~/includes/tla2sharptla-url-md.md)]到<xref:System.Windows.Data.XmlDataProvider.Source%2A>属性，如下所示：  
  
```  
<XmlDataProvider x:Key="BookData" Source="http://MyUrl" XPath="Books"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberSignature Language="VB.NET" Value=" Property BaseUri As Uri Implements IUriContext.BaseUri" />
      <MemberSignature Language="C++ CLI" Value="property Uri ^ System.Windows.Markup.IUriContext.BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此成员支持 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基础结构，但不能在代码中直接使用。</summary>
        <value>基 URI。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNamespaceManager XmlNamespaceManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNamespaceManager XmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlNamespaceManager As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNamespaceManager ^ XmlNamespaceManager { System::Xml::XmlNamespaceManager ^ get(); void set(System::Xml::XmlNamespaceManager ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于运行 <see cref="T:System.Xml.XmlNamespaceManager" /> 查询的 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" />。</summary>
        <value>用于运行 <see cref="T:System.Xml.XmlNamespaceManager" /> 查询的 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置以下属性隐式将导致此<xref:System.Windows.Data.XmlDataProvider>若要刷新的对象： <xref:System.Windows.Data.XmlDataProvider.Source%2A>， <xref:System.Windows.Data.XmlDataProvider.Document%2A>， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。  
  
<a name="xamlAttributeUsage_XmlNamespaceManager"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object XmlNamespaceManager="mappingCollection"/>  
```  
  
<a name="xamlValues_XmlNamespaceManager"></a>   
## <a name="xaml-values"></a>XAML 值  
 *mappingCollection*  
 一个 <xref:System.Windows.Data.XmlNamespaceMappingCollection>。 来指代<xref:System.Windows.Data.XmlNamespaceMappingCollection>，使用[标记扩展和 WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)。  
  
   
  
## Examples  
 下面的示例演示如何使用此属性。  
  
 [!code-xaml[XmlnsBindSnippet#XmlNamespaceMapping](~/samples/snippets/csharp/VS_Snippets_Wpf/XmlnsBindSnippet/CS/Window1.xaml#xmlnamespacemapping)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.XmlNamespaceMappingCollection" />
        <altmember cref="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      </Docs>
    </Member>
    <Member MemberName="XmlSerializer">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.IXmlSerializable XmlSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.IXmlSerializable XmlSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.XmlSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSerializer As IXmlSerializable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::IXmlSerializable ^ XmlSerializer { System::Xml::Serialization::IXmlSerializable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.IXmlSerializable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取内联 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 内容。</summary>
        <value>内联 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 分析器使用此属性来编译嵌入的文本内容[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]数据岛。  
  
<a name="xamlPropertyElementUsage_XmlSerializer"></a>   
## <a name="xaml-property-element-usage"></a>XAML 属性元素用法  
  
```  
<XmlDataProvider>  
  <XmlDataProvider.XmlSerializer>  
    <x:XData>  
       <elementDataRoot>  
          <elementData/>  
       <elementDataRoot>  
    </x:XData>  
  </XmlDataProvider.XmlSerializer>  
</XmlDataProvider>  
--or--  
<XmlDataProvider>  
    <x:XData>  
       <elementDataRoot>  
          <elementData/>  
       <elementDataRoot>  
    </x:XData>  
</XmlDataProvider>  
```  
  
<a name="xamlValues_XmlSerializer"></a>   
## <a name="xaml-values"></a>XAML 值  
 *elementDataRoot*  
 必须的。 包含的数据岛的单个根元素。 如果没有单一根，`x:XData`作为数据源无效。  
  
 *elementData*  
 可选。 表示你的数据的 XML。 可以包含任意数目的元素作为元素数据、 嵌套的元素可包含在其他元素，依此类推，受约束的 XML 的一般规则。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.XmlDataProvider.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DesignerSerializationOptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于生成数据集合的 <see langword="XPath" /> 查询。</summary>
        <value>用于生成数据集合的 <see langword="XPath" /> 查询。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>方法将处理`XPath`表达式从<xref:System.Windows.Data.Binding.XPath%2A>属性。 `XPath` 不支持函数。 有关`XPath`表达式的信息，请参阅<xref:System.Xml.XmlNode.SelectNodes%2A>文档和示例部分中提供一些示例。  
  
 设置以下属性隐式将导致此<xref:System.Windows.Data.XmlDataProvider>若要刷新的对象： <xref:System.Windows.Data.XmlDataProvider.Source%2A>， <xref:System.Windows.Data.XmlDataProvider.Document%2A>， <xref:System.Windows.Data.XmlDataProvider.XmlNamespaceManager%2A>，和<xref:System.Windows.Data.XmlDataProvider.XPath%2A>。 更改多个刷新导致属性，使用时<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建议。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>