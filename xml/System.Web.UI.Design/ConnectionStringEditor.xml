<Type Name="ConnectionStringEditor" FullName="System.Web.UI.Design.ConnectionStringEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f3d97d566a03ff30aa63d3ac154212f01402d245" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30588761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConnectionStringEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnectionStringEditor extends System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ConnectionStringEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class ConnectionStringEditor&#xA;Inherits UITypeEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionStringEditor : System::Drawing::Design::UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为用户界面提供基类，以便在设计时选择和编辑连接字符串属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实例<xref:System.Web.UI.Design.ConnectionStringEditor>类是<xref:System.Drawing.Design.UITypeEditor>以选择并编辑连接字符串表达式，并将该表达式分配到的控件属性可在设计时使用的对象。 例如，<xref:System.Web.UI.WebControls.SqlDataSource>控件使用<xref:System.Web.UI.Design.ConnectionStringEditor>类在设计时设置的值<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>属性。  
  
 使用<xref:System.ComponentModel.EditorAttribute>特性将相关联<xref:System.Web.UI.Design.ConnectionStringEditor>具有属性。 设计器宿主关联的属性在设计图面上编辑，当调用<xref:System.Web.UI.Design.ConnectionStringEditor.EditValue%2A>方法。 <xref:System.Web.UI.Design.ConnectionStringEditor.EditValue%2A>方法会显示用于生成连接字符串表达式的用户界面并返回由用户选择的连接字符串。 <xref:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle%2A>方法指示的用户界面的显示样式。  
  
   
  
## Examples  
 下面的代码示例演示如何关联的实例<xref:System.Web.UI.Design.ConnectionStringEditor>具有自定义控件内包含的属性类。 当在设计图面中，编辑控件属性<xref:System.Web.UI.Design.ConnectionStringEditor>类提供的用户界面，可选择和编辑的属性值的连接字符串。  
  
 [!code-csharp[System.Web.UI.Design.ConnectionStringEditor#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.design.connectionstringeditor/CS/ConnectionStringEditorSample.cs#2)]
 [!code-vb[System.Web.UI.Design.ConnectionStringEditor#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.design.connectionstringeditor/VB/ConnectionStringEditorSample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Design.UITypeEditor" />
    <altmember cref="T:System.Web.UI.Design.ConnectionStringsExpressionEditor" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionStringEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ConnectionStringEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConnectionStringEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EditValue (context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EditValue(System::ComponentModel::ITypeDescriptorContext ^ context, IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">用于获取其他上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="provider">用来获得编辑服务的服务提供程序对象。</param>
        <param name="value">所编辑对象的实例。</param>
        <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
        <returns>所选的连接表达式（作为字符串对象）；否则，如果未选择连接表达式，则为传入的 <paramref name="value" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ConnectionStringEditor.EditValue%2A>方法会启动用于编辑的用户界面`value`对象。 在设计器宿主调用<xref:System.Web.UI.Design.ConnectionStringEditor.EditValue%2A>连接字符串编辑器关联的方法时编辑属性的值。 输入的服务提供程序用于获取所需内的所有编辑服务<xref:System.Web.UI.Design.ConnectionStringEditor.EditValue%2A>方法。  
  
 如果<xref:System.ComponentModel.Design.Data.IDataEnvironment>服务实现支持在指定的上下文中，<xref:System.Web.UI.Design.ConnectionStringEditor.EditValue%2A>方法初始化<xref:System.Web.UI.WebControls.ListBox>控件，它会提示你选择现有连接表达式或生成一个新的连接表达式。 如果<xref:System.ComponentModel.Design.Data.IDataEnvironment>服务实现不支持在指定的上下文中，<xref:System.Web.UI.Design.ConnectionStringEditor.EditValue%2A>方法显示的简单实例<xref:System.Windows.Forms.Form>类，该类将提示你输入连接表达式字符串。  
  
 如果您取消而不选择连接表达式字符串，返回的对象是相同`value`参数。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditStyle (context As ITypeDescriptorContext) As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Design::UITypeEditorEditStyle GetEditStyle(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">用于获取其他上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <summary>返回与指定上下文的连接字符串编辑器关联的编辑样式。</summary>
        <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示所提供的用户界面的编辑样式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，<xref:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle%2A>方法<xref:System.Web.UI.Design.ConnectionStringEditor>类返回<xref:System.Drawing.Design.UITypeEditorEditStyle.Modal>值。 如果<xref:System.ComponentModel.Design.Data.IDataEnvironment>服务实现支持在指定的上下文中，<xref:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle%2A>方法返回<xref:System.Drawing.Design.UITypeEditorEditStyle.DropDown>值。  
  
 如果<xref:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle%2A>方法不支持在指定的上下文中，<xref:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle%2A>方法返回<xref:System.Drawing.Design.UITypeEditorEditStyle.None>值。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ConnectionStringEditor.EditValue" />
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderName">
      <MemberSignature Language="C#" Value="protected virtual string GetProviderName (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetProviderName(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ConnectionStringEditor.GetProviderName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetProviderName (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetProviderName(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 或派生类的实例。</param>
        <summary>返回提供的 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类实例的提供程序名称。</summary>
        <returns>始终为空字符串 ("")。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ConnectionStringEditor.GetProviderName%2A>方法获取的当前实例的提供程序名称<xref:System.Web.UI.Design.ConnectionStringEditor>类。 例如，在<xref:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor>类，该类派生自<xref:System.Web.UI.Design.ConnectionStringEditor>类，<xref:System.Web.UI.Design.ConnectionStringEditor.GetProviderName%2A>方法返回提供程序名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor" />
      </Docs>
    </Member>
    <Member MemberName="SetProviderName">
      <MemberSignature Language="C#" Value="protected virtual void SetProviderName (object instance, System.ComponentModel.Design.Data.DesignerDataConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetProviderName(object instance, class System.ComponentModel.Design.Data.DesignerDataConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetProviderName (instance As Object, connection As DesignerDataConnection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetProviderName(System::Object ^ instance, System::ComponentModel::Design::Data::DesignerDataConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="connection" Type="System.ComponentModel.Design.Data.DesignerDataConnection" />
      </Parameters>
      <Docs>
        <param name="instance">
          <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 或派生类的实例。</param>
        <param name="connection">
          <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />。</param>
        <summary>将提供程序名称放在 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类的指定实例上。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ConnectionStringEditor.SetProviderName%2A>方法上设置的提供程序名称`instance`参数。 例如，在`SqlDataSourceConnectionStringEditor`，它派生自<xref:System.Web.UI.Design.ConnectionStringEditor>类，此设置提供程序名称或者添加<xref:System.Web.UI.ExpressionBinding>对象，如果连接是配置的连接。 在此实现中，<xref:System.Web.UI.Design.ConnectionStringEditor.SetProviderName%2A>方法不执行任何操作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>