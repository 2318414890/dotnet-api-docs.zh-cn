<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpressionEditorSheet.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac500a92c41d6071763aeacc5cf80675a148295e317.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00a92c41d6071763aeacc5cf80675a148295e317</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Represents a design-time editor sheet for a custom expression.</source>
          <target state="translated">表示自定义表达式的设计时编辑器表。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>This class must be inherited.</source>
          <target state="translated">必须继承此类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</source>
          <target state="translated">自定义表达式编辑器表，开发人员使用设置设计时的自定义表达式的属性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</source>
          <target state="translated">可以使用表达式字符串; 设置控件属性值表达式字符串将计算的表达式生成器通过在运行时和设计时表达式编辑器。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you browse the <ph id="ph1">&lt;xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A&gt;</ph> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</source>
          <target state="translated">当您浏览<ph id="ph1">&lt;xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A&gt;</ph>设计时属性网格中的控件的属性，可视化设计器显示一个对话框，设置为的控件属性提供值的表达式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>You can select the expression type based on a list of expression prefixes.</source>
          <target state="translated">你可以选择基于表达式前缀的列表的表达式类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you select an expression prefix from the list, the visual designer uses the associated <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> objects to evaluate and convert the expression string based on the syntax for that type of expression.</source>
          <target state="translated">当从列表中选择表达式前缀时，可视化设计器将使用关联<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph>和<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>对象来计算和转换表达式字符串基于该类型的表达式的语法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</source>
          <target state="translated">可视设计器中使用表达式编辑器表属性为提示输入将合并到自定义表达式字符串的一个或多个字符串。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> implementations.</source>
          <target state="translated">通常情况下，若要在设计时提供新的表达式类型，请定义一个唯一的表达式前缀并提供自定义<ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionBuilder&gt;</ph>和<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Optionally, you can provide a custom <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> implementation that defines properties that are used to form the expression.</source>
          <target state="translated">或者，您可以提供自定义<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>定义用于构成表达式的属性的实现。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>To associate an expression prefix with an expression builder and an expression editor, apply the <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt;</ph> attribute and an <ph id="ph2">&lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt;</ph> attribute to the custom <ph id="ph3">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph> class, and then configure the expression prefix for an expression builder in the <ph id="ph4">`expressionBuilders`</ph> element in the Web configuration file.</source>
          <target state="translated">若要与表达式生成器和一个表达式编辑器相关联的表达式前缀，将应用<ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt;</ph>属性和<ph id="ph2">&lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt;</ph>到自定义属性<ph id="ph3">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph>类，并随后为中的表达式生成器中配置的表达式前缀<ph id="ph4">`expressionBuilders`</ph> Web 配置文件中的元素。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method returns a basic editor sheet, which uses a single input string to form the expression.</source>
          <target state="translated">默认实现<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph>方法返回一个基本编辑器表中，使用单个输入的字符串以形成的表达式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Custom expression editors that are derived from the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> can override the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method to return a custom editor sheet implementation.</source>
          <target state="translated">派生自的自定义表达式编辑器<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph>可以重写<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph>方法以返回表实现的自定义编辑器。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</source>
          <target state="translated">通常情况下，自定义编辑器表包含用于生成表达式字符串的多个属性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method returns the resulting expression string based on the current expression properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph>方法返回基于当前表达式属性生成的表达式字符串。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph>类派生自<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph>类并提供了评估和在设计时将资源字符串引用的控件属性与相关联的实现。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ResourceExpressionBuilder&gt;</ph> class is associated with the expression prefix <ph id="ph2">`Resources`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ResourceExpressionBuilder&gt;</ph>类是与表达式前缀关联<ph id="ph2">`Resources`</ph>和<ph id="ph3">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Web.UI.Design.ResourceExpressionEditorSheet&gt;</ph>, which defines the individual properties that form a resource reference expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Web.UI.Design.ResourceExpressionEditorSheet&gt;</ph>，后者定义了窗体资源引用表达式的各个属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you inherit from the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> class, you must override the following members:</source>
          <target state="translated">继承自<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>类，你必须重写以下成员：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method to return a custom editor sheet implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph>方法以返回表实现的自定义编辑器。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor to implement custom initialization actions for your expression editor sheet implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph>构造函数来实现您的表达式编辑器表实现的自定义初始化操作。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Derive a custom expression editor sheet from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</source>
          <target state="translated">派生的自定义表达式编辑器表从<ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph>类中，如果在定义新的表达式类型的控件属性值，而你想要生成的表达式字符串基于多个表达式属性值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A derived class implementation should contain the following:</source>
          <target state="translated">派生的类实现应包含以下各项：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A public property for each distinct value in the expression string that can be set at design time.</source>
          <target state="translated">可以在设计时设置为表达式字符串中每个相异值一个公共属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>An implementation of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method that forms the custom expression string from the editor sheet property values.</source>
          <target state="translated">实现<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph>窗体编辑器表属性值中的自定义表达式字符串的方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</source>
          <target state="translated">（可选） 设置表属性的编辑器中的初始值构造函数实现。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The associated custom expression editor class creates an instance of the derived editor sheet in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer.</source>
          <target state="translated">关联的自定义表达式编辑器类创建派生的编辑器表中的实例<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph>方法，使用该实例初始化为控件属性设置与当前表达式字符串并返回到可视化设计器的实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method to form the expression string from the input expression sheet property values.</source>
          <target state="translated">可视化设计器允许你设置表属性的表达式，然后调用<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph>方法以便构成的输入的表达式表属性值的表达式字符串。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>A service provider implementation supplied by the designer host, used to obtain additional design-time services.</source>
          <target state="translated">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> class is abstract, you cannot create an instance of an <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> directly using the <ph id="ph3">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>类为抽象类，你无法创建的实例<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>直接使用<ph id="ph3">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>When deriving from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, override the <ph id="ph2">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph> constructor to implement custom initialization actions for your expression editor sheet implementation.</source>
          <target state="translated">从派生时<ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph>类，请替代<ph id="ph2">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph>构造函数来实现您的表达式编辑器表实现的自定义初始化操作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph> constructor.</source>
          <target state="translated">例如，自定义表达式编辑器表类中实现其他表达式属性可以定义中的表达式属性的默认值<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</source>
          <target state="translated">自定义表达式编辑器表类中可以定义使用输入的参数值来设置初始值表达式属性的其他公共构造函数重载。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</source>
          <target state="translated">当在派生类中重写时，返回由表达式编辑器表属性值组成的表达式字符串。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The custom expression string for the current property values.</source>
          <target state="translated">当前属性值的自定义表达式字符串。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</source>
          <target state="translated">自定义表达式编辑器表包含多个表达式的属性，它们合并以形成一个表达式字符串的设计时设置。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</source>
          <target state="translated">可以使用表达式字符串; 设置控件属性值表达式字符串的表达式生成器在运行时计算。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method returns an expression string that is built from the current expression properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph>方法从当前表达式属性返回生成的表达式字符串。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method to get the expression string and set the control property value.</source>
          <target state="translated">可视化设计器允许你设置表属性的表达式，然后调用<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph>方法以获取在表达式字符串并将控件属性值设置。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Derive a custom expression editor sheet from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</source>
          <target state="translated">派生的自定义表达式编辑器表从<ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph>类中，如果在定义新的表达式类型的控件属性值，而你想要生成的表达式字符串基于多个表达式属性值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A derived class implementation should contain the following:</source>
          <target state="translated">派生的类实现应包含以下各项：</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A public property for each distinct value in the expression string that can be set at design time.</source>
          <target state="translated">可以在设计时设置为表达式字符串中每个相异值一个公共属性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>An implementation of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method that forms the custom expression string from the editor sheet property values.</source>
          <target state="translated">实现<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph>窗体编辑器表属性值中的自定义表达式字符串的方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</source>
          <target state="translated">（可选） 设置表属性的编辑器中的初始值构造函数实现。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The associated custom expression editor class creates an instance of the derived editor sheet in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer.</source>
          <target state="translated">关联的自定义表达式编辑器类创建派生的编辑器表中的实例<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph>方法，与为控件属性设置与当前表达式字符串初始化该实例，然后到视觉对象中返回的实例设计器。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method to form the expression string from the input expression sheet property values.</source>
          <target state="translated">可视化设计器允许你设置表属性的表达式，然后调用<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph>方法以便构成的输入的表达式表属性值的表达式字符串。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source>Gets a value that indicates whether the expression string is valid.</source>
          <target state="translated">获取一个值，该值指示表达式字符串是否有效。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the expression string is valid; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果表达式字符串有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source>This base implementation always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">此基实现始终返回 <ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>Gets the service provider implementation that is used by the expression editor sheet.</source>
          <target state="translated">获取表达式编辑器表使用的服务提供程序实现。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>, typically provided by the design host, that can be used to obtain additional design-time services.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>，通常由设计宿主提供，可用于获取其他设计时服务。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor to set the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> implementation for a custom expression editor sheet.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph>构造函数来设置<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph>实现一个自定义表达式编辑器表。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> property can be used to access services that are provided by the designer host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph>属性可以用于访问设计器宿主提供的服务。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>For example, call the <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.Design.IWebApplication&gt;</ph> interface to access project items, documents, or configuration file details that are provided through the visual designer.</source>
          <target state="translated">例如，调用<ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A&gt;</ph>方法替换<ph id="ph2">&lt;xref:System.Web.UI.Design.IWebApplication&gt;</ph>接口访问项目项、 文档或通过可视化设计器提供的配置文件详细信息。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>