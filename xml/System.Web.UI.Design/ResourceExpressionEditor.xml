<Type Name="ResourceExpressionEditor" FullName="System.Web.UI.Design.ResourceExpressionEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c8a364368dda7b1516a21876f28719657df7648" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589011" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于在设计时计算和编辑资源表达式的属性和方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditor>类派生自<xref:System.Web.UI.Design.ExpressionEditor>类并提供了评估和在设计时将资源引用的控件属性与相关联的实现。 例如，你可以将控件属性的值绑定到资源表达式`Resources:submitText`，该值指示控件属性值已设置使用资源名为`submitText`。  
  
 可视化设计器主机，如[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]，使用<xref:System.Web.UI.Design.ResourceExpressionEditor>类来指定资源类、 密钥和资源表达式，设计器的默认值，然后评估设计时呈现的所选的资源表达式。  
  
 当您浏览<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>设计时属性网格中的控件的属性，可视化设计器显示一个对话框来设置控件属性提供的运行时间值的表达式。 你可以选择基于表达式前缀的列表的表达式类型。 当选择**资源**在列表中，可视化设计器使用的表达式前缀<xref:System.Web.UI.Design.ResourceExpressionEditor>方法，以便设置，计算和转换基于资源表达式语法的表达式。 可视化设计器使用该计算的表达式的结果来指定控件在设计图面呈现的属性值。  
  
 基<xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=nameWithType>属性<xref:System.Web.Compilation.ResourceExpressionBuilder>返回字符串`Resources`。 <xref:System.Web.Compilation.ResourceExpressionBuilder>类是与表达式前缀关联`Resources`和<xref:System.Web.UI.Design.ResourceExpressionEditor>实现。  
  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>方法对输入的资源表达式。 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法返回<xref:System.Web.UI.Design.ExpressionEditorSheet>选择资源名称、 类和设计器的默认值，以及从所选的资源的值形成资源表达式使用的实现。  
  
   
  
## Examples  
 下面的代码示例演示如何将绑定<xref:System.Web.UI.WebControls.HyperLink.Text%2A>属性<xref:System.Web.UI.WebControls.HyperLink>控件添加到资源表达式使用<xref:System.Web.UI.Design.ResourceExpressionEditor>类。  
  
1.  在 Web 窗体项目中，添加名 Strings.resx 为 App_LocalResources 目录到新的资源文件。  
  
2.  添加名为 myLinkText 到 Strings.resx 资源文件，并将值设置为的文本<xref:System.Web.UI.WebControls.HyperLink>控件。  
  
     例如，设置`myLinkText`字符串到值`This is a good link`。  
  
3.  在 Web 窗体页中，添加<xref:System.Web.UI.WebControls.HyperLink>控件。  
  
4.  有关`Hyperlink`控件，在属性中，单击**表达式**，然后单击省略号按钮 (**...**).  
  
     `<Hyperlinkname>`**表达式**对话框随即出现。  
  
5.  下**可绑定属性**，单击**文本**，然后在**表达式类型**列表中，输入**资源**。  
  
     通过定义资源表达式属性<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>类会出现。  
  
6.  下**表达式属性**设置**ClassName**到**字符串**，这是编译 Strings.resx 资源文件并设置的类名称**ResourceKey**到**myLinkText**，即 Strings.resx 中的字符串名称。  
  
 可视化设计器使用<xref:System.Web.UI.Design.ResourceExpressionEditor>要分配的资源表达式`Text`属性。 以下的.aspx 源将显示一个属性值，通过使用资源表达式设置的示例。  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.Design.ResourceExpressionEditor>对象配置由连同基类<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>属性设置为`Resources`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">要计算的资源表达式。 <c>expression</c> 不包含 <see langword="Resources" /> 表达式前缀。</param>
        <param name="parseTimeData">一个对象，它以 <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> 值的形式提供附加分析数据。</param>
        <param name="propertyType">控件属性的类型。</param>
        <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
        <summary>计算资源表达式并提供控件属性的设计时值。</summary>
        <returns>如果表达式计算成功，则为由计算的表达式字符串引用的对象；否则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>方法查找由指定的资源`expression`，然后返回该资源。  
  
 可视化设计器使用<xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>方法来计算资源表达式，并为关联的控件提供设计时值。 在运行时，页分析器使用<xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>和<xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A>方法的相应<xref:System.Web.Compilation.ResourceExpressionBuilder>实现来计算表达式，并为关联的控件属性提供的运行时间值。  
  
 可视化设计器使用<xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A>方法，以便分析表达式字符串在设计时，，然后调用<xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>用已分析的表达式数据的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionFields" />
        <altmember cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">一个资源表达式，用于初始化表达式编辑器表。</param>
        <param name="serviceProvider">设计器宿主提供的服务提供程序实现，用于初始化表达式编辑器表。</param>
        <summary>返回使用输入表达式字符串和服务提供程序实现初始化的资源表达式编辑器表。</summary>
        <returns>一个 <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />，定义资源表达式属性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>方法返回一个表达式编辑器资源表达式的表实现。 可视化设计器宿主在其表达式对话框中使用表达式编辑器表。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
  </Members>
</Type>