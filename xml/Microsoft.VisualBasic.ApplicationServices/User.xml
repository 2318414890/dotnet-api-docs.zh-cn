<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f77fd2917800e7f15fa7fb160d23edf74c600a8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36661083" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <TypeSignature Language="F#" Value="type User = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="987a1-101">提供对有关当前用户的信息的访问。</span>
      <span class="sxs-lookup">
        <span data-stu-id="987a1-101">Provides access to the information about the current user.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-102">属性和方法公开的`My.User`对象提供对有关当前用户的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="987a1-102">The properties and methods exposed by the `My.User` object provide access to the information about the current user.</span></span> <span data-ttu-id="987a1-103">Windows 和 Web 应用程序之间，"当前用户"的含义略有不同。</span><span class="sxs-lookup"><span data-stu-id="987a1-103">The meaning of "current user" differs slightly between Windows and Web applications.</span></span> <span data-ttu-id="987a1-104">在 Windows 应用中，当前用户是运行应用程序的用户。</span><span class="sxs-lookup"><span data-stu-id="987a1-104">In a Windows application, the current user is the user who runs the application.</span></span> <span data-ttu-id="987a1-105">在 Web 应用程序中，当前用户是访问该应用程序的用户。</span><span class="sxs-lookup"><span data-stu-id="987a1-105">In a Web application, the current user is the user who accesses the application.</span></span>  
  
 <span data-ttu-id="987a1-106">`My.User`属性还提供对访问<xref:System.Security.Principal.IPrincipal>为当前用户。</span><span class="sxs-lookup"><span data-stu-id="987a1-106">The `My.User` property also provides access to the <xref:System.Security.Principal.IPrincipal> for the current user.</span></span> <span data-ttu-id="987a1-107">主体对象表示用户的安全上下文，包括该用户的标识和用户属于任何角色。</span><span class="sxs-lookup"><span data-stu-id="987a1-107">A principal object represents the user's security context, including that user's identity and any roles to which the user belongs.</span></span>  
  
 <span data-ttu-id="987a1-108">对于 Windows 应用程序，此属性提供相同的功能<xref:System.Threading.Thread.CurrentPrincipal%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="987a1-108">For Windows applications, this property provides the same functionality as the <xref:System.Threading.Thread.CurrentPrincipal%2A> property.</span></span> <span data-ttu-id="987a1-109">对于 Web 应用程序，此属性提供相同的功能<xref:System.Web.HttpContext.User%2A>属性返回的对象<xref:System.Web.HttpContext.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="987a1-109">For Web applications, this property provides the same functionality as the <xref:System.Web.HttpContext.User%2A> property of the object returned by the <xref:System.Web.HttpContext.Current%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987a1-110">对于 Windows 应用程序，只有项目基于**Windows 应用程序**模板初始化`My.User`默认情况下的对象。</span><span class="sxs-lookup"><span data-stu-id="987a1-110">For Windows applications, only projects built on the **Windows Application** template initialize the `My.User` object by default.</span></span> <span data-ttu-id="987a1-111">在所有其他 Windows 项目类型中，你必须初始化`My.User`对象通过调用<xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>方法显式或分配到的值<xref:System.Threading.Thread.CurrentPrincipal%2A>。</span><span class="sxs-lookup"><span data-stu-id="987a1-111">In all other Windows project types, you must initialize the `My.User` object by calling the <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> method explicitly or by assigning a value to <xref:System.Threading.Thread.CurrentPrincipal%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987a1-112">`My.User`对象无法报告有关当前 Windows 用户在 Windows 95 和 Windows 98 下时运行，因为这些操作系统不支持登录的用户的概念的信息。</span><span class="sxs-lookup"><span data-stu-id="987a1-112">The `My.User` object cannot report information about the current Windows user when run under Windows 95 and Windows 98 because those operating systems do not support the concept of a logged-on user.</span></span> <span data-ttu-id="987a1-113">必须实现自定义身份验证用于`My.User`这些操作系统上的对象。</span><span class="sxs-lookup"><span data-stu-id="987a1-113">You must implement custom authentication to use the `My.User` object on those operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="987a1-114">此示例检查是否应用程序正在使用 Windows 或自定义身份验证，并使用该信息来分析`My.User.Name`属性。</span><span class="sxs-lookup"><span data-stu-id="987a1-114">This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="987a1-115">初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-115">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-116">属性和方法公开的`My.User`对象提供对有关当前用户的信息的访问。</span><span class="sxs-lookup"><span data-stu-id="987a1-116">The properties and methods exposed by the `My.User` object provide access to information about the current user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="987a1-117">获取或设置当前主体（对基于角色的安全性而言）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-117">Gets or sets the current principal (for role-based security).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="987a1-118">一个 <see cref="T:System.Security.Principal.IPrincipal" /> 值，表示安全上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-118">A <see cref="T:System.Security.Principal.IPrincipal" /> value representing the security context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-119">你可以设置`My.User.CurrentPrincipal`实现的对象属性<xref:System.Security.Principal.IPrincipal>界面，以启用自定义身份验证。</span><span class="sxs-lookup"><span data-stu-id="987a1-119">You can set the `My.User.CurrentPrincipal` property to an object that implements the <xref:System.Security.Principal.IPrincipal> interface to enable custom authentication.</span></span>  
  
 <span data-ttu-id="987a1-120">在大多数项目类型中，此属性获取和设置线程的当前负责人。</span><span class="sxs-lookup"><span data-stu-id="987a1-120">In most project types, this property gets and sets the thread's current principal.</span></span> <span data-ttu-id="987a1-121">在 ASP.NET 应用程序，此属性会获取和设置当前 HTTP 请求的用户标识的安全信息。</span><span class="sxs-lookup"><span data-stu-id="987a1-121">In an ASP.NET application, this property gets and sets the security information for the current HTTP request's user identity.</span></span>  
  
 <span data-ttu-id="987a1-122">这是一个高级的成员;除非你单击不显示在 IntelliSense 中**所有**选项卡。</span><span class="sxs-lookup"><span data-stu-id="987a1-122">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="987a1-123">项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="987a1-123">Availability by Project Type</span></span>  
  
|<span data-ttu-id="987a1-124">项目类型</span><span class="sxs-lookup"><span data-stu-id="987a1-124">Project type</span></span>|<span data-ttu-id="987a1-125">可用</span><span class="sxs-lookup"><span data-stu-id="987a1-125">Available</span></span>|  
|-|-|  
|<span data-ttu-id="987a1-126">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-126">Windows Application</span></span>|<span data-ttu-id="987a1-127">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-127">**Yes**</span></span>|  
|<span data-ttu-id="987a1-128">类库</span><span class="sxs-lookup"><span data-stu-id="987a1-128">Class Library</span></span>|<span data-ttu-id="987a1-129">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-129">**Yes**</span></span>|  
|<span data-ttu-id="987a1-130">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-130">Console Application</span></span>|<span data-ttu-id="987a1-131">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-131">**Yes**</span></span>|  
|<span data-ttu-id="987a1-132">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-132">Windows Control Library</span></span>|<span data-ttu-id="987a1-133">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-133">**Yes**</span></span>|  
|<span data-ttu-id="987a1-134">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-134">Web Control Library</span></span>|<span data-ttu-id="987a1-135">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-135">**Yes**</span></span>|  
|<span data-ttu-id="987a1-136">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="987a1-136">Windows Service</span></span>|<span data-ttu-id="987a1-137">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-137">**Yes**</span></span>|  
|<span data-ttu-id="987a1-138">网站</span><span class="sxs-lookup"><span data-stu-id="987a1-138">Web Site</span></span>|<span data-ttu-id="987a1-139">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-139">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="987a1-140">此示例检查是否应用程序正在使用 Windows 或自定义身份验证，并使用该信息来分析`My.User.Name`属性。</span><span class="sxs-lookup"><span data-stu-id="987a1-140">This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="987a1-141">调用方没有设置该主体所需的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-141">The caller does not have the permission required to set the principal.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="987a1-142">描述一组应用于代码的安全权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-142">Describes a set of security permissions applied to code.</span>
          </span>
          <span data-ttu-id="987a1-143">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-143">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberSignature Language="F#" Value="member this.InitializeWithWindowsUser : unit -&gt; unit" Usage="user.InitializeWithWindowsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="987a1-144">将线程的当前主体设置为启动应用程序的 Windows 用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-144">Sets the thread's current principal to the Windows user that started the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-145">你可以使用`My.User.InitializeWithWindowsUser`方法以向 Windows 用户启动了应用程序中设置线程的当前负责人。</span><span class="sxs-lookup"><span data-stu-id="987a1-145">You can use the `My.User.InitializeWithWindowsUser` method to set the thread's current principal to the Windows user that started the application.</span></span> <span data-ttu-id="987a1-146">Windows 应用程序中的 Visual Basic 应用程序模型默认情况下，在启动时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="987a1-146">The Visual Basic Application Model in a Windows application calls this method at startup by default.</span></span> <span data-ttu-id="987a1-147">在其他项目类型，你必须设置线程的当前主体，通过显式调用此方法或分配到的值<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="987a1-147">In other project types, you must set the thread's current principal by calling this method explicitly or by assigning a value to <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="987a1-148">在 Windows 项目中，`My.User`对象基于线程的当前负责人; 因此，此方法可以更改的信息`My.User`返回。</span><span class="sxs-lookup"><span data-stu-id="987a1-148">In Windows projects, the `My.User` object is based on the thread's current principal; therefore, this method can change the information `My.User` returns.</span></span> <span data-ttu-id="987a1-149">ASP.NET 应用程序中`My.User`对象基于当前 HTTP 请求的用户标识，并且不受此方法。</span><span class="sxs-lookup"><span data-stu-id="987a1-149">In an ASP.NET application, the `My.User` object is based on the current HTTP request's user identity, and is unaffected by this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987a1-150">具体的行为的`My.User`对象取决于应用程序的类型和应用程序在其运行的操作系统。</span><span class="sxs-lookup"><span data-stu-id="987a1-150">The exact behavior of the `My.User` object depends on the type of application and on the operating system on which the application runs.</span></span> <span data-ttu-id="987a1-151">有关详细信息，请参阅<xref:Microsoft.VisualBasic.ApplicationServices.User>类概述。</span><span class="sxs-lookup"><span data-stu-id="987a1-151">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
 <span data-ttu-id="987a1-152">这是一个高级的成员;除非你单击不显示在 IntelliSense 中**所有**选项卡。</span><span class="sxs-lookup"><span data-stu-id="987a1-152">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="987a1-153">项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="987a1-153">Availability by Project Type</span></span>  
  
|<span data-ttu-id="987a1-154">项目类型</span><span class="sxs-lookup"><span data-stu-id="987a1-154">Project type</span></span>|<span data-ttu-id="987a1-155">可用</span><span class="sxs-lookup"><span data-stu-id="987a1-155">Available</span></span>|  
|-|-|  
|<span data-ttu-id="987a1-156">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-156">Windows Application</span></span>|<span data-ttu-id="987a1-157">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-157">**Yes**</span></span>|  
|<span data-ttu-id="987a1-158">类库</span><span class="sxs-lookup"><span data-stu-id="987a1-158">Class Library</span></span>|<span data-ttu-id="987a1-159">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-159">**Yes**</span></span>|  
|<span data-ttu-id="987a1-160">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-160">Console Application</span></span>|<span data-ttu-id="987a1-161">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-161">**Yes**</span></span>|  
|<span data-ttu-id="987a1-162">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-162">Windows Control Library</span></span>|<span data-ttu-id="987a1-163">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-163">**Yes**</span></span>|  
|<span data-ttu-id="987a1-164">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-164">Web Control Library</span></span>|<span data-ttu-id="987a1-165">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-165">**Yes**</span></span>|  
|<span data-ttu-id="987a1-166">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="987a1-166">Windows Service</span></span>|<span data-ttu-id="987a1-167">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-167">**Yes**</span></span>|  
|<span data-ttu-id="987a1-168">网站</span><span class="sxs-lookup"><span data-stu-id="987a1-168">Web Site</span></span>|<span data-ttu-id="987a1-169">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-169">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="987a1-170">描述一组应用于代码的安全权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-170">Describes a set of security permissions applied to code.</span>
          </span>
          <span data-ttu-id="987a1-171">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-171">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="987a1-172">获取或设置表示当前用户的主体对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-172">Gets or sets the principal object representing the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="987a1-173">一个表示当前用户的 <see cref="T:System.Security.Principal.IPrincipal" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-173">An <see cref="T:System.Security.Principal.IPrincipal" /> object representing the current user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-174">在<xref:Microsoft.VisualBasic.ApplicationServices.User>对象中，此属性包装<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="987a1-174">In the <xref:Microsoft.VisualBasic.ApplicationServices.User> object, this property wraps the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="987a1-175">重写此方法在派生类来提供不同的行为。</span><span class="sxs-lookup"><span data-stu-id="987a1-175">Override this method in a derived class to provide different behavior.</span></span> <span data-ttu-id="987a1-176">例如，<xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType>属性重写此属性。</span><span class="sxs-lookup"><span data-stu-id="987a1-176">For example, the <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> property overrides this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="987a1-177">获取一个值，该值指示是否验证了用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-177">Gets a value that indicates whether the user has been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="987a1-178">如果用户已经过验证，则为 <see langword="True" />；否则为 <see langword="False" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-178">
              <see langword="True" /> if the user was authenticated; otherwise, <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-179">`My.User.IsAuthenticated`属性允许你的代码以确定当前用户已经过身份验证。</span><span class="sxs-lookup"><span data-stu-id="987a1-179">The `My.User.IsAuthenticated` property allows your code to determine if the current user has been authenticated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987a1-180">具体的行为的`My.User`对象取决于应用程序的类型和应用程序在其运行的操作系统。</span><span class="sxs-lookup"><span data-stu-id="987a1-180">The exact behavior of `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="987a1-181">有关详细信息，请参阅<xref:Microsoft.VisualBasic.ApplicationServices.User>类概述。</span><span class="sxs-lookup"><span data-stu-id="987a1-181">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="987a1-182">项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="987a1-182">Availability by Project Type</span></span>  
  
|<span data-ttu-id="987a1-183">项目类型</span><span class="sxs-lookup"><span data-stu-id="987a1-183">Project type</span></span>|<span data-ttu-id="987a1-184">可用</span><span class="sxs-lookup"><span data-stu-id="987a1-184">Available</span></span>|  
|-|-|  
|<span data-ttu-id="987a1-185">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-185">Windows Application</span></span>|<span data-ttu-id="987a1-186">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-186">**Yes**</span></span>|  
|<span data-ttu-id="987a1-187">类库</span><span class="sxs-lookup"><span data-stu-id="987a1-187">Class Library</span></span>|<span data-ttu-id="987a1-188">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-188">**Yes**</span></span>|  
|<span data-ttu-id="987a1-189">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-189">Console Application</span></span>|<span data-ttu-id="987a1-190">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-190">**Yes**</span></span>|  
|<span data-ttu-id="987a1-191">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-191">Windows Control Library</span></span>|<span data-ttu-id="987a1-192">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-192">**Yes**</span></span>|  
|<span data-ttu-id="987a1-193">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-193">Web Control Library</span></span>|<span data-ttu-id="987a1-194">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-194">**Yes**</span></span>|  
|<span data-ttu-id="987a1-195">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="987a1-195">Windows Service</span></span>|<span data-ttu-id="987a1-196">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-196">**Yes**</span></span>|  
|<span data-ttu-id="987a1-197">网站</span><span class="sxs-lookup"><span data-stu-id="987a1-197">Web Site</span></span>|<span data-ttu-id="987a1-198">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-198">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="987a1-199">此示例验证已经过用户身份验证访问资源之前。</span><span class="sxs-lookup"><span data-stu-id="987a1-199">This example verifies that the user has been authenticated before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="987a1-200">描述一组应用于代码的安全权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-200">Describes a set of security permissions applied to code.</span>
          </span>
          <span data-ttu-id="987a1-201">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-201">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="987a1-202">确定当前用户是否属于指定的角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-202">Determines whether the current user belongs to the specified role.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : Microsoft.VisualBasic.ApplicationServices.BuiltInRole -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role">
          <span data-ttu-id="987a1-203">要检查其成员资格的内置 Windows 角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-203">The built-in Windows role for which to check membership.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="987a1-204">确定当前用户是否属于指定的角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-204">Determines whether the current user belongs to the specified role.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="987a1-205">如果当前用户是指定角色的成员，则为 <see langword="True" />；否则为 <see langword="False" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-205">
              <see langword="True" /> if the current user is a member of the specified role; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-206">`My.User.IsInRole`方法允许你的代码以确定当前用户是否指定角色的成员。</span><span class="sxs-lookup"><span data-stu-id="987a1-206">The `My.User.IsInRole` method allows your code to determine if the current user is a member of the specified role.</span></span>  
  
 <span data-ttu-id="987a1-207">重载`My.User.IsInRole`采用字符串的方法提供轻松访问<xref:System.Security.Principal.IPrincipal.IsInRole%2A>的当前主体的方法。</span><span class="sxs-lookup"><span data-stu-id="987a1-207">The overload of the `My.User.IsInRole` method that takes a string provides easy access to the <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method of the current principal.</span></span>  
  
 <span data-ttu-id="987a1-208">重载`My.User.IsInRole`采用的方法`BuiltInRole`枚举的行为不同，具体取决于当前的主体。</span><span class="sxs-lookup"><span data-stu-id="987a1-208">The overload of the `My.User.IsInRole` method that takes a `BuiltInRole` enumeration behaves differently, depending on the current principal.</span></span> <span data-ttu-id="987a1-209">如果它是一个 Windows 用户主体 (<xref:System.Security.Principal.WindowsPrincipal>)，此函数将转换`role`为等效<xref:System.Security.Principal.WindowsBuiltInRole>枚举并返回调用的结果<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>。</span><span class="sxs-lookup"><span data-stu-id="987a1-209">If it is a Windows user principal (<xref:System.Security.Principal.WindowsPrincipal>), this function converts `role` to the equivalent <xref:System.Security.Principal.WindowsBuiltInRole> enumeration and returns the result of calling <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</span></span> <span data-ttu-id="987a1-210">如果当前的主体是任何其他主体，此函数将传递中的枚举值的名称`role`给该主体的<xref:System.Security.Principal.IPrincipal.IsInRole%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="987a1-210">If the current principal is any other principal, this function passes the name of the enumeration value in `role` to the principal's <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987a1-211">具体的行为的`My.User`对象取决于应用程序的类型和应用程序在其运行的操作系统。</span><span class="sxs-lookup"><span data-stu-id="987a1-211">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="987a1-212">有关详细信息，请参阅<xref:Microsoft.VisualBasic.ApplicationServices.User>类概述。</span><span class="sxs-lookup"><span data-stu-id="987a1-212">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="987a1-213">项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="987a1-213">Availability by Project Type</span></span>  
  
|<span data-ttu-id="987a1-214">项目类型</span><span class="sxs-lookup"><span data-stu-id="987a1-214">Project type</span></span>|<span data-ttu-id="987a1-215">可用</span><span class="sxs-lookup"><span data-stu-id="987a1-215">Available</span></span>|  
|-|-|  
|<span data-ttu-id="987a1-216">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-216">Windows Application</span></span>|<span data-ttu-id="987a1-217">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-217">**Yes**</span></span>|  
|<span data-ttu-id="987a1-218">类库</span><span class="sxs-lookup"><span data-stu-id="987a1-218">Class Library</span></span>|<span data-ttu-id="987a1-219">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-219">**Yes**</span></span>|  
|<span data-ttu-id="987a1-220">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-220">Console Application</span></span>|<span data-ttu-id="987a1-221">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-221">**Yes**</span></span>|  
|<span data-ttu-id="987a1-222">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-222">Windows Control Library</span></span>|<span data-ttu-id="987a1-223">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-223">**Yes**</span></span>|  
|<span data-ttu-id="987a1-224">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-224">Web Control Library</span></span>|<span data-ttu-id="987a1-225">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-225">**Yes**</span></span>|  
|<span data-ttu-id="987a1-226">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="987a1-226">Windows Service</span></span>|<span data-ttu-id="987a1-227">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-227">**Yes**</span></span>|  
|<span data-ttu-id="987a1-228">网站</span><span class="sxs-lookup"><span data-stu-id="987a1-228">Web Site</span></span>|<span data-ttu-id="987a1-229">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-229">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="987a1-230">此示例检查用户是否是管理员在访问资源之前。</span><span class="sxs-lookup"><span data-stu-id="987a1-230">This example checks if the user is an administrator before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="987a1-231">描述一组应用于代码的安全权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-231">Describes a set of security permissions applied to code.</span>
          </span>
          <span data-ttu-id="987a1-232">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-232">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : string -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">
          <span data-ttu-id="987a1-233">要检查其成员资格的角色的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-233">The name of the role for which to check membership.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="987a1-234">确定当前用户是否属于指定的角色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-234">Determines whether the current user belongs to the specified role.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="987a1-235">如果当前用户是指定角色的成员，则为 <see langword="True" />；否则为 <see langword="False" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-235">
              <see langword="True" /> if the current user is a member of the specified role; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-236">`My.User.IsInRole`方法允许你的代码以确定当前用户是否指定角色的成员。</span><span class="sxs-lookup"><span data-stu-id="987a1-236">The `My.User.IsInRole` method allows your code to determine if the current user is a member of the specified role.</span></span>  
  
 <span data-ttu-id="987a1-237">重载`My.User.IsInRole`采用字符串的方法提供轻松访问<xref:System.Security.Principal.IPrincipal.IsInRole%2A>的当前主体的方法。</span><span class="sxs-lookup"><span data-stu-id="987a1-237">The overload of the `My.User.IsInRole` method that takes a string provides easy access to the <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method of the current principal.</span></span>  
  
 <span data-ttu-id="987a1-238">重载`My.User.IsInRole`采用的方法`BuiltInRole`枚举的行为不同，具体取决于当前的主体。</span><span class="sxs-lookup"><span data-stu-id="987a1-238">The overload of the `My.User.IsInRole` method that takes a `BuiltInRole` enumeration behaves differently, depending on the current principal.</span></span> <span data-ttu-id="987a1-239">如果它是一个 Windows 用户主体 (<xref:System.Security.Principal.WindowsPrincipal>)，此函数将转换`role`为等效<xref:System.Security.Principal.WindowsBuiltInRole>枚举并返回调用的结果<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>。</span><span class="sxs-lookup"><span data-stu-id="987a1-239">If it is a Windows user principal (<xref:System.Security.Principal.WindowsPrincipal>), this function converts `role` to the equivalent <xref:System.Security.Principal.WindowsBuiltInRole> enumeration and returns the result of calling <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</span></span> <span data-ttu-id="987a1-240">如果当前的主体是任何其他主体，此函数将传递中的枚举值的名称`role`给该主体的<xref:System.Security.Principal.IPrincipal.IsInRole%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="987a1-240">If the current principal is any other principal, this function passes the name of the enumeration value in `role` to the principal's <xref:System.Security.Principal.IPrincipal.IsInRole%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987a1-241">具体的行为的`My.User`对象取决于应用程序的类型和应用程序在其运行的操作系统。</span><span class="sxs-lookup"><span data-stu-id="987a1-241">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="987a1-242">有关详细信息，请参阅<xref:Microsoft.VisualBasic.ApplicationServices.User>类概述。</span><span class="sxs-lookup"><span data-stu-id="987a1-242">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="987a1-243">项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="987a1-243">Availability by Project Type</span></span>  
  
|<span data-ttu-id="987a1-244">项目类型</span><span class="sxs-lookup"><span data-stu-id="987a1-244">Project type</span></span>|<span data-ttu-id="987a1-245">可用</span><span class="sxs-lookup"><span data-stu-id="987a1-245">Available</span></span>|  
|-|-|  
|<span data-ttu-id="987a1-246">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-246">Windows Application</span></span>|<span data-ttu-id="987a1-247">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-247">**Yes**</span></span>|  
|<span data-ttu-id="987a1-248">类库</span><span class="sxs-lookup"><span data-stu-id="987a1-248">Class Library</span></span>|<span data-ttu-id="987a1-249">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-249">**Yes**</span></span>|  
|<span data-ttu-id="987a1-250">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-250">Console Application</span></span>|<span data-ttu-id="987a1-251">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-251">**Yes**</span></span>|  
|<span data-ttu-id="987a1-252">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-252">Windows Control Library</span></span>|<span data-ttu-id="987a1-253">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-253">**Yes**</span></span>|  
|<span data-ttu-id="987a1-254">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-254">Web Control Library</span></span>|<span data-ttu-id="987a1-255">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-255">**Yes**</span></span>|  
|<span data-ttu-id="987a1-256">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="987a1-256">Windows Service</span></span>|<span data-ttu-id="987a1-257">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-257">**Yes**</span></span>|  
|<span data-ttu-id="987a1-258">网站</span><span class="sxs-lookup"><span data-stu-id="987a1-258">Web Site</span></span>|<span data-ttu-id="987a1-259">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-259">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="987a1-260">此示例检查用户是否是管理员在访问资源之前。</span><span class="sxs-lookup"><span data-stu-id="987a1-260">This example checks if the user is an administrator before accessing a resource.</span></span>  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="987a1-261">描述一组应用于代码的安全权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-261">Describes a set of security permissions applied to code.</span>
          </span>
          <span data-ttu-id="987a1-262">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-262">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="987a1-263">获取当前用户的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-263">Gets the name of the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="987a1-264">
            <see langword="String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-264">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="987a1-265">当前用户的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-265">The name of the current user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987a1-266">你可以使用`My.User`对象以获取有关当前用户的信息。</span><span class="sxs-lookup"><span data-stu-id="987a1-266">You can use the `My.User` object to get information about the current user.</span></span>  
  
 <span data-ttu-id="987a1-267">用户进行身份验证的主体还控制的用户名称的格式。</span><span class="sxs-lookup"><span data-stu-id="987a1-267">The principal that authenticates the user also controls the format of the user name.</span></span> <span data-ttu-id="987a1-268">默认情况下，应用程序使用 Windows 身份验证，并且用户名称域 \ 用户名格式。</span><span class="sxs-lookup"><span data-stu-id="987a1-268">By default, an application uses Windows authentication, and the user name has the format DOMAIN\USERNAME.</span></span> <span data-ttu-id="987a1-269">主体的自定义实现不一定使用相同的格式。</span><span class="sxs-lookup"><span data-stu-id="987a1-269">A custom implementation of the principal does not necessarily use the same format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987a1-270">`My.User.Name`属性返回一个空字符串，当运行在 Windows 95 和 Windows 98，因为这些操作系统不能识别用户名。</span><span class="sxs-lookup"><span data-stu-id="987a1-270">The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987a1-271">具体的行为的`My.User`对象取决于应用程序的类型和应用程序在其运行的操作系统。</span><span class="sxs-lookup"><span data-stu-id="987a1-271">The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs.</span></span> <span data-ttu-id="987a1-272">有关详细信息，请参阅<xref:Microsoft.VisualBasic.ApplicationServices.User>类概述。</span><span class="sxs-lookup"><span data-stu-id="987a1-272">For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="987a1-273">项目类型的可用性</span><span class="sxs-lookup"><span data-stu-id="987a1-273">Availability by Project Type</span></span>  
  
|<span data-ttu-id="987a1-274">项目类型</span><span class="sxs-lookup"><span data-stu-id="987a1-274">Project type</span></span>|<span data-ttu-id="987a1-275">可用</span><span class="sxs-lookup"><span data-stu-id="987a1-275">Available</span></span>|  
|-|-|  
|<span data-ttu-id="987a1-276">Windows 应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-276">Windows Application</span></span>|<span data-ttu-id="987a1-277">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-277">**Yes**</span></span>|  
|<span data-ttu-id="987a1-278">类库</span><span class="sxs-lookup"><span data-stu-id="987a1-278">Class Library</span></span>|<span data-ttu-id="987a1-279">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-279">**Yes**</span></span>|  
|<span data-ttu-id="987a1-280">控制台应用程序</span><span class="sxs-lookup"><span data-stu-id="987a1-280">Console Application</span></span>|<span data-ttu-id="987a1-281">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-281">**Yes**</span></span>|  
|<span data-ttu-id="987a1-282">Windows 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-282">Windows Control Library</span></span>|<span data-ttu-id="987a1-283">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-283">**Yes**</span></span>|  
|<span data-ttu-id="987a1-284">Web 控件库</span><span class="sxs-lookup"><span data-stu-id="987a1-284">Web Control Library</span></span>|<span data-ttu-id="987a1-285">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-285">**Yes**</span></span>|  
|<span data-ttu-id="987a1-286">Windows 服务</span><span class="sxs-lookup"><span data-stu-id="987a1-286">Windows Service</span></span>|<span data-ttu-id="987a1-287">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-287">**Yes**</span></span>|  
|<span data-ttu-id="987a1-288">网站</span><span class="sxs-lookup"><span data-stu-id="987a1-288">Web Site</span></span>|<span data-ttu-id="987a1-289">**是**</span><span class="sxs-lookup"><span data-stu-id="987a1-289">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="987a1-290">此示例检查是否应用程序正在使用 Windows 或自定义身份验证，并使用该信息来分析`My.User.Name`属性。</span><span class="sxs-lookup"><span data-stu-id="987a1-290">This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.</span></span>  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="987a1-291">描述一组应用于代码的安全权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-291">Describes a set of security permissions applied to code.</span>
          </span>
          <span data-ttu-id="987a1-292">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="987a1-292">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>