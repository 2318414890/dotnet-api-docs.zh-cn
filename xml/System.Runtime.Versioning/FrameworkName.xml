<Type Name="FrameworkName" FullName="System.Runtime.Versioning.FrameworkName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4cf83d6486d25596a3207fc7ee550e73052d463" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52352733" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FrameworkName : IEquatable&lt;System.Runtime.Versioning.FrameworkName&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FrameworkName extends System.Object implements class System.IEquatable`1&lt;class System.Runtime.Versioning.FrameworkName&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.FrameworkName" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FrameworkName&#xA;Implements IEquatable(Of FrameworkName)" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkName sealed : IEquatable&lt;System::Runtime::Versioning::FrameworkName ^&gt;" />
  <TypeSignature Language="F#" Value="type FrameworkName = class&#xA;    interface IEquatable&lt;FrameworkName&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Runtime.Versioning.FrameworkName&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 .NET Framework 的版本名称。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkName (string frameworkName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string frameworkName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (frameworkName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkName(System::String ^ frameworkName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.FrameworkName : string -&gt; System.Runtime.Versioning.FrameworkName" Usage="new System.Runtime.Versioning.FrameworkName frameworkName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frameworkName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="frameworkName">包含 .NET Framework 版本信息的字符串。</param>
        <summary>从包含 .NET Framework 版本信息的字符串初始化 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29>构造函数将解析采用以下格式的字符串。  
  
 *标识符*，版本 =*versionNumber*[，配置文件 =*profileName*]  
  
 用方括号括起来的组件是可选的。 下表描述了每个组件。  
  
|组件|描述|  
|---------------|-----------------|  
|*identifier*|任意字符串，用于标识此<xref:System.Runtime.Versioning.FrameworkName>实例。|  
|*versionNumber*|一个字符串，表示版本的.NET Framework 中，在窗体 [v]*主要*。*次要*[。*构建*。*修订*]，其中"v"可以是大写或小写字母，而括号表示可选元素的版本号。|  
|*profileName*|表示.NET Framework 版本的配置文件的任意字符串。 通常情况下，它用于表示.NET Framework 中，如.NET Compact Framework 或 Silverlight 的一些子集。|  
  
 如果这两个*versionNumber*并*profileName*是否存在，它们可以按任何顺序后出现*标识符*。 这些字符串定义由"版本"和"配置文件"关键字，不区分大小写。  
  
 值*标识符*， *versionNumber*，并*profileName*组件定义此值<xref:System.Runtime.Versioning.FrameworkName>对象的属性，如下所示：  
  
-   中的任何前导或尾随空白*标识符*删除组件和生成的字符串分配给<xref:System.Runtime.Versioning.FrameworkName.Identifier%2A>属性。  
  
-   任何前导或尾随空格和初始"v"或"V"，如果存在，则从中移除`versionNumber`。 然后将返回的字符串传递给<xref:System.Version.%23ctor%28System.String%29?displayProperty=nameWithType>构造函数，并生成<xref:System.Version?displayProperty=nameWithType>对象分配给<xref:System.Runtime.Versioning.FrameworkName.Version%2A>属性。  
  
-   中的任何前导或尾随空白`profileName`删除组件和生成的字符串分配给<xref:System.Runtime.Versioning.FrameworkName.Profile%2A>属性。  
  
 下面的示例的有效字符串，可传递给<xref:System.Runtime.Versioning.FrameworkName.%23ctor%2A>构造函数：  
  
-   .NET framework，版本 = 4.0  
  
-   .NETFramework，版本 = 4.0  
  
-   .NET framework，版本 = 2.0 中，配置文件 = Compact  
  
-   .NET framework，版本 = v4.0，Profile = Compact  
  
-   .NET framework 中，配置文件 = 完整，版本 = 2.0.0  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="frameworkName" /> 为 <see cref="F:System.String.Empty" />。  
  
或 
 <paramref name="frameworkName" /> 有少于两个组件或多于三个组件。  
  
或 
 <paramref name="frameworkName" /> 中未包括主要版本号和次要版本号。  
  
或 
 <paramref name="frameworkName" /> 中未包括有效版本号。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="frameworkName" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkName (string identifier, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identifier, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkName(System::String ^ identifier, Version ^ version);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.FrameworkName : string * Version -&gt; System.Runtime.Versioning.FrameworkName" Usage="new System.Runtime.Versioning.FrameworkName (identifier, version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="identifier">标识 .NET Framework 版本的字符串。</param>
        <param name="version">包含 .NET Framework 版本信息的对象。</param>
        <summary>从标识 .NET Framework 版本的字符串和 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象初始化 <see cref="T:System.Version" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.FrameworkName>类需要<xref:System.Runtime.Versioning.FrameworkName.Version%2A>对象包括至少一个主版本号和次版本号。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="identifier" /> 为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identifier" /> 为 <see langword="null" />。  
  
或 
 <paramref name="version" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkName (string identifier, Version version, string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identifier, class System.Version version, string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkName(System::String ^ identifier, Version ^ version, System::String ^ profile);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.FrameworkName : string * Version * string -&gt; System.Runtime.Versioning.FrameworkName" Usage="new System.Runtime.Versioning.FrameworkName (identifier, version, profile)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">标识 .NET Framework 版本的字符串。</param>
        <param name="version">包含 .NET Framework 版本信息的对象。</param>
        <param name="profile">配置文件名称。</param>
        <summary>从字符串、标识 .NET Framework 版本的 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象以及配置文件名称初始化 <see cref="T:System.Version" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.FrameworkName>类需要<xref:System.Runtime.Versioning.FrameworkName.Version%2A>对象包括至少一个主版本号和次版本号。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="identifier" /> 为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identifier" /> 为 <see langword="null" />。  
  
或 
 <paramref name="version" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回一个值，该值指示此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 实例是否表示与指定的对象或 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 实例相同的 Framework 版本。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="frameworkName.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要与当前类型进行比较的对象。</param>
        <summary>返回一个值，该值指示此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 实例是否表示与指定的对象相同的 .NET Framework 版本。</summary>
        <returns>如果当前 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的每个部分都与 <paramref name="obj" /> 的相应部分匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该方法将`obj`到<xref:System.Runtime.Versioning.FrameworkName>对象并调用<xref:System.Runtime.Versioning.FrameworkName.Equals%28System.Runtime.Versioning.FrameworkName%29?displayProperty=nameWithType>重载来测试相等性。 如果转换不成功，或如果`obj`是`null`，该方法将返回`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Runtime.Versioning.FrameworkName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Runtime.Versioning.FrameworkName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.Equals(System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Runtime::Versioning::FrameworkName ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="frameworkName.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="other">要与当前类型进行比较的对象。</param>
        <summary>返回一个值，该值指示此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 实例是否表示与指定的 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 实例相同的 .NET Framework 版本。</summary>
        <returns>如果当前 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的每个部分都与 <paramref name="other" /> 的相应部分匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过返回的以下比较结果相等性测试方法：  
  
-   序号比较<xref:System.Runtime.Versioning.FrameworkName.Identifier%2A>当前实例的属性值和`other`。  
  
-   序号比较<xref:System.Runtime.Versioning.FrameworkName.Profile%2A>当前实例的属性值和`other`。  
  
-   通过调用的版本属性的比较<xref:System.Version.Equals%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.FrameworkName.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Runtime.Versioning.FrameworkName.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的全名。</summary>
        <value>此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的全名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的字符串<xref:System.Runtime.Versioning.FrameworkName.FullName%2A>属性采用以下格式：  
  
 *标识符*，版本 =*版本*[，配置文件 =*配置文件*]  
  
 其中*标识符*对应于<xref:System.Runtime.Versioning.FrameworkName.Identifier%2A>属性，`version`等效于调用<xref:System.Version.ToString%2A?displayProperty=nameWithType>的值<xref:System.Runtime.Versioning.FrameworkName.Version%2A>属性，以及`profile`对应于<xref:System.Runtime.Versioning.FrameworkName.Profile%2A>属性。 如果一个配置文件未分配给<xref:System.Runtime.Versioning.FrameworkName>对象，该配置文件组件不包括在字符串中。  
  
 值<xref:System.Runtime.Versioning.FrameworkName.FullName%2A>属性等同于返回的字符串<xref:System.Runtime.Versioning.FrameworkName.ToString%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="frameworkName.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的哈希代码。</summary>
        <returns>一个 32 位带符号整数，表示此实例的哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public string Identifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identifier" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.FrameworkName.Identifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identifier As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Identifier { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identifier : string" Usage="System.Runtime.Versioning.FrameworkName.Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的标识符。</summary>
        <value>此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只读的值<xref:System.Runtime.Versioning.FrameworkName.Identifier%2A>属性中设置<xref:System.Runtime.Versioning.FrameworkName.%23ctor%2A>类构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Runtime.Versioning.FrameworkName left, System.Runtime.Versioning.FrameworkName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Runtime.Versioning.FrameworkName left, class System.Runtime.Versioning.FrameworkName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.op_Equality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As FrameworkName, right As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Runtime::Versioning::FrameworkName ^ left, System::Runtime::Versioning::FrameworkName ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Runtime.Versioning.FrameworkName * System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Versioning.FrameworkName" />
        <Parameter Name="right" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="left">要比较的第一个对象。</param>
        <param name="right">要比较的第二个对象。</param>
        <summary>返回一个值，该值指示两个 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象是否表示相同的 .NET Framework 版本。</summary>
        <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 参数表示相同的 .NET Framework 版本，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.FrameworkName.op_Equality%2A>方法定义的相等运算符的运算<xref:System.Runtime.Versioning.FrameworkName>对象。  
  
 不支持自定义的运算符的语言可以调用<xref:System.Runtime.Versioning.FrameworkName.Equals%28System.Runtime.Versioning.FrameworkName%29?displayProperty=nameWithType>方法相反。  
  
   
  
## Examples  
 下面的示例使用相等运算符以确定是否<xref:System.Runtime.Versioning.FrameworkName>表示正在运行的.NET Framework 版本的对象是否等于支持的.NET Framework 版本。 请注意，两个版本不相等因为它们不具有相同的版本号。  
  
 [!code-csharp[System.Runtime.Versioning.FrameworkName.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.frameworkname.operators/cs/Operators1.cs#1)]
 [!code-vb[System.Runtime.Versioning.FrameworkName.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.frameworkname.operators/vb/Operators1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Runtime.Versioning.FrameworkName left, System.Runtime.Versioning.FrameworkName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Runtime.Versioning.FrameworkName left, class System.Runtime.Versioning.FrameworkName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.op_Inequality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As FrameworkName, right As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Runtime::Versioning::FrameworkName ^ left, System::Runtime::Versioning::FrameworkName ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Runtime.Versioning.FrameworkName * System.Runtime.Versioning.FrameworkName -&gt; bool" Usage="System.Runtime.Versioning.FrameworkName.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Runtime.Versioning.FrameworkName" />
        <Parameter Name="right" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="left">要比较的第一个对象。</param>
        <param name="right">要比较的第二个对象。</param>
        <summary>返回一个值，该值指示两个 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象是否表示不同的 .NET Framework 版本。</summary>
        <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 参数表示不同的 .NET Framework 版本，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.FrameworkName.op_Inequality%2A>方法定义为不等运算符的运算<xref:System.Runtime.Versioning.FrameworkName>对象。  
  
 不支持自定义的运算符的语言可以通过调用测试是否不相等<xref:System.Runtime.Versioning.FrameworkName.Equals%28System.Runtime.Versioning.FrameworkName%29?displayProperty=nameWithType>方法，并反转其值。  
  
   
  
## Examples  
 下面的示例使用相等运算符以确定是否<xref:System.Runtime.Versioning.FrameworkName>表示正在运行的.NET Framework 版本的对象是否等于支持的.NET Framework 版本。 请注意，两个版本不相等因为它们不具有相同的版本号。  
  
 [!code-csharp[System.Runtime.Versioning.FrameworkName.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.frameworkname.operators/cs/Operators1.cs#2)]
 [!code-vb[System.Runtime.Versioning.FrameworkName.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.frameworkname.operators/vb/Operators1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public string Profile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Profile" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.FrameworkName.Profile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Profile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Profile { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Profile : string" Usage="System.Runtime.Versioning.FrameworkName.Profile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的配置文件名称。</summary>
        <value>此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的配置文件名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只读的值<xref:System.Runtime.Versioning.FrameworkName.Profile%2A>属性中设置<xref:System.Runtime.Versioning.FrameworkName.%23ctor%2A>类构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.FrameworkName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="frameworkName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的字符串表示形式。</summary>
        <returns>表示此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的字符串<xref:System.Runtime.Versioning.FrameworkName.ToString%2A>方法采用以下格式：  
  
 *标识符*，版本 =*版本*[，配置文件 =*配置文件*]  
  
 其中*标识符*对应于<xref:System.Runtime.Versioning.FrameworkName.Identifier%2A>属性，`version`等效于调用<xref:System.Version.ToString%2A?displayProperty=nameWithType>的值<xref:System.Runtime.Versioning.FrameworkName.Version%2A>属性，以及`profile`对应于<xref:System.Runtime.Versioning.FrameworkName.Profile%2A>属性。 如果一个配置文件未分配给<xref:System.Runtime.Versioning.FrameworkName>对象，该配置文件组件不包括在返回的字符串。  
  
 返回的值<xref:System.Runtime.Versioning.FrameworkName.ToString%2A>方法是相同的值<xref:System.Runtime.Versioning.FrameworkName.FullName%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.FrameworkName.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.Runtime.Versioning.FrameworkName.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的版本。</summary>
        <value>包含此 <see cref="T:System.Runtime.Versioning.FrameworkName" /> 对象的版本信息的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只读的值<xref:System.Runtime.Versioning.FrameworkName.Version%2A>属性中设置<xref:System.Runtime.Versioning.FrameworkName.%23ctor%2A>类构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>