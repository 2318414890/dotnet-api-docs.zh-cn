<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ILookup`2.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5feb7f800c9cd1cfa5603b0ac65b7f1325112e530.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">feb7f800c9cd1cfa5603b0ac65b7f1325112e530</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.ILookup`2">
          <source>The type of the keys in the <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> 中的键的类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.ILookup`2">
          <source>The type of the elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequences that make up the values in the <ph id="ph2">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</source>
          <target state="translated">组成 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 中的值的 <ph id="ph2">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> 序列中的元素的类型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Linq.ILookup`2">
          <source>Defines an indexer, size property, and Boolean search method for data structures that map keys to <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequences of values.</source>
          <target state="translated">定义索引器、大小属性以及将键映射到 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 值序列的数据结构的布尔搜索方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.ILookup`2">
          <source>The type <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Linq.ILookup%602&gt;</ph> interface.</source>
          <target state="translated">类型<ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph>实现<ph id="ph2">&lt;xref:System.Linq.ILookup%602&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.ILookup`2">
          <source>The extension method <ph id="ph1">&lt;xref:System.Linq.Enumerable.ToLookup%2A&gt;</ph>, which can be appended to the end of a LINQ query, returns an object of type <ph id="ph2">&lt;xref:System.Linq.ILookup%602&gt;</ph>.</source>
          <target state="translated">扩展方法<ph id="ph1">&lt;xref:System.Linq.Enumerable.ToLookup%2A&gt;</ph>，可将其追加到末尾的 LINQ 查询，返回类型的对象<ph id="ph2">&lt;xref:System.Linq.ILookup%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.ILookup`2">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Linq.ILookup%602&gt;</ph> object and iterates through its contents.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Linq.ILookup%602&gt;</ph>对象，并循环访问其内容。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Linq.ILookup`2.Contains(`0)">
          <source>The key to search for in the <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> 中搜索的键。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Linq.ILookup`2.Contains(`0)">
          <source>Determines whether a specified key exists in the <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</source>
          <target state="translated">确定指定的键是否位于 <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Linq.ILookup`2.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is in the <ph id="ph3">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 在 <ph id="ph3">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> 中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Linq.ILookup`2.Count">
          <source>Gets the number of key/value collection pairs in the <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> 中的键/值对集合的数目。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.ILookup`2.Count">
          <source>The number of key/value collection pairs in the <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> 中键/值集合对的数目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Linq.ILookup`2.Item(`0)">
          <source>The key of the desired sequence of values.</source>
          <target state="translated">所需值序列的键。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Linq.ILookup`2.Item(`0)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequence of values indexed by a specified key.</source>
          <target state="translated">获取按指定键进行索引的值的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 序列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.ILookup`2.Item(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequence of values indexed by the specified key.</source>
          <target state="translated">按指定键进行索引的值的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 序列。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>