<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c6e128b37249d8d187d26d1e445628ac08243ee" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32087155" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">
      <see cref="T:System.Linq.IGrouping`2" /> 的键的类型。</typeparam>
    <typeparam name="TElement">
      <see cref="T:System.Linq.IGrouping`2" /> 的值的类型。</typeparam>
    <summary>表示具有公共键的对象的集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IGrouping%602>是<xref:System.Collections.Generic.IEnumerable%601>，具有附加键。 密钥表示普遍适用于在每个值的属性<xref:System.Linq.IGrouping%602>。  
  
 值<xref:System.Linq.IGrouping%602>得多的元素访问<xref:System.Collections.Generic.IEnumerable%601>访问。 例如，可通过使用访问值`foreach`在 Visual C# 或`For Each`in Visual Basic 循环来循环访问<xref:System.Linq.IGrouping%602>对象。 示例部分包含的代码示例，演示如何访问密钥和值<xref:System.Linq.IGrouping%602>对象。  
  
 <xref:System.Linq.IGrouping%602>类型由<xref:System.Linq.Enumerable.GroupBy%2A>标准查询运算符方法，返回类型的元素的序列<xref:System.Linq.IGrouping%602>。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Linq.IGrouping%602>对象。  
  
 在此示例中，<xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>针对整个数组调用<xref:System.Reflection.MemberInfo>返回的对象<xref:System.Type.GetMembers%2A>。 <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> 基于值的对象进行分组其<xref:System.Reflection.MemberInfo.MemberType%2A>属性。 为每个唯一值<xref:System.Reflection.MemberInfo.MemberType%2A>的数组中<xref:System.Reflection.MemberInfo>对新对象将作为一个键<xref:System.Linq.IGrouping%602>对象，与<xref:System.Reflection.MemberInfo>具有该密钥形式的对象<xref:System.Linq.IGrouping%602>值对象的序列。  
  
 最后，<xref:System.Linq.Enumerable.First%2A>方法调用的序列<xref:System.Linq.IGrouping%602>对象以获取只是第一个<xref:System.Linq.IGrouping%602>对象。  
  
 该示例然后将输出的键<xref:System.Linq.IGrouping%602>对象和<xref:System.Reflection.MemberInfo.Name%2A>中每个值的属性<xref:System.Linq.IGrouping%602>值对象的序列。 请注意，若要访问<xref:System.Linq.IGrouping%602>值对象的序列，你只需使用<xref:System.Linq.IGrouping%602>变量本身。  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Linq.IGrouping`2" /> 的键。</summary>
        <value>
          <see cref="T:System.Linq.IGrouping`2" /> 的键。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 键<xref:System.Linq.IGrouping%602>表示普遍适用于在每个值的属性<xref:System.Linq.IGrouping%602>。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Linq.IGrouping%602.Key%2A>属性来标记每个<xref:System.Linq.IGrouping%602>的序列中的对象<xref:System.Linq.IGrouping%602>对象。 <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>方法用于获取一系列<xref:System.Linq.IGrouping%602>对象。 `foreach`在 Visual C# 或`For Each`在 Visual Basic 中循环然后循环访问每个<xref:System.Linq.IGrouping%602>对象，并将输出其密钥和它包含的值的数目。  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>