<Type Name="IQueryable" FullName="System.Linq.IQueryable">
  <TypeSignature Language="C#" Value="public interface IQueryable : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryable implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IQueryable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryable&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryable : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9f2ab-101">提供针对特定数据源（其中数据类型未指定）评估查询的功能。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-101">Provides functionality to evaluate queries against a specific data source wherein the type of the data is not specified.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2ab-102"><xref:System.Linq.IQueryable>接口仅供查询提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-102">The <xref:System.Linq.IQueryable> interface is intended for implementation by query providers.</span></span> <span data-ttu-id="9f2ab-103">它仅应该还实现的提供程序实现<xref:System.Linq.IQueryable%601>。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-103">It is only supposed to be implemented by providers that also implement <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="9f2ab-104">如果该提供程序还不实现<xref:System.Linq.IQueryable%601>，标准查询运算符不能用于提供程序的数据源。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-104">If the provider does not also implement <xref:System.Linq.IQueryable%601>, the standard query operators cannot be used on the provider's data source.</span></span>  
  
 <span data-ttu-id="9f2ab-105"><xref:System.Linq.IQueryable>接口继承<xref:System.Collections.IEnumerable>接口，因此，如果它表示一个查询，可以枚举该查询的结果。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-105">The <xref:System.Linq.IQueryable> interface inherits the <xref:System.Collections.IEnumerable> interface so that if it represents a query, the results of that query can be enumerated.</span></span> <span data-ttu-id="9f2ab-106">枚举会导致与关联的表达式树<xref:System.Linq.IQueryable>要执行对象。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-106">Enumeration causes the expression tree associated with an <xref:System.Linq.IQueryable> object to be executed.</span></span> <span data-ttu-id="9f2ab-107">"执行表达式树"的定义是特定于查询提供程序。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-107">The definition of "executing an expression tree" is specific to a query provider.</span></span> <span data-ttu-id="9f2ab-108">例如，它可能涉及将转换为相应的查询语言的基础数据源的表达式树。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-108">For example, it may involve translating the expression tree to an appropriate query language for the underlying data source.</span></span> <span data-ttu-id="9f2ab-109">执行不返回可枚举的结果的查询时<xref:System.Linq.IQueryProvider.Execute%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-109">Queries that do not return enumerable results are executed when the <xref:System.Linq.IQueryProvider.Execute%2A> method is called.</span></span>  
  
 <span data-ttu-id="9f2ab-110">有关如何创建你自己 LINQ 提供程序的详细信息，请参阅[LINQ： 生成 IQueryable 提供程序](http://go.microsoft.com/fwlink/?LinkID=112370)MSDN 博客。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-110">For more information about how to create your own LINQ provider, see [LINQ: Building an IQueryable Provider](http://go.microsoft.com/fwlink/?LinkID=112370) on MSDN Blogs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
    <altmember cref="T:System.Linq.IQueryable`1" />
  </Docs>
  <Members>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ElementType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f2ab-111">获取在执行与 <see cref="T:System.Linq.IQueryable" /> 的此实例关联的表达式树时返回的元素的类型。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-111">Gets the type of the element(s) that are returned when the expression tree associated with this instance of <see cref="T:System.Linq.IQueryable" /> is executed.</span></span></summary>
        <value><span data-ttu-id="9f2ab-112">一个 <see cref="T:System.Type" />，表示在执行与之关联的表达式目录树时返回的元素的类型。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-112">A <see cref="T:System.Type" /> that represents the type of the element(s) that are returned when the expression tree associated with this object is executed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2ab-113"><xref:System.Linq.IQueryable.ElementType%2A>属性中表示"T"`IQueryable<T>`或`IQueryable(Of T)`。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-113">The <xref:System.Linq.IQueryable.ElementType%2A> property represents the "T" in `IQueryable<T>` or `IQueryable(Of T)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f2ab-114">获取与 <see cref="T:System.Linq.IQueryable" /> 的实例关联的表达式树。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-114">Gets the expression tree that is associated with the instance of <see cref="T:System.Linq.IQueryable" />.</span></span></summary>
        <value><span data-ttu-id="9f2ab-115">与 <see cref="T:System.Linq.Expressions.Expression" /> 的此实例关联的 <see cref="T:System.Linq.IQueryable" />。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-115">The <see cref="T:System.Linq.Expressions.Expression" /> that is associated with this instance of <see cref="T:System.Linq.IQueryable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2ab-116">实例时，如果<xref:System.Linq.IQueryable>表示[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]针对数据源，关联的表达式树查询表示该查询。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-116">If an instance of <xref:System.Linq.IQueryable> represents a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query against a data source, the associated expression tree represents that query.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As IQueryProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::IQueryProvider ^ Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f2ab-117">获取与此数据源相关联的查询提供程序。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-117">Gets the query provider that is associated with this data source.</span></span></summary>
        <value><span data-ttu-id="9f2ab-118">与此数据源关联的 <see cref="T:System.Linq.IQueryProvider" />。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-118">The <see cref="T:System.Linq.IQueryProvider" /> that is associated with this data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2ab-119">实例时，如果<xref:System.Linq.IQueryable>表示[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]对数据源关联的查询提供程序的查询是创建的提供程序<xref:System.Linq.IQueryable>实例。</span><span class="sxs-lookup"><span data-stu-id="9f2ab-119">If an instance of <xref:System.Linq.IQueryable> represents a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query against a data source, the associated query provider is the provider that created the <xref:System.Linq.IQueryable> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>