<Type Name="ParallelEnumerable" FullName="System.Linq.ParallelEnumerable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f281504925f8c17c54fcaceed174873364fa31cd" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52241322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ParallelEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ParallelEnumerable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelEnumerable" />
  <TypeSignature Language="VB.NET" Value="Public Module ParallelEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelEnumerable abstract sealed" />
  <TypeSignature Language="F#" Value="type ParallelEnumerable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="28511-101">提供一组用于查询实现 ParallelQuery{TSource} 的对象的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="28511-101">Provides a set of methods for querying objects that implement ParallelQuery{TSource}.</span>
      </span>
      <span data-ttu-id="28511-102">这是 <see cref="T:System.Linq.Enumerable" /> 的并行等效项。</span>
      <span class="sxs-lookup">
        <span data-stu-id="28511-102">This is the parallel equivalent of <see cref="T:System.Linq.Enumerable" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
      <span data-ttu-id="28511-103">并行 LINQ (PLINQ)</span>
      <span class="sxs-lookup">
        <span data-stu-id="28511-103">Parallel LINQ (PLINQ)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Aggregate&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-104">对一个序列并行应用累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-104">Applies in parallel an accumulator function over a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Aggregate&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Aggregate&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TSource,TSource&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Aggregate&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, !!TSource, !!TSource&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource) (source As ParallelQuery(Of TSource), func As Func(Of TSource, TSource, TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TSource, TSource&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Source, 'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Aggregate (source, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;TSource,TSource,TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-105">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-105">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-106">要对其进行聚合的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-106">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="28511-107">要对每个元素调用的累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-107">An accumulator function to be invoked on each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-108">对一个序列并行应用累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-108">Applies in parallel an accumulator function over a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-109">累加器的最终值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-109">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-110">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-110">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-111">
            <paramref name="source" /> 或 <paramref name="func" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-111">
              <paramref name="source" /> or <paramref name="func" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-112">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-112">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-113">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-113">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-114">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-114">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TSource,TAccumulate&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TSource, TAccumulate&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate) (source As ParallelQuery(Of TSource), seed As TAccumulate, func As Func(Of TAccumulate, TSource, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; -&gt; 'Accumulate" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-115">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-115">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TAccumulate">
          <span data-ttu-id="28511-116">累加器值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-116">The type of the accumulator value.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-117">要对其进行聚合的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-117">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="28511-118">累加器的初始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-118">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="28511-119">要对每个元素调用的累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-119">An accumulator function to be invoked on each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-120">对一个序列并行应用累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-120">Applies in parallel an accumulator function over a sequence.</span>
          </span>
          <span data-ttu-id="28511-121">将指定的种子值用作累加器初始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-121">The specified seed value is used as the initial accumulator value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-122">累加器的最终值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-122">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-123">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-123">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-124">
            <paramref name="source" /> 或 <paramref name="func" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-124">
              <paramref name="source" /> or <paramref name="func" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-125">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-125">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-126">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-126">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-127">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-127">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seed As TAccumulate, func As Func(Of TAccumulate, TSource, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, func, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-128">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-128">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TAccumulate">
          <span data-ttu-id="28511-129">累加器值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-129">The type of the accumulator value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-130">结果值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-130">The type of the resulting value.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-131">要对其进行聚合的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-131">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="28511-132">累加器的初始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-132">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="28511-133">要对每个元素调用的累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-133">An accumulator function to be invoked on each element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-134">将累加器的最终值转换为结果值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-134">A function to transform the final accumulator value into the result value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-135">对一个序列并行应用累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-135">Applies in parallel an accumulator function over a sequence.</span>
          </span>
          <span data-ttu-id="28511-136">将指定的种子值用作累加器的初始值，并使用指定的函数选择结果值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-136">The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-137">已转换的累加器最终值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-137">The transformed final accumulator value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-138">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-138">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-139">
            <paramref name="source" /> 或 <paramref name="func" /> 或 <paramref name="resultSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-139">
              <paramref name="source" /> or <paramref name="func" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-140">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-140">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-141">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-141">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-142">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-142">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TAccumulate&gt; seedFactory, Func&lt;TAccumulate,TSource,TAccumulate&gt; updateAccumulatorFunc, Func&lt;TAccumulate,TAccumulate,TAccumulate&gt; combineAccumulatorsFunc, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`1&lt;!!TAccumulate&gt; seedFactory, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; updateAccumulatorFunc, class System.Func`3&lt;!!TAccumulate, !!TAccumulate, !!TAccumulate&gt; combineAccumulatorsFunc, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seedFactory As Func(Of TAccumulate), updateAccumulatorFunc As Func(Of TAccumulate, TSource, TAccumulate), combineAccumulatorsFunc As Func(Of TAccumulate, TAccumulate, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TAccumulate&gt; ^ seedFactory, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ updateAccumulatorFunc, Func&lt;TAccumulate, TAccumulate, TAccumulate&gt; ^ combineAccumulatorsFunc, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Accumulate&gt; * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Accumulate, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seedFactory, updateAccumulatorFunc, combineAccumulatorsFunc, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seedFactory" Type="System.Func&lt;TAccumulate&gt;" />
        <Parameter Name="updateAccumulatorFunc" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="combineAccumulatorsFunc" Type="System.Func&lt;TAccumulate,TAccumulate,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-143">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-143">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TAccumulate">
          <span data-ttu-id="28511-144">累加器值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-144">The type of the accumulator value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-145">结果值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-145">The type of the resulting value.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-146">要对其进行聚合的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-146">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="seedFactory">
          <span data-ttu-id="28511-147">一个返回初始累加器值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-147">A function that returns the initial accumulator value.</span>
          </span>
        </param>
        <param name="updateAccumulatorFunc">
          <span data-ttu-id="28511-148">要对分区中的每个元素调用的累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-148">An accumulator function to be invoked on each element in a partition.</span>
          </span>
        </param>
        <param name="combineAccumulatorsFunc">
          <span data-ttu-id="28511-149">要对每个分区中已生成的累加器结果调用的累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-149">An accumulator function to be invoked on the yielded accumulator result from each partition.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-150">将累加器的最终值转换为结果值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-150">A function to transform the final accumulator value into the result value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-151">对一个序列并行应用累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-151">Applies in parallel an accumulator function over a sequence.</span>
          </span>
          <span data-ttu-id="28511-152">此重载在顺序实现中不可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-152">This overload is not available in the sequential implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-153">已转换的累加器最终值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-153">The transformed final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-154">此重载是特定于并行化查询。</span><span class="sxs-lookup"><span data-stu-id="28511-154">This overload is specific to parallelized queries.</span></span> <span data-ttu-id="28511-155">并行化的查询可能会进行分区的数据源序列划分为若干子序列 （分区）。</span><span class="sxs-lookup"><span data-stu-id="28511-155">A parallelized query may partition the data source sequence into several sub-sequences (partitions).</span></span> <span data-ttu-id="28511-156">`updateAccumulatorFunc`对分区中每个元素调用。</span><span class="sxs-lookup"><span data-stu-id="28511-156">The `updateAccumulatorFunc` is invoked on each element within partitions.</span></span> <span data-ttu-id="28511-157">然后，每个分区生成单个累计的结果。</span><span class="sxs-lookup"><span data-stu-id="28511-157">Each partition then yields a single accumulated result.</span></span> <span data-ttu-id="28511-158">`combineAccumulatorsFunc`然后调用每个分区，以生成单个元素的结果。</span><span class="sxs-lookup"><span data-stu-id="28511-158">The `combineAccumulatorsFunc` is then invoked on the results of each partition to yield a single element.</span></span> <span data-ttu-id="28511-159">此元素随后将转换`resultSelector`函数。</span><span class="sxs-lookup"><span data-stu-id="28511-159">This element is then transformed by the `resultSelector` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-160">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-160">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-161">
            <paramref name="source" /> 或 <paramref name="seedFactory" /> 或 <paramref name="updateAccumulatorFunc" /> 或 <paramref name="combineAccumulatorsFunc" /> 或 <paramref name="resultSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-161">
              <paramref name="source" /> or <paramref name="seedFactory" /> or <paramref name="updateAccumulatorFunc" /> or <paramref name="combineAccumulatorsFunc" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-162">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-162">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-163">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-163">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-164">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-164">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TAccumulate seed, Func&lt;TAccumulate,TSource,TAccumulate&gt; updateAccumulatorFunc, Func&lt;TAccumulate,TAccumulate,TAccumulate&gt; combineAccumulatorsFunc, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt; updateAccumulatorFunc, class System.Func`3&lt;!!TAccumulate, !!TAccumulate, !!TAccumulate&gt; combineAccumulatorsFunc, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As ParallelQuery(Of TSource), seed As TAccumulate, updateAccumulatorFunc As Func(Of TAccumulate, TSource, TAccumulate), combineAccumulatorsFunc As Func(Of TAccumulate, TAccumulate, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TAccumulate seed, Func&lt;TAccumulate, TSource, TAccumulate&gt; ^ updateAccumulatorFunc, Func&lt;TAccumulate, TAccumulate, TAccumulate&gt; ^ combineAccumulatorsFunc, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.ParallelQuery&lt;'Source&gt; * 'Accumulate * Func&lt;'Accumulate, 'Source, 'Accumulate&gt; * Func&lt;'Accumulate, 'Accumulate, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Aggregate (source, seed, updateAccumulatorFunc, combineAccumulatorsFunc, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="updateAccumulatorFunc" Type="System.Func&lt;TAccumulate,TSource,TAccumulate&gt;" />
        <Parameter Name="combineAccumulatorsFunc" Type="System.Func&lt;TAccumulate,TAccumulate,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-165">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-165">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TAccumulate">
          <span data-ttu-id="28511-166">累加器值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-166">The type of the accumulator value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-167">结果值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-167">The type of the resulting value.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-168">要对其进行聚合的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-168">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="28511-169">累加器的初始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-169">The initial accumulator value.</span>
          </span>
        </param>
        <param name="updateAccumulatorFunc">
          <span data-ttu-id="28511-170">要对分区中的每个元素调用的累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-170">An accumulator function to be invoked on each element in a partition.</span>
          </span>
        </param>
        <param name="combineAccumulatorsFunc">
          <span data-ttu-id="28511-171">要对每个分区中已生成的累加器结果调用的累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-171">An accumulator function to be invoked on the yielded accumulator result from each partition.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-172">将累加器的最终值转换为结果值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-172">A function to transform the final accumulator value into the result value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-173">对一个序列并行应用累加器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-173">Applies in parallel an accumulator function over a sequence.</span>
          </span>
          <span data-ttu-id="28511-174">此重载在顺序实现中不可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-174">This overload is not available in the sequential implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-175">已转换的累加器最终值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-175">The transformed final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-176">此重载是特定于处理并行化的查询。</span><span class="sxs-lookup"><span data-stu-id="28511-176">This overload is specific to processing a parallelized query.</span></span> <span data-ttu-id="28511-177">并行化的查询可能会进行分区的数据源序列划分为若干子序列 （分区）。</span><span class="sxs-lookup"><span data-stu-id="28511-177">A parallelized query may partition the data source sequence into several sub-sequences (partitions).</span></span> <span data-ttu-id="28511-178">`updateAccumulatorFunc`对分区中每个元素调用。</span><span class="sxs-lookup"><span data-stu-id="28511-178">The `updateAccumulatorFunc` is invoked on each element within partitions.</span></span> <span data-ttu-id="28511-179">然后，每个分区生成单个累计的结果。</span><span class="sxs-lookup"><span data-stu-id="28511-179">Each partition then yields a single accumulated result.</span></span> <span data-ttu-id="28511-180">`combineAccumulatorsFunc`然后调用每个分区，以生成单个元素的结果。</span><span class="sxs-lookup"><span data-stu-id="28511-180">The `combineAccumulatorsFunc` is then invoked on the results of each partition to yield a single element.</span></span> <span data-ttu-id="28511-181">此元素随后将转换`resultSelector`函数。</span><span class="sxs-lookup"><span data-stu-id="28511-181">This element is then transformed by the `resultSelector` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-182">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-182">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-183">
            <paramref name="source" /> 或 <paramref name="updateAccumulatorFunc" /> 或 <paramref name="combineAccumulatorsFunc" /> 或 <paramref name="resultSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-183">
              <paramref name="source" /> or <paramref name="updateAccumulatorFunc" /> or <paramref name="combineAccumulatorsFunc" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-184">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-184">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-185">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-185">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-186">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-186">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="All&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-187">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-187">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-188">要对其应用谓词的元素所在的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-188">A sequence whose elements to apply the predicate to.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-189">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-189">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-190">并行确定序列中的所有元素是否都满足条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-190">Determines in parallel whether all elements of a sequence satisfy a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-191">如果源序列中的每个元素都通过指定谓词中的测试，或者序列为空，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-191">true if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, false..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-192">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-192">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-193">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-193">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-194">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-194">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-195">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-195">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-196">确定并行序列是否包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-196">Determines whether a parallel sequence contains any elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As ParallelQuery(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-197">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-197">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-198">要检查是否为空的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-198">The sequence to check for emptiness.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-199">确定并行序列是否包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-199">Determines whether a parallel sequence contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-200">如果源序列包含任何元素，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-200">true if the source sequence contains any elements; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-201">此重载的任何方法会导致完全缓冲的合并，以返回结果之前执行。</span><span class="sxs-lookup"><span data-stu-id="28511-201">This overload of the Any method causes a fully-buffered merge to be performed before the result is returned.</span></span> <span data-ttu-id="28511-202">合并行为可能会影响性能或大型枚举中导致内存不足异常。</span><span class="sxs-lookup"><span data-stu-id="28511-202">The merge behavior can impact performance or cause an out of memory exception in large enumerables.</span></span> <span data-ttu-id="28511-203">若要避免合并行为，使用任何采用 Func 参数，重载也可以使用如 FirstOrDefault 一种替代方法。</span><span class="sxs-lookup"><span data-stu-id="28511-203">To avoid the merge behavior, use the overload of Any that takes a Func parameter, or else use an alternative method such as FirstOrDefault.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-204">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-204">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-205">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-205">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-206">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-206">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-207">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-207">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-208">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-208">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-209">将对其元素应用谓词的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-209">A sequence to whose elements the predicate will be applied.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-210">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-210">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-211">并行确定序列中的任何元素是否都满足条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-211">Determines in parallel whether any element of a sequence satisfies a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-212">如果源序列中的任何元素都通过指定谓词中的测试，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-212">true if any elements in the source sequence pass the test in the specified predicate; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-213">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-213">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-214">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-214">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-215">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-215">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-216">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-216">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TSource&gt; AsEnumerable&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; AsEnumerable&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable(Of TSource) (source As ParallelQuery(Of TSource)) As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ AsEnumerable(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsEnumerable : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; seq&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsEnumerable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-217">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-217">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-218">要强制转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-218">The sequence to cast as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-219">将 <see cref="T:System.Linq.ParallelQuery`1" /> 转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 以强制对查询进行顺序计算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-219">Converts a <see cref="T:System.Linq.ParallelQuery`1" /> into an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to force sequential evaluation of the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-220">已作为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 键入的输入序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-220">The input sequence typed as <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-221">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-221">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-222">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-222">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AsOrdered">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery AsOrdered (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery AsOrdered(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOrdered (source As ParallelQuery) As ParallelQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery ^ AsOrdered(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member AsOrdered : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery" Usage="System.Linq.ParallelEnumerable.AsOrdered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-223">输入序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-223">The input sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-224">启用将数据源视为“已经排序”的处理方法，重写默认的将数据源视为“未经排序”的处理方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-224">Enables treatment of a data source as if it were ordered, overriding the default of unordered.</span>
          </span>
          <span data-ttu-id="28511-225">只可以对由 AsParallel、ParallelEnumerable.Range 和 ParallelEnumerable.Repeat 返回的非泛型序列调用 AsOrdered。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-225">AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-226">将要维护后续查询运算符中的原始排序的源序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-226">The source sequence which will maintain the original ordering in the subsequent query operators.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-227">性能和保留中并行处理顺序之间存在自然的张力。</span><span class="sxs-lookup"><span data-stu-id="28511-227">A natural tension exists between performance and preserving order in parallel processing.</span></span> <span data-ttu-id="28511-228">默认情况下，并行的查询行为就像结果的排序是任意的除非应用 AsOrdered 或在查询中没有显式的 OrderBy 运算符。</span><span class="sxs-lookup"><span data-stu-id="28511-228">By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query.</span></span> <span data-ttu-id="28511-229">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-229">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-230">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-230">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-231">如果 <paramref name="source" /> 中不包含任何元素则会引发</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-231">thrown if <paramref name="source" /> contains no elements</span>
          </span>
          <span data-ttu-id="28511-232">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-232">-or-</span>
          </span>
          <span data-ttu-id="28511-233">在 AsOrdered 通过查询调用舍入时引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-233">if AsOrdered is called midway through a query.</span>
          </span>
          <span data-ttu-id="28511-234">他被允许在 <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />，<see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> 或 <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" /> 之后立即调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-234">It is allowed to be called immediately after <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> or <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-235">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-235">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AsOrdered&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsOrdered&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsOrdered&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOrdered(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsOrdered(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsOrdered : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsOrdered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-236">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-236">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-237">输入序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-237">The input sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-238">启用将数据源视为“已经排序”的处理方法，重写默认的将数据源视为“未经排序”的处理方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-238">Enables treatment of a data source as if it were ordered, overriding the default of unordered.</span>
          </span>
          <span data-ttu-id="28511-239">只可以对由 AsParallel、ParallelEnumerable.Range 和 ParallelEnumerable.Repeat 返回的泛型序列调用 AsOrdered。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-239">AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-240">将要维护后续查询运算符中的原始排序的源序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-240">The source sequence which will maintain the original ordering in the subsequent query operators.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-241">性能和保留中并行处理顺序之间存在自然的张力。</span><span class="sxs-lookup"><span data-stu-id="28511-241">A natural tension exists between performance and preserving order in parallel processing.</span></span> <span data-ttu-id="28511-242">默认情况下，并行的查询行为就像结果的排序是任意的除非应用 AsOrdered 或在查询中没有显式的 OrderBy 运算符。</span><span class="sxs-lookup"><span data-stu-id="28511-242">By default, a parallelized query behaves as if the ordering of the results is arbitrary unless AsOrdered is applied or there is an explicit OrderBy operator in the query.</span></span> <span data-ttu-id="28511-243">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-243">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-244">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-244">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-245">如果 <paramref name="source" /> 中不包含任何元素则会引发</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-245">Thrown if <paramref name="source" /> contains no elements</span>
          </span>
          <span data-ttu-id="28511-246">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-246">-or-</span>
          </span>
          <span data-ttu-id="28511-247">
            <paramref name="source" /> 不是 AsParallel、ParallelEnumerable.Range 或 ParallelEnumerable.Repeat 之一时引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-247">if <paramref name="source" /> is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-248">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-248">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AsParallel">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-249">启用查询的并行化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-249">Enables parallelization of a query.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-250">此方法将查询绑定到 PLINQ。</span><span class="sxs-lookup"><span data-stu-id="28511-250">This method binds the query to PLINQ.</span></span> <span data-ttu-id="28511-251">有关详细信息，请参阅[并行 LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-251">For more information, see [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AsParallel">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery AsParallel (this System.Collections.IEnumerable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery AsParallel(class System.Collections.IEnumerable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel (source As IEnumerable) As ParallelQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery ^ AsParallel(System::Collections::IEnumerable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : System.Collections.IEnumerable -&gt; System.Linq.ParallelQuery" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.IEnumerable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-252">要转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Linq.ParallelQuery" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-252">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert to a <see cref="T:System.Linq.ParallelQuery" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-253">启用查询的并行化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-253">Enables parallelization of a query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-254">作为要绑定到 ParallelEnumerable 扩展方法的 ParallelQuery 的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-254">The source as a ParallelQuery to bind to ParallelEnumerable extension methods.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-255"><xref:System.Linq.ParallelEnumerable.Cast%2A>运算符可用于将 ParallelQuery 转换为 ParallelQuery(T)。</span><span class="sxs-lookup"><span data-stu-id="28511-255">The <xref:System.Linq.ParallelEnumerable.Cast%2A> operator can be used to convert a ParallelQuery to a ParallelQuery(T).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-256">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-256">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-257">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-257">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AsParallel&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsParallel&lt;TSource&gt; (this System.Collections.Concurrent.Partitioner&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsParallel&lt;TSource&gt;(class System.Collections.Concurrent.Partitioner`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel(Of TSource) (source As Partitioner(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsParallel(System::Collections::Concurrent::Partitioner&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : System.Collections.Concurrent.Partitioner&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-258">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-258">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-259">基于输入序列的分区程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-259">A partitioner over the input sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-260">启用查询的并行化，并由负责将输入序列拆分成各个分区的自定义分区程序指明其出处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-260">Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-261">作为要绑定到 ParallelEnumerable 扩展方法的 ParallelQuery 的 <paramref name="source" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-261">The <paramref name="source" /> as a ParallelQuery to bind to ParallelEnumerable extension methods.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-262">源分区程序 GetOrderedPartitions 方法排序时使用已启用，而如果顺序不是使用分区程序的 GetPartitions 启用 （默认值）。</span><span class="sxs-lookup"><span data-stu-id="28511-262">The source partitioner's GetOrderedPartitions method is used when ordering is enabled, whereas the partitioner's GetPartitions is used if ordering is not enabled (the default).</span></span> <span data-ttu-id="28511-263">不使用源分区程序 GetDynamicPartitions 和 GetDynamicOrderedPartitions。</span><span class="sxs-lookup"><span data-stu-id="28511-263">The source partitioner's GetDynamicPartitions and GetDynamicOrderedPartitions are not used.</span></span> <span data-ttu-id="28511-264">有关详细信息和示例，请参阅[PLINQ 和 TPL 的自定义分区程序](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-264">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-265">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-265">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-266">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-266">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AsParallel&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsParallel&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsParallel&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsParallel(Of TSource) (source As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsParallel(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsParallel : seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsParallel source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-267">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-267">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-268">要转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-268">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert to a <see cref="T:System.Linq.ParallelQuery`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-269">启用查询的并行化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-269">Enables parallelization of a query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-270">作为要绑定到 ParallelEnumerable 扩展方法的 <see cref="T:System.Linq.ParallelQuery`1" /> 的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-270">The source as a <see cref="T:System.Linq.ParallelQuery`1" /> to bind to ParallelEnumerable extension methods.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-271">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-271">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-272">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-272">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AsSequential&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TSource&gt; AsSequential&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; AsSequential&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSequential(Of TSource) (source As ParallelQuery(Of TSource)) As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ AsSequential(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsSequential : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; seq&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsSequential source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-273">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-273">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-274">要转换为 <see cref="T:System.Linq.ParallelQuery`1" /> 的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-274">A <see cref="T:System.Linq.ParallelQuery`1" /> to convert to an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-275">将 <see cref="T:System.Linq.ParallelQuery`1" /> 转换为 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 以强制对查询进行顺序计算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-275">Converts a <see cref="T:System.Linq.ParallelQuery`1" /> into an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to force sequential evaluation of the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-276">作为要绑定到顺序扩展方法的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-276">The source as an <see cref="T:System.Collections.Generic.IEnumerable`1" /> to bind to sequential extension methods.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-277">有关详细信息，请参阅[PLINQ 中的顺序暂留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)和[如何： 控制 PLINQ 查询中排序](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-277">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md) and [How to: Control Ordering in a PLINQ Query](~/docs/standard/parallel-programming/how-to-control-ordering-in-a-plinq-query.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-278">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-278">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-279">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-279">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AsUnordered&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; AsUnordered&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; AsUnordered&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsUnordered(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ AsUnordered(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsUnordered : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.AsUnordered source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-280">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-280">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-281">输入序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-281">The input sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-282">允许将中间查询视为元素之间未应用任何排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-282">Allows an intermediate query to be treated as if no ordering is implied among the elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-283">具有任意顺序的源序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-283">The source sequence with arbitrary order.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-284">中的查询部分不需要排序时，AsUnordered 可能提供性能优势。</span><span class="sxs-lookup"><span data-stu-id="28511-284">AsUnordered may provide performance benefits when ordering is not required in a portion of a query.</span></span> <span data-ttu-id="28511-285">默认情况下，PLINQ 会将输入的序列将视为无序除非另有指定 OrderBy 或 AsOrdered。</span><span class="sxs-lookup"><span data-stu-id="28511-285">By default, PLINQ treats an input sequence as unordered unless OrderBy or AsOrdered is specified.</span></span> <span data-ttu-id="28511-286">但是，如果排序已打开并且不再需要然后 AsUnordered 可用于在中间查询中，将其关闭，并且这可能会导致性能优势。AsUnordered 运算符本身不 shuffle 源序列中;它只是将删除对后续运算符的排序要求。</span><span class="sxs-lookup"><span data-stu-id="28511-286">However, if ordering was turned on and is no longer needed, then AsUnordered can be used to turn it off in mid-query, and this may result in performance benefits.The AsUnordered operator itself does not shuffle the source sequence; it simply removes the ordering requirement for subsequent operators.</span></span> <span data-ttu-id="28511-287">如果源已排序，后续运算符可能会使该排序更高效，若要执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28511-287">If the source is ordered, subsequent operators might keep that ordering if it is more efficient to do so.</span></span> <span data-ttu-id="28511-288">可以在查询; 中任意位置调用 AsUnordered它不需要 AsParallel 后立即调用。</span><span class="sxs-lookup"><span data-stu-id="28511-288">AsUnordered can be called anywhere in the query; it does not need to be called immediately after AsParallel.</span></span> <span data-ttu-id="28511-289">有关详细信息，请参阅[了解 PLINQ 中的加速](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md)并[PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-289">For more information, see [Understanding Speedup in PLINQ](~/docs/standard/parallel-programming/understanding-speedup-in-plinq.md) and [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-290">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-290">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-291">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-291">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Average">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-292">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-292">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-293">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-293">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static decimal Average (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-294">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-294">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-295">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-295">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-296">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-296">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-297">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-297">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-298">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-298">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-299">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-299">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-300">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-300">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-301">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-301">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-302">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-302">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-303">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-303">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-304">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-304">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-305">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-305">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-306">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-306">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-307">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-307">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-308">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-308">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-309">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-309">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;int&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-310">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-310">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-311">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-311">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-312">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-312">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-313">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-313">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-314">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-314">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-315">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-315">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-316">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-316">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-317">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-317">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-318">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-318">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;int64&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-319">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-319">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-320">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-320">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-321">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-321">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-322">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-322">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-323">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-323">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-324">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-324">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-325">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-325">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-326">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-326">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-327">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-327">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-328">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-328">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-329">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-329">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-330">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-330">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-331">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-331">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-332">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-332">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-333">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-333">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-334">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-334">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-335">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-335">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-336">源序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-336">The source sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-337">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-337">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-338">返回值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-338">Returns the average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-339">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-339">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-340">用于计算平均值的值序列。值序列的平均值。<paramref name="source" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-340">A sequence of values that are used to calculate an average.The average of the sequence of values.<paramref name="source" /></span>
          </span>
          <span data-ttu-id="28511-341">为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-341">is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-342">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-342">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-343">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-343">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-344">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-344">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-345">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-345">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-346">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-346">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-347">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-347">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-348">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-348">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-349">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-349">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-350">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-350">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-351">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-351">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-352">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-352">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-353">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-353">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-354">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-354">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-355">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-355">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-356">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-356">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-357">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-357">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-358">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-358">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-359">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-359">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-360">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-360">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-361">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-361">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-362">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-362">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-363">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-363">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-364">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-364">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-365">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-365">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-366">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-366">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-367">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-367">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-368">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-368">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-369">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-369">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-370">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-370">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static float Average (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-371">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-371">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-372">并行计算一个值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-372">Computes in parallel the average of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-373">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-373">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-374">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-374">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-375">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-375">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-376">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-376">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-377">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-377">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-378">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-378">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-379">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-379">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-380">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-380">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-381">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-381">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-382">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-382">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-383">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-383">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-384">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-384">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-385">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-385">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-386">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-386">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-387">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-387">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-388">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-388">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-389">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-389">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-390">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-390">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-391">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-391">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-392">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-392">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-393">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-393">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-394">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-394">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-395">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-395">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-396">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-396">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-397">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-397">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-398">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-398">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-399">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-399">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-400">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-400">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-401">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-401">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-402">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-402">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-403">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-403">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-404">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-404">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-405">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-405">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-406">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-406">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-407">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-407">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-408">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-408">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-409">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-409">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-410">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-410">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-411">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-411">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-412">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-412">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-413">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-413">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-414">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-414">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-415">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-415">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-416">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-416">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-417">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-417">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-418">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-418">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-419">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-419">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-420">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-420">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-421">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-421">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-422">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-422">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-423">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-423">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-424">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-424">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-425">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-425">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-426">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-426">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-427">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-427">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-428">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-428">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-429">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-429">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-430">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-430">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-431">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-431">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-432">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-432">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-433">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-433">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-434">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-434">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-435">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-435">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-436">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-436">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-437">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-437">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-438">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-438">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-439">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-439">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-440">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-440">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-441">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-441">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-442">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-442">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-443">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-443">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-444">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-444">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-445">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-445">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-446">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-446">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-447">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-447">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-448">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-448">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-449">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-449">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-450">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-450">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-451">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-451">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-452">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-452">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-453">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-453">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-454">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-454">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-455">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-455">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-456">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-456">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-457">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-457">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-458">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-458">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-459">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-459">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-460">序列中元素之和或数量大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-460">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-461">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-461">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-462">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-462">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-463">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-463">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-464">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-464">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-465">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-465">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-466">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-466">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-467">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-467">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-468">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-468">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-469">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-469">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-470">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-470">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-471">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-471">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-472">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-472">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-473">序列中元素之和或数量大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-473">The sum or count of the elements in the sequence is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-474">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-474">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-475">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-475">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-476">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-476">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-477">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-477">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-478">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-478">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-479">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-479">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-480">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-480">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-481">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-481">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-482">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-482">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-483">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-483">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-484">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-484">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-485">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-485">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-486">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-486">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-487">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-487">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-488">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-488">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-489">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-489">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-490">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-490">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Average&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-491">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-491">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-492">用于计算平均值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-492">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-493">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-493">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-494">并行计算一个值序列的平均值，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-494">Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-495">值序列的平均值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-495">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-496">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-496">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-497">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-497">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-498">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-498">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-499">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-499">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-500">（在 <see cref="T:System.AggregateException" /> 中作为内部异常引发）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-500">(Thrown as inner exception in an <see cref="T:System.AggregateException" />).</span>
          </span>
          <span data-ttu-id="28511-501">
            <paramref name="selector" /> 函数返回一个大于元素类型的 MaxValue 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-501">The <paramref name="selector" /> function returns a value greater than MaxValue for the element type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-502">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-502">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As ParallelQuery) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Cast(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="28511-503">
            <paramref name="source" /> 中的元素要转换成的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-503">The type to convert the elements of <paramref name="source" /> to.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-504">包含要转换的元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-504">The sequence that contains the elements to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-505">将 ParallelQuery 的元素转换为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-505">Converts the elements of a ParallelQuery to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-506">一个序列，其中包含已转换为指定类型的源序列的每个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-506">A sequence that contains each element of the source sequence converted to the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-507">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-507">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="28511-508">源序列的类型不能转换为 <paramref name="TResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-508">The type of the source sequence could not be converted to <paramref name="TResult" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-509">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-509">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Concat&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-510">连接两个并行序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-510">Concatenates two parallel sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Concat(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Concat (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-511">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-511">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-512">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-512">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-513">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-513">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-514">切勿调用此 Concat 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-514">This Concat overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-515">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-515">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-516">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-516">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-517">此重载可禁止使用左侧的数据类型的源的 Concat<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-517">This overload exists to disallow usage of Concat with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-518">否则为 Concat 运算符会显示为绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-518">Otherwise, the Concat operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-519">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-519">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-520">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-520">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Concat(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Concat (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-521">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-521">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-522">要连接的第一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-522">The first sequence to concatenate.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-523">要与第一个序列连接的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-523">The sequence to concatenate to the first sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-524">连接两个并行序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-524">Concatenates two parallel sequences.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-525">一个序列，其中包含两个输入序列的已连接元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-525">A sequence that contains the concatenated elements of the two input sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-526">
            <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-526">
              <paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-527">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-527">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-528">并行确定序列是否包含指定的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-528">Determines in parallel whether a sequence contains a specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As ParallelQuery(Of TSource), value As TSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource value);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source -&gt; bool" Usage="System.Linq.ParallelEnumerable.Contains (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="value" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-529">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-529">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-530">要在其中定位某个值的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-530">A sequence in which to locate a value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="28511-531">要在序列中定位的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-531">The value to locate in the sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-532">通过使用默认的相等比较器，并行确定某个序列是否包含指定的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-532">Determines in parallel whether a sequence contains a specified element by using the default equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-533">如果源序列包含具有指定值的元素，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-533">true if the source sequence contains an element that has the specified value; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-534">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-534">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-535">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-535">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-536">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-536">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-537">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-537">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource value, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource value, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As ParallelQuery(Of TSource), value As TSource, comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource value, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.Contains (source, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="value" Type="TSource" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-538">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-538">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-539">要在其中定位某个值的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-539">A sequence in which to locate a value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="28511-540">要在序列中定位的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-540">The value to locate in the sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-541">一个对值进行比较的相等比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-541">An equality comparer to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-542">通过使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 来并行确定序列是否包含指定的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-542">Determines in parallel whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-543">如果源序列包含具有指定值的元素，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-543">true if the source sequence contains an element that has the specified value; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-544">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-544">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-545">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-545">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-546">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-546">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-547">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-547">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Count&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-548">返回并行序列中的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-548">Returns the number of elements in a parallel sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As ParallelQuery(Of TSource)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Count source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-549">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-549">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-550">包含要计数的元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-550">A sequence that contains elements to be counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-551">返回并行序列中的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-551">Returns the number of elements in a parallel sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-552">输入序列中的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-552">The number of elements in the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-553">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-553">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-554">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-554">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-555">源中的元素数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-555">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-556">（在这种情况下 InnerException 为 <see cref="T:System.OverflowException" />）- 或 - 在查询的评估过程中出现了一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-556">(In this case the InnerException is <see cref="T:System.OverflowException" />) -or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-557">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-557">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Count (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-558">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-558">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-559">包含要计数的元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-559">A sequence that contains elements to be counted.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-560">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-560">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-561">返回一个数字，表示在指定的并行序列中满足条件的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-561">Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-562">一个数字，表示序列中满足谓词函数条件的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-562">A number that represents how many elements in the sequence satisfy the condition in the predicate function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-563">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-563">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-564">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-564">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-565">源中的元素数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-565">The number of elements in source is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-566">（在这种情况下 InnerException 为 <see cref="T:System.OverflowException" />）- 或 - 在查询的评估过程中出现了一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-566">(In this case the InnerException is <see cref="T:System.OverflowException" />) -or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-567">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-567">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-568">返回指定的并行序列中的元素；如果序列为空，则返回单一实例集合中的指定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-568">Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.DefaultIfEmpty source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-569">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-569">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-570">序列为空时返回默认值的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-570">The sequence to return a default value for if it is empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-571">返回指定的并行序列的元素；如果序列为空，则返回单一实例集合中的类型参数的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-571">Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-572">如果 <paramref name="source" /> 为空，则为包含 default(TSource) 的序列；否则为 <paramref name="source" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-572">A sequence that contains default(TSource) if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-573">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-573">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-574">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-574">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-575">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-575">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-576">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-576">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, TSource defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, !!TSource defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As ParallelQuery(Of TSource), defaultValue As TSource) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, TSource defaultValue);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.ParallelQuery&lt;'Source&gt; * 'Source -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.DefaultIfEmpty (source, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="defaultValue" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-577">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-577">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-578">序列为空时返回指定值的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-578">The sequence to return the specified value for if it is empty.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="28511-579">序列为空时要返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-579">The value to return if the sequence is empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-580">返回指定的并行序列中的元素；如果序列为空，则返回单一实例集合中的指定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-580">Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-581">如果 <paramref name="source" /> 为空，则为包含 defaultValue 的序列；否则为 <paramref name="source" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-581">A sequence that contains defaultValue if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-582">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-582">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-583">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-583">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-584">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-584">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-585">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-585">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Distinct&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-586">通过使用默认的相等比较器对值进行比较，返回并行序列中的非重复元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-586">Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Distinct(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Distinct source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-587">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-587">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-588">要从中移除重复元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-588">The sequence to remove duplicate elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-589">通过使用默认的相等比较器对值进行比较，返回并行序列中的非重复元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-589">Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-590">一个序列，其中包含源序列中的非重复元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-590">A sequence that contains distinct elements from the source sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-591">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-591">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-592">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-592">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-593">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-593">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-594">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-594">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Distinct(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Distinct (source, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-595">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-595">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-596">要从中移除重复元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-596">The sequence to remove duplicate elements from.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-597">用于比较值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-597">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-598">通过使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 对值进行比较，返回并行序列中的非重复元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-598">Returns distinct elements from a parallel sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-599">一个序列，其中包含源序列中的非重复元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-599">A sequence that contains distinct elements from the source sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-600">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-600">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-601">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-601">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-602">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-602">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAt&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAt&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of TSource) (source As ParallelQuery(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAt(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.ElementAt (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-603">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-603">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-604">要从中返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-604">A sequence to return an element from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="28511-605">要检索的从零开始的元素索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-605">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-606">返回并行序列中指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-606">Returns the element at a specified index in a parallel sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-607">源序列中指定位置处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-607">The element at the specified position in the source sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-608">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-608">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-609">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-609">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="28511-610">
            <paramref name="index" /> 小于零或大于等于 <paramref name="source" /> 中的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-610">
              <paramref name="index" /> is less than 0 or greater than or equal to the number of elements in <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-611">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-611">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-612">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-612">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAtOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAtOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of TSource) (source As ParallelQuery(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAtOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.ElementAtOrDefault (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-613">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-613">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-614">要从中返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-614">A sequence to return an element from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="28511-615">要检索的从零开始的元素索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-615">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-616">返回并行序列中指定索引处的元素；如果索引超出范围，则返回默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-616">Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-617">如果索引超出源序列的范围，则为 default(TSource)；否则为源序列中指定位置处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-617">default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-618">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-618">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-619">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-619">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-620">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-620">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-621">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-621">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Empty&lt;TResult&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Empty&lt;TResult&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Empty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Empty(Of TResult) () As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Empty();" />
      <MemberSignature Language="F#" Value="static member Empty : unit -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="28511-622">要分配给返回的泛型序列的类型参数的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-622">The type to assign to the type parameter of the returned generic sequence.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="28511-623">返回一个具有指定的类型参数的空 ParallelQuery{TResult}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-623">Returns an empty ParallelQuery{TResult} that has the specified type argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-624">一个空序列，其类型参数为 <paramref name="TResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-624">An empty sequence whose type argument is <paramref name="TResult" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-625">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-625">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Except&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-626">生成两个并行序列的差集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-626">Produces the set difference of two parallel sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-627">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-627">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-628">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-628">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-629">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-629">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-630">切勿调用此 Except 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-630">This Except overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-631">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-631">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-632">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-632">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-633">此重载可禁止的使用情况的左侧的数据源的类型的情况除外<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-633">This overload exists to disallow usage of Except with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-634">否则为 Except 运算符会显示为绑定到的并行实现中，但在现实中绑定到顺序的实现。</span><span class="sxs-lookup"><span data-stu-id="28511-634">Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-635">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-635">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-636">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-636">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-637">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-637">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-638">一个序列，其中的未同时出现在 <paramref name="second" /> 中的元素将会返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-638">A sequence whose elements that are not also in <paramref name="second" /> will be returned.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-639">一个序列，其中的元素如果同时出现在第一个序列中，则将导致从返回的序列中移除这些元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-639">A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-640">通过使用默认的相等比较器对值进行比较，生成两个并行序列的差集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-640">Produces the set difference of two parallel sequences by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-641">包含这两个序列的元素的差集的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-641">A sequence that contains the set difference of the elements of two sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-642">
            <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-642">
              <paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-643">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-643">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-644">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-644">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-645">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-645">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-646">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-646">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-647">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-647">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-648">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-648">This parameter is not used.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-649">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-649">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-650">切勿调用此 Except 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-650">This Except overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-651">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-651">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-652">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-652">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-653">此重载可禁止的使用情况的左侧的数据源的类型的情况除外<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-653">This overload exists to disallow usage of Except with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-654">否则为 Except 运算符会显示为绑定到的并行实现中，但在现实中绑定到顺序的实现。</span><span class="sxs-lookup"><span data-stu-id="28511-654">Otherwise, the Except operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-655">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-655">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-656">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-656">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Except(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Except (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-657">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-657">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-658">一个序列，其中的未同时出现在 <paramref name="second" /> 中的元素将会返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-658">A sequence whose elements that are not also in <paramref name="second" /> will be returned.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-659">一个序列，其中的元素如果同时出现在第一个序列中，则将导致从返回的序列中移除这些元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-659">A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-660">用于比较值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-660">
              <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-661">通过使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 对值进行比较产生两个并行序列的差集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-661">Produces the set difference of two parallel sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-662">包含这两个序列的元素的差集的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-662">A sequence that contains the set difference of the elements of two sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-663">
            <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-663">
              <paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-664">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-664">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-665">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-665">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-666">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-666">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="First&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-667">返回并行序列中的第一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-667">Returns the first element of a parallel sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.First source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-668">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-668">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-669">要返回其第一个元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-669">The sequence to return the first element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-670">返回并行序列中的第一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-670">Returns the first element of a parallel sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-671">返回指定序列中的第一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-671">The first element in the specified sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-672">如果查询未排序，则非确定性的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="28511-672">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="28511-673">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-673">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-674">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-674">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-675">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-675">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-676">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-676">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-677">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-677">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-678">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-678">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.First (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-679">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-679">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-680">要从中返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-680">The sequence to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-681">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-681">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-682">返回并行序列中满足指定条件的第一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-682">Returns the first element in a parallel sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-683">序列中通过指定谓词函数中的测试的第一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-683">The first element in the sequence that passes the test in the specified predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-684">如果查询未排序，则非确定性的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="28511-684">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="28511-685">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-685">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-686">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-686">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-687">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-687">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-688">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-688">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-689">
            <paramref name="source" /> 中没有元素满足 <paramref name="predicate" /> 中的条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-689">No element in <paramref name="source" /> satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-690">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-690">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FirstOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-691">返回并行序列中的第一个元素；如果该序列中不包含任何元素，则返回默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-691">Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.FirstOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-692">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-692">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-693">要返回其第一个元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-693">The sequence to return the first element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-694">返回并行序列中的第一个元素；如果该序列中不包含任何元素，则返回默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-694">Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-695">如果 <paramref name="source" /> 为空，则返回 default(TSource)；否则返回 <paramref name="source" /> 中的第一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-695">default(TSource) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-696">如果查询未排序，则非确定性的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="28511-696">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="28511-697">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-697">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-698">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-698">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-699">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-699">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-700">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-700">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-701">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-701">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.FirstOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-702">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-702">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-703">要从中返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-703">The sequence to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-704">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-704">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-705">返回并行序列中满足条件的第一个元素；如果未找到这样的元素，则返回默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-705">Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-706">如果 <paramref name="source" /> 为空或没有元素通过 predicate 指定的测试，则返回 default(TSource)，否则返回 <paramref name="source" /> 中通过 predicate 指定的测试的第一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-706">default(TSource) if <paramref name="source" /> is empty or if no element passes the test specified by predicate; otherwise, the first element in <paramref name="source" /> that passes the test specified by predicate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-707">如果查询未排序，则非确定性的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="28511-707">If the query is not ordered, then the first element is non-deterministic.</span></span> <span data-ttu-id="28511-708">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-708">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-709">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-709">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-710">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-710">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-711">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-711">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-712">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-712">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ForAll&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static void ForAll&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Action&lt;TSource&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForAll&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Action`1&lt;!!TSource&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ForAll(Of TSource) (source As ParallelQuery(Of TSource), action As Action(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ForAll(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Action&lt;TSource&gt; ^ action);" />
      <MemberSignature Language="F#" Value="static member ForAll : System.Linq.ParallelQuery&lt;'Source&gt; * Action&lt;'Source&gt; -&gt; unit" Usage="System.Linq.ParallelEnumerable.ForAll (source, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="action" Type="System.Action&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-713">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-713">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-714">其元素将由 <paramref name="action" /> 处理的 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-714">The <see cref="T:System.Linq.ParallelQuery`1" /> whose elements will be processed by <paramref name="action" />.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="28511-715">要对每个元素调用的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-715">An Action to invoke on each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-716">对 <paramref name="source" /> 中的每个元素并行调用指定的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-716">Invokes in parallel the specified action for each element in the <paramref name="source" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-717">这是处理并行化查询的输出，因为它不需要合并步骤结束时的有效方法。</span><span class="sxs-lookup"><span data-stu-id="28511-717">This is an efficient way to process the output from a parallelized query because it does not require a merge step at the end.</span></span> <span data-ttu-id="28511-718">有关详细信息，请参阅[PLINQ 中的合并选项](~/docs/standard/parallel-programming/merge-options-in-plinq.md)或[PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-718">For more information, see [Merge Options in PLINQ](~/docs/standard/parallel-programming/merge-options-in-plinq.md) or [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span> <span data-ttu-id="28511-719">此方法将产生负面影响，因为它可用于观察在并行查询执行的实际顺序。</span><span class="sxs-lookup"><span data-stu-id="28511-719">Because this method produces a side-effect, it can be used to observe the actual order of execution in a parallel query.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-720">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-720">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-721">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-721">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-722">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-722">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-723">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-723">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-724">根据键选择器函数对序列中的元素进行并行分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-724">Groups in parallel the elements of a sequence according to a key selector function.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As ParallelQuery(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-725">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-725">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-726">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-726">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-727">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-727">An OrderedParallelQuery{TSource}that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-728">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-728">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-729">根据指定的键选择器函数对序列中的元素进行并行分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-729">Groups in parallel the elements of a sequence according to a specified key selector function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-730">依照 <paramref name="TKey" /> 按降序排列的组序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-730">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-731">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-731">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-732">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-732">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-733">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-733">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-734">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-734">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-735">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-735">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-736">返回的键的类型<paramref name="keySelector" /> &gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-736">The type of the key returned by <paramref name="keySelector" />&gt;.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-737">一个包含要排序的元素的 <see cref="T:System.Linq.OrderedParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-737">An <see cref="T:System.Linq.OrderedParallelQuery`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-738">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-738">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-739">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-739">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-740">根据指定的键选择器函数对序列中的元素进行并行分组，并使用指定的 <see cref="T:System.Collections.Generic.IComparer`1" /> 对键进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-740">Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified <see cref="T:System.Collections.Generic.IComparer`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-741">依照 <paramref name="TKey" /> 按降序排列的组序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-741">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-742">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-742">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-743">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-743">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-744">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-744">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-745">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-745">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As ParallelQuery(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-746">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-746">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-747">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-747">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="28511-748">
            <see cref="T:System.Linq.IGrouping`2" /> 中元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-748">The type of the elements in the <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-749">一个包含要排序的元素的 <see cref="T:System.Linq.OrderedParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-749">An <see cref="T:System.Linq.OrderedParallelQuery`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-750">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-750">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="28511-751">用于将每个源元素映射到 <see cref="T:System.Linq.IGrouping`2" /> 中的元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-751">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-752">根据指定的键选择器函数对序列中的元素进行并行分组，并且通过使用指定的函数对每个组中的元素进行投影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-752">Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-753">依照 <paramref name="TKey" /> 按降序排列的组序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-753">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-754">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-754">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-755">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-755">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-756">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-756">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-757">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-757">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-758">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-758">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-759">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-759">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="28511-760">IGrouping 中的元素的类型</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-760">The type of the elements in the IGrouping</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-761">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-761">An OrderedParallelQuery{TSource}that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-762">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-762">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="28511-763">用于将每个源元素映射到 IGrouping 中的元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-763">A function to map each source element to an element in an IGrouping.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-764">一个用于比较键的 IComparer{TSource}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-764">An IComparer{TSource} to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-765">根据键选择器函数对序列中的元素进行并行分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-765">Groups in parallel the elements of a sequence according to a key selector function.</span>
          </span>
          <span data-ttu-id="28511-766">通过使用比较器对键进行比较，并且通过使用指定的函数对每个组的元素进行投影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-766">The keys are compared by using a comparer and each group's elements are projected by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-767">依照 <paramref name="TKey" /> 按降序排列的组序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-767">A sequence of groups that are sorted descending according to <paramref name="TKey" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-768">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-768">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-769">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-769">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-770">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-770">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-771">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-771">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), resultSelector As Func(Of TKey, IEnumerable(Of TSource), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-772">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-772">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-773">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-773">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-774">
            <paramref name="resultSelector" /> 返回的结果值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-774">The type of the result value returned by <paramref name="resultSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-775">要对其元素进行分组的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-775">A sequence whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-776">用于提取每个元素的键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-776">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-777">用于从每个组中创建结果值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-777">A function to create a result value from each group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-778">根据指定的键选择器函数对序列中的元素进行并行分组，并且从每个组及其键中创建结果值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-778">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-779">
            <paramref name="TResult" /> 类型的元素的序列，其中每个元素都表示对一个组及其键的投影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-779">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-780">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-780">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-781">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-781">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-782">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-782">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-783">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-783">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), resultSelector As Func(Of TKey, IEnumerable(Of TSource), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-784">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-784">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-785">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-785">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-786">
            <paramref name="resultSelector" /> 返回的结果值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-786">The type of the result value returned by <paramref name="resultSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-787">要对其元素进行分组的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-787">A sequence whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-788">用于提取每个元素的键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-788">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-789">用于从每个组中创建结果值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-789">A function to create a result value from each group.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-790">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-790">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-791">根据指定的键选择器函数对序列中的元素进行并行分组，并且从每个组及其键中创建结果值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-791">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="28511-792">通过使用指定的比较器对键进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-792">The keys are compared by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-793">一个组序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-793">A sequence of groups.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-794">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-794">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-795">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-795">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-796">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-796">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-797">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-797">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), resultSelector As Func(Of TKey, IEnumerable(Of TElement), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-798">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-798">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-799">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-799">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="28511-800">每个 IGrouping{TKey, TElement} 中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-800">The type of the elements in each IGrouping{TKey, TElement}.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-801">
            <paramref name="resultSelector" /> 返回的结果值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-801">The type of the result value returned by <paramref name="resultSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-802">要对其元素进行分组的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-802">A sequence whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-803">用于提取每个元素的键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-803">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="28511-804">用于将每个源元素映射到 IGrouping&lt;TKey, TElement&gt; 中的元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-804">A function to map each source element to an element in an IGrouping&lt;TKey, TElement&gt;.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-805">用于从每个组中创建结果值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-805">A function to create a result value from each group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-806">根据指定的键选择器函数对序列中的元素进行并行分组，并且从每个组及其键中创建结果值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-806">Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="28511-807">通过使用指定的函数对每个组的元素进行投影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-807">The elements of each group are projected by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-808">
            <paramref name="TResult" /> 类型的元素的序列，其中每个元素都表示对一个组及其键的投影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-808">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-809">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-809">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-810">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-810">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-811">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-811">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-812">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-812">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), resultSelector As Func(Of TKey, IEnumerable(Of TElement), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupBy (source, keySelector, elementSelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-813">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-813">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-814">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-814">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="28511-815">每个 IGrouping{TKey, TElement} 中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-815">The type of the elements in each IGrouping{TKey, TElement}.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-816">
            <paramref name="resultSelector" /> 返回的结果值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-816">The type of the result value returned by <paramref name="resultSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-817">要对其元素进行分组的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-817">A sequence whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-818">用于提取每个元素的键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-818">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="28511-819">用于将每个源元素映射到 IGrouping{Key, TElement} 中的元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-819">A function to map each source element to an element in an IGrouping{Key, TElement}.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-820">用于从每个组中创建结果值的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-820">A function to create a result value from each group.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-821">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-821">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-822">根据指定的键选择器函数对序列中的元素进行分组，并且从每个组及其键中创建结果值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-822">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="28511-823">通过使用指定的比较器对键值进行比较，并且通过使用指定的函数对每个组的元素进行投影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-823">Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-824">
            <paramref name="TResult" /> 类型的元素的序列，其中每个元素都表示对一个组及其键的投影。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-824">A sequence of elements of type <paramref name="TResult" /> where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-825">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-825">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-826">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-826">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-827">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-827">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-828">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-828">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-829">基于键相等对两个序列的元素进行并行关联并对结果进行分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-829">Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="28511-830">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-830">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="28511-831">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-831">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-832">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-832">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-833">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-833">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="28511-834">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-834">This parameter is not used.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="28511-835">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-835">This parameter is not used.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="28511-836">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-836">This parameter is not used.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="28511-837">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-837">This parameter is not used.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-838">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-838">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-839">切勿调用此 GroupJoin 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-839">This GroupJoin overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-840">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-840">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-841">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-841">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-842">此重载可禁止的 GroupJoin 左侧的数据源类型的使用情况<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-842">This overload exists to disallow usage of GroupJoin with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-843">否则为 GroupJoin 运算符会显示为绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-843">Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-844">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-844">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-845">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-845">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-846">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-846">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-847">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-847">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="28511-848">第一个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-848">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="28511-849">第二个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-849">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-850">键选择器函数返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-850">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-851">结果元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-851">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="28511-852">要联接的第一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-852">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="28511-853">要与第一个序列联接的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-853">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="28511-854">用于从第一个序列的每个元素提取联接键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-854">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="28511-855">用于从第二个序列的每个元素提取联接键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-855">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-856">用于从第一个序列的元素和第二个序列的匹配元素集合中创建结果元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-856">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-857">基于键相等对两个序列的元素进行并行关联并对结果进行分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-857">Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</span>
          </span>
          <span data-ttu-id="28511-858">使用默认的相等比较器对键进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-858">The default equality comparer is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-859">一个序列，其中包含通过对两个序列执行分组联接获得的 <paramref name="TResult" /> 类型的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-859">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing a grouped join on two sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-860">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-860">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-861">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-861">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-862">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-862">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-863">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-863">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="28511-864">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-864">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="28511-865">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-865">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-866">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-866">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-867">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-867">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="28511-868">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-868">This parameter is not used.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="28511-869">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-869">This parameter is not used.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="28511-870">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-870">This parameter is not used.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="28511-871">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-871">This parameter is not used.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-872">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-872">This parameter is not used.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-873">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-873">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-874">切勿调用此 GroupJoin 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-874">This GroupJoin overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-875">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-875">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-876">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-876">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-877">此重载可禁止的 GroupJoin 左侧的数据源类型的使用情况<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-877">This overload exists to disallow usage of GroupJoin with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-878">否则为 GroupJoin 运算符会显示为绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-878">Otherwise, the GroupJoin operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-879">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-879">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-880">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-880">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ GroupJoin(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="28511-881">第一个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-881">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="28511-882">第二个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-882">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-883">键选择器函数返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-883">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-884">结果元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-884">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="28511-885">要联接的第一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-885">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="28511-886">要与第一个序列联接的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-886">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="28511-887">用于从第一个序列的每个元素提取联接键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-887">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="28511-888">用于从第二个序列的每个元素提取联接键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-888">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-889">用于从第一个序列的元素和第二个序列的匹配元素集合中创建结果元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-889">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-890">用于对键进行哈希处理和比较的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-890">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-891">基于键相等对两个序列的元素进行并行关联并对结果进行分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-891">Correlates in parallel the elements of two sequences based on key equality and groups the results.</span>
          </span>
          <span data-ttu-id="28511-892">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 对键进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-892">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-893">一个序列，其中包含通过对两个序列执行分组联接获得的 <paramref name="TResult" /> 类型的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-893">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing a grouped join on two sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-894">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-894">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-895">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-895">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-896">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-896">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-897">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-897">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-898">生成两个并行序列的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-898">Produces the set intersection of two parallel sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-899">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-899">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-900">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-900">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-901">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-901">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-902">切勿调用此 Intersect 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-902">This Intersect overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-903">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-903">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-904">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-904">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-905">此重载可禁止的 Intersect 左侧的数据源类型的使用情况<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-905">This overload exists to disallow usage of Intersect with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-906">否则为 Intersect 运算符会显示为绑定到的并行实现中，但在现实中绑定到顺序的实现。</span><span class="sxs-lookup"><span data-stu-id="28511-906">Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-907">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-907">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-908">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-908">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-909">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-909">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-910">一个序列，其中的同时出现在 <paramref name="second" /> 中的非重复元素将会返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-910">A sequence whose distinct elements that also appear in <paramref name="second" /> will be returned.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-911">一个序列，其中的同时出现在第一个序列中的非重复元素将被返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-911">A sequence whose distinct elements that also appear in the first sequence will be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-912">通过使用默认的相等比较器对值进行比较，生成两个并行序列的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-912">Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-913">包含组成两个序列交集的元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-913">A sequence that contains the elements that form the set intersection of two sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-914">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-914">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-915">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-915">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-916">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-916">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-917">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-917">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-918">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-918">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-919">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-919">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-920">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-920">This parameter is not used.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-921">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-921">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-922">切勿调用此 Intersect 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-922">This Intersect overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-923">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-923">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-924">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-924">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-925">此重载可禁止的 Intersect 左侧的数据源类型的使用情况<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-925">This overload exists to disallow usage of Intersect with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-926">否则为 Intersect 运算符会显示为绑定到的并行实现中，但在现实中绑定到顺序的实现。</span><span class="sxs-lookup"><span data-stu-id="28511-926">Otherwise, the Intersect operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-927">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-927">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-928">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-928">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Intersect(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Intersect (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-929">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-929">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-930">一个序列，其中的同时出现在 <paramref name="second" /> 中的非重复元素将会返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-930">A sequence whose distinct elements that also appear in <paramref name="second" /> will be returned.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-931">一个序列，其中的同时出现在第一个序列中的非重复元素将被返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-931">A sequence whose distinct elements that also appear in the first sequence will be returned.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-932">用于比较值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-932">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-933">通过使用指定的 IEqualityComparer{T} 对值进行比较，生成两个并行序列的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-933">Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-934">包含组成两个序列交集的元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-934">A sequence that contains the elements that form the set intersection of two sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-935">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-935">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-936">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-936">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-937">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-937">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-938">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-938">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-939">基于匹配键对两个序列的元素进行并行关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-939">Correlates in parallel the elements of two sequences based on matching keys.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="28511-940">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-940">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="28511-941">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-941">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-942">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-942">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-943">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-943">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="28511-944">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-944">This parameter is not used.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="28511-945">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-945">This parameter is not used.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="28511-946">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-946">This parameter is not used.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="28511-947">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-947">This parameter is not used.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-948">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-948">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-949">切勿调用此 Join 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-949">This Join overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-950">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-950">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-951">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-951">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-952">此重载可禁止使用联接左侧的数据源类型<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-952">This overload exists to disallow usage Join with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-953">否则为联接运算符会显示为绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-953">Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-954">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-954">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-955">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-955">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-956">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-956">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-957">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-957">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="28511-958">第一个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-958">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="28511-959">第二个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-959">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-960">键选择器函数返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-960">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-961">结果元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-961">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="28511-962">要联接的第一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-962">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="28511-963">要与第一个序列联接的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-963">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="28511-964">用于从第一个序列的每个元素提取联接键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-964">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="28511-965">用于从第二个序列的每个元素提取联接键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-965">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-966">用于从两个匹配元素创建结果元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-966">A function to create a result element from two matching elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-967">基于匹配键对两个序列的元素进行并行关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-967">Correlates in parallel the elements of two sequences based on matching keys.</span>
          </span>
          <span data-ttu-id="28511-968">使用默认的相等比较器对键进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-968">The default equality comparer is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-969">一个序列，其中包含通过对两个序列执行内部联接获得的 <paramref name="TResult" /> 类型的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-969">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing an inner join on two sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-970">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-970">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-971">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-971">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-972">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-972">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-973">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-973">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * seq&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="28511-974">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-974">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="28511-975">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-975">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-976">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-976">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-977">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-977">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="28511-978">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-978">This parameter is not used.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="28511-979">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-979">This parameter is not used.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="28511-980">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-980">This parameter is not used.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="28511-981">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-981">This parameter is not used.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-982">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-982">This parameter is not used.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-983">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-983">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-984">切勿调用此 Join 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-984">This Join overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-985">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-985">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-986">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-986">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-987">此重载可禁止联接的左侧的数据源类型的使用情况<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-987">This overload exists to disallow usage of Join with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-988">否则为联接运算符会显示为绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-988">Otherwise, the Join operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-989">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-989">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-990">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-990">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.ParallelQuery&lt;TOuter&gt; outer, System.Linq.ParallelQuery&lt;TInner&gt; inner, Func&lt;TOuter,TKey&gt; outerKeySelector, Func&lt;TInner,TKey&gt; innerKeySelector, Func&lt;TOuter,TInner,TResult&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TOuter&gt; outer, class System.Linq.ParallelQuery`1&lt;!!TInner&gt; inner, class System.Func`2&lt;!!TOuter, !!TKey&gt; outerKeySelector, class System.Func`2&lt;!!TInner, !!TKey&gt; innerKeySelector, class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As ParallelQuery(Of TOuter), inner As ParallelQuery(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult), comparer As IEqualityComparer(Of TKey)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Join(System::Linq::ParallelQuery&lt;TOuter&gt; ^ outer, System::Linq::ParallelQuery&lt;TInner&gt; ^ inner, Func&lt;TOuter, TKey&gt; ^ outerKeySelector, Func&lt;TInner, TKey&gt; ^ innerKeySelector, Func&lt;TOuter, TInner, TResult&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.ParallelQuery&lt;'Outer&gt; * System.Linq.ParallelQuery&lt;'Inner&gt; * Func&lt;'Outer, 'Key&gt; * Func&lt;'Inner, 'Key&gt; * Func&lt;'Outer, 'Inner, 'Result&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.ParallelQuery&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Linq.ParallelQuery&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Func&lt;TOuter,TKey&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Func&lt;TInner,TKey&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TOuter,TInner,TResult&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="28511-991">第一个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-991">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="28511-992">第二个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-992">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-993">键选择器函数返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-993">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-994">结果元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-994">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="28511-995">要联接的第一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-995">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="28511-996">要与第一个序列联接的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-996">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="28511-997">用于从第一个序列的每个元素提取联接键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-997">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="28511-998">用于从第二个序列的每个元素提取联接键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-998">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-999">用于从两个匹配元素创建结果元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-999">A function to create a result element from two matching elements.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-1000">用于对键进行哈希处理和比较的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1000">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1001">基于匹配键对两个序列的元素进行并行关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1001">Correlates in parallel the elements of two sequences based on matching keys.</span>
          </span>
          <span data-ttu-id="28511-1002">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 对键进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1002">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1003">一个序列，其中包含通过对两个序列执行内部联接获得的 <paramref name="TResult" /> 类型的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1003">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing an inner join on two sequences.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1004">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1004">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1005">
            <paramref name="source" /> 或 <paramref name="action" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1005">
              <paramref name="source" /> or <paramref name="action" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1006">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1006">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1007">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1007">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Last&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1008">返回并行序列中的最后一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1008">Returns the last element of a parallel sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Last source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1009">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1009">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1010">要从中返回最后一个元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1010">The sequence to return the last element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1011">返回并行序列中的最后一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1011">Returns the last element of a parallel sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1012">源序列中最后位置处的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1012">The value at the last position in the source sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1013">如果查询未排序，则非确定性的最后一个元素。</span><span class="sxs-lookup"><span data-stu-id="28511-1013">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="28511-1014">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-1014">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1015">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1015">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1016">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1016">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1017">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1017">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1018">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1018">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1019">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1019">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Last (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1020">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1020">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1021">要从中返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1021">The sequence to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1022">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1022">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1023">返回并行序列中满足指定条件的最后一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1023">Returns the last element of a parallel sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1024">序列中通过指定谓词函数中的测试的最后一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1024">The last element in the sequence that passes the test in the specified predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1025">如果查询未排序，则非确定性的最后一个元素。</span><span class="sxs-lookup"><span data-stu-id="28511-1025">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="28511-1026">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-1026">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1027">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1027">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1028">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1028">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1029">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1029">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1030">
            <paramref name="source" /> 中没有元素满足 <paramref name="predicate" /> 中的条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1030">No element in <paramref name="source" /> satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1031">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1031">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1032">返回并行序列中的最后一个元素；如果该序列中不包含任何元素，则返回默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1032">Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.LastOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1033">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1033">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1034">要从中返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1034">The sequence to return an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1035">返回并行序列中的最后一个元素；如果该序列中不包含任何元素，则返回默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1035">Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1036">如果源序列为空，则返回 default()；否则返回该序列中的最后一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1036">default() if the source sequence is empty; otherwise, the last element in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1037">如果查询未排序，则非确定性的最后一个元素。</span><span class="sxs-lookup"><span data-stu-id="28511-1037">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="28511-1038">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-1038">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1039">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1039">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1040">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1040">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1041">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1041">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1042">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1042">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.LastOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1043">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1043">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1044">要从中返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1044">The sequence to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1045">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1045">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1046">返回并行序列中满足条件的最后一个元素；如果未找到这样的元素，则返回默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1046">Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1047">如果序列为空或没有元素通过谓词函数中的测试，则返回 default()；否则，返回通过谓词函数中的测试的最后一个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1047">default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1048">如果查询未排序，则非确定性的最后一个元素。</span><span class="sxs-lookup"><span data-stu-id="28511-1048">If the query is not ordered, then the last element is non-deterministic.</span></span> <span data-ttu-id="28511-1049">有关详细信息，请参阅 [PLINQ 中的顺序保留](~/docs/standard/parallel-programming/order-preservation-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-1049">For more information, see [Order Preservation in PLINQ](~/docs/standard/parallel-programming/order-preservation-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1050">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1050">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1051">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1051">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1052">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1052">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1053">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1053">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LongCount&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1054">返回一个 Int64，表示并行序列中的元素的总数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1054">Returns an Int64 that represents the total number of elements in a parallel sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As ParallelQuery(Of TSource)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.LongCount source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1055">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1055">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1056">包含要计数的元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1056">A sequence that contains elements to be counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1057">返回一个 Int64，表示并行序列中的元素的总数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1057">Returns an Int64 that represents the total number of elements in a parallel sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1058">输入序列中的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1058">The number of elements in the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1059">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1059">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1060">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1060">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1061">源中的元素数大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1061">The number of elements in source is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1062">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1062">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1063">计算结果大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1063">The computed result is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1064">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1064">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.LongCount (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1065">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1065">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1066">包含要计数的元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1066">A sequence that contains elements to be counted.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1067">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1067">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1068">返回一个 Int64，表示并行序列中满足条件的元素的数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1068">Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1069">一个数字，表示序列中满足谓词函数条件的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1069">A number that represents how many elements in the sequence satisfy the condition in the predicate function.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1070">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1070">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1071">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1071">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1072">源中的元素数大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1072">The number of elements in source is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1073">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1073">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1074">计算结果大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1074">The computed result is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1075">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1075">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1076">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1076">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Max(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1077">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1077">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1078">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1078">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1079">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1079">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1080">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1080">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1081">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1081">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1082">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1082">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1083">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1083">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1084">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1084">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Max(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1085">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1085">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1086">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1086">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1087">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1087">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1088">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1088">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1089">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1089">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1090">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1090">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1091">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1091">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1092">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1092">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Max(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1093">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1093">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1094">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1094">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1095">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1095">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1096">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1096">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1097">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1097">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1098">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1098">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1099">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1099">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1100">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1100">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Max(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1101">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1101">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1102">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1102">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1103">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1103">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1104">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1104">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1105">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1105">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1106">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1106">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1107">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1107">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1108">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1108">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1109">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1109">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1110">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1110">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1111">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1111">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1112">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1112">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1113">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1113">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1114">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1114">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1115">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1115">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1116">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1116">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1117">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1117">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1118">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1118">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1119">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1119">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1120">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1120">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1121">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1121">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1122">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1122">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1123">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1123">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1124">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1124">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1125">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1125">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1126">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1126">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1127">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1127">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1128">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1128">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1129">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1129">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1130">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1130">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1131">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1131">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1132">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1132">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1133">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1133">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1134">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1134">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1135">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1135">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1136">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1136">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1137">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1137">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1138">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1138">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1139">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1139">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1140">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1140">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Max (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Max(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Max(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1141">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1141">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1142">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1142">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1143">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1143">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1144">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1144">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1145">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1145">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1146">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1146">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1147">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1147">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1148">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1148">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Max(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1149">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1149">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1150">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1150">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1151">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1151">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1152">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1152">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1153">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1153">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1154">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1154">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1155">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1155">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1156">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1156">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1157">源序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1157">The type of elements in the source sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1158">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1158">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1159">返回值的并行序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1159">Returns the maximum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1160">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1160">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1161">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1161">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1162">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1162">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1163">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1163">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1164">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1164">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1165">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1165">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1166">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1166">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1167">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1167">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1168">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1168">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1169">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1169">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1170">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1170">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1171">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1171">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1172">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1172">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1173">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1173">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1174">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1174">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1175">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1175">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1176">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1176">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1177">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1177">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1178">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1178">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1179">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1179">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1180">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1180">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1181">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1181">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1182">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1182">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1183">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1183">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1184">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1184">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1185">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1185">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1186">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1186">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1187">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1187">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1188">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1188">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1189">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1189">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1190">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1190">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1191">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1191">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1192">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1192">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1193">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1193">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1194">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1194">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1195">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1195">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1196">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1196">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1197">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1197">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1198">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1198">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1199">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1199">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1200">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1200">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1201">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1201">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1202">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1202">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1203">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1203">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1204">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1204">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1205">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1205">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1206">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1206">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1207">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1207">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1208">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1208">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1209">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1209">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1210">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1210">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1211">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1211">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1212">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1212">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1213">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1213">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1214">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1214">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1215">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1215">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1216">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1216">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1217">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1217">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1218">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1218">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1219">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1219">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1220">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1220">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1221">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1221">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1222">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1222">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1223">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1223">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1224">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1224">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1225">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1225">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1226">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1226">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1227">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1227">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1228">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1228">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1229">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1229">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1230">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1230">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1231">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1231">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1232">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1232">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1233">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1233">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1234">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1234">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1235">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1235">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1236">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1236">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1237">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1237">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1238">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1238">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1239">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1239">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1240">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1240">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1241">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1241">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1242">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1242">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1243">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1243">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1244">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1244">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1245">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1245">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1246">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1246">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1247">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1247">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1248">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1248">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1249">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1249">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1250">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1250">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1251">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1251">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1252">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1252">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1253">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1253">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1254">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1254">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1255">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1255">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Max&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1256">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1256">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1257">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1257">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1258">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1258">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1259">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1259">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1260">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1260">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1261">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1261">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1262">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1262">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1263">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1263">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1264">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1264">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1265">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1265">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Max&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Max&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Max(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1266">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1266">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1267">
            <paramref name="selector" /> 返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1267">The type of the value returned by <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1268">要确定其最大值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1268">A sequence of values to determine the maximum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1269">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1269">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1270">对一个序列中的每个元素并行调用转换函数，并返回最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1270">Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1271">序列中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1271">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1272">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1272">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1273">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1273">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1274">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1274">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1275">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1275">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1276">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1276">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1277">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1277">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Min(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1278">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1278">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1279">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1279">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1280">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1280">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1281">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1281">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1282">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1282">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1283">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1283">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1284">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1284">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1285">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1285">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Min(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1286">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1286">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1287">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1287">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1288">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1288">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1289">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1289">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1290">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1290">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1291">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1291">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1292">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1292">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1293">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1293">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Min(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1294">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1294">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1295">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1295">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1296">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1296">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1297">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1297">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1298">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1298">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1299">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1299">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1300">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1300">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1301">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1301">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Min(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1302">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1302">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1303">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1303">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1304">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1304">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1305">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1305">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1306">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1306">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1307">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1307">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1308">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1308">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1309">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1309">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1310">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1310">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1311">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1311">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1312">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1312">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1313">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1313">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1314">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1314">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1315">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1315">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1316">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1316">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1317">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1317">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1318">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1318">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1319">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1319">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1320">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1320">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1321">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1321">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1322">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1322">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1323">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1323">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1324">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1324">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1325">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1325">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1326">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1326">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1327">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1327">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1328">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1328">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1329">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1329">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1330">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1330">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1331">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1331">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1332">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1332">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1333">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1333">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1334">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1334">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1335">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1335">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1336">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1336">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1337">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1337">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1338">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1338">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1339">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1339">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1340">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1340">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1341">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1341">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Min (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Min(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Min(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1342">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1342">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1343">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1343">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1344">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1344">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1345">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1345">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1346">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1346">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1347">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1347">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1348">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1348">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1349">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1349">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Min(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1350">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1350">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1351">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1351">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1352">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1352">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1353">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1353">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1354">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1354">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1355">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1355">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1356">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1356">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1357">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1357">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1358">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1358">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1359">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1359">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1360">返回值的并行序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1360">Returns the minimum value in a parallel sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1361">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1361">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1362">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1362">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1363">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1363">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1364">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1364">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1365">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1365">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1366">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1366">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1367">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1367">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1368">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1368">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1369">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1369">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1370">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1370">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1371">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1371">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1372">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1372">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1373">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1373">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1374">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1374">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1375">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1375">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1376">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1376">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1377">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1377">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1378">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1378">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1379">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1379">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1380">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1380">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1381">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1381">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1382">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1382">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1383">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1383">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1384">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1384">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1385">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1385">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1386">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1386">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1387">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1387">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1388">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1388">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1389">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1389">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1390">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1390">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1391">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1391">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1392">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1392">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1393">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1393">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1394">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1394">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1395">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1395">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1396">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1396">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1397">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1397">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1398">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1398">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1399">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1399">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1400">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1400">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1401">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1401">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1402">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1402">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1403">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1403">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1404">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1404">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1405">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1405">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1406">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1406">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1407">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1407">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1408">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1408">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1409">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1409">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1410">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1410">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1411">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1411">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1412">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1412">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1413">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1413">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1414">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1414">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1415">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1415">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1416">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1416">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1417">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1417">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1418">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1418">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1419">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1419">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1420">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1420">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1421">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1421">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1422">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1422">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1423">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1423">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1424">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1424">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1425">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1425">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1426">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1426">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1427">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1427">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1428">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1428">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1429">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1429">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1430">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1430">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1431">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1431">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1432">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1432">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1433">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1433">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1434">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1434">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1435">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1435">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1436">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1436">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1437">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1437">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1438">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1438">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1439">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1439">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1440">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1440">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1441">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1441">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1442">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1442">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1443">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1443">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1444">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1444">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1445">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1445">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1446">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1446">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1447">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1447">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1448">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1448">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1449">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1449">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1450">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1450">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1451">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1451">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1452">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1452">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1453">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1453">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1454">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1454">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1455">
            <paramref name="source" /> 中不包含任何元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1455">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1456">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1456">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Min&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1457">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1457">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1458">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1458">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1459">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1459">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1460">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1460">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1461">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1461">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1462">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1462">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1463">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1463">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1464">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1464">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1465">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1465">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1466">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1466">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Min&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Min&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Min(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ParallelEnumerable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1467">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1467">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1468">
            <paramref name="selector" /> 返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1468">The type of the value returned by <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1469">要确定其最小值的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1469">A sequence of values to determine the minimum value of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1470">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1470">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1471">对一个序列中的每个元素并行调用转换函数，并返回最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1471">Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1472">序列中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1472">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1473">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1473">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1474">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1474">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1475">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1475">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1476">
            <paramref name="source" /> 不包含任何元素，且 <paramref name="TSource" /> 是不可为 null 的值类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1476">
              <paramref name="source" /> contains no elements and <paramref name="TSource" /> is a non-nullable value type.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1477">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1477">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; OfType&lt;TResult&gt; (this System.Linq.ParallelQuery source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; OfType&lt;TResult&gt;(class System.Linq.ParallelQuery source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType(Of TResult) (source As ParallelQuery) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ OfType(System::Linq::ParallelQuery ^ source);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Linq.ParallelQuery -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.OfType source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1478">筛选序列元素所根据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1478">The type to filter the elements of the sequence on.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1479">要筛选其元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1479">The sequence whose elements to filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1480">根据指定类型筛选 ParallelQuery 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1480">Filters the elements of a ParallelQuery based on a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1481">一个序列，其中包含类型的输入序列中的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1481">A sequence that contains elements from the input sequence of type .</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1482">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1482">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1483">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1483">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1484">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1484">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1485">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1485">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1486">按升序对序列的元素并行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1486">Sorts in parallel the elements of a sequence in ascending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1487">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1487">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-1488">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1488">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1489">一个要排序的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1489">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-1490">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1490">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1491">根据键按升序对序列中的元素进行并行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1491">Sorts in parallel the elements of a sequence in ascending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1492">其中的元素将根据某个键进行排序的 OrderedParallelQuery{TSource}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1492">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1493">与顺序实现，这不是一个稳定排序。</span><span class="sxs-lookup"><span data-stu-id="28511-1493">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="28511-1494">若要实现一个稳定排序，更改窗体的查询： var 排序 = 源。Select((e,i) = > 新 {E = e，我 = i})。OrderBy((v) = > v.e)。ThenBy (v = > v.i)。Select((v) = > v.e);</span><span class="sxs-lookup"><span data-stu-id="28511-1494">To achieve a stable sort, change a query of the form: var ordered = source.Select((e,i) => new { E=e, I=i }).OrderBy((v) => v.e).ThenBy(v => v.i).Select((v) => v.e);</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1495">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1495">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1496">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1496">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1497">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1497">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1498">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1498">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderBy(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1499">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1499">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-1500">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1500">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1501">一个要排序的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1501">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-1502">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1502">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-1503">一个用于比较键的 IComparer{TKey}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1503">An IComparer{TKey} to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1504">使用指定的比较器按升序对序列中的元素进行并行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1504">Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1505">其中的元素将根据某个键进行排序的 OrderedParallelQuery{TSource}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1505">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1506">与顺序实现，这不是一个稳定排序。</span><span class="sxs-lookup"><span data-stu-id="28511-1506">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="28511-1507">请参阅备注<xref:System.Linq.ParallelEnumerable.OrderBy%2A>有关实现稳定排序的方法。</span><span class="sxs-lookup"><span data-stu-id="28511-1507">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1508">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1508">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1509">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1509">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1510">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1510">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1511">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1511">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1512">按降序对序列的元素排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1512">Sorts the elements of a sequence in descending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderByDescending(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1513">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1513">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-1514">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1514">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1515">一个要排序的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1515">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-1516">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1516">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1517">根据键按降序对序列中的元素进行并行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1517">Sorts in parallel the elements of a sequence in descending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1518">一个 OrderedParallelQuery{TSource}，其元素将根据某个键按降序进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1518">An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1519">与顺序实现，这不是一个稳定排序。</span><span class="sxs-lookup"><span data-stu-id="28511-1519">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="28511-1520">请参阅备注<xref:System.Linq.ParallelEnumerable.OrderBy%2A>有关实现稳定排序的方法。</span><span class="sxs-lookup"><span data-stu-id="28511-1520">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1521">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1521">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1522">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1522">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1523">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1523">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1524">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1524">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ OrderByDescending(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1525">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1525">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-1526">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1526">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1527">一个要排序的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1527">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-1528">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1528">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-1529">一个用于比较键的 IComparer{TKey}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1529">An IComparer{TKey} to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1530">使用指定的比较器按降序对序列的元素排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1530">Sorts the elements of a sequence in descending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1531">一个 OrderedParallelQuery{TSource}，其元素将根据某个键按降序进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1531">An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1532">与顺序实现，这不是一个稳定排序。</span><span class="sxs-lookup"><span data-stu-id="28511-1532">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="28511-1533">请参阅备注<xref:System.Linq.ParallelEnumerable.OrderBy%2A>有关实现稳定排序的方法。</span><span class="sxs-lookup"><span data-stu-id="28511-1533">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1534">
            <paramref name="source" /> 或 <paramref name="KeySelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1534">
              <paramref name="source" /> or <paramref name="KeySelector" /> is a null reference (Nothing in Visual Basic)..</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1535">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1535">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1536">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1536">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1537">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1537">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;int&gt; Range (int start, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;int32&gt; Range(int32 start, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Range (start As Integer, count As Integer) As ParallelQuery(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::ParallelQuery&lt;int&gt; ^ Range(int start, int count);" />
      <MemberSignature Language="F#" Value="static member Range : int * int -&gt; System.Linq.ParallelQuery&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Range (start, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="28511-1538">序列中第一个整数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1538">The value of the first integer in the sequence.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="28511-1539">要生成的顺序整数的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1539">The number of sequential integers to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1540">生成指定范围内的整数的并行序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1540">Generates a parallel sequence of integral numbers within a specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1541">C# 中的 IEnumerable&lt;Int32&gt; 或 Visual Basic 中的 IEnumerable(Of Int32)，其中包含某个范围的顺序整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1541">An IEnumerable&lt;Int32&gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="28511-1542">
            <paramref name="count" /> 小于 0 - 或 - <paramref name="start" /> + <paramref name="count" /> - 1 大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1542">
              <paramref name="count" /> is less than 0 -or- <paramref name="start" /> + <paramref name="count" /> - 1 is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1543">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1543">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Repeat&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Repeat&lt;TResult&gt; (TResult element, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Repeat&lt;TResult&gt;(!!TResult element, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Repeat(Of TResult) (element As TResult, count As Integer) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Repeat(TResult element, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : 'Result * int -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Repeat (element, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="TResult" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1544">要在结果序列中重复的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1544">The type of the value to be repeated in the result sequence.</span>
          </span>
        </typeparam>
        <param name="element">
          <span data-ttu-id="28511-1545">要重复的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1545">The value to be repeated.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="28511-1546">在生成序列中重复该值的次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1546">The number of times to repeat the value in the generated sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1547">生成包含一个重复值的并行序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1547">Generates a parallel sequence that contains one repeated value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1548">一个包含重复值的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1548">A sequence that contains a repeated value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="28511-1549">
            <paramref name="count" /> 小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1549">
              <paramref name="count" /> is less than 0.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1550">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1550">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Reverse&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Reverse&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse(Of TSource) (source As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Reverse(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Reverse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1551">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1551">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1552">要反转的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1552">A sequence of values to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1553">反转并行序列中元素的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1553">Inverts the order of the elements in a parallel sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1554">一个序列，其元素以相反顺序对应于输入序列的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1554">A sequence whose elements correspond to those of the input sequence in reverse order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1555">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1555">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1556">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1556">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1557">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1557">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1558">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1558">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1559">将序列中的每个元素并行投影到新窗体中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1559">Projects in parallel each element of a sequence into a new form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Select(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1560">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1560">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1561">选择器返回的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1561">The type of elements resturned by selector.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1562">一个值序列，要对该序列调用转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1562">A sequence of values to invoke a transform function on.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1563">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1563">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1564">通过合并元素的索引，将序列的每个元素并行投影到新窗体中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1564">Projects in parallel each element of a sequence into a new form by incorporating the element's index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1565">一个序列，其元素是基于为 <paramref name="selector" /> 所提供索引对 <paramref name="source" /> 中每个元素调用转换函数的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1565">A sequence whose elements are the result of invoking the transform function on each element of <paramref name="source" />, based on the index supplied to <paramref name="selector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1566">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1566">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1567">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1567">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1568">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1568">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1569">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1569">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span>
          </span>
          <span data-ttu-id="28511-1570">在流式处理方案中可能出现此情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1570">This condition might occur in streaming scenarios.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1571">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1571">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Select(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1572">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1572">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1573">选择器返回的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1573">The type of elements resturned by selector.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1574">一个值序列，要对该序列调用转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1574">A sequence of values to invoke a transform function on.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1575">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1575">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1576">将序列中的每个元素并行投影到新窗体中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1576">Projects in parallel each element of a sequence into a new form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1577">一个序列，其元素是对 <paramref name="source" /> 的每个元素调用转换函数的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1577">A sequence whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1578">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1578">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1579">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1579">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1580">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1580">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1581">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1581">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectMany&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1582">将序列的每个元素以并行方式投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 并将结果序列合并为一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1582">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and flattens the resulting sequences into one sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, IEnumerable(Of TResult))) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Result&gt;&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1583">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1583">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1584">选择器返回的序列元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1584">The type of the elements of the sequence returned by selector.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1585">一个要投影的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1585">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1586">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1586">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1587">将序列的每个元素以并行方式投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 并将结果序列合并为一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1587">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and flattens the resulting sequences into one sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1588">一个序列，其元素是对输入序列的每个元素调用一对多转换函数的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1588">A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1589">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1589">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1590">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1590">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1591">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1591">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1592">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1592">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer, IEnumerable(Of TResult))) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, seq&lt;'Result&gt;&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1593">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1593">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1594">选择器返回的序列元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1594">The type of the elements of the sequence returned by selector.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1595">一个要投影的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1595">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1596">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1596">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1597">将序列的每个元素以并行方式投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 并将结果序列合并为一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1597">Projects in parallel each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, and flattens the resulting sequences into one sequence.</span>
          </span>
          <span data-ttu-id="28511-1598">每个源元素的索引用于该元素的投影表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1598">The index of each source element is used in the projected form of that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1599">一个序列，其元素是对输入序列的每个元素调用一对多转换函数的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1599">A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1600">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1600">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1601">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1601">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1602">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1602">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1603">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1603">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1604">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1604">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As ParallelQuery(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1605">
            <paramref name="collectionSelector" /> 收集的中间元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1605">The type of the intermediate elements collected by <paramref name="collectionSelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="28511-1606">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1606">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1607">结果序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1607">The type of elements in the result sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1608">一个要投影的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1608">A sequence of values to project.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="28511-1609">一个应用于每个源元素的转换函数；函数的第二个参数表示源元素的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1609">A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-1610">用于从第一个序列的元素和第二个序列的匹配元素集合中创建结果元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1610">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1611">将序列的每个元素投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" />，并将结果序列合并为一个序列，并对其中每个元素调用结果选择器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1611">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1612">一个序列，其元素是通过以下方法得到的：对基于提供给 <paramref name="collectionSelector" /> 的 <paramref name="source" /> 的每个元素调用一对多转换函数 <paramref name="collectionSelector" />，然后将这些序列元素中的每一个元素及其相应的源元素映射到一个结果元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1612">A sequence whose elements are the result of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> based on the index supplied to <paramref name="collectionSelector" />, and then mapping each of those sequence elements and their corresponding source element to a result element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1613">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1613">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1614">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1614">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1615">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1615">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1616">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1616">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1617">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1617">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As ParallelQuery(Of TSource), collectionSelector As Func(Of TSource, Integer, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ SelectMany(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1618">
            <paramref name="collectionSelector" /> 收集的中间元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1618">The type of the intermediate elements collected by <paramref name="collectionSelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="28511-1619">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1619">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-1620">要返回的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1620">The type of elements to return.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1621">一个要投影的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1621">A sequence of values to project.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="28511-1622">一个应用于每个源元素的转换函数；函数的第二个参数表示源元素的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1622">A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-1623">用于从第一个序列的元素和第二个序列的匹配元素集合中创建结果元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1623">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1624">将序列的每个元素投影到 <see cref="T:System.Collections.Generic.IEnumerable`1" />，并将结果序列合并为一个序列，并对其中每个元素调用结果选择器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1624">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</span>
          </span>
          <span data-ttu-id="28511-1625">每个源元素的索引用于该元素的中间投影表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1625">The index of each source element is used in the intermediate projected form of that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1626">一个序列，其元素是通过以下方法得到的：对基于提供给 <paramref name="collectionSelector" /> 的 <paramref name="source" /> 的每个元素调用一对多转换函数 <paramref name="collectionSelector" />，然后将这些序列元素中的每一个元素及其相应的源元素映射到一个结果元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1626">A sequence whose elements are the result of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> based on the index supplied to <paramref name="collectionSelector" />, and then mapping each of those sequence elements and their corresponding source element to a result element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1627">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1627">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1628">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1628">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1629">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1629">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1630">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1630">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1631">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1631">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SequenceEqual&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1632">通过使用相应类型的相等比较器对序列的元素进行比较，以确定两个并行序列是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1632">Determines whether two parallel sequences are equal by comparing the elements by using an equality comparer for their type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1633">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1633">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-1634">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1634">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-1635">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1635">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1636">切勿调用此 SequenceEqual 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1636">This SequenceEqual overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-1637">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1637">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1638">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1638">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1639">此重载可禁止的 SequenceEqual 左侧的数据源类型的使用情况<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-1639">This overload exists to disallow usage of SequenceEqual with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-1640">否则为 SequenceEqual 运算符会显示为绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-1640">Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-1641">每次调用此方法时引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1641">Thrown every time this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1642">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1642">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1643">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1643">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-1644">要与第二个序列进行比较的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1644">A sequence to compare to second.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-1645">要与第一个输入序列进行比较的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1645">A sequence to compare to the first input sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1646">通过使用相应类型的默认相等比较器对序列的元素进行比较，以确定两个并行序列是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1646">Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1647">如果根据相应类型的默认相等比较器，两个源序列的长度相等，且其相应元素相等，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1647">true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1648">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1648">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1649">
            <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1649">
              <paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1650">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1650">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1651">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1651">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1652">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1652">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-1653">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1653">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-1654">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1654">This parameter is not used.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-1655">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1655">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1656">切勿调用此 SequenceEqual 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1656">This SequenceEqual overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-1657">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1657">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1658">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1658">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1659">此重载可禁止的 SequenceEqual 左侧的数据源类型的使用情况<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-1659">This overload exists to disallow usage of SequenceEqual with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-1660">否则为 SequenceEqual 运算符会显示为绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-1660">Otherwise, the SequenceEqual operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-1661">每次调用此方法时引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1661">Thrown every time this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1662">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1662">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.ParallelEnumerable.SequenceEqual (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1663">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1663">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-1664">要与 <paramref name="second" /> 进行比较的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1664">A sequence to compare to <paramref name="second" />.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-1665">要与第一个输入序列进行比较的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1665">A sequence to compare to the first input sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-1666">用于比较元素的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1666">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use to compare elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1667">使用指定的 IEqualityComparer{T} 对两个并行序列的元素进行比较，以确定这两个序列是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1667">Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1668">如果根据相应类型的默认相等比较器，两个源序列的长度相等，且其相应元素相等，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1668">true if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1669">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1669">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1670">
            <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1670">
              <paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1671">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1671">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1672">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1672">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Single&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1673">返回并行序列的唯一元素；如果该序列并非恰好包含一个元素，则会引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1673">Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Single source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1674">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1674">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1675">要返回其单个元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1675">The sequence to return the single element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1676">返回并行序列的唯一元素；如果该序列并非恰好包含一个元素，则会引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1676">Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1677">输入序列的单个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1677">The single element of the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1678">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1678">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1679">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1679">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1680">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1680">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1681">输入序列包含多个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1681">The input sequence contains more than one element.</span>
          </span>
          <span data-ttu-id="28511-1682">- 或 - 输入序列为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1682">-or- The input sequence is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1683">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1683">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.Single (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1684">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1684">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1685">要返回其单个元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1685">The sequence to return the single element of.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1686">用于测试元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1686">A function to test an element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1687">返回并行序列中满足指定条件的唯一元素；如果有多个这样的元素存在，则会引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1687">Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1688">输入序列中满足条件的单个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1688">The single element of the input sequence that satisfies a condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1689">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1689">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1690">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1690">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1691">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1691">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1692">元素均不满足 <paramref name="predicate" /> 中的条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1692">No element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="28511-1693">-或- 多个元素满足 <paramref name="predicate" /> 中的条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1693">-or- More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1694">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1694">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SingleOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1695">返回并行序列中的唯一元素；如果该序列为空，则返回默认值；如果该序列包含多个元素，此方法将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1695">Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As ParallelQuery(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.SingleOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1696">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1696">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1697">要返回其单个元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1697">The sequence to return the single element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1698">返回并行序列中的唯一元素；如果该序列为空，则返回默认值；如果该序列包含多个元素，此方法将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1698">Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1699">返回输入序列的单个元素；如果序列不包含任何元素，则返回 default()。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1699">The single element of the input sequence, or default() if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1700">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1700">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1701">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1701">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1702">
            <paramref name="source" /> 具有多个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1702">
              <paramref name="source" /> has more than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1703">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1703">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1704">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1704">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; 'Source" Usage="System.Linq.ParallelEnumerable.SingleOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1705">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1705">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1706">要返回其单个元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1706">The sequence to return the single element of.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1707">用于测试元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1707">A function to test an element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1708">返回并行序列中满足指定条件的唯一元素；如果这类元素不存在，则返回默认值；如果有多个元素满足该条件，此方法将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1708">Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1709">输入序列中满足条件的单个元素，如果未找到这样的元素，则为 default()。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1709">The single element of the input sequence that satisfies the condition, or default() if no such element is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1710">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1710">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1711">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1711">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1712">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1712">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-1713">
            <paramref name="source" /> 是空的，或者返回了多个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1713">
              <paramref name="source" /> is empty or multiple elements are returned.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1714">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1714">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Skip&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Skip&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Skip&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip(Of TSource) (source As ParallelQuery(Of TSource), count As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Skip(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Skip (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1715">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1715">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1716">要从其返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1716">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="28511-1717">返回剩余元素前要跳过的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1717">The number of elements to skip before returning the remaining elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1718">跳过并行序列中指定数量的元素，然后返回剩余的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1718">Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1719">一个序列，其中包含输入序列中的指定索引后出现的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1719">A sequence that contains the elements that occur after the specified index in the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1720">如果计数 > 源。Count （），则不返回任何元素。</span><span class="sxs-lookup"><span data-stu-id="28511-1720">If count > source.Count(), no elements are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1721">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1721">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1722">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1722">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1723">计数比 <see cref="F:System.Int32.MaxValue" /> 大</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1723">Count is greater than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1724">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1724">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1725">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1725">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1726">跳过并行序列中满足指定条件的任何元素，然后返回剩余元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1726">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ SkipWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1727">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1727">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1728">要从其返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1728">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1729">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1729">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1730">跳过并行序列中满足指定条件的任何元素，然后返回剩余元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1730">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1731">一个序列，它包含输入序列中从没有通过谓词指定的测试的线性系列中第一个元素开始的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1731">A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1732">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1732">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1733">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1733">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1734">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1734">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1735">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1735">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ SkipWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1736">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1736">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1737">要从其返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1737">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1738">用于测试每个源元素是否满足条件的函数；该函数的第二个参数表示源元素的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1738">A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1739">跳过并行序列中满足指定条件的任何元素，然后返回剩余元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1739">Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
          <span data-ttu-id="28511-1740">将在谓词函数的逻辑中使用元素的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1740">The element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1741">一个序列，它包含输入序列中从没有通过谓词指定的测试的线性系列中第一个元素开始的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1741">A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1742">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1742">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1743">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1743">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1744">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1744">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1745">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1745">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1746">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1746">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sum">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1747">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1747">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static decimal Sum (this System.Linq.ParallelQuery&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::ParallelQuery&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1748">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1748">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1749">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1749">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1750">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1750">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1751">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1751">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1752">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1752">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1753">和大于 <see cref="F:System.Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1753">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1754">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1754">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1755">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1755">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static double Sum (this System.Linq.ParallelQuery&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum(class System.Linq.ParallelQuery`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::ParallelQuery&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1756">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1756">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1757">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1757">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1758">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1758">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1759">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1759">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1760">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1760">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1761">和大于 <see cref="F:System.Double.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1761">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1762">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1762">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1763">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1763">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static int Sum (this System.Linq.ParallelQuery&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum(class System.Linq.ParallelQuery`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::ParallelQuery&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1764">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1764">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1765">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1765">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1766">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1766">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1767">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1767">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1768">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1768">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1769">和大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1769">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1770">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1770">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1771">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1771">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static long Sum (this System.Linq.ParallelQuery&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum(class System.Linq.ParallelQuery`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::ParallelQuery&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1772">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1772">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1773">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1773">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1774">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1774">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1775">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1775">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1776">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1776">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1777">和大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1777">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1778">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1778">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1779">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1779">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1780">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1780">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1781">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1781">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1782">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1782">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1783">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1783">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1784">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1784">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1785">和大于 <see cref="F:System.Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1785">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1786">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1786">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1787">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1787">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1788">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1788">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1789">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1789">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1790">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1790">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1791">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1791">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1792">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1792">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1793">和大于 <see cref="F:System.Double.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1793">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1794">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1794">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1795">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1795">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1796">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1796">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1797">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1797">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1798">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1798">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1799">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1799">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1800">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1800">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1801">和大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1801">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1802">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1802">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1803">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1803">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1804">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1804">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1805">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1805">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1806">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1806">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1807">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1807">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1808">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1808">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1809">和大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1809">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1810">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1810">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1811">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1811">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum (this System.Linq.ParallelQuery&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum(class System.Linq.ParallelQuery`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::ParallelQuery&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1812">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1812">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1813">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1813">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1814">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1814">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1815">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1815">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1816">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1816">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1817">和大于 <see cref="F:System.Single.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1817">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1818">- 或 - 在查询的评估过程中出现了一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1818">-or-  One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1819">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1819">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float Sum (this System.Linq.ParallelQuery&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum(class System.Linq.ParallelQuery`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As ParallelQuery(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::ParallelQuery&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="28511-1820">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1820">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1821">并行计算一个值序列的和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1821">Computes in parallel the sum of a sequence of values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1822">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1822">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1823">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1823">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1824">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1824">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1825">和大于 <see cref="F:System.Single.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1825">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1826">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1826">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1827">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1827">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,decimal&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, System::Decimal&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, decimal&gt; -&gt; decimal" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1828">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1828">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1829">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1829">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1830">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1830">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1831">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1831">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1832">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1832">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1833">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1833">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1834">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1834">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1835">和大于 <see cref="F:System.Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1835">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1836">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1836">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1837">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1837">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,double&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, double&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, double&gt; -&gt; double" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Double&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1838">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1838">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1839">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1839">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1840">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1840">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1841">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1841">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1842">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1842">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1843">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1843">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1844">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1844">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1845">和大于 <see cref="F:System.Double.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1845">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1846">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1846">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1847">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1847">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int&gt; -&gt; int" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int32&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1848">源序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1848">The type of elements in the source sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1849">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1849">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1850">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1850">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1851">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1851">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1852">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1852">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1853">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1853">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1854">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1854">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1855">和大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1855">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1856">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1856">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1857">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1857">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,long&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, int64&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, long&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int64&gt; -&gt; int64" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Int64&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1858">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1858">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1859">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1859">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1860">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1860">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1861">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1861">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1862">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1862">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1863">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1863">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1864">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1864">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1865">和大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1865">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1866">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1866">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1867">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1867">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1868">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1868">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1869">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1869">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1870">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1870">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1871">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1871">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1872">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1872">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1873">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1873">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1874">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1874">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1875">和大于 <see cref="F:System.Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1875">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1876">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1876">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1877">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1877">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;double&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1878">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1878">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1879">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1879">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1880">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1880">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1881">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1881">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1882">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1882">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1883">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1883">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1884">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1884">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1885">和大于 <see cref="F:System.Double.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1885">The sum is larger than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1886">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1886">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1887">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1887">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;int&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1888">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1888">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1889">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1889">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1890">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1890">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1891">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1891">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1892">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1892">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1893">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1893">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1894">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1894">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1895">和大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1895">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1896">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1896">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1897">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1897">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;long&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1898">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1898">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1899">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1899">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1900">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1900">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1901">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1901">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1902">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1902">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1903">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1903">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1904">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1904">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1905">和大于 <see cref="F:System.Int64.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1905">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1906">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1906">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1907">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1907">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,Nullable&lt;float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, Nullable&lt;float&gt;&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1908">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1908">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1909">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1909">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1910">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1910">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1911">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1911">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1912">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1912">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1913">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1913">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1914">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1914">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1915">和大于 <see cref="F:System.Single.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1915">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1916">- 或 - 在查询的评估过程中出现了一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1916">-or-  One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1917">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1917">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Sum&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,float&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, float32&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As ParallelQuery(Of TSource), selector As Func(Of TSource, Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, float&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, single&gt; -&gt; single" Usage="System.Linq.ParallelEnumerable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,System.Single&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1918">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1918">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1919">一个要对其求和的值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1919">A sequence of values to calculate the sum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="28511-1920">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1920">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1921">并行计算一个值序列的和，这些值可通过对输入序列的每个元素调用转换函数获得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1921">Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1922">序列中投影值的总和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1922">The sum of the projected values in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1923">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1923">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1924">
            <paramref name="source" /> 或 <paramref name="selector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1924">
              <paramref name="source" /> or <paramref name="selector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1925">和大于 <see cref="F:System.Single.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1925">The sum is larger than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
          <span data-ttu-id="28511-1926">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1926">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1927">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1927">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Take&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Take&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Take&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take(Of TSource) (source As ParallelQuery(Of TSource), count As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Take(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Take (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1928">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1928">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1929">要从其返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1929">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="28511-1930">要返回的元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1930">The number of elements to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1931">从并行序列的开头返回指定数量的连续元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1931">Returns a specified number of contiguous elements from the start of a parallel sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1932">一个序列，其中包含从输入序列开始处起的指定数量的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1932">A sequence that contains the specified number of elements from the start of the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1933">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1933">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1934">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1934">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1935">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1935">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1936">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1936">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1937">只要指定的条件为 true，就会返回并行序列的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1937">Returns elements from a parallel sequence as long as a specified condition is true.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ TakeWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1938">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1938">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1939">要从其返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1939">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1940">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1940">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1941">只要指定的条件为 true，就会返回并行序列的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1941">Returns elements from a parallel sequence as long as a specified condition is true.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1942">一个序列，它包含输入序列中出现在无法再通过测试的元素之前的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1942">A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1943">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1943">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1944">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1944">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1945">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1945">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1946">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1946">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ TakeWhile(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1947">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1947">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1948">要从其返回元素的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1948">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-1949">用于测试每个源元素是否满足条件的函数；该函数的第二个参数表示源元素的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1949">A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1950">只要指定的条件为 true，就会返回并行序列的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1950">Returns elements from a parallel sequence as long as a specified condition is true.</span>
          </span>
          <span data-ttu-id="28511-1951">将在谓词函数的逻辑中使用元素的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1951">The element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1952">一个序列，它包含输入序列中出现在无法再通过测试的元素之前的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1952">A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1953">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1953">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1954">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1954">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-1955">超过 <see cref="F:System.Int32.MaxValue" /> 个元素都是用这个查询枚举的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1955">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by this query.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1956">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1956">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1957">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1957">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1958">按升序对序列中的元素并行执行后续排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1958">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenBy(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1959">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1959">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-1960">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1960">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1961">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1961">An OrderedParallelQuery{TSource} that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-1962">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1962">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1963">根据某个键按升序对序列中的元素并行执行后续排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1963">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1964">其中的元素将根据某个键进行排序的 OrderedParallelQuery{TSource}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1964">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1965">与顺序实现，这不是一个稳定排序。</span><span class="sxs-lookup"><span data-stu-id="28511-1965">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="28511-1966">请参阅备注<xref:System.Linq.ParallelEnumerable.OrderBy%2A>有关实现稳定排序的方法。</span><span class="sxs-lookup"><span data-stu-id="28511-1966">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1967">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1967">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1968">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1968">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1969">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1969">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1970">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1970">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenBy(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1971">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1971">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-1972">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1972">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1973">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1973">An OrderedParallelQuery{TSource} that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-1974">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1974">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-1975">一个用于比较键的 IComparer{TKey}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1975">An IComparer{TKey} to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1976">使用指定的比较器按升序对序列中的元素并行执行后续排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1976">Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1977">其中的元素将根据某个键进行排序的 OrderedParallelQuery{TSource}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1977">An OrderedParallelQuery{TSource} whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1978">与顺序实现，这不是一个稳定排序。</span><span class="sxs-lookup"><span data-stu-id="28511-1978">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="28511-1979">请参阅备注<xref:System.Linq.ParallelEnumerable.OrderBy%2A>有关实现稳定排序的方法。</span><span class="sxs-lookup"><span data-stu-id="28511-1979">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1980">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1980">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1981">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1981">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1982">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1982">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1983">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1983">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-1984">按降序对序列中的元素并行执行后续排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1984">Performs in parallel a subsequent ordering of the elements in a sequence in descending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenByDescending(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1985">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1985">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-1986">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1986">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1987">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1987">An OrderedParallelQuery{TSource} that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-1988">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1988">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-1989">根据某个键按降序对序列中的元素并行执行后续排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1989">Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-1990">一个序列，将根据键按降序对其元素进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1990">A sequence whose elements are sorted descending according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-1991">与顺序实现，这不是一个稳定排序。</span><span class="sxs-lookup"><span data-stu-id="28511-1991">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="28511-1992">请参阅备注<xref:System.Linq.ParallelEnumerable.OrderBy%2A>有关实现稳定排序的方法。</span><span class="sxs-lookup"><span data-stu-id="28511-1992">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-1993">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1993">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-1994">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1994">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-1995">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1995">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-1996">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1996">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.OrderedParallelQuery&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.OrderedParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.OrderedParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As OrderedParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As OrderedParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ ThenByDescending(System::Linq::OrderedParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.OrderedParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.OrderedParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.OrderedParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.OrderedParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-1997">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1997">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-1998">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1998">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-1999">一个 OrderedParallelQuery{TSource}，包含要排序的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-1999">An OrderedParallelQuery{TSource} that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2000">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2000">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-2001">一个用于比较键的 IComparer{TKey}。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2001">An IComparer{TKey} to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2002">使用指定的比较器按降序对序列中的元素并行执行后续排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2002">Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2003">一个序列，将根据键按降序对其元素进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2003">A sequence whose elements are sorted descending according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-2004">与顺序实现，这不是一个稳定排序。</span><span class="sxs-lookup"><span data-stu-id="28511-2004">In contrast to the sequential implementation, this is not a stable sort.</span></span> <span data-ttu-id="28511-2005">请参阅备注<xref:System.Linq.ParallelEnumerable.OrderBy%2A>有关实现稳定排序的方法。</span><span class="sxs-lookup"><span data-stu-id="28511-2005">See the remarks for <xref:System.Linq.ParallelEnumerable.OrderBy%2A> for an approach to implementing a stable sort.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2006">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2006">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2007">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2007">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2008">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2008">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2009">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2009">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource[] ToArray&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource[] ToArray&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of TSource) (source As ParallelQuery(Of TSource)) As TSource()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;TSource&gt; ^ ToArray(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToArray : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; 'Source[]" Usage="System.Linq.ParallelEnumerable.ToArray source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2010">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2010">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2011">要从其中创建数组的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2011">A sequence to create an array from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2012">从 <see cref="T:System.Linq.ParallelQuery`1" /> 中创建数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2012">Creates an array from a <see cref="T:System.Linq.ParallelQuery`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2013">一个包含输入序列中的元素的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2013">An array that contains the elements from the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2014">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2014">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2015">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2015">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2016">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2016">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2017">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2017">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-2018">从 <see cref="T:System.Collections.Generic.Dictionary`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2018">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TSource&gt; ToDictionary&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TSource&gt; ToDictionary&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As Dictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TSource&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2019">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2019">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-2020">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2020">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2021">据其创建 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2021">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2022">用于从每个元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2022">A function to extract a key from each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2023">根据指定的键选择器函数，从 <see cref="T:System.Collections.Generic.Dictionary`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2023">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2024">一个包含键和值的 <see cref="T:System.Collections.Generic.Dictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2024">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains keys and values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2025">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2025">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2026">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2026">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2027">
            <paramref name="keySelector" /> 生成一个为 null 引用的键（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2027">
              <paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="28511-2028">- 或 - <paramref name="keySelector" /> 为两个元素产生了重复键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2028">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span>
          </span>
          <span data-ttu-id="28511-2029">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2029">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2030">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2030">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TSource&gt; ToDictionary&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TSource&gt; ToDictionary&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TSource&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2031">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2031">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-2032">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2032">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2033">据其创建 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2033">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2034">用于从每个元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2034">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-2035">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2035">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2036">根据指定的键选择器函数和键比较器，从 <see cref="T:System.Linq.ParallelQuery`1" /> 创建一个 <see cref="T:System.Collections.Generic.Dictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2036">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function and key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2037">一个包含键和值的 <see cref="T:System.Collections.Generic.Dictionary`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2037">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains keys and values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2038">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2038">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2039">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2039">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2040">
            <paramref name="keySelector" /> 生成一个为 null 引用的键（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2040">
              <paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="28511-2041">- 或 - <paramref name="keySelector" /> 为两个元素产生了重复键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2041">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span>
          </span>
          <span data-ttu-id="28511-2042">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2042">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2043">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2043">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2044">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2044">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-2045">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2045">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="28511-2046">
            <paramref name="elementSelector" /> 返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2046">The type of the value returned by <paramref name="elementSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2047">据其创建 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2047">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2048">用于从每个元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2048">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="28511-2049">用于从每个元素产生结果元素值的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2049">A transform function to produce a result element value from each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2050">根据指定的键选择器和元素选择器函数，从 <see cref="T:System.Collections.Generic.Dictionary`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2050">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to specified key selector and element selector functions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2051">一个 <see cref="T:System.Collections.Generic.Dictionary`2" />，包含从输入序列中选择的类型为 <paramref name="TElement" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2051">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2052">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2052">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2053">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2053">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2054">
            <paramref name="keySelector" /> 生成一个为 null 引用的键（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2054">
              <paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="28511-2055">- 或 - <paramref name="keySelector" /> 为两个元素产生了重复键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2055">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span>
          </span>
          <span data-ttu-id="28511-2056">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2056">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2057">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2057">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToDictionary (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2058">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2058">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-2059">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2059">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="28511-2060">
            <paramref name="elementSelector" /> 返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2060">The type of the value returned by <paramref name="elementSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2061">据其创建 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2061">A sequence to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2062">用于从每个元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2062">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="28511-2063">用于从每个元素产生结果元素值的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2063">A transform function to produce a result element value from each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-2064">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2064">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2065">根据指定的键选择器函数、比较器和元素选择器函数，从 <see cref="T:System.Collections.Generic.Dictionary`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2065">Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function, a comparer, and an element selector function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2066">一个 <see cref="T:System.Collections.Generic.Dictionary`2" />，包含从输入序列中选择的类型为 <paramref name="TElement" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2066">A <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2067">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2067">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2068">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2068">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2069">
            <paramref name="keySelector" /> 生成一个为 null 引用的键（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2069">
              <paramref name="keySelector" /> produces a key that is a null reference (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="28511-2070">- 或 - <paramref name="keySelector" /> 为两个元素产生了重复键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2070">-or- <paramref name="keySelector" /> produces duplicate keys for two elements.</span>
          </span>
          <span data-ttu-id="28511-2071">或评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2071">-or- One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2072">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2072">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;TSource&gt; ToList&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;!!TSource&gt; ToList&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToList(Of TSource) (source As ParallelQuery(Of TSource)) As List(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::List&lt;TSource&gt; ^ ToList(System::Linq::ParallelQuery&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToList : System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Collections.Generic.List&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2073">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2073">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2074">据其创建 <see cref="T:System.Collections.Generic.List`1" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2074">A sequence to create a <see cref="T:System.Collections.Generic.List`1" /> from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2075">从 <see cref="T:System.Linq.ParallelQuery`1" /> 创建一个 <see cref="T:System.Collections.Generic.List`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2075">Creates a <see cref="T:System.Collections.Generic.List`1" /> from an <see cref="T:System.Linq.ParallelQuery`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2076">一个包含输入序列中的元素的 <see cref="T:System.Collections.Generic.List`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2076">A <see cref="T:System.Collections.Generic.List`1" /> that contains elements from the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2077">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2077">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2078">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2078">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2079">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2079">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2080">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2080">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLookup&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-2081">从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2081">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLookup&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TSource&gt; ToLookup&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TSource&gt; ToLookup&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey)) As ILookup(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TSource&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2082">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2082">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-2083">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2083">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2084">据其创建 <see cref="T:System.Linq.ILookup`2" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2084">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2085">用于从每个元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2085">A function to extract a key from each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2086">根据指定的键选择器函数，从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2086">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2087">一个包含键和值的 <see cref="T:System.Linq.ILookup`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2087">A <see cref="T:System.Linq.ILookup`2" /> that contains keys and values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2088">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2088">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2089">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2089">
              <paramref name="source" /> or <paramref name="keySelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2090">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2090">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2091">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2091">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TSource&gt; ToLookup&lt;TSource,TKey&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TSource&gt; ToLookup&lt;TSource, TKey&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As ILookup(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TSource&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Source&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2092">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2092">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-2093">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2093">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2094">据其创建 <see cref="T:System.Linq.ILookup`2" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2094">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2095">用于从每个元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2095">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-2096">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2096">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2097">根据指定的键选择器函数和键比较器，从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2097">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function and key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2098">一个包含键和值的 <see cref="T:System.Linq.ILookup`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2098">A <see cref="T:System.Linq.ILookup`2" /> that contains keys and values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2099">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2099">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2100">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2100">
              <paramref name="source" /> or <paramref name="keySelector" /> or is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2101">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2101">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2102">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2102">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TElement&gt; ToLookup&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TElement&gt; ToLookup&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As ILookup(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TElement&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2103">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2103">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-2104">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2104">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="28511-2105">
            <paramref name="elementSelector" /> 返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2105">The type of the value returned by <paramref name="elementSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2106">据其创建 <see cref="T:System.Linq.ILookup`2" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2106">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2107">用于从每个元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2107">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="28511-2108">用于从每个元素产生结果元素值的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2108">A transform function to produce a result element value from each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2109">根据指定的键选择器和元素选择器函数，从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2109">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to specified key selector and element selector functions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2110">一个包含从输入序列中选择的类型为 <paramref name="TElement" /> 的值的 <see cref="T:System.Linq.ILookup`2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2110">A <see cref="T:System.Linq.ILookup`2" /> that contains values of type <paramref name="TElement" /> selected from the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2111">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2111">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2112">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2112">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2113">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2113">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2114">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2114">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToLookup&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ILookup&lt;TKey,TElement&gt; ToLookup&lt;TSource,TKey,TElement&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ILookup`2&lt;!!TKey, !!TElement&gt; ToLookup&lt;TSource, TKey, TElement&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLookup(Of TSource, TKey, TElement) (source As ParallelQuery(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As ILookup(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ILookup&lt;TKey, TElement&gt; ^ ToLookup(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToLookup : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.ILookup&lt;'Key, 'Element&gt;" Usage="System.Linq.ParallelEnumerable.ToLookup (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ILookup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2115">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2115">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="28511-2116">
            <paramref name="keySelector" /> 返回的键的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2116">The type of the key returned by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="28511-2117">
            <paramref name="elementSelector" /> 返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2117">The type of the value returned by <paramref name="elementSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2118">据其创建 <see cref="T:System.Linq.ILookup`2" /> 的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2118">The sequence to create a <see cref="T:System.Linq.ILookup`2" /> from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="28511-2119">用于从每个元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2119">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="28511-2120">用于从每个元素产生结果元素值的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2120">A transform function to produce a result element value from each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-2121">用于比较键的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2121">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2122">根据指定的键选择器函数、比较器和元素选择器函数从 <see cref="T:System.Linq.ILookup`2" /> 创建一个 <see cref="T:System.Linq.ParallelQuery`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2122">Creates an <see cref="T:System.Linq.ILookup`2" /> from a <see cref="T:System.Linq.ParallelQuery`1" /> according to a specified key selector function, a comparer and an element selector function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2123">一个 Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;)，其中包含从输入序列中选择的 TElement 类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2123">A Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;) that contains values of type TElement selected from the input sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2124">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2124">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2125">
            <paramref name="source" /> 或 <paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2125">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2126">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2126">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2127">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2127">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-2128">生成两个并行序列的并集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2128">Produces the set union of two parallel sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2129">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2129">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-2130">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2130">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-2131">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2131">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2132">切勿调用此 Union 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2132">This Union overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-2133">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2133">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2134">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2134">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-2135">此重载可禁止使用左侧的数据类型的源的 Union<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-2135">This overload exists to disallow usage of Union with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-2136">否则为 Union 运算符将显示要绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-2136">Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-2137">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2137">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2138">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2138">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2139">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2139">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2140">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2140">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2141">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2141">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-2142">一个序列，其中的非重复元素构成并集的第一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2142">A sequence whose distinct elements form the first set for the union.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-2143">一个序列，其中的非重复元素构成并集的第二部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2143">A sequence whose distinct elements form the second set for the union.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2144">通过使用默认的相等比较器，生成两个并行序列的并集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2144">Produces the set union of two parallel sequences by using the default equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2145">一个序列，其中包含两个输入序列中的非重复元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2145">A sequence that contains the elements from both input sequences, excluding duplicates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2146">
            <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2146">
              <paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2147">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2147">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2148">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2148">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2149">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2149">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Collections.Generic.IEnumerable&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2150">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2150">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-2151">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2151">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-2152">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2152">This parameter is not used.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-2153">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2153">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2154">切勿调用此 Union 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2154">This Union overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-2155">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2155">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2156">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2156">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-2157">此重载可禁止使用左侧的数据类型的源的 Union<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-2157">This overload exists to disallow usage of Union with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-2158">否则为 Union 运算符将显示要绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-2158">Otherwise, the Union operator would appear to be binding to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-2159">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2159">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2160">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2160">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2161">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2161">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2162">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2162">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; first, System.Linq.ParallelQuery&lt;TSource&gt; second, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSource&gt; second, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (first As ParallelQuery(Of TSource), second As ParallelQuery(Of TSource), comparer As IEqualityComparer(Of TSource)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Union(System::Linq::ParallelQuery&lt;TSource&gt; ^ first, System::Linq::ParallelQuery&lt;TSource&gt; ^ second, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelQuery&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Union (first, second, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2163">输入序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2163">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-2164">一个序列，其中的非重复元素构成并集的第一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2164">A sequence whose distinct elements form the first set for the union.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-2165">一个序列，其中的非重复元素构成并集的第二部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2165">A sequence whose distinct elements form the second set for the union.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="28511-2166">用于比较值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2166">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2167">通过使用指定的 IEqualityComparer{T} 生成两个并行序列的并集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2167">Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2168">一个序列，其中包含两个输入序列中的非重复元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2168">A sequence that contains the elements from both input sequences, excluding duplicates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2169">
            <paramref name="first" /> 或 <paramref name="second" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2169">
              <paramref name="first" /> or <paramref name="second" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2170">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2170">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2171">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2171">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2172">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2172">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Where&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-2173">基于谓词并行筛选值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2173">Filters in parallel a sequence of values based on a predicate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Where(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2174">源的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2174">The type of the elements of source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2175">要筛选的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2175">A sequence to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-2176">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2176">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2177">基于谓词并行筛选值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2177">Filters in parallel a sequence of values based on a predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2178">一个序列，其中包含输入序列中满足条件的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2178">A sequence that contains elements from the input sequence that satisfy the condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2179">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2179">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2180">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2180">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2181">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2181">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2182">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2182">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, Func&lt;TSource,int,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, class System.Func`3&lt;!!TSource, int32, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As ParallelQuery(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ Where(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, Func&lt;TSource, int, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.ParallelQuery&lt;'Source&gt; * Func&lt;'Source, int, bool&gt; -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TSource,System.Int32,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2183">源的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2183">The type of the elements of source.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2184">要筛选的序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2184">A sequence to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="28511-2185">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2185">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2186">基于谓词并行筛选值序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2186">Filters in parallel a sequence of values based on a predicate.</span>
          </span>
          <span data-ttu-id="28511-2187">将在谓词函数的逻辑中使用每个元素的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2187">Each element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2188">一个序列，其中包含输入序列中满足条件的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2188">A sequence that contains elements from the input sequence that satisfy the condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2189">
            <paramref name="source" /> 或 <paramref name="predicate" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2189">
              <paramref name="source" /> or <paramref name="predicate" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2190">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2190">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="28511-2191">该查询枚举的元素超过了 <see cref="F:System.Int32.MaxValue" /> 个。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2191">More than <see cref="F:System.Int32.MaxValue" /> elements are enumerated by the query.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2192">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2192">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2193">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2193">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WithCancellation&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithCancellation&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithCancellation&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithCancellation(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member WithCancellation : System.Linq.ParallelQuery&lt;'Source&gt; * System.Threading.CancellationToken -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithCancellation (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2194">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2194">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2195">要对其设置选项的 ParallelQuery。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2195">A ParallelQuery on which to set the option.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="28511-2196">取消标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2196">A cancellation token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2197">设置要与查询关联的 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2197">Sets the <see cref="T:System.Threading.CancellationToken" /> to associate with the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2198">表示与源相同的查询的 ParallelQuery，但带有已注册的取消标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2198">ParallelQuery representing the same query as source, but with the registered cancellation token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="28511-2199">与 <paramref name="cancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2199">The <see cref="T:System.Threading.CancellationTokenSource" /> associated with the <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2200">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2200">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-2201">在该查询中，多次使用 <paramref name="WithCancellation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2201">
              <paramref name="WithCancellation" /> is used multiple times in the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2202">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2202">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/80b14640-edfa-4153-be1b-3e003d3e9c1a">
          <span data-ttu-id="28511-2203">如何：取消 PLINQ 查询</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2203">How to: Cancel a PLINQ Query</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md">
          <span data-ttu-id="28511-2204">取消</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2204">Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WithDegreeOfParallelism&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithDegreeOfParallelism&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, int degreeOfParallelism);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithDegreeOfParallelism&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, int32 degreeOfParallelism) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithDegreeOfParallelism(Of TSource) (source As ParallelQuery(Of TSource), degreeOfParallelism As Integer) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithDegreeOfParallelism(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, int degreeOfParallelism);" />
      <MemberSignature Language="F#" Value="static member WithDegreeOfParallelism : System.Linq.ParallelQuery&lt;'Source&gt; * int -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithDegreeOfParallelism (source, degreeOfParallelism)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="degreeOfParallelism" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2205">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2205">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2206">要对其设置并行度限制的 ParallelQuery。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2206">A ParallelQuery on which to set the limit on the degrees of parallelism.</span>
          </span>
        </param>
        <param name="degreeOfParallelism">
          <span data-ttu-id="28511-2207">查询的并行度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2207">The degree of parallelism for the query.</span>
          </span>
          <span data-ttu-id="28511-2208">默认值是 Math.Min(<see cref="P:System.Environment.ProcessorCount" />, <see langword="MAX_SUPPORTED_DOP" />)，其中 <see langword="MAX_SUPPORTED_DOP" /> 为 512。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2208">The default value is Math.Min(<see cref="P:System.Environment.ProcessorCount" />, <see langword="MAX_SUPPORTED_DOP" />) where <see langword="MAX_SUPPORTED_DOP" /> is 512.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2209">设置要在查询中使用的并行度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2209">Sets the degree of parallelism to use in a query.</span>
          </span>
          <span data-ttu-id="28511-2210">并行度是将用于处理查询的同时执行的任务的最大数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2210">Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2211">表示与源相同的查询的 ParallelQuery，其中设置了对并行度的限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2211">ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2212">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2212">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="28511-2213">
            <paramref name="degreeOfParallelism" /> 小于 1 或大于 511。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2213">
              <paramref name="degreeOfParallelism" /> is less than 1 or greater than 511.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-2214">WithDegreeOfParallelism 在查询中多次使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2214">WithDegreeOfParallelism is used multiple times in the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2215">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2215">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WithExecutionMode&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithExecutionMode&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Linq.ParallelExecutionMode executionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithExecutionMode&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Linq.ParallelExecutionMode executionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithExecutionMode(Of TSource) (source As ParallelQuery(Of TSource), executionMode As ParallelExecutionMode) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithExecutionMode(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Linq::ParallelExecutionMode executionMode);" />
      <MemberSignature Language="F#" Value="static member WithExecutionMode : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelExecutionMode -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithExecutionMode (source, executionMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="executionMode" Type="System.Linq.ParallelExecutionMode" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2216">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2216">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2217">要对其设置选项的 ParallelQuery。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2217">A ParallelQuery on which to set the option.</span>
          </span>
        </param>
        <param name="executionMode">
          <span data-ttu-id="28511-2218">执行查询使用的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2218">The mode in which to execute the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2219">设置查询的执行模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2219">Sets the execution mode of the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2220">表示与源相同的查询的 ParallelQuery，但带有已注册的执行模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2220">ParallelQuery representing the same query as source, but with the registered execution mode.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-2221">执行模式指定是否 PLINQ 将尝试回退到顺序执行，如果它检测到某些查询形状。</span><span class="sxs-lookup"><span data-stu-id="28511-2221">The execution mode specifies whether PLINQ will attempt to fall back to sequential execution if it detects certain query shapes.</span></span> <span data-ttu-id="28511-2222">有关详细信息和示例，请参阅[如何： 在 PLINQ 中指定执行模式](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md)。</span><span class="sxs-lookup"><span data-stu-id="28511-2222">For more information and examples, see [How to: Specify the Execution Mode in PLINQ](~/docs/standard/parallel-programming/how-to-specify-the-execution-mode-in-plinq.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2223">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2223">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="28511-2224">
            <paramref name="executionMode" /> 不是有效的 <see cref="T:System.Linq.ParallelExecutionMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2224">
              <paramref name="executionMode" /> is not a valid <see cref="T:System.Linq.ParallelExecutionMode" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-2225">WithExecutionMode 在查询中多次使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2225">WithExecutionMode is used multiple times in the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2226">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2226">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WithMergeOptions&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TSource&gt; WithMergeOptions&lt;TSource&gt; (this System.Linq.ParallelQuery&lt;TSource&gt; source, System.Linq.ParallelMergeOptions mergeOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TSource&gt; WithMergeOptions&lt;TSource&gt;(class System.Linq.ParallelQuery`1&lt;!!TSource&gt; source, valuetype System.Linq.ParallelMergeOptions mergeOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WithMergeOptions(Of TSource) (source As ParallelQuery(Of TSource), mergeOptions As ParallelMergeOptions) As ParallelQuery(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TSource&gt; ^ WithMergeOptions(System::Linq::ParallelQuery&lt;TSource&gt; ^ source, System::Linq::ParallelMergeOptions mergeOptions);" />
      <MemberSignature Language="F#" Value="static member WithMergeOptions : System.Linq.ParallelQuery&lt;'Source&gt; * System.Linq.ParallelMergeOptions -&gt; System.Linq.ParallelQuery&lt;'Source&gt;" Usage="System.Linq.ParallelEnumerable.WithMergeOptions (source, mergeOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.ParallelQuery&lt;TSource&gt;" RefType="this" />
        <Parameter Name="mergeOptions" Type="System.Linq.ParallelMergeOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="28511-2227">
            <paramref name="source" /> 的元素类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2227">The type of elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="28511-2228">要对其设置选项的 ParallelQuery。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2228">A ParallelQuery on which to set the option.</span>
          </span>
        </param>
        <param name="mergeOptions">
          <span data-ttu-id="28511-2229">要为此查询设置的合并选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2229">The merge options to set for this query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2230">设置此查询的合并选项，它指定查询对输出进行缓冲处理的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2230">Sets the merge options for this query, which specify how the query will buffer output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2231">表示与源相同的查询的 ParallelQuery，但带有已注册的合并选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2231">ParallelQuery representing the same query as source, but with the registered merge options.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2232">
            <paramref name="source" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2232">
              <paramref name="source" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="28511-2233">
            <paramref name="mergeOptions" /> 不是有效的 <see cref="T:System.Linq.ParallelMergeOptions" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2233">
              <paramref name="mergeOptions" /> is not a valid <see cref="T:System.Linq.ParallelMergeOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28511-2234">在该查询中，多次使用 <paramref name="WithMergeOptions" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2234">
              <paramref name="WithMergeOptions" /> is used multiple times in the query.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2235">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2235">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e8f7be3b-88de-4f33-ab14-dc008e76c1ba">
          <span data-ttu-id="28511-2236">PLINQ 中的合并选项</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2236">Merge Options in PLINQ</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/0f33b527-e91a-4550-a39a-e63e396fd831">
          <span data-ttu-id="28511-2237">如何：在 PLINQ 中指定合并选项</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2237">How to: Specify Merge Options in PLINQ</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28511-2238">通过使用指定的谓词函数并行合并两个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2238">Merges in parallel two sequences by using the specified predicate function.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.ParallelQuery&lt;TFirst&gt; first, System.Collections.Generic.IEnumerable&lt;TSecond&gt; second, Func&lt;TFirst,TSecond,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TFirst&gt; first, class System.Collections.Generic.IEnumerable`1&lt;!!TSecond&gt; second, class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (first As ParallelQuery(Of TFirst), second As IEnumerable(Of TSecond), resultSelector As Func(Of TFirst, TSecond, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Zip(System::Linq::ParallelQuery&lt;TFirst&gt; ^ first, System::Collections::Generic::IEnumerable&lt;TSecond&gt; ^ second, Func&lt;TFirst, TSecond, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.ParallelQuery&lt;'First&gt; * seq&lt;'Second&gt; * Func&lt;'First, 'Second, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Zip (first, second, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The second data source of a binary operator must be of type System.Linq.ParallelQuery&lt;T&gt; rather than System.Collections.Generic.IEnumerable&lt;T&gt;. To fix this problem, use the AsParallel() extension method to convert the right data source to System.Linq.ParallelQuery&lt;T&gt;.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Collections.Generic.IEnumerable&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TFirst,TSecond,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst">
          <span data-ttu-id="28511-2239">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2239">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TSecond">
          <span data-ttu-id="28511-2240">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2240">This type parameter is not used.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-2241">未使用此类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2241">This type parameter is not used.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-2242">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2242">This parameter is not used.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-2243">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2243">This parameter is not used.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-2244">未使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2244">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2245">切勿调用此 Zip 重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2245">This Zip overload should never be called.</span>
          </span>
          <span data-ttu-id="28511-2246">此方法已标记为过时，调用此方法时总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2246">This method is marked as obsolete and always throws <see cref="T:System.NotSupportedException" /> when invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2247">此重载总是会引发 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2247">This overload always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28511-2248">此重载可禁止使用左侧的数据源类型的 Zip<xref:System.Linq.ParallelQuery%601>和正确的数据源类型的<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="28511-2248">This overload exists to disallow usage of Zip with a left data source of type <xref:System.Linq.ParallelQuery%601> and a right data source of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> <span data-ttu-id="28511-2249">否则为 Zip 运算符会显示要绑定到并行实现，但在现实中绑定到顺序实现。</span><span class="sxs-lookup"><span data-stu-id="28511-2249">Otherwise, the Zip operator would appear to be bind to the parallel implementation, but would in reality bind to the sequential implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="28511-2250">调用此方法时发生的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2250">The exception that occurs when this method is called.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md">
          <span data-ttu-id="28511-2251">并行 LINQ (PLINQ)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2251">Parallel LINQ (PLINQ)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.ParallelQuery&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.ParallelQuery&lt;TFirst&gt; first, System.Linq.ParallelQuery&lt;TSecond&gt; second, Func&lt;TFirst,TSecond,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.ParallelQuery`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.ParallelQuery`1&lt;!!TFirst&gt; first, class System.Linq.ParallelQuery`1&lt;!!TSecond&gt; second, class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (first As ParallelQuery(Of TFirst), second As ParallelQuery(Of TSecond), resultSelector As Func(Of TFirst, TSecond, TResult)) As ParallelQuery(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::ParallelQuery&lt;TResult&gt; ^ Zip(System::Linq::ParallelQuery&lt;TFirst&gt; ^ first, System::Linq::ParallelQuery&lt;TSecond&gt; ^ second, Func&lt;TFirst, TSecond, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.ParallelQuery&lt;'First&gt; * System.Linq.ParallelQuery&lt;'Second&gt; * Func&lt;'First, 'Second, 'Result&gt; -&gt; System.Linq.ParallelQuery&lt;'Result&gt;" Usage="System.Linq.ParallelEnumerable.Zip (first, second, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelQuery&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="System.Linq.ParallelQuery&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="second" Type="System.Linq.ParallelQuery&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TFirst,TSecond,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst">
          <span data-ttu-id="28511-2252">第一个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2252">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TSecond">
          <span data-ttu-id="28511-2253">第二个序列中的元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2253">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="28511-2254">返回元素的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2254">The type of the return elements.</span>
          </span>
        </typeparam>
        <param name="first">
          <span data-ttu-id="28511-2255">要压缩的第一个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2255">The first sequence to zip.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="28511-2256">要压缩的第二个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2256">The second sequence to zip.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="28511-2257">用于从两个匹配元素创建结果元素的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2257">A function to create a result element from two matching elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28511-2258">通过使用指定的谓词函数并行合并两个序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2258">Merges in parallel two sequences by using the specified predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28511-2259">一个序列，其中包含通过对两个序列执行 <paramref name="TResult" /> 配对获得的 <paramref name="resultSelector" /> 类型的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2259">A sequence that has elements of type <paramref name="TResult" /> that are obtained by performing <paramref name="resultSelector" /> pairwise on two sequences.</span>
          </span>
          <span data-ttu-id="28511-2260">如果序列长度不相等，这将截断为较短序列的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2260">If the sequence lengths are unequal, this truncates to the length of the shorter sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28511-2261">
            <paramref name="first" /> 或 <paramref name="second" /> 或 <paramref name="resultSelector" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2261">
              <paramref name="first" /> or <paramref name="second" /> or <paramref name="resultSelector" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="28511-2262">已使用通过 <paramref name="WithCancellation" /> 传递的令牌取消了查询。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2262">The query was canceled with the token passed in through <paramref name="WithCancellation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="28511-2263">评估查询期间发生一个或多个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28511-2263">One or more exceptions occurred during the evaluation of the query.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>