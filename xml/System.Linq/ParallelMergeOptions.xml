<Type Name="ParallelMergeOptions" FullName="System.Linq.ParallelMergeOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cc52c2fdc311942111dafa5de93e39f3ca04a7b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30424941" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ParallelMergeOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParallelMergeOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelMergeOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParallelMergeOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParallelMergeOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="00bb0-101">指定要在查询中使用的首选输出合并类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="00bb0-101">Specifies the preferred type of *output merge* to use in a query.</span>
      </span>
      <span data-ttu-id="00bb0-102">换而言之，它指示 PLINQ 应如何将来自各个分区的结果合并回单个结果序列。</span>
      <span class="sxs-lookup">
        <span data-stu-id="00bb0-102">In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence.</span>
      </span>
      <span data-ttu-id="00bb0-103">这只是一个提示，并且在对所有查询进行并行化时系统可能不会遵循此提示。</span>
      <span class="sxs-lookup">
        <span data-stu-id="00bb0-103">This is a hint only, and may not be respected by the system when parallelizing all queries.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00bb0-104">使用`NotBuffered`对于将使用和作为流输出的查询，这已开始执行查询与正在生成的元素之间的延迟最低。</span><span class="sxs-lookup"><span data-stu-id="00bb0-104">Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded.</span></span> <span data-ttu-id="00bb0-105">对于某些查询，如那些涉及排序 （OrderBy、 OrderByDescending），缓冲十分重要，将忽略 NotBuffered 或 AutoBuffered 的提示。</span><span class="sxs-lookup"><span data-stu-id="00bb0-105">For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored.</span></span> <span data-ttu-id="00bb0-106">但是，通过使用 AsOrdered 运算符创建的查询可以进行流式处理，只要没有排序查询本身内执行。</span><span class="sxs-lookup"><span data-stu-id="00bb0-106">However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.</span></span>  
  
 <span data-ttu-id="00bb0-107">使用`AutoBuffered`对于大多数情况下; 这是默认值。</span><span class="sxs-lookup"><span data-stu-id="00bb0-107">Use `AutoBuffered` for most cases; this is the default.</span></span> <span data-ttu-id="00bb0-108">它可适当平衡延迟和整体性能。</span><span class="sxs-lookup"><span data-stu-id="00bb0-108">It strikes a balance between latency and overall performance.</span></span>  
  
 <span data-ttu-id="00bb0-109">使用`FullyBuffered`时可处理整个输出，需要这些信息之前，对查询。</span><span class="sxs-lookup"><span data-stu-id="00bb0-109">Use `FullyBuffered` for queries when the entire output can be processed before the information is needed.</span></span> <span data-ttu-id="00bb0-110">在之前生成的任何信息，但不适合进行流处理或显示部分结果中间查询可以累积的所有输出时，此选项将提供最佳性能。</span><span class="sxs-lookup"><span data-stu-id="00bb0-110">This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoBuffered">
      <MemberSignature Language="C#" Value="AutoBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions AutoBuffered = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.AutoBuffered" />
      <MemberSignature Language="VB.NET" Value="AutoBuffered" />
      <MemberSignature Language="C++ CLI" Value="AutoBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="00bb0-111">利用系统选定大小的输出缓冲区进行合并。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00bb0-111">Use a merge with output buffers of a size chosen by the system.</span>
          </span>
          <span data-ttu-id="00bb0-112">在向查询使用者提供结果之前，会先将结果累计到输出缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00bb0-112">Results will accumulate into an output buffer before they are available to the consumer of the query.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="00bb0-113">使用默认合并类型，即 AutoBuffered。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00bb0-113">Use the default merge type, which is AutoBuffered.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FullyBuffered">
      <MemberSignature Language="C#" Value="FullyBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions FullyBuffered = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.FullyBuffered" />
      <MemberSignature Language="VB.NET" Value="FullyBuffered" />
      <MemberSignature Language="C++ CLI" Value="FullyBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="00bb0-114">利用整个输出缓冲区进行合并。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00bb0-114">Use a merge with full output buffers.</span>
          </span>
          <span data-ttu-id="00bb0-115">在向查询使用者提供任何结果之前，系统会先累计所有结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00bb0-115">The system will accumulate all of the results before making any of them available to the consumer of the query.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NotBuffered">
      <MemberSignature Language="C#" Value="NotBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions NotBuffered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.NotBuffered" />
      <MemberSignature Language="VB.NET" Value="NotBuffered" />
      <MemberSignature Language="C++ CLI" Value="NotBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="00bb0-116">不利用输出缓冲区进行合并。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00bb0-116">Use a merge without output buffers.</span>
          </span>
          <span data-ttu-id="00bb0-117">一旦计算出结果元素，就向查询使用者提供这些元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="00bb0-117">As soon as result elements have been computed, make that element available to the consumer of the query.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>