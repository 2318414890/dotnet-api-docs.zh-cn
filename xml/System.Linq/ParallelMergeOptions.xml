<Type Name="ParallelMergeOptions" FullName="System.Linq.ParallelMergeOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1dd20a613f88a683b764ea8311562729eed5d0aa" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58726018" /></Metadata><TypeSignature Language="C#" Value="public enum ParallelMergeOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParallelMergeOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelMergeOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParallelMergeOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParallelMergeOptions" />
  <TypeSignature Language="F#" Value="type ParallelMergeOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定要在查询中使用的首选输出合并类型。 换言之，它指示 PLINQ 如何将多个分区的结果合并回单个结果序列。 <span data-ttu-id="247b0-103">这仅是一个提示，系统在并行处理所有查询时可能不会考虑这一点。</span><span class="sxs-lookup"><span data-stu-id="247b0-103">This is a hint only, and may not be respected by the system when parallelizing all queries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="247b0-104">使用`NotBuffered`的查询，将使用和输出流的形式，这已开始执行查询和生成的元素之间的延迟最低。</span><span class="sxs-lookup"><span data-stu-id="247b0-104">Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded.</span></span> <span data-ttu-id="247b0-105">对于某些查询，如那些涉及排序 （OrderBy、 OrderByDescending），缓冲十分重要，将忽略 NotBuffered 或 AutoBuffered 的提示。</span><span class="sxs-lookup"><span data-stu-id="247b0-105">For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored.</span></span> <span data-ttu-id="247b0-106">但是，只要在查询自身中执行任何进一步排序，则可以传输使用 AsOrdered 运算符创建的查询。</span><span class="sxs-lookup"><span data-stu-id="247b0-106">However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.</span></span>  
  
 <span data-ttu-id="247b0-107">使用`AutoBuffered`对于大多数情况下; 这是默认值。</span><span class="sxs-lookup"><span data-stu-id="247b0-107">Use `AutoBuffered` for most cases; this is the default.</span></span> <span data-ttu-id="247b0-108">它发生延迟和总体性能之间的平衡。</span><span class="sxs-lookup"><span data-stu-id="247b0-108">It strikes a balance between latency and overall performance.</span></span>  
  
 <span data-ttu-id="247b0-109">使用`FullyBuffered`时需要这些信息之前，可以处理整个输出，对查询。</span><span class="sxs-lookup"><span data-stu-id="247b0-109">Use `FullyBuffered` for queries when the entire output can be processed before the information is needed.</span></span> <span data-ttu-id="247b0-110">在之前无法完成任何信息，但并不适用于流处理或显示部分结果中间查询可以累积的所有输出时，此选项提供最佳性能。</span><span class="sxs-lookup"><span data-stu-id="247b0-110">This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="247b0-111">并行 LINQ (PLINQ)</span><span class="sxs-lookup"><span data-stu-id="247b0-111">Parallel LINQ (PLINQ)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e8f7be3b-88de-4f33-ab14-dc008e76c1ba"><span data-ttu-id="247b0-112">PLINQ 中的合并选项</span><span class="sxs-lookup"><span data-stu-id="247b0-112">Merge Options in PLINQ</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0f33b527-e91a-4550-a39a-e63e396fd831"><span data-ttu-id="247b0-113">如何：在 PLINQ 中指定合并选项</span><span class="sxs-lookup"><span data-stu-id="247b0-113">How to: Specify Merge Options in PLINQ</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AutoBuffered">
      <MemberSignature Language="C#" Value="AutoBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions AutoBuffered = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.AutoBuffered" />
      <MemberSignature Language="VB.NET" Value="AutoBuffered" />
      <MemberSignature Language="C++ CLI" Value="AutoBuffered" />
      <MemberSignature Language="F#" Value="AutoBuffered = 2" Usage="System.Linq.ParallelMergeOptions.AutoBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="247b0-114">利用系统选定大小的输出缓冲区进行合并。</span><span class="sxs-lookup"><span data-stu-id="247b0-114">Use a merge with output buffers of a size chosen by the system.</span></span> <span data-ttu-id="247b0-115">在向查询使用者提供结果之前，会先将结果累计到输出缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="247b0-115">Results will accumulate into an output buffer before they are available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Linq.ParallelMergeOptions.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="247b0-116">使用默认合并类型，即 AutoBuffered。</span><span class="sxs-lookup"><span data-stu-id="247b0-116">Use the default merge type, which is AutoBuffered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FullyBuffered">
      <MemberSignature Language="C#" Value="FullyBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions FullyBuffered = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.FullyBuffered" />
      <MemberSignature Language="VB.NET" Value="FullyBuffered" />
      <MemberSignature Language="C++ CLI" Value="FullyBuffered" />
      <MemberSignature Language="F#" Value="FullyBuffered = 3" Usage="System.Linq.ParallelMergeOptions.FullyBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="247b0-117">利用整个输出缓冲区进行合并。</span><span class="sxs-lookup"><span data-stu-id="247b0-117">Use a merge with full output buffers.</span></span> <span data-ttu-id="247b0-118">在向查询使用者提供任何结果之前，系统会先累计所有结果。</span><span class="sxs-lookup"><span data-stu-id="247b0-118">The system will accumulate all of the results before making any of them available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NotBuffered">
      <MemberSignature Language="C#" Value="NotBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions NotBuffered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.NotBuffered" />
      <MemberSignature Language="VB.NET" Value="NotBuffered" />
      <MemberSignature Language="C++ CLI" Value="NotBuffered" />
      <MemberSignature Language="F#" Value="NotBuffered = 1" Usage="System.Linq.ParallelMergeOptions.NotBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="247b0-119">不利用输出缓冲区进行合并。</span><span class="sxs-lookup"><span data-stu-id="247b0-119">Use a merge without output buffers.</span></span> <span data-ttu-id="247b0-120">一旦计算出结果元素，就向查询使用者提供这些元素。</span><span class="sxs-lookup"><span data-stu-id="247b0-120">As soon as result elements have been computed, make that element available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>