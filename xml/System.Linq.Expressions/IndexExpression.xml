<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IndexExpression.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59fdffad3c2941ea31377d55a8a600c66c50ca005.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fdffad3c2941ea31377d55a8a600c66c50ca005</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.IndexExpression">
          <source>Represents indexing a property or array.</source>
          <target state="translated">表示对一个属性或数组进行索引。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.IndexExpression">
          <source>The following code example shows how to create an object of the <ph id="ph1">&lt;xref:System.Linq.Expressions.IndexExpression&gt;</ph> type and use it to change a value of an array element by using the <ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.ArrayAccess%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何创建的对象<ph id="ph1">&lt;xref:System.Linq.Expressions.IndexExpression&gt;</ph>键入并使用它来通过使用更改的数组元素值<ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.ArrayAccess%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.IndexExpression.Arguments">
          <source>Gets the arguments that will be used to index the property or array.</source>
          <target state="translated">获取将用于为属性或数组编制索引的自变量。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.IndexExpression.Arguments">
          <source>The read-only collection containing the arguments that will be used to index the property or array.</source>
          <target state="translated">包含将用于为属性或数组编制索引的自变量的只读集合。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.IndexExpression.Indexer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> for the property if the expression represents an indexed property, returns null otherwise.</source>
          <target state="translated">如果表达式表示索引属性，则获取属性的 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>，否则返回 null。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.IndexExpression.Indexer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> for the property if the expression represents an indexed property, otherwise null.</source>
          <target state="translated">如果表达式表示索引属性，则为属性的 <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>，否则为 null。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.IndexExpression.NodeType">
          <source>Returns the node type of this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</source>
          <target state="translated">返回此 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 的节点类型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.IndexExpression.NodeType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> that represents this expression.</source>
          <target state="translated">用于表示此表达式的 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.IndexExpression.Object">
          <source>An object to index.</source>
          <target state="translated">要编制索引的对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.IndexExpression.Object">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> representing the object to index.</source>
          <target state="translated">表示要编制索引的对象的 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
          <source>Returns the number of arguments to the expression tree node.</source>
          <target state="translated">返回表达式树节点的参数数目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
          <source>You should not use this member.</source>
          <target state="translated">不应使用此成员。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
          <source>It is only public due to assembly refactoring, and it is used internally for performance optimizations.</source>
          <target state="translated">由于程序集重构，只能为公共的；并且在内部用于性能优化。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>The index of the argument.</source>
          <target state="translated">自变量的索引。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>Returns the argument at index, throwing if index is out of bounds.</source>
          <target state="translated">索引时返回自变量，当索引超出界限时引发。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>You should not use this member.</source>
          <target state="translated">不应使用此成员。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>It is only public due to assembly refactoring, and it is used internally for performance optimizations.</source>
          <target state="translated">由于程序集重构，只能为公共的；并且在内部用于性能优化。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.IndexExpression.Type">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> represents.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 表示的表达式的静态类型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.IndexExpression.Type">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.IndexExpression.Type" /&gt;</ph> that represents the static type of the expression.</source>
          <target state="translated">表示表达式的静态类型的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.IndexExpression.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.IndexExpression.Object" /&gt;</ph> property of the result.</source>
          <target state="translated">结果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.IndexExpression.Object" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.IndexExpression.Arguments" /&gt;</ph> property of the result.</source>
          <target state="translated">结果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.IndexExpression.Arguments" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">创建一个新的表达式，它类似于此表达式，但使用所提供的子级。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">如果所有子级均相同，它将返回此表达式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">如果子级未更改，则为此表达式；否则为具有已更新子级的表达式。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>