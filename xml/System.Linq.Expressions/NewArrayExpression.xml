<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NewArrayExpression.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53d6c39feb13edfea80670aa5d60dac1bee4416d7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d6c39feb13edfea80670aa5d60dac1bee4416d7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.NewArrayExpression">
          <source>Represents creating a new array and possibly initializing the elements of the new array.</source>
          <target state="translated">表示创建一个新数组，并可能初始化该新数组的元素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.NewArrayExpression">
          <source>The following table shows the different factory methods that you can use to create a <ph id="ph1">&lt;xref:System.Linq.Expressions.NewArrayExpression&gt;</ph> depending on the <ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> you require.</source>
          <target state="translated">下表显示不同的工厂方法可用于创建<ph id="ph1">&lt;xref:System.Linq.Expressions.NewArrayExpression&gt;</ph>具体取决于<ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph>需要。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.NewArrayExpression">
          <source>Factory Methods</source>
          <target state="translated">工厂方法</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.NewArrayExpression">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Linq.Expressions.NewArrayExpression&gt;</ph> object that represents creating and initializing a one-dimensional array of strings.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Linq.Expressions.NewArrayExpression&gt;</ph>表示创建并初始化字符串的一维数组的对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.NewArrayExpression">
          <source>The next example creates a <ph id="ph1">&lt;xref:System.Linq.Expressions.NewArrayExpression&gt;</ph> object that represents creating a two-dimensional array of strings.</source>
          <target state="translated">下一个示例创建<ph id="ph1">&lt;xref:System.Linq.Expressions.NewArrayExpression&gt;</ph>表示创建字符串的二维数组的对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>The visitor to visit this node with.</source>
          <target state="translated">对此节点进行访问的访问者。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>Dispatches to the specific visit method for this node type.</source>
          <target state="translated">调度到此节点类型的特定 Visit 方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>For example, <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.MethodCallExpression" /&gt;</ph> calls the <ph id="ph2">&lt;see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" /&gt;</ph>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="T:System.Linq.Expressions.MethodCallExpression" /&gt;</ph> 调用 <ph id="ph2">&lt;see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>The result of visiting this node.</source>
          <target state="translated">对此节点访问的结果。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>This default implementation for <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionType.Extension&gt;</ph> nodes calls <ph id="ph2">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</source>
          <target state="translated">此默认实现<ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionType.Extension&gt;</ph>节点调用<ph id="ph2">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>Override this method to call into a more specific method on a derived visitor class of the <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor&gt;</ph> class.</source>
          <target state="translated">重写此方法以调入派生的访问者类的更具体的方法<ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>However, it should still support unknown visitors by calling <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</source>
          <target state="translated">但是，它仍应通过调用支持未知的访问者<ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.NewArrayExpression.Expressions">
          <source>Gets the bounds of the array if the value of the <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.Expression.NodeType" /&gt;</ph> property is <ph id="ph2">&lt;see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /&gt;</ph>, or the values to initialize the elements of the new array if the value of the <ph id="ph3">&lt;see cref="P:System.Linq.Expressions.Expression.NodeType" /&gt;</ph> property is <ph id="ph4">&lt;see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.Expression.NodeType" /&gt;</ph> 属性的值为 <ph id="ph2">&lt;see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /&gt;</ph>，则获取数组的界限；如果 <ph id="ph3">&lt;see cref="P:System.Linq.Expressions.Expression.NodeType" /&gt;</ph> 属性的值为 <ph id="ph4">&lt;see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /&gt;</ph>，则获取用来初始化新数组的元素的值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.NewArrayExpression.Expressions">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> objects which represent either the bounds of the array or the initialization values.</source>
          <target state="translated">表示数组的界限或初始化值的 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.NewArrayExpression.Type">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> represents.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 表示的表达式的静态类型。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.NewArrayExpression.Type">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.NewArrayExpression.Type" /&gt;</ph> that represents the static type of the expression.</source>
          <target state="translated">表示表达式的静态类型的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.NewArrayExpression.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /&gt;</ph> property of the result.</source>
          <target state="translated">结果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">创建一个新的表达式，它类似于此表达式，但使用所提供的子级。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">如果所有子级均相同，它将返回此表达式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">如果子级未更改，则为此表达式；否则为具有已更新子级的表达式。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>