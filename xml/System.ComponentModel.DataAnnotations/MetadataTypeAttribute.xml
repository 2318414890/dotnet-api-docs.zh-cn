<Type Name="MetadataTypeAttribute" FullName="System.ComponentModel.DataAnnotations.MetadataTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29bb9cbc8ea9413a6e7ce22d0bebf3a3e99d9f59" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30365821" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MetadataTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定要与数据模型类关联的元数据类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.DataAnnotations.MetadataTypeAttribute>属性，可将类相关联的数据模型的分部类。 此关联的类可以提供不位于数据模型的其他元数据信息。  
  
 例如，关联的类中可以应用<xref:System.ComponentModel.DataAnnotations.RequiredAttribute>属性数据字段。 这会强制即使此约束不需要的数据库架构，为该字段提供的值。  
  
 你使用<xref:System.ComponentModel.DataAnnotations.MetadataTypeAttribute>属性，如下所示：  
  
-   在你的应用程序，将创建在其中创建数据模型分部类，你想要修改的文件。  
  
-   创建关联的元数据类。  
  
-   应用<xref:System.ComponentModel.DataAnnotations.MetadataTypeAttribute>属性设为指定的关联的类的部分实体类。  
  
 当应用此属性时，你必须遵循以下的使用限制：  
  
-   该属性只能应用于类。  
  
-   由派生类，该属性不能被继承。  
  
-   特性可以应用只进行一次。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.ComponentModel.DataAnnotations.MetadataTypeAttribute>要实体分部类相关联的元数据类。 该示例将应用<xref:System.ComponentModel.DataAnnotations.RequiredAttribute>属性数据字段以显示如何提供关联的元数据类中的其他信息。  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.MetadataTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.MetadataTypeAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.MetadataTypeAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.MetadataTypeAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataTypeAttribute (Type metadataClassType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type metadataClassType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadataClassType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataTypeAttribute(Type ^ metadataClassType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadataClassType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="metadataClassType">要引用的元数据类。</param>
        <summary>初始化 <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何使用<xref:System.ComponentModel.DataAnnotations.MetadataTypeAttribute>要实体分部类相关联的元数据类。  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.MetadataTypeAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.MetadataTypeAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.MetadataTypeAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.MetadataTypeAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataClassType" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataClassType">
      <MemberSignature Language="C#" Value="public Type MetadataClassType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type MetadataClassType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.MetadataClassType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataClassType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ MetadataClassType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与数据模型分部类关联的元数据类。</summary>
        <value>表示元数据类的类型值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>