<Type Name="ChartArea3DStyle" FullName="System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="577fe76dec64bd98d6c61103b0f491785e7b14ea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChartArea3DStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartArea3DStyle extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartArea3DStyle" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartArea3DStyle" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理三维 (3D) 图表区域的显示特性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类为三维图表区提供样式，并且使用公开<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A>属性。  
  
 若要为图表区启用三维，设置<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Enable3D%2A>属性`true`。 这会导致三维应用于绘制图表区中的所有数据序列。  
  
 可以通过设置显示的图表区等投影<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A>属性`true`，这是默认设置。 不等轴视图实际 3D，因为显示的旋转角度可能与实际的绕垂直和水平轴的旋转角度不匹配。 使用控制实际的角度<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination%2A>属性，分别。  
  
 有关等角投影的详细信息，请参阅备注部分的<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A>属性。  
  
 你还可以使用此类：  
  
-   簇状条形图和列图表数据系列使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsClustered%2A>属性。  
  
-   控制使用的照明效果<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.LightStyle%2A>属性。  
  
-   设置使用的图表区墙的宽度<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.WallWidth%2A>属性。  
  
-   设置与透视量<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Perspective%2A>属性。  
  
-   控制数据点，并且使用的数据行之间的距离的深度<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth%2A>属性，分别。  
  
-   旋转图表区域使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation%2A>属性。  
  
 若要使用三维点的坐标，使用<xref:System.Windows.Forms.DataVisualization.Charting.Point3D>类。  
  
 当图表设置为三维时，以下图表功能不是有效的：  
  
-   刻度分隔线  
  
-   渐变  
  
-   滚动和缩放  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChartArea3DStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChartArea3DStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChartArea3DStyle (System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.#ctor(System.Windows.Forms.DataVisualization.Charting.ChartArea)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChartArea3DStyle(System::Windows::Forms::DataVisualization::Charting::ChartArea ^ chartArea);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chartArea" Type="System.Windows.Forms.DataVisualization.Charting.ChartArea" />
      </Parameters>
      <Docs>
        <param name="chartArea">用于初始化的 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> 对象。</param>
        <summary>使用 <paramref name="chartArea" /> 参数初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable3D">
      <MemberSignature Language="C#" Value="public bool Enable3D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable3D" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Enable3D" />
      <MemberSignature Language="VB.NET" Value="Public Property Enable3D As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable3D { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置切换图表区域三维效果开与关的标志。</summary>
        <value>
          如果图表区域使用三维显示，则为 <see langword="true" />，如果图表区域使用二维显示，则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 切换图表区的三维显示。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inclination">
      <MemberSignature Language="C#" Value="public int Inclination { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Inclination" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination" />
      <MemberSignature Language="VB.NET" Value="Public Property Inclination As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Inclination { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表区域绕水平轴旋转的角度。</summary>
        <value>一个 <see langword="integer" />，它表示三维图表区域绕水平轴旋转的角度。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public bool IsClustered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClustered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsClustered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsClustered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClustered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个标志，该标志确定条形图或柱形图的数据系列是否为簇状；即，沿非重复行显示。</summary>
        <value>
          如果条形图或柱形图的数据系列为簇状，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRightAngleAxes">
      <MemberSignature Language="C#" Value="public bool IsRightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRightAngleAxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightAngleAxes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个标志，该标志确定图表区域是否使用等角投影显示。</summary>
        <value>
          如果图表区域使用等角投影显示，则为 <see langword="true" />；否则，为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不等轴视图实际 3D，因为显示的旋转角度可能与实际的绕垂直和水平轴的旋转角度不匹配。 使用控制实际的角度<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Inclination%2A>属性，分别。  
  
 请注意以下几点有关等投影：  
  
-   它不是"真实"三维。 也就是说，绕轴旋转的角度不使用 true 的旋转角度。  
  
-   它非常适合于显示具有某些深度的三维图表。  
  
-   如果你的应用程序允许最终用户旋转图表，不会平滑旋转。 在这种情况下，不建议使用等轴视图。  
  
-   等投影，不支持透视。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LightStyle LightStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LightStyle LightStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.LightStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LightStyle As LightStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LightStyle LightStyle { System::Windows::Forms::DataVisualization::Charting::LightStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LightStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LightStyle), "Simplistic")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LightStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表区域的照明样式。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.LightStyle" /> 枚举值，指定三维图表区域的光照样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Perspective" />
      <MemberSignature Language="VB.NET" Value="Public Property Perspective As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Perspective { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表区域的透视百分比。</summary>
        <value>一个 <see langword="integer" /> 值，该值表示三维图表区域的透视百分比。 允许的范围为 0-100%，默认值为百分之零 (0%)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 透视投影的任何一组不是并行与投影平面的平行直线聚合到一个消失点。  
  
 如果你设置<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Perspective%2A>属性，<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A>属性将自动设置为`false`，因为这些属性是互相排斥。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointDepth">
      <MemberSignature Language="C#" Value="public int PointDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointDepth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property PointDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表区域中显示的数据点的深度。</summary>
        <value>一个 <see langword="integer" /> 值，该值表示数据点的深度。 允许的范围为 0-1000%。 默认值为 100%。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性确定数据点的深度，表示为数据点宽度的百分比。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth%2A>属性可应用于的深度条形图、 柱形，折线图、 饼图和样条图数据点。 如果将此属性设置为不能有其点深度"拉伸"其他图表类型 （例如，气泡图和点图） 时，它将保留为数据点的额外空间，但不是会增加其深度。  
  
 您可以通过设置图表显示为等投影<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A>属性`true`，这是默认值。 这将导致点深度看起来比设置此属性，具体取决于图表显示的百分比多或少。  
  
 若要控制的数据行之间的间距，使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointGapDepth">
      <MemberSignature Language="C#" Value="public int PointGapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointGapDepth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property PointGapDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointGapDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表区域中序列行之间的距离。</summary>
        <value>一个 <see langword="integer" /> 值，该值表示三维图表区域中数据行（即数据序列）之间的距离。 允许的范围为 0-1000%，默认值为 100%。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性确定数据行，其中每一行对应到某一数据序列之间的距离。 一个行中的数据点之间的距离百分比表示的度量单位。  
  
 更改列或列和条形图类型使用的条形图之间的差距`PointWidth`自定义属性将影响<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointGapDepth%2A>属性值。  
  
 设置<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.IsRightAngleAxes%2A>属性`true`（默认值） 以图表显示为等投影。 这将导致点间隙深度看起来比设置此属性，具体取决于图表显示的百分比多或少。  
  
 若要控制数据点的深度，使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.PointDepth%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public int Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rotation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表区域绕垂直轴旋转的角度。</summary>
        <value>一个 <see langword="integer" /> 值，它表示三维图表区域绕垂直轴旋转的角度。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WallWidth">
      <MemberSignature Language="C#" Value="public int WallWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WallWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartArea3DStyle.WallWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property WallWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WallWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置三维图表区域中显示的墙的宽度。</summary>
        <value>一个 <see langword="integer" /> 值，该值表示三维图表区域中显示的墙的宽度（以像素为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性确定将显示在三维图表区墙 （例如，背面墙，侧面板和等） 的宽度。 允许的范围为 0-30 像素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>