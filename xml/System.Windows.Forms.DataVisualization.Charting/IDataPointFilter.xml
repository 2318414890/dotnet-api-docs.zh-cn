<Type Name="IDataPointFilter" FullName="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="186976d518543a01b66d18a27e5bb10f775971a0" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53292661" /></Metadata><TypeSignature Language="C#" Value="public interface IDataPointFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataPointFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataPointFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataPointFilter" />
  <TypeSignature Language="F#" Value="type IDataPointFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>公开 <see cref="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" /> 方法，该方法允许自定义筛选 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter>接口公开<xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A>方法，它采用一系列中的特定数据点，并返回`Boolean`值，该值确定是否将筛选该数据点。  
  
 若要执行自定义筛选：  
  
-   派生新的或现有的类，此接口中。  
  
-   重写<xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A>方法以提供自定义筛选逻辑。  
  
-   若要启动筛选操作，调用之一`Filter`中的方法<xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator>采用类<xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter>对象作为其第一个参数。  
  
 有关示例源代码，请参阅<xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A>方法。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FilterDataPoint">
      <MemberSignature Language="C#" Value="public bool FilterDataPoint (System.Windows.Forms.DataVisualization.Charting.DataPoint point, System.Windows.Forms.DataVisualization.Charting.Series series, int pointIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterDataPoint(class System.Windows.Forms.DataVisualization.Charting.DataPoint point, class System.Windows.Forms.DataVisualization.Charting.Series series, int32 pointIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterDataPoint(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ point, System::Windows::Forms::DataVisualization::Charting::Series ^ series, int pointIndex);" />
      <MemberSignature Language="F#" Value="abstract member FilterDataPoint : System.Windows.Forms.DataVisualization.Charting.DataPoint * System.Windows.Forms.DataVisualization.Charting.Series * int -&gt; bool" Usage="iDataPointFilter.FilterDataPoint (point, series, pointIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="pointIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="point">要进行筛选的 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 对象。</param>
        <param name="series">数据点所属的 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 对象。</param>
        <param name="pointIndex">数据点的索引，用于确定该数据点在序列中的位置。</param>
        <summary>确定是否将在序列中筛选特定数据点。</summary>
        <returns>如果已删除该数据点，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法应在一系列，每个数据点的调用并返回`Boolean`值，该值指示是否应筛选的数据点。  
  
 若要提供自定义筛选，派生从新的或现有类<xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter>接口并实现此方法。 提供自定义条件匹配的逻辑，则返回`true`或`false`将标记数据点进行筛选。 实现此方法后，使用之一`Filter`中的方法定义<xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator>采用类<xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter>对象作为参数来执行筛选。  
  
 默认情况下，筛选的点，将从一系列。 它们也可以显示为空点的值设置<xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A>属性设置为`true`。  
  
 筛选的点也被标记为如果它们不匹配筛选条件，由筛选<xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>