<Type Name="Grid" FullName="System.Windows.Forms.DataVisualization.Charting.Grid">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6fcc37ca3c1fc90c7213eaf7108bc0080c93822" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48714000" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Grid" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Grid extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Grid" />
  <TypeSignature Language="VB.NET" Value="Public Class Grid" />
  <TypeSignature Language="C++ CLI" Value="public ref class Grid" />
  <TypeSignature Language="F#" Value="type Grid = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供用于管理 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" /> 对象的主要和次要网格的方法和属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类提供用于在图表上的网格的功能，并使用公开<xref:System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid%2A>并<xref:System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid%2A>的每个属性<xref:System.Windows.Forms.DataVisualization.Charting.Axis>对象。  
  
 主要网格线，默认情况下不具有其<xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>， <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>， <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>，和<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A>属性集。 如果未设置这些属性主要网格线，<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控件将自动确定网格线的相应值。  
  
 轴和其次要网格线，默认情况下都有其<xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>， <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>， <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>，和<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A>属性设置为**自动**(0)。 如果启用了轴标签或次要网格线，并且不会修改这些属性，<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控件自动确定通常绘制次要网格线的方式。  
  
 轴网格：  
  
-   可以启用或禁用。  
  
-   具有起始点，用于确定他们首先绘制的位置。  
  
-   显示可以为样式、 宽度和颜色设置的行。  
  
-   可以自动时间间隔或手动设置的时间间隔。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Grid.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grid();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Grid.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个标志，该标志确定是否启用主要或次要网格线。</summary>
        <value>如果已启用，则为 <see langword="True" />；如果已禁用，则为 <see langword="false" />。 对于主要网格对象，默认值为 <see langword="true" />，对于次要网格对象，默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 主要和次要网格会显示启用时，禁用时不可见。  
  
 如果禁用，将不显示刻度线。  
  
 可以通过设置禁用刻度<xref:System.Windows.Forms.DataVisualization.Charting.TickMark.TickMarkStyle%2A>属性设置为<xref:System.Windows.Forms.DataVisualization.Charting.TickMarkStyle.None>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Grid.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主要网格线或次要网格线之间的间隔。</summary>
        <value>一个 <see langword="double" /> 值，该值表示网格线之间的间隔。 默认情况下，不对主要网格线设置该值 (<see cref="F:System.Double.NaN" />)。 对于次要网格线，默认值为零 (0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下此属性未设置轴标签、 主要刻度线和主要网格线。 如果未设置 — 通过默认情况下，通过显式使用<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>在设计时或通过分配的值<xref:System.Double.NaN>在运行时，此属性的实际值由<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>属性的<xref:System.Windows.Forms.DataVisualization.Charting.Axis>到对象图表所属的元素，如网格线或刻度线标记。  
  
 次要刻度线和网格线的间隔永远不会受<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>属性值。  
  
 间隔以轴单位，并且确定何种频率绘制适用图表元素。 例如，假设柱形图有 1 的 X 轴步骤 （即 1、 2、 3、 4 和等）;如果您设置<xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Interval%2A>属性将为 2 到 X 轴显示轴标签为每个其他列。  
  
 所有适用的图表元素也是如此。 换而言之，如果在上一示例中条带线中使用了，与<xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A>为 0.5，并且其<xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A>属性为 2，条带线将显示在 0.5、 2.5 中，4.5 中，依次类推。  
  
 如果设置图表元素`Interval`属性设置为零，时间间隔将自动由<xref:System.Windows.Forms.DataVisualization.Charting.Chart>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置网格线的偏移量。</summary>
        <value>一个 <see langword="double" /> 值，该值表示间隔偏移量。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下此属性未设置轴标签、 主要刻度线和主要网格线。 如果未设置-默认情况下，通过在设计时显式指定"未设置"或通过将其分配的值<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>在运行时，此属性的实际值由<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A>属性的<xref:System.Windows.Forms.DataVisualization.Charting.Axis>对象图表元素，如网格线或刻度线，属于。  
  
 值永远不会影响次要刻度线和网格线的间隔偏移量<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A>属性的<xref:System.Windows.Forms.DataVisualization.Charting.Axis>对象。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A>属性设置定义的偏移量的度量单位。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>可以是负值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主要网格线和次要网格线的间隔偏移量类型。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 枚举值，该值指示间隔类型。 默认情况下，不对主要网格线设置该值。 次要网格线的默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下此属性未设置轴标签、 主要刻度线和主要网格线。 如果未设置-默认情况下，通过在设计时显式指定"未设置"或通过将其分配的值<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>在运行时，此属性的实际值由<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A>属性的<xref:System.Windows.Forms.DataVisualization.Charting.Axis>对象图表元素，网格线或刻度线将标记中，例如，属于。  
  
 次要刻度线和网格线的间隔偏移量的类型永远不会受<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A>属性值。  
  
 如果此时间间隔偏移量类型设置为<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>，则<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>将使用属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主要网格线或次要网格线的间隔类型。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 枚举值，该值指示间隔类型。 默认情况下，不对轴标签、主要刻度线和主要网格线设置该值，而是使用 <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet" /> 枚举值。 对于次要刻度线和网格线，默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下此属性未设置轴标签、 主要刻度线和主要网格线。 如果未设置-默认情况下，通过在设计时，显式使用"未设置"或通过将其分配的值<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>在运行时，此属性的实际值由<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A>属性<xref:System.Windows.Forms.DataVisualization.Charting.Axis>对象图表元素-网格线或刻度线将标记中，例如，属于。  
  
 值永远不会受影响的次要刻度线和网格线的间隔类型<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType%2A>属性。  
  
 可以将间隔类型设置为<xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto>; 间隔类型然后依赖于的 X 值或 Y 值绘制的<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>对象，具体取决于哪个轴适用的元素属于。  
  
 设置<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>属性的值轴只会造成影响的数据点的值较<xref:System.DateTime>或`double`值。 此外，<xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A>或<xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A>所绘制的属性<xref:System.Windows.Forms.DataVisualization.Charting.Series>必须设置为<xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto>或<xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>。  
  
 设置<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>类别轴属性只会造成影响，如果<xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A>属性 (或<xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A>属性，具体取决于相关轴) 的绘制<xref:System.Windows.Forms.DataVisualization.Charting.Series>对象是<xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto>或<xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>.  
  
> [!NOTE]
>  星期日被视为一周的第一天。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Grid.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置网格线颜色。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 对象。 默认值为 <see cref="P:System.Drawing.Color.Black" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineColor%2A>属性用于指定主要和次要刻度线或网格的颜色。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置网格的线型。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> 枚举值。 默认值为 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle.Solid" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle%2A>属性可用于指定主要和次要刻度线或网格的线型。 在行可以是纯色、 线和等。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置主要网格线和次要网格线的线条宽度。</summary>
        <value>一个表示线条宽度（以像素为单位）的 <see langword="integer" />。 默认值为 1（一）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth%2A>属性可用于指定线条宽度，以像素为单位，主要和次要刻度线或网格。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>