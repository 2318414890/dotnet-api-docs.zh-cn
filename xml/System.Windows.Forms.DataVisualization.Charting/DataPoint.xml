<Type Name="DataPoint" FullName="System.Windows.Forms.DataVisualization.Charting.DataPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5f3ae35ead0d41d0075e87a14f2dc320a1cfb37" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629701" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataPoint : System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPoint extends System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPoint&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPoint : System::Windows::Forms::DataVisualization::Charting::DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("YValues")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataVisualization.Charting.DataPointConverter, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="306f6-101">表示存储在 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPointCollection" /> 类中的数据点。</span>
      <span class="sxs-lookup">
        <span data-stu-id="306f6-101">Represents a data point that is stored in the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPointCollection" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-102"><xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>类存储属性与数据以及数据点值相关联。</span><span class="sxs-lookup"><span data-stu-id="306f6-102">The <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> class stores properties associated with data as well as data point values.</span></span> <span data-ttu-id="306f6-103">例如，数据点具有一个值，但它也有颜色属性、 背景图像属性、 背景渐变属性等。</span><span class="sxs-lookup"><span data-stu-id="306f6-103">For example, a data point has a value, but it also has a color property, background image property, background gradient property, and so forth.</span></span> <span data-ttu-id="306f6-104">点属性的数据有关的详细信息，请参阅<xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties>类概述主题。</span><span class="sxs-lookup"><span data-stu-id="306f6-104">For more information about data point properties, see the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties> class overview topic.</span></span>  
  
 <span data-ttu-id="306f6-105">每个数据点组成 X 值和一个或多个 Y 值。</span><span class="sxs-lookup"><span data-stu-id="306f6-105">Each data point consists of an X-value and one or more Y-values.</span></span> <span data-ttu-id="306f6-106">X 值可以是零，也可以显式设置。</span><span class="sxs-lookup"><span data-stu-id="306f6-106">The X-value can be zero, or you can set this explicitly.</span></span>  
  
 <span data-ttu-id="306f6-107">每个点的只有一个 Y 值是必需的除气泡、 k 线图和股价图之外的所有图表类型。</span><span class="sxs-lookup"><span data-stu-id="306f6-107">Only one Y-value per point is required for all chart types except bubble, candlestick and stock charts.</span></span> <span data-ttu-id="306f6-108">这些图表类型需要多个 Y 值，因为一个数据点以多个值组成。</span><span class="sxs-lookup"><span data-stu-id="306f6-108">These chart types require more than one Y-value because one data point consists of multiple values.</span></span> <span data-ttu-id="306f6-109">例如，若要绘制一个股价图列，四个值是必需的： 高、 低、 打开和关闭的值。</span><span class="sxs-lookup"><span data-stu-id="306f6-109">For example, to plot one stock chart column, four values are required: high, low, open and close values.</span></span>  
  
 <span data-ttu-id="306f6-110">可以在设计时添加数据，或将其运行时间;你还可以在运行时使用数据绑定。</span><span class="sxs-lookup"><span data-stu-id="306f6-110">Data can be added at either design time or run time; you can also use data-binding at run time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="306f6-111">初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="306f6-112">初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-113">可以使用此构造函数来创建和初始化的新实例<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>类。</span><span class="sxs-lookup"><span data-stu-id="306f6-113">This constructor can be used to create and initialize a new instance of the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> class.</span></span>  
  
 <span data-ttu-id="306f6-114">但是，强烈建议你改为运行在添加数据点时，使用<xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A>集合属性。</span><span class="sxs-lookup"><span data-stu-id="306f6-114">However, it is highly recommended that you instead add data points at run time, using the <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">
          <span data-ttu-id="306f6-115">数据点所属的 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-115">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that the data point belongs to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="306f6-116">初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 类的新实例，并设置该数据点所属的 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-116">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> class, and sets the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that the data point belongs to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-117">可以使用此构造函数来创建和初始化的新实例<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>类。</span><span class="sxs-lookup"><span data-stu-id="306f6-117">This constructor can be used to create and initialize a new instance of the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> class.</span></span>  
  
 <span data-ttu-id="306f6-118">但是，强烈建议你改为运行在添加数据点时，使用<xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A>集合属性。</span><span class="sxs-lookup"><span data-stu-id="306f6-118">However, it is highly recommended that you instead add data points at run time, using the <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValue As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, double yValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">
          <span data-ttu-id="306f6-119">数据点的 X 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-119">The X-value of the data point.</span>
          </span>
        </param>
        <param name="yValue">
          <span data-ttu-id="306f6-120">数据点的 Y 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-120">The Y-value of the data point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="306f6-121">用指定的 X 和 Y 值初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> class with the specified X and Y-value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-122">可以使用此构造函数来创建和初始化的新实例<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>类。</span><span class="sxs-lookup"><span data-stu-id="306f6-122">This constructor can be used to create and initialize a new instance of the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> class.</span></span>  
  
 <span data-ttu-id="306f6-123">但是，强烈建议你改为运行在添加数据点时，使用<xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A>集合属性。</span><span class="sxs-lookup"><span data-stu-id="306f6-123">However, it is highly recommended that you instead add data points at run time, using the <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, cli::array &lt;double&gt; ^ yValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="xValue">
          <span data-ttu-id="306f6-124">数据点的 X 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-124">The X-value of the data point.</span>
          </span>
        </param>
        <param name="yValues">
          <span data-ttu-id="306f6-125">数据点的 Y 值的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-125">An array of Y-values of the data point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="306f6-126">用一个指定的 X 值和一个 Y 值数组初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-126">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> class with the specified X-value and an array of Y-values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-127">可以使用此构造函数来创建和初始化的新实例<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>类。</span><span class="sxs-lookup"><span data-stu-id="306f6-127">This constructor can be used to create and initialize a new instance of the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> class.</span></span>  
  
 <span data-ttu-id="306f6-128">但是，强烈建议你改为运行在添加数据点时，使用<xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A>集合属性。</span><span class="sxs-lookup"><span data-stu-id="306f6-128">However, it is highly recommended that you instead add data points at run time, using the <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, string yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, string yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, System::String ^ yValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">
          <span data-ttu-id="306f6-129">数据点的 X 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-129">The X-value of the data point.</span>
          </span>
        </param>
        <param name="yValues">
          <span data-ttu-id="306f6-130">一个逗号分隔的 <see langword="string" />，其中列出了数据点的 Y 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-130">A comma-separated <see langword="string" /> of Y-values of the data point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="306f6-131">用一个指定的 X 值和多个 Y 值初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-131">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> class with the specified X-value and Y-values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-132">可以使用此构造函数来创建和初始化的新实例<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>类。</span><span class="sxs-lookup"><span data-stu-id="306f6-132">This constructor can be used to create and initialize a new instance of the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> class.</span></span>  
  
 <span data-ttu-id="306f6-133">但是，强烈建议你改为运行在添加数据点时，使用<xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A>集合属性。</span><span class="sxs-lookup"><span data-stu-id="306f6-133">However, it is highly recommended that you instead add data points at run time, using the <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="306f6-134">返回数据点的精确副本的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-134">Returns a new instance that is an exact copy of the data point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="306f6-135">作为该数据点的一精确复件的、克隆后的 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-135">A cloned <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object  that is an exact copy of the data point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-136">使用<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.Clone%2A>方法来获取数据点的一个精确副本。</span><span class="sxs-lookup"><span data-stu-id="306f6-136">Use the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.Clone%2A> method to obtain an exact copy of the data point.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueByName">
      <MemberSignature Language="C#" Value="public double GetValueByName (string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetValueByName(string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.GetValueByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueByName (valueName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetValueByName(System::String ^ valueName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueName">
          <span data-ttu-id="306f6-137">点值名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-137">Point value names.</span>
          </span>
          <span data-ttu-id="306f6-138">X、Y、Y2...</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-138">X, Y, Y2...</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="306f6-139">返回按名称指定的数据点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-139">Returns a data point that is specified by its name.</span>
          </span>
          <span data-ttu-id="306f6-140">这是一个帮助器函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-140">This is a helper function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="306f6-141">表示数据点的 <see langword="string" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-141">A <see langword="string" /> value that represents a data point.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="306f6-142">获取或设置一个指示数据点是否标记为空的标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-142">Gets or sets a flag that indicates whether a data point is marked as empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="306f6-143">如果点标记为空点，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-143">
              <see langword="true" /> if the point is marked as an empty point; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="306f6-144">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-144">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-145">将此属性设置为`true`标记为一个空点数据点。</span><span class="sxs-lookup"><span data-stu-id="306f6-145">Set this property to `true` to mark a data point as an empty point.</span></span>  
  
 <span data-ttu-id="306f6-146">或者之一`InsertEmptyPoints`中的方法<xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator>类可以用于将缺少的数据作为空点。</span><span class="sxs-lookup"><span data-stu-id="306f6-146">Alternatively one of the `InsertEmptyPoints` methods in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class can be used to mark missing data as empty points.</span></span>  
  
 <span data-ttu-id="306f6-147"><xref:System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle%2A>属性确定如何将空点显示。</span><span class="sxs-lookup"><span data-stu-id="306f6-147">The <xref:System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle%2A> property determines how empty points are displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="306f6-148">获取或设置数据点的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-148">Gets or sets the name of the data point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="306f6-149">一个 <see langword="string" /> 值，该值表示数据点的文本名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-149">A <see langword="string" /> value that represents the text name of the data point.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueXY">
      <MemberSignature Language="C#" Value="public void SetValueXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueXY (xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">
          <span data-ttu-id="306f6-150">数据点的 X 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-150">The X-value of the data point.</span>
          </span>
        </param>
        <param name="yValue">
          <span data-ttu-id="306f6-151">数据点的 Y 值的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-151">A list of Y-values of the data point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="306f6-152">设置数据点的 X 值以及一个或多个 Y 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-152">Sets the X-value and one or more Y-values of the data point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-153">使用<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueXY%2A>方法以在运行时设置的数据点值。</span><span class="sxs-lookup"><span data-stu-id="306f6-153">Use the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueXY%2A> method to set the value(s) of a data point at run-time.</span></span>  
  
 <span data-ttu-id="306f6-154">请注意，是否为零 (0) 以外的值设置 X 值，则将生成一个散点图。</span><span class="sxs-lookup"><span data-stu-id="306f6-154">Note that if you set the X-value to a value other than zero (0), a scatter plot will be generated.</span></span> <span data-ttu-id="306f6-155">有关更多详细信息，请参阅备注部分的<xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="306f6-155">For further details, see the Remarks section of the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A> property.</span></span>  
  
 <span data-ttu-id="306f6-156">请参阅下表中的有效的.NET Framework 类型可以用于对象的类型参数的完整列表。</span><span class="sxs-lookup"><span data-stu-id="306f6-156">Refer to the following table for a complete listing of valid .NET Framework types that can be used for the object type parameter.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="306f6-157">String</span><span class="sxs-lookup"><span data-stu-id="306f6-157">String</span></span>|<span data-ttu-id="306f6-158">DateTime</span><span class="sxs-lookup"><span data-stu-id="306f6-158">DateTime</span></span>|<span data-ttu-id="306f6-159">Double</span><span class="sxs-lookup"><span data-stu-id="306f6-159">Double</span></span>|  
|<span data-ttu-id="306f6-160">Decimal</span><span class="sxs-lookup"><span data-stu-id="306f6-160">Decimal</span></span>|<span data-ttu-id="306f6-161">Single</span><span class="sxs-lookup"><span data-stu-id="306f6-161">Single</span></span>|<span data-ttu-id="306f6-162">Int32</span><span class="sxs-lookup"><span data-stu-id="306f6-162">Int32</span></span>|  
|<span data-ttu-id="306f6-163">UInt32</span><span class="sxs-lookup"><span data-stu-id="306f6-163">UInt32</span></span>|<span data-ttu-id="306f6-164">Int64</span><span class="sxs-lookup"><span data-stu-id="306f6-164">Int64</span></span>|<span data-ttu-id="306f6-165">UInt64</span><span class="sxs-lookup"><span data-stu-id="306f6-165">UInt64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueY">
      <MemberSignature Language="C#" Value="public void SetValueY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueY (ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">
          <span data-ttu-id="306f6-166">集合中某个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 对象的 Y 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-166">The Y-value(s) of a <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object in the collection.</span>
          </span>
          <span data-ttu-id="306f6-167">格式化为用逗号分隔的一个或多个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-167">Formatted as one or more values separated by commas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="306f6-168">设置单个数据点的 Y 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-168">Sets the Y-value(s) of a single data point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-169"><xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueY%2A>属性用于设置 Y 的值的数据点在运行时。</span><span class="sxs-lookup"><span data-stu-id="306f6-169">The <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueY%2A> property is used to set the Y-value(s) of a data point at run time.</span></span>  
  
 <span data-ttu-id="306f6-170">每个点的只有一个 Y 值是必需的气泡、 k 线图和股价图除外的所有图表类型。</span><span class="sxs-lookup"><span data-stu-id="306f6-170">Only one Y-value per point is required for all chart types except for bubble, candlestick and stock charts.</span></span> <span data-ttu-id="306f6-171">这些图表类型需要多个 Y 值，因为一个数据点以多个值组成。</span><span class="sxs-lookup"><span data-stu-id="306f6-171">These chart types require more than one Y-value because one data point consists of multiple values.</span></span> <span data-ttu-id="306f6-172">例如，若要绘制一个股价图列，四个值是必需的： 高、 低、 打开和关闭的值。</span><span class="sxs-lookup"><span data-stu-id="306f6-172">For example, to plot one stock chart column, four values are required: high, low, open and close values.</span></span>  
  
 <span data-ttu-id="306f6-173">此属性返回的数组`double`值时用于检索多个 Y 值。</span><span class="sxs-lookup"><span data-stu-id="306f6-173">This property returns an array of `double` values when used to retrieve multiple Y-values.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="306f6-174"><xref:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint%2A>属性确定的最大中所有数据都点的 Y 值数<xref:System.Windows.Forms.DataVisualization.Charting.Series>可以。</span><span class="sxs-lookup"><span data-stu-id="306f6-174">The <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint%2A> property determines the maximum number of Y-values that all data points in a <xref:System.Windows.Forms.DataVisualization.Charting.Series> can have.</span></span> <span data-ttu-id="306f6-175">如果指定多个 Y 值的允许数，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="306f6-175">If you specify more than the allowable number of Y-values, an exception will be raised.</span></span>  
>   
>  <span data-ttu-id="306f6-176">请参阅下表中的有效的.NET Framework 类型可以用于对象的类型参数的完整列表：</span><span class="sxs-lookup"><span data-stu-id="306f6-176">Refer to the following table for a complete listing of valid .NET Framework types that can be used for the object type parameter:</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="306f6-177">String</span><span class="sxs-lookup"><span data-stu-id="306f6-177">String</span></span>|<span data-ttu-id="306f6-178">DateTime</span><span class="sxs-lookup"><span data-stu-id="306f6-178">DateTime</span></span>|<span data-ttu-id="306f6-179">Double</span><span class="sxs-lookup"><span data-stu-id="306f6-179">Double</span></span>|  
|<span data-ttu-id="306f6-180">Decimal</span><span class="sxs-lookup"><span data-stu-id="306f6-180">Decimal</span></span>|<span data-ttu-id="306f6-181">Single</span><span class="sxs-lookup"><span data-stu-id="306f6-181">Single</span></span>|<span data-ttu-id="306f6-182">Int32</span><span class="sxs-lookup"><span data-stu-id="306f6-182">Int32</span></span>|  
|<span data-ttu-id="306f6-183">UInt32</span><span class="sxs-lookup"><span data-stu-id="306f6-183">UInt32</span></span>|<span data-ttu-id="306f6-184">Int64</span><span class="sxs-lookup"><span data-stu-id="306f6-184">Int64</span></span>|<span data-ttu-id="306f6-185">UInt64</span><span class="sxs-lookup"><span data-stu-id="306f6-185">UInt64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValue">
      <MemberSignature Language="C#" Value="public double XValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 XValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double XValue { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Double), "0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="306f6-186">获取或设置数据点的 X 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-186">Gets or sets the X-value of a data point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="306f6-187">一个 <see langword="double" />，它表示数据点的 X 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-187">A <see langword="double" /> that represents the X-value of a data point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-188">所有图表类型可以都显示为任一散点图或作为非散点图，因为可以设置 X 值和 Y 值。</span><span class="sxs-lookup"><span data-stu-id="306f6-188">All chart types can be displayed as either scatter plots or as non-scatter plots, because both X-values and Y-values can be set.</span></span> <span data-ttu-id="306f6-189">设置 X 值将导致散点图，而不设置此属性，这等同于将它设置为零-将导致在非散点图。</span><span class="sxs-lookup"><span data-stu-id="306f6-189">Setting an X-value will result in a scatter plot, whereas not setting this property—which is equivalent to setting it to zero—will result in a non-scatter plot.</span></span> <span data-ttu-id="306f6-190">例如，若要绘制点图图表类型，添加具有零 X 值的数据点。</span><span class="sxs-lookup"><span data-stu-id="306f6-190">For example, to draw a point chart type, add data points that have X-values of zero.</span></span> <span data-ttu-id="306f6-191">若要显示传统散点图，添加具有非零的 X 值的数据点。</span><span class="sxs-lookup"><span data-stu-id="306f6-191">To display a traditional scatter chart, add data points that have X-values other than zero.</span></span>  
  
 <span data-ttu-id="306f6-192">不需要设置数据点的 X 值。</span><span class="sxs-lookup"><span data-stu-id="306f6-192">The X-values of data points are not required to be set.</span></span> <span data-ttu-id="306f6-193">如果未设置这些属性，会绘制数据点按顺序，使用它们的索引值<xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>。</span><span class="sxs-lookup"><span data-stu-id="306f6-193">If they are not set, data points are plotted sequentially, using their index values from the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValues">
      <MemberSignature Language="C#" Value="public double[] YValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64[] YValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues" />
      <MemberSignature Language="VB.NET" Value="Public Property YValues As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;double&gt; ^ YValues { cli::array &lt;double&gt; ^ get(); void set(cli::array &lt;double&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Drawing.Design.UITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="306f6-194">获取或设置数据点的 Y 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-194">Gets or sets the Y-value(s) of a data point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="306f6-195">
            <see langword="double" /> 值的数组，这些值表示数据点的 Y 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="306f6-195">An array of <see langword="double" /> values that represent the Y-value(s) of a data point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="306f6-196"><xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues%2A>属性用于设置数据点的 Y 值。</span><span class="sxs-lookup"><span data-stu-id="306f6-196">The <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues%2A> property is used to set the Y-values of data points.</span></span>  
  
 <span data-ttu-id="306f6-197">每个点的只有一个 Y 值是必需的除气泡、 k 线图和股价图之外的所有图表类型。</span><span class="sxs-lookup"><span data-stu-id="306f6-197">Only one Y-value per point is required for all chart types except bubble, candlestick and stock charts.</span></span> <span data-ttu-id="306f6-198">这些图表类型需要多个 Y 值，因为一个数据点以多个值组成。</span><span class="sxs-lookup"><span data-stu-id="306f6-198">These chart types require more than one Y-value because one data point consists of multiple values.</span></span> <span data-ttu-id="306f6-199">例如，若要绘制一个股价图列，四个值是必需的： 高、 低、 打开和关闭的值。</span><span class="sxs-lookup"><span data-stu-id="306f6-199">For example, to plot one stock chart column, four values are required: high, low, open and close values.</span></span>  
  
 <span data-ttu-id="306f6-200"><xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues%2A>属性返回的数组`double`值时用于检索 Y 值。</span><span class="sxs-lookup"><span data-stu-id="306f6-200">The <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues%2A> property returns an array of `double` values when used to retrieve the Y-values.</span></span>  
  
 <span data-ttu-id="306f6-201">**重要**<xref:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint%2A>属性确定的最大中所有数据都点的 Y 值数<xref:System.Windows.Forms.DataVisualization.Charting.Series>可以。</span><span class="sxs-lookup"><span data-stu-id="306f6-201">**Important** The <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint%2A> property determines the maximum number of Y-values that all data points in a <xref:System.Windows.Forms.DataVisualization.Charting.Series> can have.</span></span> <span data-ttu-id="306f6-202">如果指定多个 Y 值的允许数，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="306f6-202">If you specify more than the allowable number of Y-values, an exception will be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>