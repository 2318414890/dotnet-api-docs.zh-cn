<Type Name="Cursor" FullName="System.Windows.Forms.DataVisualization.Charting.Cursor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="104483ef6600baf14f3846ee65fcddd62bfc18f0" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48708345" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor : IDisposable" />
  <TypeSignature Language="F#" Value="type Cursor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示沿 X 轴定义位置的横线或竖线。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 游标是定义沿某个轴的位置的水平或垂直的行。 范围选择是沿某个轴定义的位置开始和结束位置，并显示使用半透明颜色范围。  
  
 光标和范围选择实现由<xref:System.Windows.Forms.DataVisualization.Charting.Cursor>类，该类作为公开<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>并<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>的属性<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>对象。 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>对象表示的图表区的 X 轴和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>对象表示的 Y 轴。 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>这些对象的属性确定关联的轴是否为主要或辅助。  
  
 唯一的游标和范围选择的功能外找到<xref:System.Windows.Forms.DataVisualization.Charting.Cursor>类是与游标和范围选择相关的事件的根目录中<xref:System.Windows.Forms.DataVisualization.Charting.Chart>对象。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个标志，该标志确定如果范围选择操作超出图表区域的边界，是否会发生滚动。</summary>
        <value>如果数据视图可以自动移动，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数据视图不显示在绘制的序列中的所有数据点，范围已被用户选定的视图的自动滚动将发生如果此属性为`true`和鼠标，因此光标 — 也移动图表区域边界外。  
  
 滚动时才会沿某个轴是否存在更多的数据可供查看。  
  
 通常不会显示所有数据的数据视图会在最终用户缩放到的数据子集。 通过实现视图和缩放<xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType AxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType AxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.AxisType : System.Windows.Forms.DataVisualization.Charting.AxisType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置光标附加到的轴的类型。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> 枚举值，该值表示光标是附加到主轴还是辅助轴。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有两个组的轴： 主要和辅助。 主坐标轴的条形图之外的所有图表位于底部 （主 x 轴） 和左 （主 y 轴） 的图表区的边框。  
  
 辅助轴位于以下位置的右侧 （辅助 x 轴） 和图表区域顶部 （辅助 y 轴） 边框。  
  
> [!NOTE]
>  如果图表区域中绘制的所有序列都使用只有一种类型的轴 （例如，主 x 轴），然后将此属性设置为不使用 （在此情况下，辅助 x 轴） 的系列轴类型会不产生任何效果;光标将自动附加到唯一轴用于绘制序列。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>释放 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> 类使用的资源。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cursor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>执行应用程序定义的释放或重置非托管资源的任务。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cursor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放非托管资源和（可选）托管资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置光标间隔。</summary>
        <value>光标间隔。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>属性确定游标频率和位置可以绘制由最终用户，以及开始和范围选择的终结点可以绘制。 值为零，这是默认值，表示光标或范围选择可以在任意位置绘制图表区域中。 一个非零值表示光标或开头和/或所选范围的终结点将仅绘制由用户交互时设置的指定时间间隔。  
  
 度量单位由<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>属性。  
  
 此外可以结合使用此属性<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>属性，它允许您指定的指定时间间隔中的偏移量。 例如，若要允许光标以仅显示每个星期六，1 周间隔应指定，以及 6 天的间隔偏移量。 在.NET Framework 中，被视为星期日为周的第一天。  
  
 如果通过设置启用了光标用户界面<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>在图表区域内单击时属性和鼠标，光标的位置将设置为最近的允许的位置。  
  
> [!IMPORTANT]
>  <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>属性不起如果设置光标的位置或以编程方式将所选范围。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置间隔偏移量，该偏移量影响当用户对光标和范围选择进行设置时可以绘制它们的位置。</summary>
        <value>从间隔的偏移。 默认值为零，表示没有限制，允许使用负值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>属性确定游标和开始的间隔偏移量和/或范围选择的终结点。 结合<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>属性，此属性确定在哪个位置游标和范围可以显示在图表区域中。 值为零，这是默认值，表示是没有偏移量。  
  
 度量单位由<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>属性。  
  
 偏移量会影响游标和的开头和/或范围选择的终结点可以绘制时的位置。 例如，若要允许光标以仅显示每个星期六，1 周间隔应指定，以及 6 天的间隔偏移量。 在.NET Framework 中，被视为星期日为周的第一天。  
  
 如果通过设置启用了光标用户界面<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>在图表区域内单击时属性和鼠标，光标的位置将设置为最近的允许的位置。  
  
> [!IMPORTANT]
>  时间间隔与相关的属性时不起作用范围选择或以编程方式设置光标位置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置轴的光标和所选范围的间隔偏移量类型。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 枚举值，该值确定间隔偏移量的度量单位。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>属性确定的间隔偏移量，使用指定的类型<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>属性。  
  
 如果<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>属性设置为<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>，则<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>将使用属性设置。  
  
> [!NOTE]
>  时间间隔与相关的属性时不起作用范围选择或以编程方式设置光标位置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置轴的光标和所选范围的间隔类型。</summary>
        <value>轴的光标和所选范围的间隔类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>属性确定的间隔，使用指定的类型<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>属性。  
  
 如果间隔类型是<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>，作为处理的时间间隔的度量单位`double`，这等同于一天时<xref:System.DateTime>指定的值。  
  
> [!NOTE]
>  时间间隔与相关的属性时不起作用范围选择或以编程方式设置光标位置。  
  
 如果轴间隔类型表示一次 — 例如，小时、 分钟和等，然后才能正确地启用了缩放功能，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>还必须设置为时间值。 例如，如果 ChartArea1.AxisX.IntervalType 以小时为单位，然后 ChartArea1.CursorX.IntervalType 将设置为分钟。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUserEnabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个标志，该标志启用或禁用光标用户界面。</summary>
        <value>如果启用了光标用户界面，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserSelectionEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUserSelectionEnabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个标志，该标志启用或禁用范围选择用户界面。</summary>
        <value>如果启用了范围选择用户界面，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置光标线条颜色。</summary>
        <value>光标的线条颜色。 默认值为 <see cref="P:System.Drawing.Color.Red" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置光标线条的样式。</summary>
        <value>光标线的样式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置光标的线条宽度（以像素为单位）</summary>
        <value>线宽（以像素为单位）。 默认值为 1（一）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于指定线条宽度，以像素为单位的游标。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public double Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Position { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Position : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置光标位置。</summary>
        <value>光标的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性可用于获取光标的位置，以及关于以编程方式设置游标位置。  
  
 位置度量由光标所属的轴的值作为<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>属性。 例如，如果游标属于主 X 轴，然后将此属性设置为 2000 年 1 月 1 日的值将导致所绘制在 2000 年 1 月 1 日位置沿轴的 x 轴游标。 如果此轴值不存在，将不显示光标。  
  
 请注意，如果设置此属性，则<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>属性将不起作用; 即，光标将显示在此指定的位置。  
  
 设置此属性将不会引发<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>或<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>事件。  
  
 或者，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A>方法可以用于设置游标。  
  
 若要以编程方式删除游标，请使用此属性设置光标移到的位置<xref:System.Double.NaN>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "LightGray")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置突出显示某一范围数据的半透明颜色。</summary>
        <value>突出显示范围的颜色。 默认值为 <see cref="P:System.Drawing.Color.LightGray" />，其 alpha 值为 120。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性确定的范围选择颜色，可以设置为任何有效的 ARGB （alpha、 红色、 绿色、 蓝色） 值。 如果 alpha 值，该值确定透明度级别，未提供，使用默认的 alpha 值为 120。  
  
 所选的颜色可以设置为 X 和 Y 轴游标使用实现<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>并<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>的属性<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>对象，分别。 如果沿 x 轴，仅选择一个范围，则<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A>如果沿 y 轴，仅选择一个范围，则值将使用在 x 轴游标;<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A>值将使用在 y 轴游标。 如果沿两个轴选择一系列<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A>的 y 轴游标还可用于所选颜色值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionEnd { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionEnd : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置范围选择的结束位置。</summary>
        <value>范围选择的结束位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户可以通过单击鼠标左键并拖动鼠标，然后选择图表区中的范围。 请注意，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>属性也必须设置为`true`。 此外，范围选择可以设置以编程方式使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>并<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性，或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>方法。  
  
 范围选择的结束位置的计算方式的光标所属的轴值。 例如，如果游标属于主 x 轴，并设置<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>属性的值 2000 年 12 月 31 日，所选区域的最终会在 2000 年 12 月 31 日主沿 X 轴。  
  
 若要以编程方式删除范围选择，将开始和结束点的范围的<xref:System.Double.NaN>使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>并<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性或使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionStart { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置光标所选范围的起始位置。</summary>
        <value>光标所选范围的起始位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户可以通过单击鼠标左键，然后将光标位置移动通过拖动鼠标选择范围。 请注意，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>属性也必须设置为`true`。 此外，范围选择可以设置以编程方式使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>并<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性，或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>方法。  
  
 范围选择的起始位置的计算方式的光标所属的轴值。 例如，如果游标属于主 x 轴，并设置<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性 2000 年 1 月 1 日的值开头的所选区域会在 2000 年 1 月 1 日沿主 X 轴。  
  
 若要以编程方式删除范围选择，将开始和结束点的范围的<xref:System.Double.NaN>使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>并<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性或使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPixelPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPixelPosition(valuetype System.Drawing.PointF point, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPixelPosition (point As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPixelPosition(System::Drawing::PointF point, bool roundToBoundary);" />
      <MemberSignature Language="F#" Value="member this.SetCursorPixelPosition : System.Drawing.PointF * bool -&gt; unit" Usage="cursor.SetCursorPixelPosition (point, roundToBoundary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">一个 <see cref="T:System.Drawing.PointF" /> 结构，该结构指定绘制光标的位置。</param>
        <param name="roundToBoundary">如果为 <see langword="true" />，则在指定位置位于 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> 对象之外时，光标将沿最近的图表区域边界绘制。</param>
        <summary>在指定位置显示光标。 以像素度量。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPosition (double newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPosition(float64 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPosition (newPosition As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPosition(double newPosition);" />
      <MemberSignature Language="F#" Value="member this.SetCursorPosition : double -&gt; unit" Usage="cursor.SetCursorPosition newPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPosition" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newPosition">光标的新位置。 作为沿相关轴的值进行度量。</param>
        <summary>设置图表区域中指定轴值处的光标位置。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPixelPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPixelPosition(valuetype System.Drawing.PointF startPoint, valuetype System.Drawing.PointF endPoint, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPixelPosition (startPoint As PointF, endPoint As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPixelPosition(System::Drawing::PointF startPoint, System::Drawing::PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="F#" Value="member this.SetSelectionPixelPosition : System.Drawing.PointF * System.Drawing.PointF * bool -&gt; unit" Usage="cursor.SetSelectionPixelPosition (startPoint, endPoint, roundToBoundary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Drawing.PointF" />
        <Parameter Name="endPoint" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint">一个 <see cref="T:System.Drawing.PointF" /> 结构，该结构指定范围选择开始的位置。</param>
        <param name="endPoint">一个 <see cref="T:System.Drawing.PointF" /> 结构，该结构指定范围选择结束的位置。</param>
        <param name="roundToBoundary">如果为 <see langword="true" />，则在指定位置位于 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> 对象之外时，起始点和结束点将舍入为最近的图表区域边界。</param>
        <summary>设置范围选择的起始位置和结束位置。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPosition (double newStart, double newEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPosition(float64 newStart, float64 newEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPosition (newStart As Double, newEnd As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPosition(double newStart, double newEnd);" />
      <MemberSignature Language="F#" Value="member this.SetSelectionPosition : double * double -&gt; unit" Usage="cursor.SetSelectionPosition (newStart, newEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newStart" Type="System.Double" />
        <Parameter Name="newEnd" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newStart">范围选择的新起始位置。 作为沿相关轴的值进行度量。</param>
        <param name="newEnd">范围选择的新结束位置。 作为沿相关轴的值进行度量。</param>
        <summary>设置图表区域中指定轴值处的所选范围位置。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>