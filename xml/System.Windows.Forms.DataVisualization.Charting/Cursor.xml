<Type Name="Cursor" FullName="System.Windows.Forms.DataVisualization.Charting.Cursor">
  <TypeSignature Language="C#" Value="public class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="12fc6-101">表示沿 X 轴定义位置的横线或竖线。</span><span class="sxs-lookup"><span data-stu-id="12fc6-101">Represents a horizontal or vertical line that defines a position along an axis.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-102">一种用于定义沿 x 轴的位置的水平或垂直的行。</span><span class="sxs-lookup"><span data-stu-id="12fc6-102">A cursor is a horizontal or vertical line that defines a position along an axis.</span></span> <span data-ttu-id="12fc6-103">范围选择是沿 x 轴的位置开始和结束位置，由定义，并使用不完全透明颜色显示范围。</span><span class="sxs-lookup"><span data-stu-id="12fc6-103">A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.</span></span>  
  
 <span data-ttu-id="12fc6-104">游标和范围选择都实现通过<xref:System.Windows.Forms.DataVisualization.Charting.Cursor>类，该类公开为<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>属性<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>对象。</span><span class="sxs-lookup"><span data-stu-id="12fc6-104">Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object.</span></span> <span data-ttu-id="12fc6-105"><xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>对象表示的图表区的 X 轴和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>对象表示的 Y 轴。</span><span class="sxs-lookup"><span data-stu-id="12fc6-105">The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis.</span></span> <span data-ttu-id="12fc6-106"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>这些对象的属性确定关联的轴是主要或次要。</span><span class="sxs-lookup"><span data-stu-id="12fc6-106">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary.</span></span>  
  
 <span data-ttu-id="12fc6-107">唯一的游标和范围选择的功能外找到<xref:System.Windows.Forms.DataVisualization.Charting.Cursor>类是位于根目录中的事件与游标和范围选择<xref:System.Windows.Forms.DataVisualization.Charting.Chart>对象。</span><span class="sxs-lookup"><span data-stu-id="12fc6-107">The only cursor and range selection functionality found outside the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class are the events related to the cursor and range selection that are in the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="12fc6-108">初始化 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="12fc6-108">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-109">获取或设置一个标志，该标志确定如果范围选择操作超出图表区域的边界，是否会发生滚动。</span><span class="sxs-lookup"><span data-stu-id="12fc6-109">Gets or sets a flag that determines whether scrolling will occur if a range selection operation extends beyond a boundary of the chart area.</span></span></summary>
        <value>
          <span data-ttu-id="12fc6-110">如果数据视图可以自动移动，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="12fc6-110"><see langword="true" /> if the data view can be scrolled automatically; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-111">如果数据视图不显示绘制的序列中的所有数据点范围已被选定用户，视图的自动滚动将会发生如果此属性为`true`和鼠标 — 因此的游标-移动图表区域边界之外。</span><span class="sxs-lookup"><span data-stu-id="12fc6-111">If a data view does not display all data points in a plotted series and a range is being selected by the user, automatic scrolling of the view will occur if this property is `true` and the mouse—and therefore the cursor—is moved outside the chart area boundary.</span></span>  
  
 <span data-ttu-id="12fc6-112">滚动才会沿轴如果没有更多的数据可供查看。</span><span class="sxs-lookup"><span data-stu-id="12fc6-112">Scrolling will only occur along an axis if there is more data available to be viewed.</span></span>  
  
 <span data-ttu-id="12fc6-113">如果最终用户将缩放到的数据子集，通常不会显示所有数据的数据视图结果。</span><span class="sxs-lookup"><span data-stu-id="12fc6-113">A data view that does not display all data usually results if the end-user zooms into a subset of data.</span></span> <span data-ttu-id="12fc6-114">通过实现视图和缩放<xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>类。</span><span class="sxs-lookup"><span data-stu-id="12fc6-114">Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType AxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType AxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-115">获取或设置光标附加到的轴的类型。</span><span class="sxs-lookup"><span data-stu-id="12fc6-115">Gets or sets the type of axis that the cursor is attached to.</span></span></summary>
        <value><span data-ttu-id="12fc6-116">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> 枚举值，该值表示光标是附加到主轴还是辅助轴。</span><span class="sxs-lookup"><span data-stu-id="12fc6-116">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> enumeration value that represents whether the axis is attached to the primary or secondary axis.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-117">有两个集的轴： 主要和辅助。</span><span class="sxs-lookup"><span data-stu-id="12fc6-117">There are two sets of axes: primary and secondary.</span></span> <span data-ttu-id="12fc6-118">除条形图之外的所有图表的主轴位于底部 （主 x 轴） 和左 （主 y 轴） 的图表区的边框。</span><span class="sxs-lookup"><span data-stu-id="12fc6-118">Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.</span></span>  
  
 <span data-ttu-id="12fc6-119">辅助轴位于以下位置的权限 （辅助 x 轴） 和图表区的顶部 （辅助 y 轴） 边框。</span><span class="sxs-lookup"><span data-stu-id="12fc6-119">The secondary axes are located at the right (secondary X-axis) and top (secondary Y-axis) border of the chart area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12fc6-120">如果绘制图表区域中的所有序列都使用只有一种类型的轴 （例如，主 x 轴），然后将此属性设置为不使用 （在此情况下，辅助 x 轴） 序列轴类型会不产生任何效果;光标将自动附加到正在用于绘制序列的唯一轴中。</span><span class="sxs-lookup"><span data-stu-id="12fc6-120">If all series plotted within a chart area use only one type of axis (for example, the primary X-axis), then setting this property to an axis type not used by the series (in this case, the secondary X-axis) will have no effect; the cursor will automatically be attached to the only axis being used to plot the series.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="12fc6-121">释放 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> 类使用的资源。</span><span class="sxs-lookup"><span data-stu-id="12fc6-121">Releases the resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="12fc6-122">执行应用程序定义的释放或重置非托管资源的任务。</span><span class="sxs-lookup"><span data-stu-id="12fc6-122">Performs application-defined tasks that free, release, or reset unmanaged resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="12fc6-123">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="12fc6-123"><see langword="true" /> to release both unmanaged and managed resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="12fc6-124">释放非托管资源和（可选）托管资源。</span><span class="sxs-lookup"><span data-stu-id="12fc6-124">Releases unmanaged and, optionally, managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-125">获取或设置光标间隔。</span><span class="sxs-lookup"><span data-stu-id="12fc6-125">Gets or sets the cursor interval.</span></span></summary>
        <value><span data-ttu-id="12fc6-126">光标间隔。</span><span class="sxs-lookup"><span data-stu-id="12fc6-126">The cursor interval.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-127"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>属性确定如何通常以及在何处可以由最终用户，绘制光标以及开始和范围选择的结束点可以绘制。</span><span class="sxs-lookup"><span data-stu-id="12fc6-127">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn.</span></span> <span data-ttu-id="12fc6-128">值为零，这是默认值，表示光标或范围选择可以任意位置绘制图表区域中。</span><span class="sxs-lookup"><span data-stu-id="12fc6-128">A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area.</span></span> <span data-ttu-id="12fc6-129">一个非零值表示，光标或开头和/或终结点的选择范围仅将绘制由用户交互时设置的指定时间间隔。</span><span class="sxs-lookup"><span data-stu-id="12fc6-129">A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.</span></span>  
  
 <span data-ttu-id="12fc6-130">度量单位由<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fc6-130">The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property.</span></span>  
  
 <span data-ttu-id="12fc6-131">此属性还可与结合<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>属性，它允许你指定的偏移量从指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="12fc6-131">This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval.</span></span> <span data-ttu-id="12fc6-132">例如，若要允许将仅显示每个星期六光标，1 周间隔应可指定，以及 6 天的间隔偏移量。</span><span class="sxs-lookup"><span data-stu-id="12fc6-132">For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.</span></span> <span data-ttu-id="12fc6-133">在.NET Framework 中，星期日被视为一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="12fc6-133">In .NET Framework, Sunday is considered to be the first day of the week.</span></span>  
  
 <span data-ttu-id="12fc6-134">如果游标用户界面通过设置<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>属性，并且鼠标单击在图表区内，光标的位置将设置为允许位置最接近。</span><span class="sxs-lookup"><span data-stu-id="12fc6-134">If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="12fc6-135"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>属性不起作用如果设置光标的位置或以编程方式将所选范围。</span><span class="sxs-lookup"><span data-stu-id="12fc6-135">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property has no effect if you set the position of a cursor or range selection programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-136">获取或设置间隔偏移量，该偏移量影响当用户对光标和范围选择进行设置时可以绘制它们的位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-136">Gets or sets the interval offset, which affects where the cursor and range selection can be drawn when they are set by a user.</span></span></summary>
        <value><span data-ttu-id="12fc6-137">从间隔的偏移。</span><span class="sxs-lookup"><span data-stu-id="12fc6-137">The offset from the interval.</span></span> <span data-ttu-id="12fc6-138">默认值为零，表示没有限制，允许使用负值。</span><span class="sxs-lookup"><span data-stu-id="12fc6-138">The default value is zero, which signifies no limitations, and negative values are allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-139"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>属性确定游标和开头的间隔偏移量和/或终结点的范围选择。</span><span class="sxs-lookup"><span data-stu-id="12fc6-139">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection.</span></span> <span data-ttu-id="12fc6-140">结合<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>属性，此属性确定在游标和范围可以显示在图表区域中。</span><span class="sxs-lookup"><span data-stu-id="12fc6-140">In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area.</span></span> <span data-ttu-id="12fc6-141">值为零，这是默认值，表示为未偏移量。</span><span class="sxs-lookup"><span data-stu-id="12fc6-141">A value of zero, which is the default, signifies that there is no offset.</span></span>  
  
 <span data-ttu-id="12fc6-142">度量单位由<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fc6-142">The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property.</span></span>  
  
 <span data-ttu-id="12fc6-143">偏移量会影响在该游标的开始和范围选择的终结点可以绘制的位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-143">The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn.</span></span> <span data-ttu-id="12fc6-144">例如，若要允许将仅显示每个星期六光标，1 周间隔应可指定，以及 6 天的间隔偏移量。</span><span class="sxs-lookup"><span data-stu-id="12fc6-144">For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.</span></span> <span data-ttu-id="12fc6-145">在.NET Framework 中，星期日被视为一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="12fc6-145">In .NET Framework, Sunday is considered to be the first day of the week.</span></span>  
  
 <span data-ttu-id="12fc6-146">如果游标用户界面通过设置<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>属性，并且鼠标单击在图表区内，光标的位置将设置为允许位置最接近。</span><span class="sxs-lookup"><span data-stu-id="12fc6-146">If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="12fc6-147">间隔相关的属性时不起作用范围选择，或以编程方式设置光标位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-147">Interval-related properties have no effect when a range selection or cursor position are set programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-148">获取或设置轴的光标和所选范围的间隔偏移量类型。</span><span class="sxs-lookup"><span data-stu-id="12fc6-148">Gets or sets the interval offset type of a cursor and selected range for an axis.</span></span></summary>
        <value><span data-ttu-id="12fc6-149">一个 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 枚举值，该值确定间隔偏移量的度量单位。</span><span class="sxs-lookup"><span data-stu-id="12fc6-149">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that determines the unit of measurement for the interval offset.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-150"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>属性确定的一种使用指定的间隔偏移量<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fc6-150">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property determines the type of interval offset, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property.</span></span>  
  
 <span data-ttu-id="12fc6-151">如果<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>属性设置为<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>属性设置将用。</span><span class="sxs-lookup"><span data-stu-id="12fc6-151">If the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property setting will be used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12fc6-152">间隔相关的属性时不起作用范围选择，或以编程方式设置光标位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-152">Interval-related properties have no effect when a range selection or cursor position are set programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-153">获取或设置轴的光标和所选范围的间隔类型。</span><span class="sxs-lookup"><span data-stu-id="12fc6-153">Gets or sets the interval type for the cursor and selected range of an axis.</span></span></summary>
        <value><span data-ttu-id="12fc6-154">轴的光标和所选范围的间隔类型。</span><span class="sxs-lookup"><span data-stu-id="12fc6-154">The interval type for the cursor and selected range of an axis.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-155"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>属性确定时间间隔，使用指定的类型<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fc6-155">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property determines the type of interval, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="12fc6-156">间隔类型是否为<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>，间隔的度量单位视为`double`，这等同于一天时<xref:System.DateTime>指定值。</span><span class="sxs-lookup"><span data-stu-id="12fc6-156">If the interval type is <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the unit of measurement for the interval is treated as a `double`, which is equivalent to one day when <xref:System.DateTime> values are specified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12fc6-157">间隔相关的属性时不起作用范围选择，或以编程方式设置光标位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-157">Interval-related properties have no effect when a range selection or cursor position is set programmatically.</span></span>  
  
 <span data-ttu-id="12fc6-158">如果轴间隔类型表示时间 — 例如，小时数、 分钟和等-然后正确以便缩放功能，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>还必须设置为时间值。</span><span class="sxs-lookup"><span data-stu-id="12fc6-158">If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value.</span></span> <span data-ttu-id="12fc6-159">例如，如果 ChartArea1.AxisX.IntervalType 以小时为单位，然后 ChartArea1.CursorX.IntervalType 将设置为分钟。</span><span class="sxs-lookup"><span data-stu-id="12fc6-159">For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-160">获取或设置一个标志，该标志启用或禁用光标用户界面。</span><span class="sxs-lookup"><span data-stu-id="12fc6-160">Gets or sets a flag that enables or disables the cursor user interface.</span></span></summary>
        <value>
          <span data-ttu-id="12fc6-161">如果启用了光标用户界面，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="12fc6-161"><see langword="true" /> if the cursor user interface is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserSelectionEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-162">获取或设置一个标志，该标志启用或禁用范围选择用户界面。</span><span class="sxs-lookup"><span data-stu-id="12fc6-162">Gets or sets a flag that enables or disables the range selection user interface.</span></span></summary>
        <value>
          <span data-ttu-id="12fc6-163">如果启用了范围选择用户界面，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="12fc6-163"><see langword="true" /> if the range selection user interface is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-164">获取或设置光标线条颜色。</span><span class="sxs-lookup"><span data-stu-id="12fc6-164">Gets or sets the cursor line color.</span></span></summary>
        <value><span data-ttu-id="12fc6-165">光标的线条颜色。</span><span class="sxs-lookup"><span data-stu-id="12fc6-165">The line color of the cursor.</span></span> <span data-ttu-id="12fc6-166">默认值为 <see cref="P:System.Drawing.Color.Red" />。</span><span class="sxs-lookup"><span data-stu-id="12fc6-166">The default value is <see cref="P:System.Drawing.Color.Red" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-167">获取或设置光标线条的样式。</span><span class="sxs-lookup"><span data-stu-id="12fc6-167">Gets or sets the style of the cursor line.</span></span></summary>
        <value><span data-ttu-id="12fc6-168">光标线的样式。</span><span class="sxs-lookup"><span data-stu-id="12fc6-168">The style of the cursor line.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-169">获取或设置光标的线条宽度（以像素为单位）</span><span class="sxs-lookup"><span data-stu-id="12fc6-169">Gets or sets the line width, in pixels, of a cursor</span></span></summary>
        <value><span data-ttu-id="12fc6-170">线宽（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="12fc6-170">The line width, in pixels.</span></span> <span data-ttu-id="12fc6-171">默认值为 1（一）。</span><span class="sxs-lookup"><span data-stu-id="12fc6-171">The default value is one (1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-172">此属性用于指定的线条宽度，以像素为单位的游标。</span><span class="sxs-lookup"><span data-stu-id="12fc6-172">Use this property to specify the line width, in pixels, of a cursor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public double Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Position { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-173">获取或设置光标位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-173">Gets or sets the position of a cursor.</span></span></summary>
        <value><span data-ttu-id="12fc6-174">光标的位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-174">The position of a cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-175">此属性可以用于获取光标的位置，也可以以编程方式设置光标位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-175">This property can be used to get the position of a cursor, as well as to programmatically set the cursor position.</span></span>  
  
 <span data-ttu-id="12fc6-176">位置指光标属于由确定轴的值<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="12fc6-176">The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property.</span></span> <span data-ttu-id="12fc6-177">例如，如果游标属于主 X 轴，则此属性设置为 2000 年 1 月 1 日的值将导致在 2000 年 1 月 1 日位置沿轴绘制 x 轴游标。</span><span class="sxs-lookup"><span data-stu-id="12fc6-177">For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis.</span></span> <span data-ttu-id="12fc6-178">如果此轴值不存在，则不会显示光标。</span><span class="sxs-lookup"><span data-stu-id="12fc6-178">If this axis value does not exist, the cursor will not be displayed.</span></span>  
  
 <span data-ttu-id="12fc6-179">请注意，如果设置此属性，则<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>属性不会有影响; 即，光标将显示在此指定的位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-179">Note that if you set this property, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> properties will have no effect; that is, the cursor will be displayed at this specified location.</span></span>  
  
 <span data-ttu-id="12fc6-180">设置此属性不会引发<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>或<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="12fc6-180">Setting this property will not raise the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> or <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> events.</span></span>  
  
 <span data-ttu-id="12fc6-181">或者，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A>方法可以用于将光标放置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-181">Alternatively, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> methods can be used to set the cursor.</span></span>  
  
 <span data-ttu-id="12fc6-182">若要以编程方式删除游标，使用此属性设置为光标的位置<xref:System.Double.NaN>。</span><span class="sxs-lookup"><span data-stu-id="12fc6-182">To programmatically remove a cursor, use this property to set the position of the cursor to <xref:System.Double.NaN>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "LightGray")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-183">获取或设置突出显示某一范围数据的半透明颜色。</span><span class="sxs-lookup"><span data-stu-id="12fc6-183">Gets or sets a semi-transparent color that highlights a range of data.</span></span></summary>
        <value><span data-ttu-id="12fc6-184">突出显示范围的颜色。</span><span class="sxs-lookup"><span data-stu-id="12fc6-184">The color of the highlighted range.</span></span> <span data-ttu-id="12fc6-185">默认值为 <see cref="P:System.Drawing.Color.LightGray" />，其 alpha 值为 120。</span><span class="sxs-lookup"><span data-stu-id="12fc6-185">The default value is <see cref="P:System.Drawing.Color.LightGray" />, with an alpha value of 120.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-186">此属性确定的范围选择颜色，可以设置为任何有效的 ARGB alpha、 红色、 绿色 (蓝色） 值。</span><span class="sxs-lookup"><span data-stu-id="12fc6-186">This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value.</span></span> <span data-ttu-id="12fc6-187">如果未提供 alpha 值，该值决定的透明度级别，，使用默认的 alpha 值为 120。</span><span class="sxs-lookup"><span data-stu-id="12fc6-187">If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.</span></span>  
  
 <span data-ttu-id="12fc6-188">所选的颜色可以设置为 X 和 Y 轴游标实现使用<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>属性<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>对象，分别。</span><span class="sxs-lookup"><span data-stu-id="12fc6-188">The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively.</span></span> <span data-ttu-id="12fc6-189">如果沿 x 轴，仅选择范围<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A>如果沿 y 轴，仅选择范围，则值将使用 x 轴游标;<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A>使用 y 轴游标的值。</span><span class="sxs-lookup"><span data-stu-id="12fc6-189">If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used.</span></span> <span data-ttu-id="12fc6-190">如果这两个轴选择一系列<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A>y 轴游标还可用于所选颜色的值。</span><span class="sxs-lookup"><span data-stu-id="12fc6-190">If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionEnd { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-191">获取或设置范围选择的结束位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-191">Gets or sets the end position of a range selection.</span></span></summary>
        <value><span data-ttu-id="12fc6-192">范围选择的结束位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-192">The end position of a range selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-193">用户可以通过单击鼠标左键并拖动鼠标，然后选择在图表区范围。</span><span class="sxs-lookup"><span data-stu-id="12fc6-193">A user can select a range within a chart area by clicking on the left mouse button and then dragging the mouse.</span></span> <span data-ttu-id="12fc6-194">请注意，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>属性还必须设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="12fc6-194">Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`.</span></span> <span data-ttu-id="12fc6-195">此外，范围选择可以设置以编程方式使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性，或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="12fc6-195">In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.</span></span>  
  
 <span data-ttu-id="12fc6-196">范围选择的结束位置的计算方式为光标所属的轴的值。</span><span class="sxs-lookup"><span data-stu-id="12fc6-196">The end position of a range selection is calculated as a value of the axis to which the cursor belongs.</span></span> <span data-ttu-id="12fc6-197">例如，如果游标属于主 x 轴，并且你设置<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>属性的值 2000 年 12 月 31 日，所选区域的末尾会在 2000 年 12 月 31 日主沿 X 轴。</span><span class="sxs-lookup"><span data-stu-id="12fc6-197">For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.</span></span>  
  
 <span data-ttu-id="12fc6-198">若要以编程方式删除范围选择，设置的开始和结束点的范围<xref:System.Double.NaN>使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性或使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="12fc6-198">To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionStart { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12fc6-199">获取或设置光标所选范围的起始位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-199">Gets or sets the start position of a cursor's selected range.</span></span></summary>
        <value><span data-ttu-id="12fc6-200">光标所选范围的起始位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-200">The start position of a cursor’s selected range.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12fc6-201">用户可以通过单击鼠标左键，然后将光标位置移动通过拖动鼠标选择范围。</span><span class="sxs-lookup"><span data-stu-id="12fc6-201">A user can select a range by clicking on the left mouse button and then moving the cursor position by dragging the mouse.</span></span> <span data-ttu-id="12fc6-202">请注意，<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>属性还必须设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="12fc6-202">Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`.</span></span> <span data-ttu-id="12fc6-203">此外，范围选择可以设置以编程方式使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性，或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>或<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="12fc6-203">In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.</span></span>  
  
 <span data-ttu-id="12fc6-204">范围选择的开始位置的计算方式为光标所属的轴的值。</span><span class="sxs-lookup"><span data-stu-id="12fc6-204">The start position of a range selection is calculated as a value of the axis to which the cursor belongs.</span></span> <span data-ttu-id="12fc6-205">例如，如果游标属于主 x 轴，并且你设置<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性 2000 年 1 月 1 日的值的所选区域开头会在 2000 年 1 月 1 日主沿 X 轴。</span><span class="sxs-lookup"><span data-stu-id="12fc6-205">For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.</span></span>  
  
 <span data-ttu-id="12fc6-206">若要以编程方式删除范围选择，设置的开始和结束点的范围<xref:System.Double.NaN>使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>和<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>属性或使用<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="12fc6-206">To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPixelPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPixelPosition(valuetype System.Drawing.PointF point, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPixelPosition (point As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPixelPosition(System::Drawing::PointF point, bool roundToBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="12fc6-207">一个 <see cref="T:System.Drawing.PointF" /> 结构，该结构指定绘制光标的位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-207">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the cursor will be drawn.</span></span></param>
        <param name="roundToBoundary"><span data-ttu-id="12fc6-208">如果为 <see langword="true" />，则在指定位置位于 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> 对象之外时，光标将沿最近的图表区域边界绘制。</span><span class="sxs-lookup"><span data-stu-id="12fc6-208">If <see langword="true" />, the cursor will be drawn along the nearest chart area boundary, if the specified position does not fall within a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> object.</span></span></param>
        <summary><span data-ttu-id="12fc6-209">在指定位置显示光标。</span><span class="sxs-lookup"><span data-stu-id="12fc6-209">Displays a cursor at the specified position.</span></span> <span data-ttu-id="12fc6-210">以像素度量。</span><span class="sxs-lookup"><span data-stu-id="12fc6-210">Measured in pixels.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPosition (double newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPosition(float64 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPosition (newPosition As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPosition(double newPosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPosition" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newPosition"><span data-ttu-id="12fc6-211">光标的新位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-211">The new position of the cursor.</span></span> <span data-ttu-id="12fc6-212">作为沿相关轴的值进行度量。</span><span class="sxs-lookup"><span data-stu-id="12fc6-212">Measured as a value along the relevant axis.</span></span></param>
        <summary><span data-ttu-id="12fc6-213">设置图表区域中指定轴值处的光标位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-213">Sets the position of a cursor within a chart area at the specified axis value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPixelPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPixelPosition(valuetype System.Drawing.PointF startPoint, valuetype System.Drawing.PointF endPoint, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPixelPosition (startPoint As PointF, endPoint As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPixelPosition(System::Drawing::PointF startPoint, System::Drawing::PointF endPoint, bool roundToBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Drawing.PointF" />
        <Parameter Name="endPoint" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint"><span data-ttu-id="12fc6-214">一个 <see cref="T:System.Drawing.PointF" /> 结构，该结构指定范围选择开始的位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-214">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the range selection begins.</span></span></param>
        <param name="endPoint"><span data-ttu-id="12fc6-215">一个 <see cref="T:System.Drawing.PointF" /> 结构，该结构指定范围选择结束的位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-215">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the range selection ends.</span></span></param>
        <param name="roundToBoundary"><span data-ttu-id="12fc6-216">如果为 <see langword="true" />，则在指定位置位于 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> 对象之外时，起始点和结束点将舍入为最近的图表区域边界。</span><span class="sxs-lookup"><span data-stu-id="12fc6-216">If <see langword="true" />, the start and end points will be rounded to the nearest chart area boundary if the specified positions do not fall within a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> object.</span></span></param>
        <summary><span data-ttu-id="12fc6-217">设置范围选择的起始位置和结束位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-217">Sets the start and end positions of a range selection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPosition (double newStart, double newEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPosition(float64 newStart, float64 newEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPosition (newStart As Double, newEnd As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPosition(double newStart, double newEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newStart" Type="System.Double" />
        <Parameter Name="newEnd" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newStart"><span data-ttu-id="12fc6-218">范围选择的新起始位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-218">The new start position of the range selection.</span></span> <span data-ttu-id="12fc6-219">作为沿相关轴的值进行度量。</span><span class="sxs-lookup"><span data-stu-id="12fc6-219">Measured as a value along the relevant axis.</span></span></param>
        <param name="newEnd"><span data-ttu-id="12fc6-220">范围选择的新结束位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-220">The new end position of the range selection.</span></span> <span data-ttu-id="12fc6-221">作为沿相关轴的值进行度量。</span><span class="sxs-lookup"><span data-stu-id="12fc6-221">Measured as a value along the relevant axis.</span></span></param>
        <summary><span data-ttu-id="12fc6-222">设置图表区域中指定轴值处的所选范围位置。</span><span class="sxs-lookup"><span data-stu-id="12fc6-222">Sets the position of a selected range within a chart area at the specified axis values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>