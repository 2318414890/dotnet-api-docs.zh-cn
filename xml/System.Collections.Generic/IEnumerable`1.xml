<Type Name="IEnumerable&lt;T&gt;" FullName="System.Collections.Generic.IEnumerable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e39965abf583e23cc1f016dd5a011d83be7a8036" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/13/2018" />
    <Meta Name="ms.locfileid" Value="35417298" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerable&lt;out T&gt; : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable`1&lt;+ T&gt; implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable(Of Out T)&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerable : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="2624f-101">要枚举的对象的类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2624f-101">The type of objects to enumerate.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="2624f-102">公开枚举数，该枚举数支持在指定类型的集合上进行简单迭代。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2624f-102">Exposes the enumerator, which supports a simple iteration over a collection of a specified type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2624f-103"><xref:System.Collections.Generic.IEnumerable%601> 是中的集合的基接口<xref:System.Collections.Generic>如命名空间<xref:System.Collections.Generic.List%601>， <xref:System.Collections.Generic.Dictionary%602>，和<xref:System.Collections.Generic.Stack%601>和其他泛型集合，如<xref:System.Collections.ObjectModel.ObservableCollection%601>和<xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="2624f-103"><xref:System.Collections.Generic.IEnumerable%601> is the base interface for collections in the <xref:System.Collections.Generic> namespace such as <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.Dictionary%602>, and <xref:System.Collections.Generic.Stack%601> and other generic collections such as <xref:System.Collections.ObjectModel.ObservableCollection%601> and <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span> <span data-ttu-id="2624f-104">为实现的集合<xref:System.Collections.Generic.IEnumerable%601>可以通过使用枚举`foreach`语句。</span><span class="sxs-lookup"><span data-stu-id="2624f-104">Collections that implement <xref:System.Collections.Generic.IEnumerable%601> can be enumerated by using the `foreach` statement.</span></span>  
  
 <span data-ttu-id="2624f-105">此接口的非泛型版本，请参阅<xref:System.Collections.IEnumerable?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2624f-105">For the non-generic version of this interface, see <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2624f-106"><xref:System.Collections.Generic.IEnumerable%601> 包含单个方法，则必须实现在实现此接口;<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>，它将返回<xref:System.Collections.Generic.IEnumerator%601>对象。</span><span class="sxs-lookup"><span data-stu-id="2624f-106"><xref:System.Collections.Generic.IEnumerable%601> contains a single method that you must implement when implementing this interface; <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, which returns an <xref:System.Collections.Generic.IEnumerator%601> object.</span></span> <span data-ttu-id="2624f-107">返回<xref:System.Collections.Generic.IEnumerator%601>提供了通过公开循环访问集合的能力<xref:System.Collections.Generic.IEnumerator%601.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2624f-107">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2624f-108">下面的示例演示如何实现<xref:System.Collections.Generic.IEnumerable%601>接口以及如何使用该实现来创建 LINQ 查询。</span><span class="sxs-lookup"><span data-stu-id="2624f-108">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and how to use that implementation to create a LINQ query.</span></span> <span data-ttu-id="2624f-109">当实现<xref:System.Collections.Generic.IEnumerable%601>，还必须实现<xref:System.Collections.Generic.IEnumerator%601>或对于仅限 C#，你可以使用[产生](~/docs/csharp/language-reference/keywords/yield.md)关键字。</span><span class="sxs-lookup"><span data-stu-id="2624f-109">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="2624f-110">实现<xref:System.Collections.Generic.IEnumerator%601>还要求<xref:System.IDisposable>要实现将在此示例中看到。</span><span class="sxs-lookup"><span data-stu-id="2624f-110">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="2624f-111">有关另一个 C# 示例，演示如何实现<xref:System.Collections.Generic.IEnumerable%601>接口，请参阅[泛型示例](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593)。</span><span class="sxs-lookup"><span data-stu-id="2624f-111">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="2624f-112">此示例使用`yield`关键字而不是实现<xref:System.Collections.Generic.IEnumerator%601>。</span><span class="sxs-lookup"><span data-stu-id="2624f-112">This sample uses the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="2624f-113">
        <para>
          <see cref="T:System.Collections.Generic.IEnumerable`1" /> 包含针对与非泛型集合; 奇偶校验实现<see cref="T:System.Collections.Generic.IEnumerable`1" />允许要传递给需要的方法的泛型集合<see cref="T:System.Collections.IEnumerable" />对象。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="2624f-113">
          <para>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> is included for parity with non-generic collections; implementing <see cref="T:System.Collections.Generic.IEnumerable`1" /> allows a generic collection to be passed to a method that expects an <see cref="T:System.Collections.IEnumerable" /> object.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;out T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Out T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2624f-114">返回一个循环访问集合的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2624f-114">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2624f-115">用于循环访问集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2624f-115">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2624f-116">返回<xref:System.Collections.Generic.IEnumerator%601>提供了通过公开循环访问集合的能力<xref:System.Collections.Generic.IEnumerator%601.Current%2A>属性。若要读取集合中的数据，但不是能修改该集合，可以使用枚举器。</span><span class="sxs-lookup"><span data-stu-id="2624f-116">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property .You can use enumerators to read the data in a collection, but not to modify the collection.</span></span>  
  
 <span data-ttu-id="2624f-117">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="2624f-117">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2624f-118">在此位置上，未定义 <xref:System.Collections.Generic.IEnumerator%601.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="2624f-118">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="2624f-119">因此，必须调用<xref:System.Collections.IEnumerator.MoveNext%2A>方法将枚举数前移到集合，然后再读取的值的第一个元素<xref:System.Collections.Generic.IEnumerator%601.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="2624f-119">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="2624f-120"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> 返回同一对象，直到<xref:System.Collections.IEnumerator.MoveNext%2A>作为再次调用<xref:System.Collections.IEnumerator.MoveNext%2A>设置<xref:System.Collections.Generic.IEnumerator%601.Current%2A>到下一个元素。</span><span class="sxs-lookup"><span data-stu-id="2624f-120"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called again as <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2624f-121">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="2624f-121">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2624f-122">当枚举器位于此位置上，后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="2624f-122">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2624f-123">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.Generic.IEnumerator%601.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="2624f-123">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="2624f-124">无法再次将 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 设置为集合的第一个元素；必须改为创建新的枚举器实例。</span><span class="sxs-lookup"><span data-stu-id="2624f-124">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  

 <span data-ttu-id="2624f-125">如果对集合，如添加、 修改或删除元素，进行更改的枚举器的行为不确定。</span><span class="sxs-lookup"><span data-stu-id="2624f-125">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="2624f-126">一个枚举数没有对集合的独占访问，因此，只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="2624f-126">An enumerator does not have exclusive access to the collection so an enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2624f-127">如果对集合进行更改，如添加、 修改或删除元素，枚举数将失效，并可能会产生意外的结果。</span><span class="sxs-lookup"><span data-stu-id="2624f-127">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is invalidated and you may get unexpected results.</span></span> <span data-ttu-id="2624f-128">此外，在对集合进行枚举并不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="2624f-128">Also, enumerating a collection is not a thread-safe procedure.</span></span> <span data-ttu-id="2624f-129">若要确保线程安全性，你应枚举期间锁定集合或集合上实现的同步。</span><span class="sxs-lookup"><span data-stu-id="2624f-129">To guarantee thread-safety, you should lock the collection during enumerator or implement synchronization on the collection.</span></span>  
  
 <span data-ttu-id="2624f-130">集合中的默认实现<xref:System.Collections.Generic?displayProperty=nameWithType>命名空间未同步。</span><span class="sxs-lookup"><span data-stu-id="2624f-130">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace aren't synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2624f-131">下面的示例演示如何实现<xref:System.Collections.Generic.IEnumerable%601>接口，并使用该实现创建一个 LINQ 查询。</span><span class="sxs-lookup"><span data-stu-id="2624f-131">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and uses that implementation to create a LINQ query.</span></span> <span data-ttu-id="2624f-132">当实现<xref:System.Collections.Generic.IEnumerable%601>，还必须实现<xref:System.Collections.Generic.IEnumerator%601>或对于仅限 C#，你可以使用[产生](~/docs/csharp/language-reference/keywords/yield.md)关键字。</span><span class="sxs-lookup"><span data-stu-id="2624f-132">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="2624f-133">实现<xref:System.Collections.Generic.IEnumerator%601>还要求<xref:System.IDisposable>要实现将在此示例中看到。</span><span class="sxs-lookup"><span data-stu-id="2624f-133">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="2624f-134">有关另一个 C# 示例，演示如何实现<xref:System.Collections.Generic.IEnumerable%601>接口，请参阅[泛型示例](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593)。</span><span class="sxs-lookup"><span data-stu-id="2624f-134">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="2624f-135">此示例使用的`yield`关键字而不是实现<xref:System.Collections.Generic.IEnumerator%601>。</span><span class="sxs-lookup"><span data-stu-id="2624f-135">This sample uses of the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
  </Members>
</Type>