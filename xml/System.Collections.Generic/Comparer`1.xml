<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Comparer`1.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56f0074415999f9984a7244f1cccee96197dddc42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f0074415999f9984a7244f1cccee96197dddc42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The type of objects to compare.</source>
          <target state="translated">要比较的对象的类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Comparer`1">
          <source>Provides a base class for implementations of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> generic interface.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> 泛型接口的实现提供基类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>Derive from this class to provide a custom implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface for use with collection classes such as the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic classes.</source>
          <target state="translated">派生自此类提供的自定义实现<ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>接口与集合类一起使用如<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>和<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>泛型类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The difference between deriving from the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class and implementing the <ph id="ph2">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface is as follows:</source>
          <target state="translated">派生自之间的差异<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>类并实现<ph id="ph2">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>接口是，如下所示：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>To specify how two objects should be compared by default, implement the <ph id="ph1">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface in your class.</source>
          <target state="translated">指定如何比较两个对象时默认情况下，实现<ph id="ph1">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>类中的接口。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This ensures that sort operations will use the default comparison code that you provided.</source>
          <target state="translated">这将确保排序操作将使用你提供的默认比较代码。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>To define a comparer to use instead of the default comparer, derive from the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">若要定义比较器来代替默认比较器，派生自<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>You can then use this comparer in sort operations that take a comparer as a parameter.</source>
          <target state="translated">然后可以在需要作为参数的比较器的排序操作中使用此比较器。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The object returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property uses the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface (<ph id="ph3">`IComparable&lt;T&gt;`</ph> in C#, <ph id="ph4">`IComparable(Of T)`</ph> in Visual Basic) to compare two objects.</source>
          <target state="translated">返回的对象<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph>属性使用<ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>泛型接口 (<ph id="ph3">`IComparable&lt;T&gt;`</ph>在 C# 中，<ph id="ph4">`IComparable(Of T)`</ph>在 Visual Basic 中) 来比较两个对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>If type <ph id="ph1">`T`</ph> does not implement the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property returns a <ph id="ph4">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> that uses the <ph id="ph5">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">如果类型<ph id="ph1">`T`</ph>不实现<ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>泛型接口，<ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph>属性返回<ph id="ph4">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>使用<ph id="ph5">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The following example derives a class, <ph id="ph1">`BoxLengthFirst`</ph>, from the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">下面的示例派生了一个类， <ph id="ph1">`BoxLengthFirst`</ph>，从<ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This comparer compares two objects of type <ph id="ph1">`Box`</ph>.</source>
          <target state="translated">此比较器比较类型的两个对象<ph id="ph1">`Box`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>It sorts them first by length, then by height, and then by width.</source>
          <target state="translated">它对其进行排序首先按长度，然后按高度和宽度。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The <ph id="ph1">`Box`</ph> class implements the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> interface to control the default comparison between two <ph id="ph3">`Box`</ph> objects.</source>
          <target state="translated"><ph id="ph1">`Box`</ph>类实现<ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>接口来控制默认比较两个<ph id="ph3">`Box`</ph>对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This default implementation sorts first by height, then by length, and then by width.</source>
          <target state="translated">高度，然后按长度，然后按宽度，此默认实现对首先进行排序。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The example shows the differences between the two comparisons by sorting a list of <ph id="ph1">`Box`</ph> objects first by using the <ph id="ph2">`BoxLengthFirst`</ph> comparer and then by using the default comparer.</source>
          <target state="translated">该示例演示两个比较排序的列表之间的差异<ph id="ph1">`Box`</ph>对象首先通过使用<ph id="ph2">`BoxLengthFirst`</ph>比较器，然后通过使用默认比较器。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> may behave differently in terms of culture-sensitivity and case-sensitivity.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> 和<ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph>在区分区域性和区分大小写方面可能以不同方式行为。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">对于字符串比较，<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>类建议通过<bpt id="p1">&lt;c&gt;</bpt>比较器<ph id="ph2">&amp;lt;</ph>字符串<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">属性的<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>类返回执行字符串比较与区分区域性和区分大小写不同组合的预定义的实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">区分大小写和区域性敏感度都是一致的相同成员<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">有关特定于区域性的比较的详细信息，请参阅<ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph>命名空间和<bpt id="p1">[</bpt>全球化和本地化<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The first object to compare.</source>
          <target state="translated">要比较的第一个对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The second object to compare.</source>
          <target state="translated">要比较的第二个对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</source>
          <target state="translated">在派生类中重写时，对同一类型的两个对象执行比较并返回一个值，指示一个对象是小于、等于还是大于另一个对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">一个有符号整数，指示 <ph id="ph1">&lt;paramref name="x" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="y" /&gt;</ph> 的相对值，如下表所示。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 含义</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> 小于 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> 等于 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> 大于 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Implement this method to provide a customized sort order comparison for type <ph id="ph1">`T`</ph>.</source>
          <target state="translated">实现此方法以提供自定义排序顺序比较类型<ph id="ph1">`T`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The following example defines a comparer of <ph id="ph1">`Box`</ph> objects that can be used instead of the default comparer.</source>
          <target state="translated">下面的示例定义的比较器<ph id="ph1">`Box`</ph>可代替默认比较器的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">此示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Type <ph id="ph1">&lt;paramref name="T" /&gt;</ph> does not implement either the <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated">类型 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> 没有实现 <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph> 泛型接口或 <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Comparing <ph id="ph1">&lt;see langword="null" /&gt;</ph> with any reference type is allowed and does not generate an exception.</source>
          <target state="translated">比较<ph id="ph1">&lt;see langword="null" /&gt;</ph>使用任何引用类型可以允许并且不会生成异常。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>A null reference is considered to be less than any reference that is not null.</source>
          <target state="translated">空引用被视为小于任何不为 null 的引用。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>For information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">有关特定于区域性的比较信息，请参阅<ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph>命名空间和<bpt id="p1">[</bpt>全球化和本地化<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>The comparison to use.</source>
          <target state="translated">要使用的比较。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>Creates a comparer by using the specified comparison.</source>
          <target state="translated">用指定的比较创建一个比较器。 </target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>The new comparer.</source>
          <target state="translated">新的比较器。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>Returns a default sort order comparer for the type specified by the generic argument.</source>
          <target state="translated">返回由泛型参数指定的类型的默认排序顺序比较器。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>An object that inherits <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> and serves as a sort order comparer for type <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">继承 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> 并作为 <ph id="ph2">&lt;paramref name="T" /&gt;</ph> 类型的排序顺序比较器的对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> returned by this property uses the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface (<ph id="ph3">`IComparable&lt;T&gt;`</ph> in C#, <ph id="ph4">`IComparable(Of T)`</ph> in Visual Basic) to compare two objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>此属性返回使用<ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>泛型接口 (<ph id="ph3">`IComparable&lt;T&gt;`</ph>在 C# 中，<ph id="ph4">`IComparable(Of T)`</ph>在 Visual Basic 中) 来比较两个对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>If type <ph id="ph1">`T`</ph> does not implement the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, this property returns a <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> that uses the <ph id="ph4">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">如果类型<ph id="ph1">`T`</ph>不实现<ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>泛型接口，此属性返回<ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>使用<ph id="ph4">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property to get an object that performs the default comparison.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph>属性来获取执行默认的比较的对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">此示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> (<bpt id="p2">&lt;c&gt;</bpt>Comparer(Of String)<ept id="p2">&lt;/c&gt;</ept> in Visual Basic).</source>
          <target state="translated">对于字符串比较，<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>类建议通过<bpt id="p1">&lt;c&gt;</bpt>比较器<ph id="ph2">&amp;lt;</ph>字符串<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> (<bpt id="p2">&lt;c&gt;</bpt>比较器 （的字符串）<ept id="p2">&lt;/c&gt;</ept>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">属性的<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>类返回执行字符串比较与区分区域性和区分大小写不同组合的预定义的实例。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">区分大小写和区域性敏感度都是一致的相同成员<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">有关特定于区域性的比较的详细信息，请参阅<ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph>命名空间和<bpt id="p1">[</bpt>全球化和本地化<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The first object to compare.</source>
          <target state="translated">要比较的第一个对象。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The second object to compare.</source>
          <target state="translated">要比较的第二个对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</source>
          <target state="translated">比较两个对象并返回一个值，该值指示一个对象小于、等于还是大于另一个对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">一个有符号整数，指示 <ph id="ph1">&lt;paramref name="x" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="y" /&gt;</ph> 的相对值，如下表所示。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 含义</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> 小于 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> 等于 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> 大于 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>This method is a wrapper for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29&gt;</ph> method, so <ph id="ph2">`obj`</ph> must be cast to the type specified by the generic argument <ph id="ph3">`T`</ph> of the current instance.</source>
          <target state="translated">此方法是包装器<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29&gt;</ph>方法，因此<ph id="ph2">`obj`</ph>必须强制转换为泛型自变量所指定的类型<ph id="ph3">`T`</ph>的当前实例。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>If it cannot be cast to <ph id="ph1">`T`</ph>, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">如果不能强制转换为<ph id="ph1">`T`</ph>、<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Comparing <ph id="ph1">`null`</ph> with any reference type is allowed and does not generate an exception.</source>
          <target state="translated">比较<ph id="ph1">`null`</ph>使用任何引用类型可以允许并且不会生成异常。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">在排序时，<ph id="ph1">`null`</ph>被视为小于任何其他对象。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A&gt;</ph> method to compare two objects.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A&gt;</ph>方法来比较两个对象。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">此示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> or <ph id="ph2">&lt;paramref name="y" /&gt;</ph> is of a type that cannot be cast to type <ph id="ph3">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="y" /&gt;</ph> 所属的类型无法被强制转换为类型 <ph id="ph3">&lt;paramref name="T" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph> do not implement either the <ph id="ph3">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="y" /&gt;</ph> 不实现 <ph id="ph3">&lt;see cref="T:System.IComparable`1" /&gt;</ph> 泛型接口或 <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> behave differently in terms of culture-sensitivity and case-sensitivity.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> 和<ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph>在区分区域性和区分大小写方面的行为不同。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">对于字符串比较，<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>类建议通过<bpt id="p1">&lt;c&gt;</bpt>比较器<ph id="ph2">&amp;lt;</ph>字符串<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">属性的<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>类返回执行字符串比较与区分区域性和区分大小写不同组合的预定义的实例。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">区分大小写和区域性敏感度都是一致的相同成员<ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">有关特定于区域性的比较的详细信息，请参阅<ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph>命名空间和<bpt id="p1">[</bpt>全球化和本地化<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>