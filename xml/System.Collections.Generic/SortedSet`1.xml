<Type Name="SortedSet&lt;T&gt;" FullName="System.Collections.Generic.SortedSet&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d850caed5caaa308476a62804d036f369a88bdbc" />
    <Meta Name="ms.sourcegitcommit" Value="850a55c780d5a95b534467969add0232fd3a6125" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/07/2018" />
    <Meta Name="ms.locfileid" Value="34828863" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortedSet&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.ISet&lt;T&gt;, System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedSet`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.ISet`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedSet`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedSet(Of T)&#xA;Implements ICollection, ICollection(Of T), IDeserializationCallback, IEnumerable(Of T), IReadOnlyCollection(Of T), ISerializable, ISet(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SortedSet : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::ISet&lt;T&gt;, System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ISet&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.SortedSetDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="b258c-101">集内元素的类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b258c-101">The type of elements in the set.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b258c-102">表示按排序顺序维护的对象的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b258c-102">Represents a collection of objects that is maintained in sorted order.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-103"><xref:System.Collections.Generic.SortedSet%601> 对象在插入和删除元素时维护排序顺序，而不会影响性能。</span><span class="sxs-lookup"><span data-stu-id="b258c-103">A <xref:System.Collections.Generic.SortedSet%601> object maintains a sorted order without affecting performance as elements are inserted and deleted.</span></span> <span data-ttu-id="b258c-104">不允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="b258c-104">Duplicate elements are not allowed.</span></span> <span data-ttu-id="b258c-105">不支持更改现有项的排序值，这可能导致意外行为。</span><span class="sxs-lookup"><span data-stu-id="b258c-105">Changing the sort values of existing items is not supported and may lead to unexpected behavior.</span></span>  
  
 <span data-ttu-id="b258c-106">有关 <xref:System.Collections.Generic.SortedSet%601> 的线程安全替代，请参阅 <xref:System.Collections.Immutable.ImmutableSortedSet%601></span><span class="sxs-lookup"><span data-stu-id="b258c-106">For a thread safe alternative to <xref:System.Collections.Generic.SortedSet%601>, see <xref:System.Collections.Immutable.ImmutableSortedSet%601></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b258c-107">下面的示例演示<xref:System.Collections.Generic.SortedSet%601>使用采用的构造函数创建的类<xref:System.Collections.Generic.IComparer%601>作为参数。</span><span class="sxs-lookup"><span data-stu-id="b258c-107">The following example demonstrates a <xref:System.Collections.Generic.SortedSet%601> class that is created with the constructor that takes an <xref:System.Collections.Generic.IComparer%601> as a parameter.</span></span> <span data-ttu-id="b258c-108">此比较器 (`ByFileExtension`) 用于文件名的列表进行排序，通过其扩展名。</span><span class="sxs-lookup"><span data-stu-id="b258c-108">This comparer (`ByFileExtension`) is used to sort a list of file names by their extensions.</span></span>  
  
 <span data-ttu-id="b258c-109">此示例演示如何创建一组排序的媒体文件名称、 删除不需要的元素、 查看的一系列元素，和将组与另一排序的集进行比较。</span><span class="sxs-lookup"><span data-stu-id="b258c-109">This example demonstrates how to create a sorted set of media file names, remove unwanted elements, view a range of elements, and compare the set with another sorted set.</span></span>  
  
 [!code-csharp[System.Collections.Generic.SortedSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.SortedSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Immutable.ImmutableSortedSet`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-110">初始化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-110">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-111">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-111">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b258c-112">初始化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedSet (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedSet(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="b258c-113">用于比较对象的默认比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-113">The default comparer to use for comparing objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-114">初始化使用指定比较器的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-114">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class that uses a specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-115">如果`comparer`不实现<xref:System.IComparable%601>，必须指定<xref:System.Collections.Generic.IComparer%601>要使用的对象。</span><span class="sxs-lookup"><span data-stu-id="b258c-115">If `comparer` does not implement <xref:System.IComparable%601>, you must specify an <xref:System.Collections.Generic.IComparer%601> object to be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b258c-116">下面的示例定义比较器 (`ByFileExtension`)，用于构造对文件名进行排序的排序的集通过其扩展名。</span><span class="sxs-lookup"><span data-stu-id="b258c-116">The following example defines a comparer (`ByFileExtension`) that is used to construct a sorted set that sorts file names by their extensions.</span></span> <span data-ttu-id="b258c-117">此代码示例摘自更大的示例为提供<xref:System.Collections.Generic.SortedSet%601>类。</span><span class="sxs-lookup"><span data-stu-id="b258c-117">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.SortedSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#2)]
 [!code-vb[System.Collections.Generic.SortedSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#2)]  
[!code-csharp[System.Collections.Generic.SortedSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#9)]
[!code-vb[System.Collections.Generic.SortedSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-118">
            <paramref name="comparer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-118">
              <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedSet (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedSet(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="b258c-119">要复制的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-119">The enumerable collection to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-120">初始化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 类的新实例，该实例包含从指定的可枚举集合中复制的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-120">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class that contains elements copied from a specified enumerable collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-121">可枚举集合中的重复元素不会复制到的新实例<xref:System.Collections.Generic.SortedSet%601>引发类和任何异常。</span><span class="sxs-lookup"><span data-stu-id="b258c-121">Duplicate elements in the enumerable collection are not copied into the new instance of the <xref:System.Collections.Generic.SortedSet%601> class, and no exceptions are thrown.</span></span>  
  
 <span data-ttu-id="b258c-122">此构造函数是 O(`n` log `n`) 运算，其中 `n` 是 `collection` 参数中的元素的数量。</span><span class="sxs-lookup"><span data-stu-id="b258c-122">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in the `collection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedSet (System.Collections.Generic.IEnumerable&lt;T&gt; collection, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T), comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedSet(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="b258c-123">要复制的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-123">The enumerable collection to be copied.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="b258c-124">用于比较对象的默认比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-124">The default comparer to use for comparing objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-125">初始化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 类的新实例，该实例包含从指定的可枚举集合中复制的元素并使用指定的比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-125">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class that contains elements copied from a specified enumerable collection and that uses a specified comparer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-126">
            <paramref name="collection" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-126">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SortedSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SortedSet(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="b258c-127">一个对象，其中包含序列化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象所需的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-127">The object that contains the information that is required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b258c-128">一个结构，其中包含与 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象关联的序列化流的源和目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-128">The structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-129">初始化包含序列化数据的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-129">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedSet`1" /> class that contains serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-130">在反序列化，以便重建通过流传输的对象过程中调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="b258c-130">This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b258c-131">要添加到集中的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-131">The element to add to the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-132">向集内添加元素，并返回一个指示是否已成功添加元素的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-132">Adds an element to the set and returns a value that indicates if it was successfully added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-133">如果将 <paramref name="item" /> 添加到集内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-133">
              <see langword="true" /> if <paramref name="item" /> is added to the set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-134"><xref:System.Collections.Generic.SortedSet%601>类不接受重复元素。</span><span class="sxs-lookup"><span data-stu-id="b258c-134">The <xref:System.Collections.Generic.SortedSet%601> class does not accept duplicate elements.</span></span> <span data-ttu-id="b258c-135">如果`item`为已在组中，此方法将返回`false`且不引发异常。</span><span class="sxs-lookup"><span data-stu-id="b258c-135">If `item` is already in the set, this method returns `false` and does not throw an exception.</span></span>  
  
 <span data-ttu-id="b258c-136">如果<xref:System.Collections.Generic.SortedSet%601.Count%2A>的容量已相等<xref:System.Collections.Generic.SortedSet%601>对象，则自动调整容量以容纳新项。</span><span class="sxs-lookup"><span data-stu-id="b258c-136">If <xref:System.Collections.Generic.SortedSet%601.Count%2A> already equals the capacity of the <xref:System.Collections.Generic.SortedSet%601> object, the capacity is automatically adjusted to accommodate the new item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b258c-137">下面的示例将元素添加到排序集。</span><span class="sxs-lookup"><span data-stu-id="b258c-137">The following example adds elements to a sorted set.</span></span> <span data-ttu-id="b258c-138">此代码示例摘自更大的示例为提供<xref:System.Collections.Generic.SortedSet%601>类。</span><span class="sxs-lookup"><span data-stu-id="b258c-138">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.SortedSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.SortedSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b258c-139">从集内移除所有元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-139">Removes all elements from the set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-140">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-140">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;T&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!T&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;T&gt; ^ Comparer { System::Collections::Generic::IComparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-141">获取用于为 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中的值排序的 <see cref="T:System.Collections.Generic.IComparer`1" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-141">Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> object that is used to order the values in the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b258c-142">用于为 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中的值排序的比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-142">The comparer that is used to order the values in the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-143">返回的比较器可以为的类型的默认比较器<xref:System.Collections.Generic.SortedSet%601>，或用于其构造函数的比较器。</span><span class="sxs-lookup"><span data-stu-id="b258c-143">The returned comparer can be either the default comparer of the type for a <xref:System.Collections.Generic.SortedSet%601>, or the comparer used for its constructor.</span></span>  
  
 <span data-ttu-id="b258c-144">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="b258c-144">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b258c-145">要在集内定位的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-145">The element to locate in the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-146">确定集是否包含特定元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-146">Determines whether the set contains a specific element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-147">如果集包含 <paramref name="item" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-147">
              <see langword="true" /> if the set contains <paramref name="item" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-148">此方法为 O (ln n) 运算。</span><span class="sxs-lookup"><span data-stu-id="b258c-148">This method is an O(ln n) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-149">将 <see cref="T:System.Collections.Generic.SortedSet`1" /> 的部分或所有项复制到兼容的一维数组（从目标数组的开头或指定索引处开始复制）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-149">Copies a portion or all of a <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the beginning of the destination array or at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-150">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-150">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b258c-151">一维数组，它是从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-151">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-152">将整个 <see cref="T:System.Collections.Generic.SortedSet`1" /> 复制到兼容的一维数组中（从目标数组的开头开始复制）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-152">Copies the complete <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-153">索引的`array`必须从零开始。</span><span class="sxs-lookup"><span data-stu-id="b258c-153">The indexing of `array` must be zero-based.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b258c-154">源 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中的元素数大于目标数组可包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-154">The number of elements in the source <see cref="T:System.Collections.Generic.SortedSet`1" /> exceeds the number of elements that the destination array can contain.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-155">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-155">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b258c-156">一维数组，它是从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-156">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
          <span data-ttu-id="b258c-157">该数组的索引必须从零开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-157">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b258c-158">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-158">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-159">将整个 <see cref="T:System.Collections.Generic.SortedSet`1" /> 复制到兼容的一维目标数组（从指定的数组索引处开始复制）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-159">Copies the complete <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-160">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-160">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b258c-161">源数组中的元素数大于从 <paramref name="index" /> 到目标数组末尾处的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-161">The number of elements in the source array is greater than the available space from <paramref name="index" /> to the end of the destination array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-162">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-162">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b258c-163">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-163">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b258c-164">一维数组，它是从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-164">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
          <span data-ttu-id="b258c-165">该数组的索引必须从零开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-165">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b258c-166">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-166">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b258c-167">要复制的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-167">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-168">将指定数量的元素从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 复制到兼容的一维数组中（从指定的数组索引处开始复制）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-168">Copies a specified number of elements from <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-169">此方法为 O (`n`) 操作，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="b258c-169">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b258c-170">源数组中的元素数大于从 <paramref name="index" /> 到目标数组末尾处的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-170">The number of elements in the source array is greater than the available space from <paramref name="index" /> to the end of the destination array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-171">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-171">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b258c-172">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-172">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="b258c-173">-或-  <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-173">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-174">获取 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-174">Gets the number of elements in the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b258c-175">
            <see cref="T:System.Collections.Generic.SortedSet`1" /> 中的元素的数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-175">The number of elements in the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-176">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="b258c-176">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSetComparer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-177">返回一个 <see cref="T:System.Collections.IEqualityComparer" /> 对象，该对象可用于创建包含各个集的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-177">Returns an <see cref="T:System.Collections.IEqualityComparer" /> object that can be used to create a collection that contains individual sets.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSetComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.SortedSet&lt;T&gt;&gt; CreateSetComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEqualityComparer`1&lt;class System.Collections.Generic.SortedSet`1&lt;!T&gt;&gt; CreateSetComparer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.CreateSetComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSetComparer () As IEqualityComparer(Of SortedSet(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEqualityComparer&lt;System::Collections::Generic::SortedSet&lt;T&gt; ^&gt; ^ CreateSetComparer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.SortedSet&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b258c-178">返回一个 <see cref="T:System.Collections.IEqualityComparer" /> 对象，该对象可用于创建包含各个集的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-178">Returns an <see cref="T:System.Collections.IEqualityComparer" /> object that can be used to create a collection that contains individual sets.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-179">用于创建集的集合的比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-179">A comparer for creating a collection of sets.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-180"><xref:System.Collections.IEqualityComparer>只有一个级别的相等性检查的对象; 但是，你可以链接在一起在其他级别的比较器进行更深入的相等测试。</span><span class="sxs-lookup"><span data-stu-id="b258c-180">The <xref:System.Collections.IEqualityComparer> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.</span></span>  
  
 <span data-ttu-id="b258c-181">调用此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="b258c-181">Calling this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSetComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.SortedSet&lt;T&gt;&gt; CreateSetComparer (System.Collections.Generic.IEqualityComparer&lt;T&gt; memberEqualityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEqualityComparer`1&lt;class System.Collections.Generic.SortedSet`1&lt;!T&gt;&gt; CreateSetComparer(class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; memberEqualityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSetComparer (memberEqualityComparer As IEqualityComparer(Of T)) As IEqualityComparer(Of SortedSet(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEqualityComparer&lt;System::Collections::Generic::SortedSet&lt;T&gt; ^&gt; ^ CreateSetComparer(System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ memberEqualityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.SortedSet&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberEqualityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="memberEqualityComparer">
          <span data-ttu-id="b258c-182">用于创建返回的比较器的比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-182">The comparer to use for creating the returned comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-183">根据指定的比较器返回一个 <see cref="T:System.Collections.IEqualityComparer" /> 对象，该对象可用于创建包含各个集的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-183">Returns an <see cref="T:System.Collections.IEqualityComparer" /> object, according to a specified comparer, that can be used to create a collection that contains individual sets.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-184">用于创建集的集合的比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-184">A comparer for creating a collection of sets.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-185">`memberEqualityComparer`和当前<xref:System.Collections.Generic.SortedSet%601>必须具有相同的定义的相等性。</span><span class="sxs-lookup"><span data-stu-id="b258c-185">The `memberEqualityComparer` and the current <xref:System.Collections.Generic.SortedSet%601> must have the same definition of equality.</span></span>  
  
 <span data-ttu-id="b258c-186">你可以使用此方法中返回的比较器<xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType>构造函数来创建各个集的哈希表。</span><span class="sxs-lookup"><span data-stu-id="b258c-186">You can use the comparer returned by this method in the <xref:System.Collections.Generic.SortedSet%601.%23ctor%28System.Collections.Generic.IEnumerable%7B%600%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29?displayProperty=nameWithType> constructor to create a hash table of individual sets.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b258c-187">下面的示例使用<xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A>方法来创建一组集。</span><span class="sxs-lookup"><span data-stu-id="b258c-187">The following example uses the <xref:System.Collections.Generic.SortedSet%601.CreateSetComparer%2A> method to create a set of sets.</span></span> <span data-ttu-id="b258c-188">此代码示例摘自更大的示例为提供<xref:System.Collections.Generic.SortedSet%601>类。</span><span class="sxs-lookup"><span data-stu-id="b258c-188">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.SortedSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#7)]
 [!code-vb[System.Collections.Generic.SortedSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptWith">
      <MemberSignature Language="C#" Value="public void ExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExceptWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-189">要从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象中移除的项的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-189">The collection of items to remove from the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-190">从当前 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象中移除指定集合中的所有元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-190">Removes all elements that are in a specified collection from the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-191">此方法中任何元素移除在当前<xref:System.Collections.Generic.SortedSet%601>这也是在`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-191">This method removes any element in the current <xref:System.Collections.Generic.SortedSet%601> that is also in `other`.</span></span> <span data-ttu-id="b258c-192">中的重复值`other`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="b258c-192">Duplicate values in `other` are ignored.</span></span>  
  
 <span data-ttu-id="b258c-193">此方法为 O (`n`) 操作，其中`n`是中的元素数`other`参数。</span><span class="sxs-lookup"><span data-stu-id="b258c-193">This method is an O(`n`) operation, where `n` is the number of elements in the `other` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b258c-194">下面的示例从另一个排序集内重复的排序集中移除元素。</span><span class="sxs-lookup"><span data-stu-id="b258c-194">The following example removes elements from a sorted set that are duplicated in another sorted set.</span></span> <span data-ttu-id="b258c-195">此代码示例摘自更大的示例为提供<xref:System.Collections.Generic.SortedSet%601>类。</span><span class="sxs-lookup"><span data-stu-id="b258c-195">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.SortedSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#6)]
 [!code-vb[System.Collections.Generic.SortedSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-196">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-196">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedSet&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.SortedSet`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As SortedSet(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::SortedSet&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedSet&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b258c-197">返回循环访问 <see cref="T:System.Collections.Generic.SortedSet`1" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-197">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-198">返回一个按顺序循环访问 <see cref="T:System.Collections.Generic.SortedSet`1" /> 的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-198">An enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedSet`1" /> in sorted order.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-199">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="b258c-199">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b258c-200">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复失效，并且下次调用<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b258c-200">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="b258c-201">此方法为 O(log n) 运算。</span><span class="sxs-lookup"><span data-stu-id="b258c-201">This method is an O(log n) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="b258c-202">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，其中包含序列化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象所需的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-202">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information that is required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b258c-203">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构，其中包含与 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象关联的序列化流的源和目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-203">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-204">实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象所必需的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-204">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data that you must have to serialize a <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-205">调用此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-205">Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-206">
            <paramref name="info" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-206">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b258c-207">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-207">for providing serialization services.</span>
          </span>
          <span data-ttu-id="b258c-208">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-208">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="b258c-209">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-209">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetViewBetween">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.SortedSet&lt;T&gt; GetViewBetween (T lowerValue, T upperValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.SortedSet`1&lt;!T&gt; GetViewBetween(!T lowerValue, !T upperValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetViewBetween (lowerValue As T, upperValue As T) As SortedSet(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::SortedSet&lt;T&gt; ^ GetViewBetween(T lowerValue, T upperValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedSet&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerValue" Type="T" />
        <Parameter Name="upperValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="lowerValue">
          <span data-ttu-id="b258c-210">视图中所需的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-210">The lowest desired value in the view.</span>
          </span>
        </param>
        <param name="upperValue">
          <span data-ttu-id="b258c-211">视图中所需的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-211">The highest desired value in the view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-212">返回 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中的子集的视图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-212">Returns a view of a subset in a <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-213">仅包含指定范围内的值的子集视图。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-213">A subset view that contains only the values in the specified range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-214">此方法返回的元素介于范围的视图`lowerValue`和`upperValue`，如比较器的定义。</span><span class="sxs-lookup"><span data-stu-id="b258c-214">This method returns a view of the range of elements that fall between `lowerValue` and `upperValue`, as defined by the comparer.</span></span> <span data-ttu-id="b258c-215">此方法不会复制中的元素<xref:System.Collections.Generic.SortedSet%601>，但提供的窗口，插入基础<xref:System.Collections.Generic.SortedSet%601>本身。</span><span class="sxs-lookup"><span data-stu-id="b258c-215">This method does not copy elements from the <xref:System.Collections.Generic.SortedSet%601>, but provides a window into the underlying <xref:System.Collections.Generic.SortedSet%601> itself.</span></span> <span data-ttu-id="b258c-216">你可以进行更改，这两个视图中并在基础<xref:System.Collections.Generic.SortedSet%601>。</span><span class="sxs-lookup"><span data-stu-id="b258c-216">You can make changes in both the view and in the underlying <xref:System.Collections.Generic.SortedSet%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b258c-217">下面的示例使用<xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A>方法以仅列出 AVI 文件从一组排序的媒体文件的名称。</span><span class="sxs-lookup"><span data-stu-id="b258c-217">The following example uses the <xref:System.Collections.Generic.SortedSet%601.GetViewBetween%2A> method to list only the AVI files from a sorted set of media file names.</span></span> <span data-ttu-id="b258c-218">比较器的计算结果根据其扩展名的文件名。</span><span class="sxs-lookup"><span data-stu-id="b258c-218">The comparer evaluates file names according to their extensions.</span></span> <span data-ttu-id="b258c-219">`lowerValue`是"AVI"和`upperValue`更高版本，只有一个值"AVJ"，以获取所有 AVI 文件的视图。</span><span class="sxs-lookup"><span data-stu-id="b258c-219">The `lowerValue` is "AVI" and the `upperValue` is only one value higher, "AVJ", to get the view of all AVI files.</span></span> <span data-ttu-id="b258c-220">此代码示例摘自更大的示例为提供<xref:System.Collections.Generic.SortedSet%601>类。</span><span class="sxs-lookup"><span data-stu-id="b258c-220">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.SortedSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.SortedSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b258c-221">根据比较器，<paramref name="lowerValue" /> 大于 <paramref name="upperValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-221">
              <paramref name="lowerValue" /> is more than <paramref name="upperValue" /> according to the comparer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b258c-222">在视图上尝试的操作超出了 <paramref name="lowerValue" /> 和 <paramref name="upperValue" /> 指定的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-222">A tried operation on the view was outside the range specified by <paramref name="lowerValue" /> and <paramref name="upperValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IntersectWith">
      <MemberSignature Language="C#" Value="public virtual void IntersectWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IntersectWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IntersectWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IntersectWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-223">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-223">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-224">修改当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象，使该对象仅包含指定集合中也存在的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-224">Modifies the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object so that it contains only elements that are also in a specified collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-225">此方法将忽略中的任何重复元素`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-225">This method ignores any duplicate elements in `other`.</span></span>  
  
 <span data-ttu-id="b258c-226">如果该集合由表示`other`参数是<xref:System.Collections.Generic.SortedSet%601>具有的相同的相等比较器，与当前集合<xref:System.Collections.Generic.SortedSet%601>对象，此方法为 O (`n`) 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-226">If the collection represented by the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="b258c-227">否则，此方法为 O (`n` + `m`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>和`m`是中的元素数`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-227">Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-228">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-228">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsProperSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-229">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-229">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-230">确定 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象是否为指定集合的真子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-230">Determines whether a <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a proper subset of the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-231">如果 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象是 <paramref name="other" /> 的真子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-231">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a proper subset of <paramref name="other" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-232">空集是任何其他集合的真子集。</span><span class="sxs-lookup"><span data-stu-id="b258c-232">An empty set is a proper subset of any other collection.</span></span> <span data-ttu-id="b258c-233">因此，此方法返回`true`如果该集合表示由当前<xref:System.Collections.Generic.SortedSet%601>对象为空除非`other`参数也是一个空集。</span><span class="sxs-lookup"><span data-stu-id="b258c-233">Therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty unless the `other` parameter is also an empty set.</span></span>  
  
 <span data-ttu-id="b258c-234">此方法始终返回`false`如果<xref:System.Collections.Generic.SortedSet%601.Count%2A>大于或等于的中的元素数`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-234">This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is greater than or equal to the number of elements in `other`.</span></span>  
  
 <span data-ttu-id="b258c-235">如果该集合由表示`other`是<xref:System.Collections.Generic.SortedSet%601>具有的相同的相等比较器，与当前集合<xref:System.Collections.Generic.SortedSet%601>对象，则此方法为 O (`n`) 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-235">If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, then this method is an O(`n`) operation.</span></span> <span data-ttu-id="b258c-236">否则，此方法为 O (`n` + `m`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>和`m`是中的元素数`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-236">Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-237">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-237">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsProperSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-238">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-238">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-239">确定 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象是否为指定集合的真超集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-239">Determines whether a <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a proper superset of the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-240">如果 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象是 <paramref name="other" /> 的真超集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-240">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a proper superset of <paramref name="other" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-241">空集是任何其他集合的真超集。</span><span class="sxs-lookup"><span data-stu-id="b258c-241">An empty set is a proper superset of any other collection.</span></span> <span data-ttu-id="b258c-242">因此，此方法返回`true`如果由集合表示`other`参数为空除非当前<xref:System.Collections.Generic.SortedSet%601>集合也为空。</span><span class="sxs-lookup"><span data-stu-id="b258c-242">Therefore, this method returns `true` if the collection represented by the `other` parameter is empty unless the current <xref:System.Collections.Generic.SortedSet%601> collection is also empty.</span></span>  
  
 <span data-ttu-id="b258c-243">此方法始终返回`false`如果<xref:System.Collections.Generic.SortedSet%601.Count%2A>小于或等于的中的元素数`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-243">This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is less than or equal to the number of elements in `other`.</span></span>  
  
 <span data-ttu-id="b258c-244">如果该集合由表示`other`是<xref:System.Collections.Generic.SortedSet%601>具有的相同的相等比较器，与当前集合<xref:System.Collections.Generic.SortedSet%601>对象，此方法为 O (`n`) 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-244">If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="b258c-245">否则，此方法为 O (`n` + `m`) 操作，其中`n`是中的元素数`other`和`m`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-245">Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-246">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-246">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-247">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-247">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-248">确定 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象是否为指定集合的子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-248">Determines whether a <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a subset of the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-249">如果当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象为 <paramref name="other" /> 的子集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-249">
              <see langword="true" /> if the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a subset of <paramref name="other" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-250">空集是任何其他集合，包括空集; 的子集因此，此方法返回`true`如果该集合表示由当前<xref:System.Collections.Generic.SortedSet%601>对象为空，即使`other`参数是一个空集。</span><span class="sxs-lookup"><span data-stu-id="b258c-250">An empty set is a subset of any other collection, including an empty set; therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.SortedSet%601> object is empty, even if the `other` parameter is an empty set.</span></span>  
  
 <span data-ttu-id="b258c-251">此方法始终返回`false`如果<xref:System.Collections.Generic.SortedSet%601.Count%2A>大于中的元素数`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-251">This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is greater than the number of elements in `other`.</span></span>  
  
 <span data-ttu-id="b258c-252">如果该集合由表示`other`是<xref:System.Collections.Generic.SortedSet%601>具有的相同的相等比较器，与当前集合<xref:System.Collections.Generic.SortedSet%601>对象，此方法为 O (`n`) 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-252">If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="b258c-253">否则，此方法为 O (`n` + `m`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>和`m`是中的元素数`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-253">Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A> and `m` is the number of elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-254">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-254">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-255">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-255">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-256">确定 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象是否为指定集合的超集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-256">Determines whether a <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a superset of the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-257">如果 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象是 <paramref name="other" /> 的超集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-257">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedSet`1" /> object is a superset of <paramref name="other" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-258">所有集合，包括空集，都是为空集合的超集。</span><span class="sxs-lookup"><span data-stu-id="b258c-258">All collections, including the empty set, are supersets of the empty set.</span></span> <span data-ttu-id="b258c-259">因此，此方法返回`true`如果由集合表示`other`参数为空，即使当前<xref:System.Collections.Generic.SortedSet%601>对象为空。</span><span class="sxs-lookup"><span data-stu-id="b258c-259">Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, even if the current <xref:System.Collections.Generic.SortedSet%601> object is empty.</span></span>  
  
 <span data-ttu-id="b258c-260">此方法始终返回`false`如果<xref:System.Collections.Generic.SortedSet%601.Count%2A>是中的元素数小于`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-260">This method always returns `false` if <xref:System.Collections.Generic.SortedSet%601.Count%2A> is less than the number of elements in `other`.</span></span>  
  
 <span data-ttu-id="b258c-261">如果该集合由表示`other`是<xref:System.Collections.Generic.SortedSet%601>具有的相同的相等比较器，与当前集合<xref:System.Collections.Generic.SortedSet%601>对象，此方法为 O (`n`) 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-261">If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="b258c-262">否则，此方法为 O (`n` + `m`) 操作，其中`n`是中的元素数`other`和`m`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-262">Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-263">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-263">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public T Max { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Max" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Max" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Max As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Max { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-264">按照比较器的定义，获取 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-264">Gets the maximum value in the <see cref="T:System.Collections.Generic.SortedSet`1" />, as defined by the comparer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b258c-265">集内的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-265">The maximum value in the set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public T Min { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Min" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Min" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Min As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Min { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-266">按照比较器的定义，获取 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-266">Gets the minimum value in the <see cref="T:System.Collections.Generic.SortedSet`1" />, as defined by the comparer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b258c-267">集内的最小值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-267">The minimum value in the set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="protected virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="b258c-268">反序列化事件源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-268">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-269">实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并在完成反序列化之后引发反序列化事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-269">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface, and raises the deserialization event when the deserialization is completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-270">调用此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-270">Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="b258c-271">与当前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象关联的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-271">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Overlaps">
      <MemberSignature Language="C#" Value="public bool Overlaps (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Overlaps(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Overlaps (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Overlaps(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-272">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-272">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-273">确定是否当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象和指定的集合共享通用元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-273">Determines whether the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object and a specified collection share common elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-274">如果 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象和 <paramref name="other" /> 共享至少一个公共元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-274">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedSet`1" /> object and <paramref name="other" /> share at least one common element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-275">中的元素的任何重复`other`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="b258c-275">Any duplicate elements in `other` are ignored.</span></span>  
  
 <span data-ttu-id="b258c-276">此方法为 O (`n`) 操作，其中`n`是中的元素数`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-276">This method is an O(`n`) operation, where `n` is the number of elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-277">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-277">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b258c-278">要移除的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-278">The element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-279">从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中移除指定的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-279">Removes a specified item from the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-280">如果成功找到并移除该元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-280">
              <see langword="true" /> if the element is found and successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-281">如果<xref:System.Collections.Generic.SortedSet%601>对象不包含指定的元素，该对象将保持不变并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="b258c-281">If the <xref:System.Collections.Generic.SortedSet%601> object does not contain the specified element, the object remains unchanged and no exception is thrown.</span></span>  
  
 <span data-ttu-id="b258c-282">`item` 可以是`null`对于引用类型。</span><span class="sxs-lookup"><span data-stu-id="b258c-282">`item` can be `null` for reference types.</span></span>  
  
 <span data-ttu-id="b258c-283">此方法为 O(log n) 运算。</span><span class="sxs-lookup"><span data-stu-id="b258c-283">This method is an O(log n) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveWhere">
      <MemberSignature Language="C#" Value="public int RemoveWhere (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveWhere(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveWhere (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveWhere(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="b258c-284">用于定义要移除的元素应满足的条件的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-284">The delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-285">从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 中移除与指定的谓词所定义的条件相匹配的所有元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-285">Removes all elements that match the conditions defined by the specified predicate from a <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-286">已从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 集合中移除的元素的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-286">The number of elements that were removed from the <see cref="T:System.Collections.Generic.SortedSet`1" /> collection..</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-287">`match` 不能修改<xref:System.Collections.Generic.SortedSet%601>。</span><span class="sxs-lookup"><span data-stu-id="b258c-287">`match` must not modify the <xref:System.Collections.Generic.SortedSet%601>.</span></span> <span data-ttu-id="b258c-288">这样会导致意外的结果。</span><span class="sxs-lookup"><span data-stu-id="b258c-288">Doing so can cause unexpected results.</span></span>  
  
 <span data-ttu-id="b258c-289">调用此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-289">Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b258c-290">下面的示例从一个排序集合中移除不需要的元素。</span><span class="sxs-lookup"><span data-stu-id="b258c-290">The following example removes unwanted elements from a sorted set.</span></span> <span data-ttu-id="b258c-291">此代码示例摘自更大的示例为提供<xref:System.Collections.Generic.SortedSet%601>类。</span><span class="sxs-lookup"><span data-stu-id="b258c-291">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.SortedSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.SortedSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#4)]  
[!code-csharp[System.Collections.Generic.SortedSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.sortedset/cs/program.cs#8)]
[!code-vb[System.Collections.Generic.SortedSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.sortedset/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-292">
            <paramref name="match" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-292">
              <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Function Reverse () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b258c-293">返回一个 <see cref="T:System.Collections.Generic.IEnumerable`1" />，它按相反的顺序循环访问 <see cref="T:System.Collections.Generic.SortedSet`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-293">Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that iterates over the <see cref="T:System.Collections.Generic.SortedSet`1" /> in reverse order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-294">一个枚举器，它按相反的顺序循环访问 <see cref="T:System.Collections.Generic.SortedSet`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-294">An enumerator that iterates over the <see cref="T:System.Collections.Generic.SortedSet`1" /> in reverse order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEquals">
      <MemberSignature Language="C#" Value="public bool SetEquals (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEquals(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEquals (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetEquals(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-295">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-295">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-296">确定当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象与指定的集合中是否包含相同的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-296">Determines whether the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object and the specified collection contain the same elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-297">如果当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象等于 <paramref name="other" />，则为 <see langword="true" />；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-297">
              <see langword="true" /> if the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object is equal to <paramref name="other" />; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-298">此方法将忽略的元素和中的任何重复元素的顺序`other`。</span><span class="sxs-lookup"><span data-stu-id="b258c-298">This method ignores the order of elements and any duplicate elements in `other`.</span></span>  
  
 <span data-ttu-id="b258c-299">如果该集合由表示`other`是<xref:System.Collections.Generic.SortedSet%601>具有的相同的相等比较器，与当前集合<xref:System.Collections.Generic.SortedSet%601>对象，此方法为 O (日志`n`) 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-299">If the collection represented by `other` is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(log`n`) operation.</span></span> <span data-ttu-id="b258c-300">否则，此方法为 O (`n` + `m`) 操作，其中`n`是中的元素数`other`和`m`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-300">Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-301">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-301">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SymmetricExceptWith">
      <MemberSignature Language="C#" Value="public void SymmetricExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SymmetricExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SymmetricExceptWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SymmetricExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-302">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-302">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-303">修改当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象，使该对象仅包含当前对象或指定集合中存在的元素（但不可包含两者共有的元素）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-303">Modifies the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object so that it contains only elements that are present either in the current object or in the specified collection, but not both.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-304">中的元素的任何重复`other`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="b258c-304">Any duplicate elements in `other` are ignored.</span></span>  
  
 <span data-ttu-id="b258c-305">如果`other`参数是<xref:System.Collections.Generic.SortedSet%601>具有的相同的相等比较器，与当前集合<xref:System.Collections.Generic.SortedSet%601>对象，此方法为 O (n 日志`m`) 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-305">If the `other` parameter is a <xref:System.Collections.Generic.SortedSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.SortedSet%601> object, this method is an O(n log `m`) operation.</span></span> <span data-ttu-id="b258c-306">否则，此方法为 O (`n`日志`m`) + O (`n`日志`n`) 操作，其中`n`是中的元素数`other`和`m`是<xref:System.Collections.Generic.SortedSet%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-306">Otherwise, this method is an O(`n` log `m`) + O(`n` log `n`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.SortedSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-307">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-307">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T item) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b258c-308">要添加到 <see cref="T:System.Collections.Generic.ICollection`1" /> 对象中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-308">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-309">向 <see cref="T:System.Collections.Generic.ICollection`1" /> 对象添加一个项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-309">Adds an item to an <see cref="T:System.Collections.Generic.ICollection`1" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-310">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-310">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-311">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Collections.Generic.ICollection%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-311">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 <span data-ttu-id="b258c-312">如果<xref:System.Collections.Generic.List%601.Count%2A>是小于<xref:System.Collections.Generic.List%601.Capacity%2A>，此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="b258c-312">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="b258c-313">如果必须增加容量以容纳新元素，此方法会成为 O (`n`) 操作，其中`n`是<xref:System.Collections.Generic.List%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="b258c-313">If the capacity must be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b258c-314">
            <see cref="T:System.Collections.Generic.ICollection`1" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-314">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-315">获取一个值，该值指示 <see cref="T:System.Collections.ICollection" /> 是否为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-315">Gets a value that indicates whether a <see cref="T:System.Collections.ICollection" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b258c-316">如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-316">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-317">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-318">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Collections.Generic.ICollection%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-318">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 <span data-ttu-id="b258c-319">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="b258c-319">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="b258c-320">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="b258c-320">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="b258c-321">获取此属性的值是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="b258c-321">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b258c-322">返回循环访问集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-322">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-323">用于循环访问集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-323">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-324">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-324">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-325">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Collections.Generic.IEnumerable%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-325">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  

 <span data-ttu-id="b258c-326">此方法为 O(log n) 运算。</span><span class="sxs-lookup"><span data-stu-id="b258c-326">This method is an O(log n) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b258c-327">一维数组，它是从 <see cref="T:System.Collections.Generic.SortedSet`1" /> 复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-327">A one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.SortedSet`1" />.</span>
          </span>
          <span data-ttu-id="b258c-328">该数组的索引必须从零开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-328">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b258c-329">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-329">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-330">将整个 <see cref="T:System.Collections.Generic.SortedSet`1" /> 复制到兼容的一维目标数组（从指定的数组索引处开始复制）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-330">Copies the complete <see cref="T:System.Collections.Generic.SortedSet`1" /> to a compatible one-dimensional array, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-331">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-331">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-332">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-332">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b258c-333">源数组中的元素数大于从 <paramref name="index" /> 到目标数组末尾处的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-333">The number of elements in the source array is greater than the available space from <paramref name="index" /> to the end of the destination array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-334">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-334">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b258c-335">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-335">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-336">获取一个值，该值指示对 <see cref="T:System.Collections.ICollection" /> 的访问是否同步（线程安全）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-336">Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b258c-337">如果同步对 <see cref="T:System.Collections.ICollection" /> 的访问，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-337">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-338">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-338">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-339">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-339">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b258c-340">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-340">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b258c-341">可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-341">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="b258c-342">在 <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> 的默认实现中，此属性始终返回当前实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-342">In the default implementation of <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-343">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-343">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-344">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-344">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 <span data-ttu-id="b258c-345">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="b258c-345">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b258c-346">返回循环访问集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-346">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-347">用于循环访问集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-347">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-348">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-348">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-349">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-349">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="b258c-350">此方法为 O(log n) 运算。</span><span class="sxs-lookup"><span data-stu-id="b258c-350">This method is an O(log n) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="b258c-351">反序列化事件源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-351">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-352">实现 <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> 接口，并在完成反序列化之后引发反序列化事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-352">Implements the <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> interface, and raises the deserialization event when the deserialization is completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-353">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-353">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-354">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Runtime.Serialization.IDeserializationCallback> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-354">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="b258c-355">与当前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例关联的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-355">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.SortedSet`1" /> instance is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="b258c-356">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，该对象包含序列化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 实例所需的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-356">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information that is required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b258c-357">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构，它包含与 <see cref="T:System.Collections.Generic.SortedSet`1" /> 实例关联的序列化流的源和目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-357">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-358">实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 实例所需的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-358">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface, and returns the data that you need to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-359">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="b258c-359">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b258c-360">它只能在 <xref:System.Collections.Generic.SortedSet%601> 实例强制转换为 <xref:System.Runtime.Serialization.ISerializable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="b258c-360">It can be used only when the <xref:System.Collections.Generic.SortedSet%601> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-361">
            <paramref name="info" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-361">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b258c-362">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-362">for providing serialization services.</span>
          </span>
          <span data-ttu-id="b258c-363">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-363">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="b258c-364">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-364">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (T equalValue, out T actualValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!T equalValue, [out] !T&amp; actualValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (equalValue As T, ByRef actualValue As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(T equalValue, [Runtime::InteropServices::Out] T % actualValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="equalValue" Type="T" />
        <Parameter Name="actualValue" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="equalValue">
          <span data-ttu-id="b258c-365">要搜索的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-365">The value to search for.</span>
          </span>
        </param>
        <param name="actualValue">
          <span data-ttu-id="b258c-366">搜索操作在集内找到的值；如果搜索操作未生成任何匹配项，则返回 T 的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-366">The value from the set that the search found, or the default value of T when the search yielded no match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-367">在集内搜索给定的值，并返回所找到的相等值（如果有）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-367">Searches the set for a given value and returns the equal value it finds, if any.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b258c-368">一个指示搜索是否成功的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-368">A value indicating whether the search was successful.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-369">这一点可能很有用，当你想要重新使用以前存储的引用，而不是一个新构造 （以便更多共享的引用可以发生） 或查找虽然具有更完整的数据比当前具有的值的值时其比较器函数指示它们相等。</span><span class="sxs-lookup"><span data-stu-id="b258c-369">This can be useful when you want to reuse a previously stored reference instead of a newly constructed one (so that more sharing of references can occur) or to look up a value that has more complete data than the value you currently have, although their comparer functions indicate they are equal.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnionWith">
      <MemberSignature Language="C#" Value="public void UnionWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnionWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnionWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnionWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="b258c-370">要与当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象进行比较的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-370">The collection to compare to the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b258c-371">修改当前的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 对象，使该对象包含当前对象或指定集合中存在的所有元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-371">Modifies the current <see cref="T:System.Collections.Generic.SortedSet`1" /> object so that it contains all elements that are present in either the current object or the specified collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b258c-372">中的元素的任何重复`other`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="b258c-372">Any duplicate elements in `other` are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b258c-373">
            <paramref name="other" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b258c-373">
              <paramref name="other" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>