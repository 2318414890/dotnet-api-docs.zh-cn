<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyValuePair`2.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54efb38e5247edc36b3760c498a4156e3336a3fbd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4efb38e5247edc36b3760c498a4156e3336a3fbd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>The type of the key.</source>
          <target state="translated">键的类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>The type of the value.</source>
          <target state="translated">值的类型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>Defines a key/value pair that can be set or retrieved.</source>
          <target state="translated">定义可设置或检索的键/值对。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A?displayProperty=nameWithType&gt;</ph> property returns an instance of this type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A?displayProperty=nameWithType&gt;</ph>属性返回此类型的一个实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph> c + + 中<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 返回集合中的元素的类型的对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>Since each element of a collection based on <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">由于基于集合的每个元素<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>是一个键/值对，元素类型不是键的类型或值的类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.</source>
          <target state="translated">相反，元素类型是<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>语句是枚举器，允许从，不写入集合只能读取允许周围的包装器。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>The following code example shows how to enumerate the keys and values in a dictionary, using the <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure.</source>
          <target state="translated">下面的代码示例演示如何枚举的键和值在字典中，使用<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.KeyValuePair`2">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">此代码摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)">
          <source>The object defined in each key/value pair.</source>
          <target state="translated">每个键/值对中定义的对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)">
          <source>The definition associated with <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">与 <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> 关联的定义。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> structure with the specified key and value.</source>
          <target state="translated">用指定的键和值初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.KeyValuePair`2.Key">
          <source>Gets the key in the key/value pair.</source>
          <target state="translated">获取键/值对中的键。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.KeyValuePair`2.Key">
          <source>A <ph id="ph1">&lt;typeparamref name="TKey" /&gt;</ph> that is the key of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;typeparamref name="TKey" /&gt;</ph>，它是 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 的键。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.KeyValuePair`2.Key">
          <source>This property is read/only.</source>
          <target state="translated">此属性是只读。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.KeyValuePair`2.Key">
          <source>The following code example shows how to enumerate the keys and values in a dictionary, using the <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure.</source>
          <target state="translated">下面的代码示例演示如何枚举的键和值在字典中，使用<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.KeyValuePair`2.Key">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">此代码摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.KeyValuePair`2.ToString">
          <source>Returns a string representation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph>, using the string representations of the key and value.</source>
          <target state="translated">使用键和值的字符串表示形式返回 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.KeyValuePair`2.ToString">
          <source>A string representation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph>, which includes the string representations of the key and value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 的字符串表示形式，它包括键和值的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.KeyValuePair`2.ToString">
          <source>The string representation consists of the string representations of the key and value, separated by a comma and a space, and enclosed in square brackets.</source>
          <target state="translated">字符串表示形式包含的字符串表示形式的键和值，用逗号和空格和括在方括号分隔。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.KeyValuePair`2.ToString">
          <source>For example, the <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602.ToString%2A&gt;</ph> method for a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure with the string <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt;</ph> "Test" and the integer <ph id="ph4">&lt;xref:System.Collections.Generic.KeyValuePair%602.Value%2A&gt;</ph> 14 returns the string "[Test, 14]".</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602.ToString%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>以字符串的结构<ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt;</ph>"Test"和整数<ph id="ph4">&lt;xref:System.Collections.Generic.KeyValuePair%602.Value%2A&gt;</ph>14 返回字符串"[Test，14]"。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.KeyValuePair`2.ToString">
          <source>This method uses the <ph id="ph1">`ToString`</ph> methods provided by the key and value types.</source>
          <target state="translated">此方法使用<ph id="ph1">`ToString`</ph>方法提供的键和值类型。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.KeyValuePair`2.ToString">
          <source>Some types do not return useful or informative values for their <ph id="ph1">`ToString`</ph> methods.</source>
          <target state="translated">某些类型不会返回有用或信息性的值，为其<ph id="ph1">`ToString`</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.KeyValuePair`2.Value">
          <source>Gets the value in the key/value pair.</source>
          <target state="translated">获取键/值对中的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.KeyValuePair`2.Value">
          <source>A <ph id="ph1">&lt;typeparamref name="TValue" /&gt;</ph> that is the value of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;typeparamref name="TValue" /&gt;</ph>，它是 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.KeyValuePair`2.Value">
          <source>This property is read/only.</source>
          <target state="translated">此属性是只读。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.KeyValuePair`2.Value">
          <source>The following code example shows how to enumerate the keys and values in a dictionary, using the <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure.</source>
          <target state="translated">下面的代码示例演示如何枚举的键和值在字典中，使用<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>结构。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.KeyValuePair`2.Value">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">此代码摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>类。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>