<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlBulkCopy.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15913de004f355c8ec72b363a3a33c142db5cfa36d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">913de004f355c8ec72b363a3a33c142db5cfa36d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Lets you efficiently bulk load a SQL Server table with data from another source.</source>
          <target state="translated">允许你使用其他源的数据有效地批量加载 SQL Server 表。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Microsoft SQL Server includes a popular command-prompt utility named <bpt id="p1">**</bpt>bcp<ept id="p1">**</ept> for moving data from one table to another, whether on a single server or between servers.</source>
          <target state="translated">Microsoft SQL Server 包含名为常用命令提示实用工具<bpt id="p1">**</bpt>bcp<ept id="p1">**</ept>将数据从一个表移到另一个，无论是在上一台服务器或服务器之间。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class lets you write managed code solutions that provide similar functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>类，可以编写提供类似的功能的托管的代码解决方案。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>There are other ways to load data into a SQL Server table (INSERT statements, for example), but <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> offers a significant performance advantage over them.</source>
          <target state="translated">还有其他方式将数据载入 SQL Server 表 （INSERT 语句，例如），但<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>这些显著的性能优势。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class can be used to write data only to SQL Server tables.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 类只能用于向 SQL Server 表中写入数据。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance or read with a <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">但是，数据源并不局限于 SQL Server;可以使用任何数据源，只要数据可以加载到<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>实例，或浏览器进行<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> will fail when bulk loading a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column of type <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 将失败时大容量加载<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>类型的列<ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlDateTime&gt;</ph>SQL Server 2008 中的类型是一种日期/时间类型列添加到 SQL Server。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The following console application demonstrates how to load data using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class.</source>
          <target state="translated">以下控制台应用程序演示如何使用 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 类加载数据。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the SQL Server <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">在此示例中，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>用于将数据从复制<bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept>表中的 SQL Server <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept>到同一个数据库中的类似表的数据库。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy operation.</source>
          <target state="translated">将用于执行批量复制操作的已经打开的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">如果连接字符串不使用 <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>，可以使用 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 来通过用户 ID 和密码比在连接字符串的文本中指定用户 ID 和密码更安全。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the specified open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 的指定打开实例初始化 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Because the connection is already open when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is initialized, the connection remains open after the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">因为连接已打开<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>初始化实例，连接会保持打开后<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>实例是否闭合。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the <ph id="ph1">`connection`</ph> argument is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">如果<ph id="ph1">`connection`</ph>自变量为 null，<ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">以下控制台应用程序演示如何大容量加载数据使用已打开的连接。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is used to copy data from the <bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept> table in the SQL Server <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept> database to a similar table in the same database.</source>
          <target state="translated">在此示例中，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>用于将数据从复制<bpt id="p1">**</bpt>Production.Product<ept id="p1">**</ept>表中的 SQL Server <bpt id="p2">**</bpt>AdventureWorks<ept id="p2">**</ept>到同一个数据库中的类似表的数据库。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This example is for demonstration purposes only.</source>
          <target state="translated">此示例只为了方便本文演示。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>You would not use <ph id="ph1">`SqlBulkCopy`</ph> to move data from one table to another in the same database in a production application.</source>
          <target state="translated">您不会使用<ph id="ph1">`SqlBulkCopy`</ph>将数据从一个表移到另一个在生产应用程序位于同一数据库中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">请注意，源数据不需要位于 SQL Server;你可以使用可以读取到任何数据源<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>或加载到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">定义将打开的且由 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 实例使用的连接的字符串。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">如果连接字符串不使用 <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>，可以使用 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 来通过用户 ID 和密码比在连接字符串的文本中指定用户 ID 和密码更安全。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">基于提供的 <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> 初始化和打开 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The constructor uses the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">此构造函数使用 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 来初始化 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed at the end of the bulk copy operation.</source>
          <target state="translated">在大容量复制操作的末尾自动关闭连接。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is null, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">如果<ph id="ph1">`connectionString`</ph>为 null，<ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If <ph id="ph1">`connectionString`</ph> is an empty string, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">如果<ph id="ph1">`connectionString`</ph>为空字符串，<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The following console application demonstrates how to bulk load data by using a connection specified as a string.</source>
          <target state="translated">以下控制台应用程序演示如何通过使用连接字符串形式指定大容量加载数据。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The connection is automatically closed when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance is closed.</source>
          <target state="translated">连接时自动关闭<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>实例是否闭合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">在此示例中，源数据第一次读取从 SQL Server 表<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">源数据不需要位于 SQL Server;你可以使用可以读取到任何数据源<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>或加载到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The string defining the connection that will be opened for use by the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">定义将打开的且由 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 实例使用的连接的字符串。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">如果连接字符串不使用 <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>，可以使用 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 来通过用户 ID 和密码比在连接字符串的文本中指定用户 ID 和密码更安全。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> 枚举中的值的组合，可确定将哪些数据源行复制到目标表中。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Initializes and opens a new instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> based on the supplied <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph>.</source>
          <target state="translated">基于提供的 <ph id="ph2">&lt;paramref name="connectionString" /&gt;</ph> 初始化和打开 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The constructor uses that <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to initialize a new instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">此构造函数使用此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 来初始化 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 实例的行为取决于 <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> 参数中提供的选项。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>You can obtain detailed information about all the bulk copy options in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> topic.</source>
          <target state="translated">你可以获取有关中的所有大容量复制选项的详细的信息<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph>主题。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</source>
          <target state="translated">以下控制台应用程序演示如何通过使用指定为一个字符串的连接执行大容量加载。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An option is set to use the value in the identity column of the source table when you load the destination table.</source>
          <target state="translated">设置一个选项以加载目标表，然后使用中的源表的标识列的值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">在此示例中，源数据第一次读取从 SQL Server 表<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>The source table and destination table each include an Identity column.</source>
          <target state="translated">源表和目标表中每个包含 Identity 列。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>By default, a new value for the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> column is generated in the destination table for each row added.</source>
          <target state="translated">默认情况下，新的值<bpt id="p1">**</bpt>标识<ept id="p1">**</ept>添加每个行的目标表中生成列。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>In this example, an option is set when the connection is opened that forces the bulk load process to use the <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> values from the source table instead.</source>
          <target state="translated">强制批量加载进程，用于打开连接时，设置选项在此示例中，<bpt id="p1">**</bpt>标识<ept id="p1">**</ept>改为源表中的值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>To see how the option changes the way the bulk load works, run the sample with the <bpt id="p1">**</bpt>dbo.BulkCopyDemoMatchingColumns<ept id="p1">**</ept> table empty.</source>
          <target state="translated">若要查看此选项如何改变大容量加载的工作方式，使用运行此示例<bpt id="p1">**</bpt>dbo。BulkCopyDemoMatchingColumns<ept id="p1">**</ept>表为空。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>All rows load from the source.</source>
          <target state="translated">从源中加载的所有行。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>Then run the sample again without emptying the table.</source>
          <target state="translated">然后再次运行示例而不清空表。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</source>
          <target state="translated">引发异常，代码将消息写入控制台通知您由于主键约束冲突尚未添加行。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The already open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> instance that will be used to perform the bulk copy.</source>
          <target state="translated">将用于执行批量复制操作的已经打开的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">如果连接字符串不使用 <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>，可以使用 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 来通过用户 ID 和密码比在连接字符串的文本中指定用户 ID 和密码更安全。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>A combination of values from the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> enumeration that determines which data source rows are copied to the destination table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /&gt;</ph> 枚举中的值的组合，可确定将哪些数据源行复制到目标表中。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>An existing <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> instance under which the bulk copy will occur.</source>
          <target state="translated">现有的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> 实例，批量复制操作将在该实例下进行。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class using the supplied existing open instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">使用提供的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 的现有打开实例初始化 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance behaves according to options supplied in the <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 实例的行为取决于 <ph id="ph2">&lt;paramref name="copyOptions" /&gt;</ph> 参数中提供的选项。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If a non-null <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> is supplied, the copy operations will be performed within that transaction.</source>
          <target state="translated">如果提供非空 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>，则复制操作将在该事务中执行。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>If options include <ph id="ph1">`UseInternalTransaction`</ph> and the <ph id="ph2">`externalTransaction`</ph> argument is not null, an <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept> is thrown.</source>
          <target state="translated">如果选项包括<ph id="ph1">`UseInternalTransaction`</ph>和<ph id="ph2">`externalTransaction`</ph>自变量不为 null， <bpt id="p1">**</bpt>InvalidArgumentException<ept id="p1">**</ept>引发。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)">
          <source>For examples demonstrating how to use <ph id="ph1">`SqlBulkCopy`</ph> in a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">有关示例演示如何使用<ph id="ph1">`SqlBulkCopy`</ph>在事务中，请参阅<bpt id="p1">[</bpt>事务和批量复制操作<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Number of rows in each batch.</source>
          <target state="translated">每个批处理中的行数。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>At the end of each batch, the rows in the batch are sent to the server.</source>
          <target state="translated">在每个批处理结束时，批处理中的行将发送到服务器。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph> property, or zero if no value has been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /&gt;</ph> 属性的整数值；或者如果未设置任何值，则为零。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>A batch is complete when <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows have been processed or there are no more rows to send to the destination data source.</source>
          <target state="translated">当一批已完成<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>处理完行或有更多的行发送到目标数据源。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Zero (the default) indicates that each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is a single batch.</source>
          <target state="translated">零 （默认值） 指示每个<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>操作是单个批处理。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance has been declared without the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> option in effect, rows are sent to the server <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> rows at a time, but no transaction-related action is taken.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>实例已声明但<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph>选项在起作用，将行发送到服务器<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>执行时间，但没有与事务相关的操作的行。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is in effect, each batch of rows is inserted as a separate transaction.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph>实际上，是作为单独的事务插入的行的每个批处理。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> property can be set at any time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>可以在任何时候设置属性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</source>
          <target state="translated">如果大容量复制已在进行中，当前批的大小根据上一批大小。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Subsequent batches use the new size.</source>
          <target state="translated">后续的批次使用的新大小。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> is initially zero and changed while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is already in progress, that operation loads the data as a single batch.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>最初为零和更改时<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>操作正在进行，操作将作为单个批处理数据加载。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>Any subsequent <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operations on the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance use the new <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated">任何后续<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>对相同操作<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>实例使用新<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The following console application demonstrates how to bulk load data in batches of 50 rows.</source>
          <target state="translated">以下控制台应用程序演示如何大容量加载数据批 50 行中。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>For an example illustrating how <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> works with a transaction, see <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>.</source>
          <target state="translated">示例说明如何<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>适用于事务，请参阅<bpt id="p1">[</bpt>事务和批量复制操作<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">在此示例中，源数据第一次读取从 SQL Server 表<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">源数据不需要位于 SQL Server;你可以使用可以读取到任何数据源<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>或加载到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BatchSize">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>Number of seconds for the operation to complete before it times out.</source>
          <target state="translated">超时之前可用于完成操作的秒数。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /&gt;</ph> 属性的整数值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">默认值为 30 秒。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>A value of 0 indicates no limit; the bulk copy will wait indefinitely.</source>
          <target state="translated">值为 0 表示无限制，大容量复制将无限期等待。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</source>
          <target state="translated">如果该操作不超时，也不会提交事务，并从目标表中删除所有复制的行。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</source>
          <target state="translated">以下控制台应用程序演示如何修改为 60 秒超时批量加载数据时。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>In this example, the source data is first read from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">在此示例中，源数据第一次读取从 SQL Server 表<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">源数据不需要位于 SQL Server;你可以使用可以读取到任何数据源<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>或加载到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph><ph id="ph2">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用<ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph><ph id="ph2">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> instance.</source>
          <target state="translated">关闭 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>After you call a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object, no other operation will succeed.</source>
          <target state="translated">调用后<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>上<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>对象，没有其他操作将会成功。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>方法会引发<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method from the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event causes an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> to be thrown.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>方法从<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>事件导致<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Note that open <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instances are closed implicitly at the end of a <ph id="ph2">`using`</ph> block.</source>
          <target state="translated">注意，打开<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>实例均已关闭隐式的末尾<ph id="ph2">`using`</ph>块。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The following example uses the same <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to add sales orders and their associated details to two destination tables.</source>
          <target state="translated">下面的示例使用相同<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>实例将销售订单和其关联的详细信息添加到两个目标表。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>Because the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</source>
          <target state="translated">因为<bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>销售订单表很大、 示例读取仅订单的某一特定帐号和大容量将这些订单和详细信息复制到目标表。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph> method is used only after both bulk copy operations are complete.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>在这两个大容量复制操作都完成后才使用方法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.Close">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> items.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 项的集合。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Column mappings define the relationships between columns in the data source and columns in the destination.</source>
          <target state="translated">列映射定义数据源中的列和目标中的列之间的关系。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>A collection of column mappings.</source>
          <target state="translated">列映射集合。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>By default, it is an empty collection.</source>
          <target state="translated">默认情况下为空集合。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection is unnecessary.</source>
          <target state="translated">当数据源和目标表具有相同数目的列，且每个数据源中的源列的序号位置匹配相应的目标列的序号位置<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>是不必要的集合。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>However, if the column counts differ, or the ordinal positions are not consistent, you must use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> to make sure that data is copied into the correct columns.</source>
          <target state="translated">但是，如果列计数不同，或者不一致的序号位置，则必须使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>以确保将数据复制到正确的列。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</source>
          <target state="translated">在大容量复制操作的执行期间可以访问此集合，但不能更改。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings">
          <source>Any attempt to change it will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">任何尝试将其更改都将引发<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>Name of the destination table on the server.</source>
          <target state="translated">服务器上的目标表的名称。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The string value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property, or null if none as been supplied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 属性的字符串值，如果未提供任何值，则为 null。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> has not been set when <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> is called, an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph>尚未设置时<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>调用时，<ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is modified while a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is running, the change does not affect the current operation.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph>修改时<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>操作正在运行，更改不会影响当前操作。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> value is used the next time a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called.</source>
          <target state="translated">新<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph>下一步时，将使用值<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> is a three-part name (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> 是由三部分名称 (<ph id="ph2">`&lt;database&gt;.&lt;owningschema&gt;.&lt;name&gt;`</ph>)。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can qualify the table name with its database and owning schema if you choose.</source>
          <target state="translated">如果你选择，可以限定及其数据库和所属架构的表名称。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>).</source>
          <target state="translated">但是，如果表名使用下划线 (_) 或任何其他特殊字符，则必须转义使用括号中的名称 (<ph id="ph1">`[&lt;database&gt;.&lt;owningschema&gt;.&lt;name_01&gt;]`</ph>)。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>For more information, see "Identifiers" in SQL Server Books Online.</source>
          <target state="translated">有关详细信息，请参阅 SQL Server 联机丛书中的"标识符"。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>You can bulk-copy data to a temporary table by using a value such as <ph id="ph1">`tempdb..#table`</ph> or <ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph> property.</source>
          <target state="translated">你可以将数据大容量复制到临时表使用一个值，类似于<ph id="ph1">`tempdb..#table`</ph>或<ph id="ph2">`tempdb.&lt;owner&gt;.#table`</ph>为<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">以下控制台应用程序演示如何大容量加载数据使用已打开的连接。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">目标表是中的表<bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>数据库。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">在此示例中，使用的连接是首先从 SQL Server 表中读取数据<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>The source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">源数据不需要位于 SQL Server;你可以使用可以读取到任何数据源<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>或加载到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>Enables or disables a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object to stream data from an <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object</source>
          <target state="translated">启用或禁用 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象，以流式传输 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 对象中的数据</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object can stream data from an <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> object; otherwise, false.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象可以流式传输 <ph id="ph3">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 对象中的数据，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 false。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> reads from an <ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph> object using <ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>, optimizing memory usage by using the <ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph> streaming capabilities.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A&gt;</ph>是<ph id="ph2">`true`</ph>，<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>从读取<ph id="ph4">&lt;xref:System.Data.IDataReader&gt;</ph>对象使用<ph id="ph5">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>，通过使用优化内存使用情况<ph id="ph6">&lt;xref:System.Data.IDataReader&gt;</ph>流式处理功能。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming">
          <source>When it’s set to false, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> class loads all the data returned by the <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> object into memory before sending it to SQL Server or SQL Azure.</source>
          <target state="translated">当设置为 false，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>类将加载所有返回的数据<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>到之前将其发送到 SQL Server 或 SQL Azure 的内存的对象。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Defines the number of rows to be processed before generating a notification event.</source>
          <target state="translated">定义生成通知事件之前要处理的行数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The integer value of the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property, or zero if the property has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> 属性的整数值，或者如果未设置该属性，则为零。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This property is designed for user interface components that illustrate the progress of a bulk copy operation.</source>
          <target state="translated">此属性设计用户界面组件演示批量复制操作的进度。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>It indicates the number of rows to be processed before generating a notification event.</source>
          <target state="translated">它指示要在生成通知事件之前处理的行数。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property can be set at any time, even while a bulk copy operation is underway.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>属性可以设置任何时候，即使在大容量复制操作正在进行。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Changes made during a bulk copy operation take effect after the next notification.</source>
          <target state="translated">批量复制操作期间所做的更改会在下一条通知后生效。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The new setting applies to all subsequent operations on the same instance.</source>
          <target state="translated">新的设置适用于同一个实例上的所有后续操作。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> is set to a number less than zero, an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> is thrown.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>是设置为一个数字小于零，<ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">以下控制台应用程序演示如何大容量加载数据使用已打开的连接。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>这样每个 50 行复制到表后，就会调用事件处理程序设置属性。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">在此示例中，使用的连接是首先从 SQL Server 表中读取数据<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Then a second connection is opened to bulk copy the data.</source>
          <target state="translated">然后打开第二个连接进行大容量复制数据。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">请注意，源数据不需要位于 SQL Server;你可以使用可以读取到任何数据源<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>或加载到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Occurs every time that the number of rows specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> property have been processed.</source>
          <target state="translated">在每次处理完 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /&gt;</ph> 属性指定的行数时发生。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the settings of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> are independent.</source>
          <target state="translated">请注意的设置<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>无关。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Receipt of a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event does not imply that any rows have been sent to the server or committed.</source>
          <target state="translated">接收<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>事件并不意味着已发送到服务器或提交的任何行。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>You cannot call SqlBulkCopy.Close (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) or SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) from this event.</source>
          <target state="translated">不能调用 SqlBulkCopy.Close (<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.Close%2A&gt;</ph>) 或 SqlConnection.Close (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>) 从此事件。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Doing this will cause an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown, and the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object state will not change.</source>
          <target state="translated">这将导致这样做<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>引发，则与<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>对象状态将不会更改。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the user wants to cancel the operation from the event, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph> can be used.</source>
          <target state="translated">如果用户想要取消事件，从操作<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs&gt;</ph>可用。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>(See <bpt id="p1">[</bpt>Transaction and Bulk Copy Operations<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept> for examples that use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property.)</source>
          <target state="translated">(请参阅<bpt id="p1">[</bpt>事务和批量复制操作<ept id="p1">](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)</ept>有关示例，请使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph>属性。)</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> event.</source>
          <target state="translated">任何操作，如事务活动支持大容量复制操作，在执行期间连接中，建议你不使用相同的连接过程中使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>However, you can open a different connection.</source>
          <target state="translated">但是，你可以打开不同的连接。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The following console application demonstrates how to bulk load data using a connection that is already open.</source>
          <target state="translated">以下控制台应用程序演示如何大容量加载数据使用已打开的连接。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph> property is set so that the event handler is called after every 50 rows copied to the table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A&gt;</ph>这样每个 50 行复制到表后，就会调用事件处理程序设置属性。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>In this example, the connection is first used to read data from a SQL Server table to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> instance.</source>
          <target state="translated">在此示例中，使用的连接是首先从 SQL Server 表中读取数据<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> or loaded to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">请注意，源数据不需要位于 SQL Server;你可以使用可以读取到任何数据源<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>或加载到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">`Dispose`</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 方法使 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">`Dispose`</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">`Dispose`</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Copies all rows from a data source to a destination table specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">将所有行从数据源复制到 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">如果多个活动结果集 (MARS) 将禁用，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>建立连接忙。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">如果启用了 MARS，你可以交错调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>与相同的连接中的其他命令。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">将所提供的 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 数组中的所有行复制到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">将复制到目标表的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>Copies all rows from the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">将所提供的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 数组中的所有行复制到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">大容量复制操作正在进行，关联的目标时<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>忙为它提供服务，并可以对连接执行任何其他操作。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> columns to the destination database table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>集合将映射从<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>到目标数据库表的列。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> array.</source>
          <target state="translated">以下控制台应用程序演示如何从大容量加载数据<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>数组。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">目标表是中的表<bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>数据库。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time.</source>
          <target state="translated">在此示例中，<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>在运行时创建。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>A single row is selected from the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> to copy to the destination table.</source>
          <target state="translated">从选择的单个行<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>将复制到目标表。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">将所提供的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中的所有行复制到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>All rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> are copied to the destination table except those that have been deleted.</source>
          <target state="translated">中的所有行<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>复制到目标表，已被删除的除外。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">大容量复制操作正在进行，关联的目标时<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>忙为它提供服务，并可以对连接执行任何其他操作。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>集合将映射从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到目标数据库表的列。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The following Console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序演示如何从大容量加载数据<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">目标表是中的表<bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>数据库。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and is the source of the <ph id="ph2">`SqlBulkCopy`</ph> operation.</source>
          <target state="translated">在此示例中，<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>在运行时创建，而且是的来源<ph id="ph2">`SqlBulkCopy`</ph>操作。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Copies all rows in the supplied <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">将所提供的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 中的所有行复制到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The copy operation starts at the next available row in the reader.</source>
          <target state="translated">复制操作开始读取器中的下一步可用行。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Most of the time, the reader was just returned by <ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> or a similar call, so the next available row is the first row.</source>
          <target state="translated">大多数情况下，仅返回了读取器<ph id="ph1">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph>或类似的调用，因此下一可用行是第一行。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>To process multiple results, call <ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph> on the data reader and call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> again.</source>
          <target state="translated">若要处理多个结果，调用<ph id="ph1">&lt;xref:System.Data.IDataReader.NextResult%2A&gt;</ph>上的数据读取器和调用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>试。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>Note that using <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> modifies the state of the reader.</source>
          <target state="translated">请注意，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>修改读取器的状态。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The method will call <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> until it returns false, the operation is aborted, or an error occurs.</source>
          <target state="translated">该方法将调用<ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph>直至指定，返回 false，中止该操作时，或发生错误。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This means that the data reader will be in a different state, probably at the end of the result set, when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> operation is complete.</source>
          <target state="translated">这意味着数据读取器将在不同的状态下，可能在该结果集末尾时<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>操作已完成。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">大容量复制操作正在进行，关联的目标时<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>忙为它提供服务，并可以对连接执行任何其他操作。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the data reader columns to the destination database table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>集合从数据读取器列映射到目标数据库表。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The following console application demonstrates how to bulk load data from a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序演示如何从大容量加载数据<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">目标表是中的表<bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>数据库。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 枚举中的一个值。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">只有与行状态匹配的行才会复制到目标中。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Copies only rows that match the supplied row state in the supplied <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated">只将与所提供 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中所提供行状态匹配的行复制到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that are in the states indicated in the <ph id="ph2">`rowState`</ph> argument and have not been deleted are copied to the destination table.</source>
          <target state="translated">仅行<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>中所示的状态<ph id="ph2">`rowState`</ph>自变量，并且不删除复制到目标表。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If <ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph> is specified, any <ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph> rows will also be copied to the server.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.DataRowState.Deleted&gt;</ph>指定，则任何<ph id="ph2">&lt;xref:System.Data.DataRowState.Unchanged&gt;</ph>， <ph id="ph3">&lt;xref:System.Data.DataRowState.Added&gt;</ph>，和<ph id="ph4">&lt;xref:System.Data.DataRowState.Modified&gt;</ph>行也将被复制到服务器。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>No exception will be raised.</source>
          <target state="translated">将不引发任何异常。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>While the bulk copy operation is in progress, the associated destination <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is busy serving it, and no other operations can be performed on the connection.</source>
          <target state="translated">大容量复制操作正在进行，关联的目标时<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>忙为它提供服务，并可以对连接执行任何其他操作。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection maps from the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columns to the destination database table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph>集合将映射从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到目标数据库表的列。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The following Console application demonstrates how to bulk load only the rows in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that match a specified state.</source>
          <target state="translated">以下控制台应用程序演示如何大容量加载中的行<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>的匹配指定的状态。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this case, only unchanged rows are added.</source>
          <target state="translated">在这种情况下，添加仅未更改的行。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The destination table is a table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> database.</source>
          <target state="translated">目标表是中的表<bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>数据库。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>In this example, a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created at run time and three rows are added to it.</source>
          <target state="translated">在此示例中，<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>创建在运行的时和三个行添加到它。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>Before the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is executed, one of the rows is edited.</source>
          <target state="translated">之前<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>执行方法，某一行的编辑。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called with a <ph id="ph2">`DataRowState.Unchanged`</ph> <ph id="ph3">`rowState`</ph> argument, so only the two unchanged rows are bulk copied to the destination.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>方法调用与<ph id="ph2">`DataRowState.Unchanged`</ph><ph id="ph3">`rowState`</ph>自变量，因此，只有两个未更改的行是大容量复制到目标。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">除非你已创建了工作表中所述，将不会运行此示例<bpt id="p1">[</bpt>批量复制示例设置<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">提供此代码是为了演示使用的语法<bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept>仅。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">如果源和目标表都在相同的 SQL Server 实例，它将更加容易和快速使用 Transact SQL<ph id="ph1">`INSERT … SELECT`</ph>语句复制数据。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph>, which copies all rows from a data source to a destination table specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /&gt;</ph> 的异步版本，将数据源中的所有行都复制到目标表中。该目标表由 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 指定。 </target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If multiple active result sets (MARS) is disabled, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> makes the connection busy.</source>
          <target state="translated">如果多个活动结果集 (MARS) 将禁用，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>建立连接忙。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If MARS is enabled, you can interleave calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> with other commands in the same connection.</source>
          <target state="translated">如果启用了 MARS，你可以交错调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph>与相同的连接中的其他命令。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The number of rows that are rolled back when one fails depends on several things:</source>
          <target state="translated">当一项操作失败时回滚的行数取决于几件事情：</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is specified.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph>指定。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If you have your own transaction.</source>
          <target state="translated">如果你有自己的事务。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>The value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>When there is an error while sending data to the server, the current batch (as specified by <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) will be rolled back.</source>
          <target state="translated">在将数据发送到服务器，当前批次时没有错误时 (所指定的<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A&gt;</ph>) 将被回滚。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction&gt;</ph>未指定并且你有自己的事务，整个事务将回滚 （其中包括所有以前批次也）。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopy">
          <source>Use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph> to know how many rows were copied to the server.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>须知多少行被复制到服务器。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph> 的异步版本，将 <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 数组中提供的所有行都复制到由 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">将复制到目标表的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> 的异步版本，将 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 数组中提供的所有行都复制到由 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> 执行期间，连接中断或在数据检索期间已关闭。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">在任务对象中返回，方法执行期间，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">在任务对象中返回后存在连接池超时。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">在任务对象中返回，方法执行前，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> 的异步版本，将 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中提供的所有行都复制到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> 执行期间，连接中断或在数据检索期间已关闭。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">在任务对象中返回，方法执行期间，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">在任务对象中返回后存在连接池超时。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">在任务对象中返回，方法执行前，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> 的异步版本，将 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 中提供的所有行都复制到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> 执行期间，连接中断或在数据检索期间已关闭。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">在任务对象中返回，方法执行期间，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">在任务对象中返回后存在连接池超时。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">在任务对象中返回，方法执行前，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 返回之前， <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 返回之前，与 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> 相关的连接已关闭。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>.</source>
          <target state="translated">此参数中的 <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 值让方法等效于 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /&gt;</ph> 的异步版本，将 <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 数组中提供的所有行都复制到由 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that will be copied to the destination table.</source>
          <target state="translated">将复制到目标表的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">此参数中的 <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 值让方法等效于 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>, which copies all rows from the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> array to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> 的异步版本，将 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 数组中提供的所有行都复制到由 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> execution.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /&gt;</ph> 执行期间，连接中断或在数据检索期间已关闭。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">在任务对象中返回，方法执行期间，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">在任务对象中返回后存在连接池超时。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">在任务对象中返回，方法执行前，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 枚举中的一个值。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">只有与行状态匹配的行才会复制到目标中。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> 的异步版本，之间与 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中所提供行状态匹配的行复制到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性中指定的目标表中。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> 执行期间，连接中断或在数据检索期间已关闭。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">在任务对象中返回，方法执行期间，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">在任务对象中返回后存在连接池超时。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">在任务对象中返回，方法执行前，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">此参数中的 <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 值让方法等效于 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> 的异步版本，将 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中提供的所有行都复制到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> execution.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph> 执行期间，连接中断或在数据检索期间已关闭。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">在任务对象中返回，方法执行期间，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">在任务对象中返回后存在连接池超时。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">在任务对象中返回，方法执行前，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">此参数中的 <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 值让方法等效于 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>, which copies all rows in the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> 的异步版本，将 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 中提供的所有行都复制到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性指定的目标表中。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> execution.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /&gt;</ph> 执行期间，连接中断或在数据检索期间已关闭。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">在任务对象中返回，方法执行期间，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">在任务对象中返回后存在连接池超时。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">在任务对象中返回，方法执行前，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 返回之前， <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>'s associated connection was closed before the completed <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> returned.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 返回之前，与 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> 相关的连接已关闭。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose rows will be copied to the destination table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，它的行将被复制到目标表中。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 枚举中的一个值。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Only rows matching the row state are copied to the destination.</source>
          <target state="translated">只有与行状态匹配的行才会复制到目标中。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> value in this parameter makes this method equivalent to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>.</source>
          <target state="translated">此参数中的 <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> 值让方法等效于 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>, which copies only rows that match the supplied row state in the supplied <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a destination table specified by the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> 的异步版本，之间与 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中所提供行状态匹配的行复制到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /&gt;</ph> 对象的 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 属性中指定的目标表中。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> multiple times for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> for the same instance before task completion.</source>
          <target state="translated">在任务完成之前为同一个实例调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>The connection drops or is closed during <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> execution.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /&gt;</ph> 执行期间，连接中断或在数据检索期间已关闭。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> object was closed during the method execution.</source>
          <target state="translated">在任务对象中返回，方法执行期间，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, there was a connection pool timeout.</source>
          <target state="translated">在任务对象中返回后存在连接池超时。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object is closed before method execution.</source>
          <target state="translated">在任务对象中返回，方法执行前，<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 对象处于关闭状态。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)">
          <source>Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>