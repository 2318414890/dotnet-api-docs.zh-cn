<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c83c563de4e2500f12149fe24a87813d206f6765" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37672008" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <TypeSignature Language="F#" Value="type SqlDependency = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The <see cref="T:System.Data.SqlClient.SqlDependency" /> object represents a query notification dependency between an application and an instance of SQL Server. An application can create a <see cref="T:System.Data.SqlClient.SqlDependency" /> object and register to receive notifications via the <see cref="T:System.Data.SqlClient.OnChangeEventHandler" /> event handler.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> 非常适合于缓存的方案，其中您的 ASP.NET 应用程序或中间层服务需要在内存中保留某些缓存的信息。 <xref:System.Data.SqlClient.SqlDependency> 可以在数据库中的原始数据更改，以便可以刷新缓存时接收通知。  
  
 若要设置依赖关系，您需要将相关联<xref:System.Data.SqlClient.SqlDependency>对象与一个或多个<xref:System.Data.SqlClient.SqlCommand>对象。 若要接收通知，你需要订阅<xref:System.Data.SqlClient.SqlDependency.OnChange>事件。 有关用于创建查询通知要求的详细信息，请参阅"创建查询的通知"SQL Server 联机丛书中。  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency> 用于在 ASP.NET 或中间层服务而设计的相对较少的服务器时针对该数据库处于活动状态的依赖项。 它没有设计为在客户端应用程序，会有数百或数千个客户端计算机中使用<xref:System.Data.SqlClient.SqlDependency>为单个数据库服务器设置的对象。 如果你正在开发一个应用程序数据发生更改时需要可靠的次秒级通知，查看各节**规划高效的查询通知策略**和**查询的替代方法通知**中[制定通知计划](http://go.microsoft.com/fwlink/?LinkId=211984)SQL Server 联机丛书中的主题。  
  
 有关详细信息，请参阅[SQL Server 中的查询通知](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md)和 SQL Server 联机丛书中的"构建通知解决方案"。  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency.OnChange>可能与启动命令执行的线程不同的线程上生成事件。  
  
 仅对满足一系列特定需求的 SELECT 语句支持查询通知。 下表提供指向“SQL Server 联机丛书”中的 Service Broker 和“查询通知”文档的链接。  
  
 **SQL Server 联机丛书**  
  
-   [为通知创建查询](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Service Broker 的安全注意事项](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [安全和保护 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Notification Services 的安全注意事项](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [查询通知权限](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Service broker 的国际化注意事项](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [解决方案设计注意事项 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker 开发人员信息中心](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [开发人员指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class with the default settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数初始化<xref:System.Data.SqlClient.SqlDependency>对象使用默认 Service Broker 服务名和超时。在构造之后的某个位置，必须使用<xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>方法对此的一个或多个命令相关联<xref:System.Data.SqlClient.SqlDependency>对象。  
  
 仅对满足一系列特定需求的 SELECT 语句支持查询通知。 下表提供指向“SQL Server 联机丛书”中的 Service Broker 和“查询通知”文档的链接。  
  
 **SQL Server 联机丛书**  
  
-   [为通知创建查询](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Service Broker 的安全注意事项](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [安全和保护 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Notification Services 的安全注意事项](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [查询通知权限](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Service broker 的国际化注意事项](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [解决方案设计注意事项 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker 开发人员信息中心](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [开发人员指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object. The constructor will set up a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.</param>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class and associates it with the <see cref="T:System.Data.SqlClient.SqlCommand" /> parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在内部，此构造函数创建的实例<xref:System.Data.Sql.SqlNotificationRequest>类，并将其绑定到<xref:System.Data.SqlClient.SqlCommand>对象。  
  
 仅对满足一系列特定需求的 SELECT 语句支持查询通知。 下表提供指向“SQL Server 联机丛书”中的 Service Broker 和“查询通知”文档的链接。  
  
 **SQL Server 联机丛书**  
  
-   [为通知创建查询](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Service Broker 的安全注意事项](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [安全和保护 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Notification Services 的安全注意事项](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [查询通知权限](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Service broker 的国际化注意事项](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [解决方案设计注意事项 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker 开发人员信息中心](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [开发人员指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlDependency : System.Data.SqlClient.SqlCommand * string * int -&gt; System.Data.SqlClient.SqlDependency" Usage="new System.Data.SqlClient.SqlDependency (command, options, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to associate with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object. The constructor sets up a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object and bind it to the command.</param>
        <param name="options">The notification request options to be used by this dependency.  <c>null</c> to use the default service.</param>
        <param name="timeout">The time-out for this notification in seconds. The default is 0, indicating that the server's time-out should be used.</param>
        <summary>Creates a new instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class, associates it with the <see cref="T:System.Data.SqlClient.SqlCommand" /> parameter, and specifies notification options and a time-out value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅对满足一系列特定需求的 SELECT 语句支持查询通知。 下表提供指向“SQL Server 联机丛书”中的 Service Broker 和“查询通知”文档的链接。  
  
 **SQL Server 联机丛书**  
  
-   [为通知创建查询](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Service Broker 的安全注意事项](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [安全和保护 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Notification Services 的安全注意事项](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [查询通知权限](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Service broker 的国际化注意事项](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [解决方案设计注意事项 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker 开发人员信息中心](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [开发人员指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The time-out value is less than zero.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.  An attempt was made to create a **SqlDependency** instance from within SQLCLR.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.AddCommandDependency : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlDependency.AddCommandDependency command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">A <see cref="T:System.Data.SqlClient.SqlCommand" /> object containing a statement that is valid for notifications.</param>
        <summary>Associates a <see cref="T:System.Data.SqlClient.SqlCommand" /> object with this <see cref="T:System.Data.SqlClient.SqlDependency" /> instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅对满足一系列特定需求的 SELECT 语句支持查询通知。 下表提供指向“SQL Server 联机丛书”中的 Service Broker 和“查询通知”文档的链接。  
  
 **SQL Server 联机丛书**  
  
-   [为通知创建查询](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Service Broker 的安全注意事项](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [安全和保护 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Notification Services 的安全注意事项](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [查询通知权限](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Service broker 的国际化注意事项](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [解决方案设计注意事项 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Service Broker 开发人员信息中心](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [开发人员指南 (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> parameter is null.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object already has a <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object assigned to its <see cref="P:System.Data.SqlClient.SqlCommand.Notification" /> property, and that <see cref="T:System.Data.Sql.SqlNotificationRequest" /> is not associated with this dependency.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanges : bool" Usage="System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether one of the result sets associated with the dependency has changed.</summary>
        <value>一个布尔值，该值指示是否将结果之一设置已更改。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果不使用<xref:System.Data.SqlClient.SqlDependency.OnChange>事件，可以检查<xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>属性以确定是否已更改查询结果。  
  
 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>属性不一定意味着数据中的更改。 其他情况下，例如超时过期，若要设置通知请求的失败也会生成更改事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Data.SqlClient.SqlDependency.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that uniquely identifies this instance of the <see cref="T:System.Data.SqlClient.SqlDependency" /> class.</summary>
        <value>为每个实例生成的 GUID 的字符串表示形式<see cref="T:System.Data.SqlClient.SqlDependency" />类。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Id%2A>属性用于唯一地标识给定<xref:System.Data.SqlClient.SqlDependency>实例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberSignature Language="F#" Value="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " Usage="member this.OnChange : System.Data.SqlClient.OnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a notification is received for any of the commands associated with this <see cref="T:System.Data.SqlClient.SqlDependency" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> 关联的命令的结果更改时发生。 如果不使用<xref:System.Data.SqlClient.SqlDependency.OnChange>，可以检查<xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>属性以确定是否已更改查询结果。  
  
 <xref:System.Data.SqlClient.SqlDependency.OnChange>事件不一定意味着数据中的更改。 其他情况下，如超时已过期，并且未能设置通知请求，还生成<xref:System.Data.SqlClient.SqlDependency.OnChange>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Starts the listener for receiving dependency change notifications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency>中 SQL Server 连接发生错误时，将重新启动侦听器。  
  
 多次调用<xref:System.Data.SqlClient.SqlDependency.Start%2A>方法可以进行，有以下限制：  
  
-   使用相同的参数 （相同的连接字符串和调用的线程中的 Windows 凭据） 的多个调用都有效。  
  
-   多个调用使用不同的连接字符串是有效的只要：  
  
    -   每个连接字符串指定不同的数据库，或  
  
    -   每个连接字符串指定不同的用户，或  
  
    -   该调用来自不同应用程序域。  
  
 可以使<xref:System.Data.SqlClient.SqlDependency>都正确可以为使用多个线程来表示不同的用户凭据，而无需因为不同的用户可以订阅和侦听到的组授予 dbo 角色的应用程序 (使用<xref:System.Web.Caching.SqlCacheDependency>或<xref:System.Data.SqlClient.SqlCommand>)到由管理员创建的通知队列。 相关的应用程序域在启动时，调用具有初始化服务/队列 （CREATE QUEUE 和创建服务数据库访问权限） 的权限的用户 (Windows) 凭据启动。 请确保每个 AppDomain，否则二义性会引发的异常后仅调用 Start。  在用户线程必须有权订阅通知 （数据库的 SUBSCRIBE QUERY NOTIFICATIONS 权限）。 <xref:System.Data.SqlClient.SqlDependency> 将关联到服务/队列由管理员创建的非管理员用户的订阅请求。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Start : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the instance of SQL Server from which to obtain change notifications.</param>
        <summary>Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string.</summary>
        <returns>**true** if the listener initialized successfully; **false** if a compatible listener already exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法启动的侦听器<xref:System.AppDomain>用于接收从通过指定的 SQL Server 实例的依赖关系通知`connectionString`参数。 调用此方法可能会超过一次使用不同的连接字符串的多个服务器。  
  
 有关其他备注，请参阅<xref:System.Data.SqlClient.SqlDependency.Start%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.  The method was called from within the CLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter with a different user, or a user that does not default to the same schema.  Also, any underlying **SqlClient** exceptions.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Start : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Start (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string for the instance of SQL Server from which to obtain change notifications.</param>
        <param name="queue">An existing SQL Server Service Broker queue to be used. If <see langword="null" />, the default queue is used.</param>
        <summary>Starts the listener for receiving dependency change notifications from the instance of SQL Server specified by the connection string using the specified SQL Server Service Broker queue.</summary>
        <returns>**true** if the listener initialized successfully; **false** if a compatible listener already exists.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法启动的侦听器<xref:System.AppDomain>用于接收从通过指定的 SQL Server 实例的依赖关系通知`connectionString`参数。 调用此方法可能会超过一次使用不同的连接字符串的多个服务器。  
  
 如果指定没有队列名称，则<xref:System.Data.SqlClient.SqlDependency>用于整个进程，进程服务器中创建临时队列和服务，即使过程涉及多个<xref:System.AppDomain>。 在应用程序关闭后会自动删除的队列和服务。  
  
 有关其他备注，请参阅<xref:System.Data.SqlClient.SqlDependency.Start%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The <paramref name="connectionString" /> parameter is the same as a previous call to this method, but the parameters are different.  The method was called from within the CLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">A subsequent call to the method has been made with an equivalent <paramref name="connectionString" /> parameter but a different user, or a user that does not default to the same schema.  Also, any underlying **SqlClient** exceptions.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency>中 SQL Server 连接发生错误时，将重新启动侦听器。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="static member Stop : string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop connectionString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string for the instance of SQL Server that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" /> call.</param>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <returns>**true** if the listener was completely stopped; **false** if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there are is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A>必须为每个调用方法<xref:System.Data.SqlClient.SqlDependency.Start%2A>调用。 给定的侦听器只能关闭完全在接收相同数量的<xref:System.Data.SqlClient.SqlDependency.Stop%2A>请求作为<xref:System.Data.SqlClient.SqlDependency.Start%2A>请求。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The method was called from within SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">An underlying **SqlClient** exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberSignature Language="F#" Value="static member Stop : string * string -&gt; bool" Usage="System.Data.SqlClient.SqlDependency.Stop (connectionString, queue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string for the instance of SQL Server that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.</param>
        <param name="queue">The SQL Server Service Broker queue that was used in a previous <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" /> call.</param>
        <summary>Stops a listener for a connection specified in a previous <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" /> call.</summary>
        <returns>**true** if the listener was completely stopped; **false** if the <see cref="T:System.AppDomain" /> was unbound from the listener, but there is at least one other <see cref="T:System.AppDomain" /> using the same listener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A>必须为每个调用方法<xref:System.Data.SqlClient.SqlDependency.Start%2A>调用。 给定的侦听器只能关闭完全在接收相同数量的<xref:System.Data.SqlClient.SqlDependency.Stop%2A>请求作为<xref:System.Data.SqlClient.SqlDependency.Start%2A>请求。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="connectionString" /> parameter is NULL.</exception>
        <exception cref="T:System.InvalidOperationException">The method was called from within SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required <see cref="T:System.Data.SqlClient.SqlClientPermission" /> code access security (CAS) permission.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">And underlying **SqlClient** exception occurred.</exception>
      </Docs>
    </Member>
  </Members>
</Type>