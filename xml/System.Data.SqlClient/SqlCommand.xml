<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlCommand.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15bcd8d714b76bdd9eadda8ef4611395116df7bc44.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcd8d714b76bdd9eadda8ef4611395116df7bc44</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database.</source>
          <target state="translated">表示要对 SQL Server 数据库执行的一个 Transact-SQL 语句或存储过程。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the read/write properties are set to their initial values.</source>
          <target state="translated">实例时<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>创建读/写属性设置为其初始值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> constructor.</source>
          <target state="translated">有关这些值的列表，请参阅<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> features the following methods for executing commands at a SQL Server database:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 功能用于执行命令在 SQL Server 数据库的以下方法：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Item</source>
          <target state="translated">项</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements.</source>
          <target state="translated">启动的 TRANSACT-SQL 语句或由此所述的存储的过程的异步执行<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，通常执行命令，例如插入、 删除、 更新，并设置语句。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> must be paired with a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> which finishes the operation, typically on a separate thread.</source>
          <target state="translated">每次调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>必须成对使用，通过调用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>完成操作，通常在单独线程上的。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and retrieves one or more results sets from the server.</source>
          <target state="translated">启动的 TRANSACT-SQL 语句或由此所述的存储的过程的异步执行<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>和一个或多个结果设置从服务器检索。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> must be paired with a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> which finishes the operation, typically on a separate thread.</source>
          <target state="translated">每次调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>必须成对使用，通过调用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>完成操作，通常在单独线程上的。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">启动此 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">`BeginExecuteXmlReader`</ph> must be paired with a call to <ph id="ph2">`EndExecuteXmlReader`</ph>, which finishes the operation, typically on a separate thread, and returns an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">每次调用<ph id="ph1">`BeginExecuteXmlReader`</ph>必须成对使用，通过调用<ph id="ph2">`EndExecuteXmlReader`</ph>，其完成此操作，通常出现在单独的线程，并返回<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Executes commands that return rows.</source>
          <target state="translated">执行返回行的命令。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For increased performance, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> invokes commands using the Transact-SQL <ph id="ph2">`sp_executesql`</ph> system stored procedure.</source>
          <target state="translated">为了提高性能，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>调用命令使用 Transact SQL<ph id="ph2">`sp_executesql`</ph>系统存储过程。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>可能没有所需如果使用效果执行如 TRANSACT-SQL SET 语句的命令。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.</source>
          <target state="translated">执行命令，例如 Transact SQL INSERT、 DELETE、 更新和一组语句。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Retrieves a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">从数据库中检索单个值 （例如，一个聚合值）。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Sends the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> and builds an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">将 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 发送到 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>，并生成一个 <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>You can reset the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property and reuse the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated">你可以重置<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>属性和重复使用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>However, you must close the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> before you can execute a new or previous command.</source>
          <target state="translated">但是，你必须关闭<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>便可以执行新的或以前的命令之前。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>If a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>生成的方法执行<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>保持打开状态时的严重性级别为 19 或以下。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>When the severity level is 20 or greater, the server ordinarily closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">等于或大于 20 的严重性级别时，服务器通常会关闭<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">但是，用户可以重新打开连接并继续操作。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.</source>
          <target state="translated">无名称，也称为序号，参数不支持.NET Framework 数据提供程序为 SQL Server。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and a <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，和一个<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The example reads through the data, writing it to the console.</source>
          <target state="translated">该示例读取到的数据，并写入控制台。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Finally, the example closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and then the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> as it exits the <ph id="ph3">`Using`</ph> code blocks.</source>
          <target state="translated">最后，该示例关闭<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>然后<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>如退出<ph id="ph3">`Using`</ph>代码块。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The following sample shows how to create and execute different types of SqlCommand objects.</source>
          <target state="translated">下面的示例演示如何创建和执行不同类型的 SqlCommand 对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>First you must create the sample database, by executing the following script:</source>
          <target state="translated">首先必须通过执行以下脚本创建示例数据库：</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Next, compile and execute the following:</source>
          <target state="translated">接下来，编译并执行以下：</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The base constructor initializes all fields to their default values.</source>
          <target state="translated">基构造函数初始化为其默认值的所有字段。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">下表显示的实例的初始属性值<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Properties</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Initial value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>empty string ("")</source>
          <target state="translated">空字符串 ("")</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Null</source>
          <target state="translated">null</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">你可以更改任何通过单独属性调用这些属性的值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets the <ph id="ph2">`CommandTimeout`</ph> property.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>和设置<ph id="ph2">`CommandTimeout`</ph>属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>The text of the query.</source>
          <target state="translated">查询的文本。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query.</source>
          <target state="translated">使用查询的文本初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the following read/write properties are set to initial values.</source>
          <target state="translated">实例时<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>创建以下读/写属性设置为初始值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Properties</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Initial value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>null</source>
          <target state="translated">null</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">你可以更改任何通过单独属性调用这些属性的值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, passing in the connection string and command text.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，并传入的连接字符串和命令文本。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The text of the query.</source>
          <target state="translated">查询的文本。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">表示到 SQL Server 实例的连接的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query and a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">使用查询的文本和 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">下表显示的实例的初始属性值<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Properties</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Initial value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>A new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
          <target state="translated">一个新<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>即的值<ph id="ph2">`connection`</ph>参数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>You can change the value for any of these parameters by setting the related property.</source>
          <target state="translated">可以通过设置相关的属性来更改任何这些参数的值。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>并设置其属性的一些。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The text of the query.</source>
          <target state="translated">查询的文本。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">表示到 SQL Server 实例的连接的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> in which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated">其中执行 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query, a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, and the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>.</source>
          <target state="translated">使用查询文本、<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 以及 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> 初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">下表显示的实例的初始属性值<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Properties</source>
          <target state="translated">属性</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Initial value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>A new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
          <target state="translated">一个新<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>即的值<ph id="ph2">`connection`</ph>参数。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>You can change the value for any of these parameters by setting the related property.</source>
          <target state="translated">可以通过设置相关的属性来更改任何这些参数的值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The text of the query.</source>
          <target state="translated">查询的文本。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">表示到 SQL Server 实例的连接的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> in which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated">其中执行 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The encryption setting.</source>
          <target state="translated">加密设置。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>For more information, see <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>始终加密<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with specified command text, connection, transaction, and encryption setting.</source>
          <target state="translated">使用指定的命令文本、连接、事务和加密设置初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, which returns the number of affected rows.</source>
          <target state="translated">可用于轮询和/或等待结果的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>；当调用可返回受影响的行数的 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> 时，也需要该值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>方法开始以异步方式执行的过程<ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>语句或存储的过程不会返回行，以便执行该语句的同时，可以运行其他任务。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.</source>
          <target state="translated">完成该语句后，开发人员必须调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>方法以完成该操作。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>方法会立即返回 (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>不起任何作用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>)，但直到执行相应的代码<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>方法调用中，它不能执行开始同步或异步执行的任何其他调用针对相同<ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>命令执行已完成的原因之前<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象进行阻止，直到执行完毕。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">请注意，将命令文本和参数发送到服务器以同步方式。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">如果发送较大的命令或多个参数，此方法可能会阻止在写入期间。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">发送命令，该方法将立即返回而不等待从服务器--答案之后，即读取是异步的。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">由于此重载不支持回调过程，开发人员必须任一轮询，以确定是否已完成该命令，使用<ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>返回<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>方法; 或等待完成一个或多个命令使用<ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph>属性返回的<ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The following console application creates updates data within the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database, doing its work asynchronously.</source>
          <target state="translated">以下控制台应用程序创建中的更新数据<bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept>示例数据库，以异步方式执行其工作。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text.</source>
          <target state="translated">为了模拟长时间运行的进程，此示例在命令文本中插入一个 WAITFOR 语句。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.</source>
          <target state="translated">通常情况下，您将不进行努力使命令运行速度变慢，但执行此操作在这种情况下更容易地演示异步行为。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">执行命令文本时出现的任何错误。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">名称/值对“Asynchronous Processing=true”未包含在为此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 定义连接的连接字符串中。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">命令执行完成时调用的 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">传递 <ph id="ph1">&lt;see langword="null" /&gt;</ph>（在 Microsoft Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）以指示不需要回调。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">传递到回调过程的用户定义的状态对象。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> 属性从回调过程内检索此对象。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, given a callback procedure and state information.</source>
          <target state="translated">在给定回调过程和状态信息的情况下，启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, which returns the number of affected rows.</source>
          <target state="translated">可用于轮询和/或等待结果的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>；当调用可返回受影响的行数的 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> 时，也需要该值。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>方法开始以异步方式执行的 TRANSACT-SQL 语句或存储的过程不会返回行，以便执行该语句的同时，可以运行其他任务的过程。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.</source>
          <target state="translated">完成该语句后，开发人员必须调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>方法以完成该操作。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>方法会立即返回 (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>不起任何作用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>)，但直到执行相应的代码<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>方法调用中，它不能执行开始同步或异步执行的任何其他调用针对相同<ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>命令执行已完成的原因之前<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象进行阻止，直到执行完毕。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph>参数允许你指定<ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph>语句已完成时调用的委托。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>方法从该委托过程内或从你的应用程序内的任何其他位置。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`asyncStateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">此外，你可以通过中的任何对象<ph id="ph1">`asyncStateObject`</ph>参数，并且你回调过程可以检索此信息使用<ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">请注意，将命令文本和参数发送到服务器以同步方式。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">如果发送较大的命令或多个参数，此方法可能会阻止在写入期间。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">发送命令，该方法将立即返回而不等待从服务器--答案之后，即读取是异步的。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">由于回调过程从 Microsoft.NET 公共语言运行时提供的后台线程中执行，它是非常重要采用严格的措施来处理你的应用程序内的跨线程交互。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">例如，你必须不与交互窗体的内容从回调过程; 内你必须将窗体更新，你必须切换回窗体的线程以完成工作。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">本主题中的示例演示此行为。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">在执行操作期间发生的所有错误在回调过程中作为异常都引发。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">你必须处理的异常回调过程中，而不是在主应用程序。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">在回调过程中处理异常，请参阅本主题的其他信息的示例。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).</source>
          <target state="translated">下面的 Windows 应用程序演示如何使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>方法，执行 TRANSACT-SQL 语句包含 （模拟长时间运行的命令） 的有几秒钟的延迟。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">此示例演示了许多重要的技术。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">这包括调用与从单独的线程窗体交互的方法。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">此外，此示例演示如何必须阻止用户在执行命令多次并发，且你如何必须确保窗体不会关闭在回调过程之前调用。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">要设置此示例，应新建一个 Windows 应用程序。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">Put<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件和<ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>窗体 （接受每个控件的默认名称） 上的控件。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">将以下代码添加到窗体的类，根据需要为你的环境修改连接字符串。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">执行命令文本时出现的任何错误。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">名称/值对“Asynchronous Processing=true”未包含在为此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 定义连接的连接字符串中。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, and retrieves one or more result sets from the server.</source>
          <target state="translated">启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行，并从服务器中检索一个或多个结果集。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, and retrieves one or more result sets from the server.</source>
          <target state="translated">启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行，并从服务器中检索一个或多个结果集。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance that can be used to retrieve the returned rows.</source>
          <target state="translated">可用于轮询和/或等待结果的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>；当调用 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>（返回一个可用于检索返回行的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 实例）时，也需要该值。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法开始以异步方式执行的 TRANSACT-SQL 语句或存储的过程返回行，以便执行该语句的同时，可以运行其他任务的过程。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">完成该语句后，开发人员必须调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法以完成该操作并检索<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>命令返回。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法立即返回，但直到执行相应的代码<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法调用中，它不能执行开始针对相同同步或异步执行的任何其他调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>命令执行已完成的原因之前<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象进行阻止，直到执行完毕。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">请注意，将命令文本和参数发送到服务器以同步方式。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">如果发送较大的命令或多个参数，此方法可能会阻止在写入期间。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">发送命令，该方法将立即返回而不等待从服务器--答案之后，即读取是异步的。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">尽管命令执行是异步的但获取值的操作仍然是同步的。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">这意味着，在调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph>五月阻止是否需要更多的数据和基础网络的读取操作块。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">由于此重载不支持回调过程，开发人员必须任一轮询，以确定是否已完成该命令，使用<ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>返回<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法; 或等待完成一个或多个命令使用<ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph>属性返回的<ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 将返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The following console application starts the process of retrieving a data reader asynchronously.</source>
          <target state="translated">以下控制台应用程序开始以异步方式检索数据读取器的过程。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">在等待结果，此简单的应用程序位于在循环中调查<ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>As soon as the process has completed, the code retrieves the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and displays its contents.</source>
          <target state="translated">一旦该进程完成后，此代码会检索<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>并显示其内容。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">执行命令文本时出现的任何错误。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">名称/值对“Asynchronous Processing=true”未包含在为此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 定义连接的连接字符串中。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values, indicating options for statement execution and data retrieval.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一，指示用于语句执行和数据检索的选项。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> using one of the <ph id="ph2">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 值之一，启动此 <ph id="ph2">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance that can be used to retrieve the returned rows.</source>
          <target state="translated">可用于轮询和/或等待结果的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>；当调用 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>（返回一个可用于检索返回行的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 实例）时，也需要该值。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法开始以异步方式执行的 TRANSACT-SQL 语句或存储的过程返回行，以便执行该语句的同时，可以运行其他任务的过程。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">完成该语句后，开发人员必须调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法以完成该操作并检索<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>命令返回。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法立即返回，但直到执行相应的代码<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法调用中，它不能执行开始针对相同同步或异步执行的任何其他调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>命令执行已完成的原因之前<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象进行阻止，直到执行完毕。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.</source>
          <target state="translated"><ph id="ph1">`behavior`</ph>参数允许你指定用于控制命令和其连接的行为的选项。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>These values can be combined together (using the programming language's <ph id="ph1">`OR`</ph> operator); generally, developers use the <ph id="ph2">`CommandBehavior.CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.</source>
          <target state="translated">这些值可以组合在一起 (使用的编程语言<ph id="ph1">`OR`</ph>运算符); 通常情况下，开发人员使用<ph id="ph2">`CommandBehavior.CloseConnection`</ph>值以确认连接已由运行时关闭时<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>已关闭。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">请注意，将命令文本和参数发送到服务器以同步方式。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">如果发送较大的命令或多个参数，此方法可能会阻止在写入期间。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">发送命令，该方法将立即返回而不等待从服务器--答案之后，即读取是异步的。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">尽管命令执行是异步的但获取值的操作仍然是同步的。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">这意味着，在调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph>五月阻止是否需要更多的数据和基础网络的读取操作块。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">由于此重载不支持回调过程，开发人员必须任一轮询，以确定是否已完成该命令，使用<ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>返回<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>方法; 或等待完成一个或多个命令使用<ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph>属性返回的<ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The following console application starts the process of retrieving a data reader asynchronously.</source>
          <target state="translated">以下控制台应用程序开始以异步方式检索数据读取器的过程。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">在等待结果，此简单的应用程序位于在循环中调查<ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Once the process has completed, the code retrieves the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and displays its contents.</source>
          <target state="translated">过程完成后，此代码会检索<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>并显示其内容。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>This example also passes the <ph id="ph1">`CommandBehavior.CloseConnection`</ph> and <ph id="ph2">`CommandBehavior.SingleRow`</ph> values in the behavior parameter, causing the connection to be closed with the returned <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed, and to optimize for a single row result.</source>
          <target state="translated">此示例还将传递<ph id="ph1">`CommandBehavior.CloseConnection`</ph>和<ph id="ph2">`CommandBehavior.SingleRow`</ph>行为参数，从而导致要关闭连接中的值与返回<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>已关闭，并优化为单行结果。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">执行命令文本时出现的任何错误。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">名称/值对“Asynchronous Processing=true”未包含在为此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 定义连接的连接字符串中。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">命令执行完成时调用的 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">传递 <ph id="ph1">&lt;see langword="null" /&gt;</ph>（在 Microsoft Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）以指示不需要回调。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">传递到回调过程的用户定义的状态对象。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> 属性从回调过程内检索此对象。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and retrieves one or more result sets from the server, given a callback procedure and state information.</source>
          <target state="translated">如果提供回调过程和状态信息，则启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行，并从服务器中检索一个或多个结果集。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance which can be used to retrieve the returned rows.</source>
          <target state="translated">可用于轮询和/或等待结果的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>；当调用 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>（返回一个可用于检索返回行的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 实例）时，也需要该值。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法开始以异步方式执行的 TRANSACT-SQL 语句或存储的过程返回行，以便执行该语句的同时，可以运行其他任务的过程。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">完成该语句后，开发人员必须调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法以完成该操作并检索<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>命令返回。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法立即返回，但直到执行相应的代码<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法调用中，它不能执行开始针对相同同步或异步执行的任何其他调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed cause the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>命令执行完毕之前原因<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象进行阻止，直到执行完毕。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph>参数允许你指定<ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph>语句已完成时调用的委托。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法从该委托过程内或从你的应用程序内的任何其他位置。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">此外，你可以通过中的任何对象<ph id="ph1">`stateObject`</ph>参数，并且你回调过程可以检索此信息使用<ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">请注意，将命令文本和参数发送到服务器以同步方式。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">如果发送较大的命令或多个参数，此方法可能会阻止在写入期间。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">发送命令，该方法将立即返回而不等待从服务器--答案之后，即读取是异步的。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">尽管命令执行是异步的但获取值的操作仍然是同步的。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">这意味着，在调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph>五月阻止是否需要更多的数据和基础网络的读取操作块。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">由于回调过程从 Microsoft.NET 运行时提供的后台线程中执行，它是非常重要采用严格的措施来处理你的应用程序内的跨线程交互。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">例如，你必须不与交互窗体的内容从回调过程; 内你必须将窗体更新，你必须切换回窗体的线程以完成工作。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">本主题中的示例演示此行为。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">在执行操作期间发生的所有错误在回调过程中作为异常都引发。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">你必须处理的异常回调过程中，而不是在主应用程序。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">在回调过程中处理异常，请参阅本主题的其他信息的示例。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">以下 Windows 应用程序演示如何使用 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 方法，执行包含几秒钟延迟的 Transact-SQL 语句（模拟长时间运行的命令）。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</source>
          <target state="translated">由于此示例以异步方式执行该命令，在等待结果时保持响应性窗体。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter; doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">此示例传递执行<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象作为<ph id="ph2">`stateObject`</ph>参数，则这样做可轻松检索<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象，从在回调过程中，使代码可以调用<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法对应于初始调用<ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">此示例演示了许多重要的技术。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">这包括调用与从单独的线程窗体交互的方法。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">此外，此示例演示如何必须阻止用户在执行命令多次并发，且你如何必须确保窗体不会关闭在回调过程之前调用。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">要设置此示例，应新建一个 Windows 应用程序。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">Put<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件，<ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>控件，和一个<ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph>窗体 （接受每个控件的默认名称） 上的控件。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">将以下代码添加到窗体的类，根据需要为你的环境修改连接字符串。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">执行命令文本时出现的任何错误。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">名称/值对“Asynchronous Processing=true”未包含在为此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 定义连接的连接字符串中。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">命令执行完成时调用的 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">传递 <ph id="ph1">&lt;see langword="null" /&gt;</ph>（在 Microsoft Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）以指示不需要回调。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">传递到回调过程的用户定义的状态对象。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> 属性从回调过程内检索此对象。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values, indicating options for statement execution and data retrieval.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一，指示用于语句执行和数据检索的选项。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, using one of the <ph id="ph2">&lt;see langword="CommandBehavior" /&gt;</ph> values, and retrieving one or more result sets from the server, given a callback procedure and state information.</source>
          <target state="translated">在给定回调过程和状态信息的情况下，通过使用 <ph id="ph2">&lt;see langword="CommandBehavior" /&gt;</ph> 值之一并从服务器中检索一个或多个结果集，启动由此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance which can be used to retrieve the returned rows.</source>
          <target state="translated">可用于轮询和/或等待结果的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>；在调用 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> 时，也需要该值。该调用会返回一个可用于检索返回行的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法开始以异步方式执行的 TRANSACT-SQL 语句或存储的过程返回行，以便执行该语句的同时，可以运行其他任务的过程。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">完成该语句后，开发人员必须调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法以完成该操作并检索<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>命令返回。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法立即返回，但直到执行相应的代码<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法调用中，它不能执行开始针对相同同步或异步执行的任何其他调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>命令执行已完成的原因之前<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象进行阻止，直到执行完毕。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph>参数允许你指定<ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph>语句已完成时调用的委托。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法从该委托过程内或从你的应用程序内的任何其他位置。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">此外，你可以通过中的任何对象<ph id="ph1">`stateObject`</ph>参数，并且你回调过程可以检索此信息使用<ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.</source>
          <target state="translated"><ph id="ph1">`behavior`</ph>参数允许你指定用于控制命令和其连接的行为的选项。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>These values can be combined together (using the programming language's <ph id="ph1">`Or`</ph> operator); generally, developers use the <ph id="ph2">`CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.</source>
          <target state="translated">这些值可以组合在一起 (使用的编程语言<ph id="ph1">`Or`</ph>运算符); 通常情况下，开发人员使用<ph id="ph2">`CloseConnection`</ph>值以确认连接已由运行时关闭时<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>已关闭。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Developers can also optimize the behavior of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> by specifying the <ph id="ph2">`SingleRow`</ph> value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.</source>
          <target state="translated">开发人员还可以优化的行为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>通过指定<ph id="ph2">`SingleRow`</ph>时它在提前知道的 TRANSACT-SQL 语句或存储的过程仅返回单个行的值。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">请注意，将命令文本和参数发送到服务器以同步方式。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">如果发送较大的命令或多个参数，此方法可能会阻止在写入期间。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">发送命令，该方法将立即返回而不等待从服务器--答案之后，即读取是异步的。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">尽管命令执行是异步的但获取值的操作仍然是同步的。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">这意味着，在调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph>五月阻止是否需要更多的数据和基础网络的读取操作块。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">由于回调过程从 Microsoft.NET 公共语言运行时提供的后台线程中执行，它是非常重要采用严格的措施来处理你的应用程序内的跨线程交互。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">例如，你必须不进行交互从回调过程内的窗体的内容你需要更新该表单，您必须切换回窗体的线程以完成工作。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">本主题中的示例演示此行为。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">在执行操作期间发生的所有错误在回调过程中作为异常都引发。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">你必须处理的异常回调过程中，而不是在主应用程序。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">在回调过程中处理异常，请参阅本主题的其他信息的示例。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 将返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">以下 Windows 应用程序演示如何使用 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 方法，执行包含几秒钟延迟的 Transact-SQL 语句（模拟长时间运行的命令）。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</source>
          <target state="translated">由于此示例以异步方式执行该命令，在等待结果时保持响应性窗体。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter; doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">此示例传递执行<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象作为<ph id="ph2">`stateObject`</ph>参数，则这样做可轻松检索<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象，从在回调过程中，使代码可以调用<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法对应于初始调用<ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">此示例演示了许多重要的技术。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">这包括调用与从单独的线程窗体交互的方法。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">此外，此示例演示如何必须阻止用户在执行命令多次并发，且你如何必须确保窗体不会关闭在回调过程之前调用。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">要设置此示例，应新建一个 Windows 应用程序。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">Put<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件，<ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>控件，和一个<ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph>窗体 （接受每个控件的默认名称） 上的控件。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">将以下代码添加到窗体的类，根据需要为你的环境修改连接字符串。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example passes the <ph id="ph1">`CommandBehavior.CloseConnection`</ph> value in the <ph id="ph2">`behavior`</ph> parameter, causing the returned <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> to automatically close its connection when it is closed.</source>
          <target state="translated">此示例传递<ph id="ph1">`CommandBehavior.CloseConnection`</ph>中的值<ph id="ph2">`behavior`</ph>参数，从而导致返回<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>以它关闭时自动关闭其连接。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">执行命令文本时出现的任何错误。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">名称/值对“Asynchronous Processing=true”未包含在为此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 定义连接的连接字符串中。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行，并将结果作为 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象返回。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行，并将结果作为 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象返回。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see langword="EndExecuteXmlReader" /&gt;</ph>, which returns a single XML value.</source>
          <target state="translated">可用于轮询和/或等待结果的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>；当调用会返回单个 XML 值的 <ph id="ph2">&lt;see langword="EndExecuteXmlReader" /&gt;</ph> 时，也需要该值。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>方法会启动，以便执行该语句的同时，可以运行其他任务以异步方式执行作为 XML 使用，返回行的 TRANSACT-SQL 语句的过程。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>When the statement has completed, developers must call the <ph id="ph1">`EndExecuteXmlReader`</ph> method to finish the operation and retrieve the XML returned by the command.</source>
          <target state="translated">完成该语句后，开发人员必须调用<ph id="ph1">`EndExecuteXmlReader`</ph>命令方法以完成该操作并检索 XML 返回。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">`EndExecuteXmlReader`</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>方法立即返回，但直到执行相应的代码<ph id="ph2">`EndExecuteXmlReader`</ph>方法调用中，它不能执行开始针对相同同步或异步执行的任何其他调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Calling the <ph id="ph1">`EndExecuteXmlReader`</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">调用<ph id="ph1">`EndExecuteXmlReader`</ph>命令执行已完成的原因之前<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象进行阻止，直到执行完毕。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>属性通常具有有效的 FOR XML 子句指定 TRANSACT-SQL 语句。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>However, <ph id="ph1">`CommandText`</ph> can also specify a statement that returns <ph id="ph2">`ntext`</ph> data that contains valid XML.</source>
          <target state="translated">但是，<ph id="ph1">`CommandText`</ph>还可以指定返回的语句<ph id="ph2">`ntext`</ph>包含有效的 XML 的数据。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">典型<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>查询可进行格式设置如下面的 C# 示例所示：</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">此方法还可以用于检索的单行、 单列的结果集。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>In this case, if more than one row is returned, the <ph id="ph1">`EndExecuteXmlReader`</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">在这种情况下，如果多个返回一行，<ph id="ph1">`EndExecuteXmlReader`</ph>方法附加<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>结果的其余部分设置为上的第一行中和丢弃的值。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The multiple active result set (MARS) feature lets multiple actions use the same connection.</source>
          <target state="translated">使用多个活动结果集 (MARS) 功能，使用相同的连接的多个操作。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">请注意，将命令文本和参数发送到服务器以同步方式。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">如果发送较大的命令或多个参数，此方法可能会阻止在写入期间。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">发送命令，该方法将立即返回而不等待从服务器--答案之后，即读取是异步的。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">尽管命令执行是异步的但获取值的操作仍然是同步的。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">由于此重载不支持回调过程，开发人员需要任一轮询以确定是否已完成该命令，使用<ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>返回<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>方法; 或等待完成一个或多个命令使用<ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph>属性返回的<ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The following console application starts the process of retrieving XML data asynchronously.</source>
          <target state="translated">以下控制台应用程序开始以异步方式检索 XML 数据的过程。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">在等待结果，此简单的应用程序位于在循环中调查<ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Once the process has completed, the code retrieves the XML and displays its contents.</source>
          <target state="translated">过程完成后，代码将检索 XML，并显示其内容。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">执行命令文本时出现的任何错误。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">名称/值对“Asynchronous Processing=true”未包含在为此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 定义连接的连接字符串中。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">命令执行完成时调用的 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委托。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">传递 <ph id="ph1">&lt;see langword="null" /&gt;</ph>（在 Microsoft Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）以指示不需要回调。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">传递到回调过程的用户定义的状态对象。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> 属性从回调过程内检索此对象。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object, using a callback procedure.</source>
          <target state="translated">使用回调过程启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行，并将结果作为 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象返回。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when the <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> is called, which returns the results of the command as XML.</source>
          <target state="translated">可用于轮询和/或等待结果的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>；当调用将命令结果以 XML 格式返回的 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> 时，也需要此值。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>方法会启动，以便执行该语句的同时，可以运行其他任务以异步方式执行的 TRANSACT-SQL 语句或作为 XML 使用，返回行的存储的过程的过程。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method to finish the operation and retrieve the requested XML data.</source>
          <target state="translated">完成该语句后，开发人员必须调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>方法以完成该操作并检索请求的 XML 数据。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>方法立即返回，但直到执行相应的代码<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>方法调用中，它不能执行开始针对相同同步或异步执行的任何其他调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>命令执行已完成的原因之前<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象进行阻止，直到执行完毕。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>属性通常具有有效的 FOR XML 子句指定 TRANSACT-SQL 语句。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>However, <ph id="ph1">`CommandText`</ph> can also specify a statement that returns data that contains valid XML.</source>
          <target state="translated">但是，<ph id="ph1">`CommandText`</ph>还可以指定返回包含有效的 XML 的数据的语句。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">此方法还可以用于检索的单行、 单列的结果集。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">在这种情况下，如果多个返回一行，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>方法附加<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>结果的其余部分设置为上的第一行中和丢弃的值。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">典型<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>查询可进行格式设置如下面的 C# 示例所示：</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">此方法还可以用于检索的单行、 单列的结果集。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">在这种情况下，如果多个返回一行，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>方法附加<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>结果的其余部分设置为上的第一行中和丢弃的值。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The multiple active result set (MARS) feature lets multiple actions use the same connection.</source>
          <target state="translated">使用多个活动结果集 (MARS) 功能，使用相同的连接的多个操作。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph>参数允许你指定<ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph>语句已完成时调用的委托。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>方法从该委托过程内或从你的应用程序内的任何其他位置。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">此外，你可以通过中的任何对象<ph id="ph1">`stateObject`</ph>参数，并且你回调过程可以检索此信息使用<ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">请注意，将命令文本和参数发送到服务器以同步方式。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters is sent, this method may block during writes.</source>
          <target state="translated">如果发送较大的命令或多个参数，此方法可能会阻止在写入期间。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">发送命令，该方法将立即返回而不等待从服务器--答案之后，即读取是异步的。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">在执行操作期间发生的所有错误在回调过程中作为异常都引发。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">你必须处理的异常回调过程中，而不是在主应用程序。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">在回调过程中处理异常，请参阅本主题的其他信息的示例。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 将返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">以下 Windows 应用程序演示如何使用 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 方法，执行包含几秒钟延迟的 Transact-SQL 语句（模拟长时间运行的命令）。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter--doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">此示例传递执行<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象作为<ph id="ph2">`stateObject`</ph>参数-执行此操作可以很容易地检索<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象，从在回调过程中，使代码可以调用<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>方法对应于初始调用<ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">此示例演示了许多重要的技术。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">这包括调用与从单独的线程窗体交互的方法。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">此外，此示例演示如何必须阻止用户在执行命令多次并发，且你如何必须确保窗体不会关闭在回调过程之前调用。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">要设置此示例，应新建一个 Windows 应用程序。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">Put<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控件，<ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>控件，和一个<ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph>窗体 （接受每个控件的默认名称） 上的控件。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">将以下代码添加到窗体的类，根据需要为你的环境修改连接字符串。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">执行命令文本时出现的任何错误。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">名称/值对“Asynchronous Processing=true”未包含在为此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 定义连接的连接字符串中。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>Tries to cancel the execution of a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">尝试取消 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 的执行。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>If there is nothing to cancel, nothing occurs.</source>
          <target state="translated">如果没有要取消的命令，则不会有任何反应。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</source>
          <target state="translated">但是，如果有正在执行的命令，则即使取消尝试失败，也不会生成异常。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>In some, rare, cases, if you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> then call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> (implicitily or explicitly) before calling <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, and then call <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>.</source>
          <target state="translated">在某些少见的情况下，如果调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>然后调用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph>(隐式或显式) 之前调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>，然后调用<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>、 取消命令将不发送到 SQL Server 和结果集可以继续进行流式处理后调用<ph id="ph5">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>To avoid this, make sure that you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> before closing the reader or connection.</source>
          <target state="translated">若要避免此问题，请确保你调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>之前关闭读取器或连接。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of the current instance.</source>
          <target state="translated">创建属于当前实例的副本的新 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of this instance.</source>
          <target state="translated">属于此实例副本的新 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting">
          <source>Gets or sets the column encryption setting for this command.</source>
          <target state="translated">获取或设置此命令的列加密设置。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting">
          <source>The column encryption setting for this command.</source>
          <target state="translated">此命令的列加密设置。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.</source>
          <target state="translated">获取或设置要在数据源中执行的 Transact-SQL 语句、表名或存储过程。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The Transact-SQL statement or stored procedure to execute.</source>
          <target state="translated">要执行的 Transact-SQL 语句或存储过程。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The default is an empty string.</source>
          <target state="translated">默认值为一个空字符串。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph>属性设置为<ph id="ph2">`StoredProcedure`</ph>、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>属性应设置为存储过程的名称。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
          <target state="translated">用户可能需要使用转义符语法，如果存储的过程名称包含任何特殊字符。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The command executes this stored procedure when you call one of the <ph id="ph1">`Execute`</ph> methods.</source>
          <target state="translated">当你调用之一时，该命令将执行此存储的过程<ph id="ph1">`Execute`</ph>方法。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">Microsoft.NET Framework 数据提供程序 SQL Server 不支持用于将参数传递到 TRANSACT-SQL 语句或存储的过程调用的命令的问号 （？） 占位符<ph id="ph1">`CommandType.Text`</ph>。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">在这种情况下，必须使用命名的参数。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>配置参数和参数数据类型<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>并设置其属性的一些。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</source>
          <target state="translated">获取或设置在终止尝试执行命令并生成错误之前的等待时间。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The time in seconds to wait for the command to execute.</source>
          <target state="translated">等待命令执行所需的时间（以秒为单位）。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">默认值为 30 秒。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).</source>
          <target state="translated">值为 0 表示不限制 （尝试执行命令将无限期等待）。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> property will be ignored during asynchronous method calls such as <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>属性将被忽略在异步方法调用期间如<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect when the command is executed against a context connection (a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> opened with "context connection=true" in the connection string).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> 对上下文连接执行命令时，不起 (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>以打开"上下文连接 = true"连接字符串中)。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results.</source>
          <target state="translated">此属性是在命令执行或结果的处理过程对所有网络读取的累积超时值 （在方法的调用期间读取的所有网络数据包）。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.</source>
          <target state="translated">之后的第一行返回，并且不包括用户处理时间，仍会发生超时，只有网络读取时间。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>For example, with a 30 second time out, if <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> requires two network packets, then it has 30 seconds to read both network packets.</source>
          <target state="translated">例如，使用 30 秒超时，如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph>需要两个网络数据包，则它具有 30 秒以读取两个网络数据包。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>If you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> again, it will have another 30 seconds to read any data that it requires.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph>同样，它将具有另一个 30 秒才能阅读它需要的任何数据。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>Gets or sets a value indicating how the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> property is to be interpreted.</source>
          <target state="translated">获取或设置一个值，该值指示解释 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 属性的方式。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The default is <ph id="ph1">&lt;see langword="Text" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>When you set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property to <ph id="ph2">`StoredProcedure`</ph>, you should set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property to the name of the stored procedure.</source>
          <target state="translated">当你将设置<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph>属性<ph id="ph2">`StoredProcedure`</ph>，应设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>到存储过程的名称的属性。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">在调用 Execute 方法之一时，该命令将执行此存储的过程。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Data.CommandType.Text&gt;</ph>.</source>
          <target state="translated">Microsoft.NET Framework 数据提供程序 SQL Server 不支持的问号 （？） 占位符用于将参数传递到 SQL 语句或存储的过程调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Data.CommandType.Text&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">在这种情况下，必须使用命名的参数。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></source>
          <target state="translated">选择 * 从客户其中 CustomerID = <ph id="ph1">@CustomerID</ph></target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>配置参数和参数数据类型<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>并设置其属性的一些。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The value was not a valid <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>.</source>
          <target state="translated">该值不是有效的 <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 的此实例使用的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">到数据源的连接。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果该命令将在现有的事务中登记，更改连接尝试执行该命令将引发<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property is not null and the transaction has already been committed or rolled back, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> is set to null.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> 属性不为 null，而事务已提交或回滚，则会将 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> 设置为 null。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>并设置其属性的一些。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> property was changed while the command was enlisted in a transaction..</source>
          <target state="translated">命令在事务中登记时 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> 属性被更改。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>Creates a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> object.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> 对象的新实例。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A&gt;</ph> method is a strongly-typed version of <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A&gt;</ph>方法是强类型版本<ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.</source>
          <target state="translated">获取或设置一个值，该值指示命令对象是否应在 Windows 窗体设计器控件中可见。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>A value indicating whether the command object should be visible in a control.</source>
          <target state="translated">一个指示命令对象是否应在控件中可见的值。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>The default is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">**</bpt>true<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>.</source>
          <target state="translated">通过调用 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 返回的 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement.</source>
          <target state="translated">完成 Transact-SQL 语句的异步执行。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The number of rows affected (the same behavior as <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>).</source>
          <target state="translated">受影响的行数（与 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph> 相同的行为）。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> to execute a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement, you must call <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">当调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>执行<ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>语句，必须调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>若要完成该操作。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">如果执行命令的进程未尚未完成，此方法受到阻止，直到该操作已完成。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method.</source>
          <target state="translated">用户可以验证该命令已完成其操作使用<ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>返回实例<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">如果对的调用中未指定，回调过程<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>，必须调用此方法。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">有关示例演示如何使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph>方法，请参阅<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 参数为 null（在 Microsoft Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated">不止一次为单个命令执行调用了 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>，或该方法不匹配其执行方法（例如，代码调用了 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> 以完成对 <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph> 调用的执行。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The amount of time specified in <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> elapsed and the asynchronous operation specified with <ph id="ph2">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> is not complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> 中指定的时间已过，并且使用 <ph id="ph2">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> 指定的异步操作不完整。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>In some situations, <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> can be set to <ph id="ph2">&lt;see langword="IsCompleted" /&gt;</ph> incorrectly.</source>
          <target state="translated">在某些情况下，<ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 可能不正确地设置为 <ph id="ph2">&lt;see langword="IsCompleted" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If this occurs and <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> elapsed and the asynchronous operation specified with <ph id="ph3">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> is not complete.</source>
          <target state="translated">如果发生这种情况并且调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>，则 EndExecuteNonQuery 可能引发 SqlException 错误（如果 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> 中指定的时间已过，并且使用 <ph id="ph3">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> 指定的异步操作不完整）。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.</source>
          <target state="translated">若要更正这种情况，应增加 CommandTimeout 的值或减少正由异步操作完成的工作。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" /&gt;</ph>.</source>
          <target state="translated">通过调用 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 返回的 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement, returning the requested <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">完成 Transact-SQL 语句的异步执行，从而返回请求的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object that can be used to retrieve the requested rows.</source>
          <target state="translated">可用于检索请求行的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">当调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要执行的 TRANSACT-SQL 语句，必须调用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>若要完成该操作。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">如果执行命令的进程未尚未完成，此方法受到阻止，直到该操作已完成。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method.</source>
          <target state="translated">用户可以验证该命令已完成其操作使用<ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>返回实例<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">如果对的调用中未指定，回调过程<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>，必须调用此方法。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">有关示例演示如何使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph>方法，请参阅<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 参数为 null（在 Microsoft Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated">不止一次为单个命令执行调用了 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>，或该方法不匹配其执行方法（例如，代码调用了 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> 以完成对 <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph> 调用的执行。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated">通过调用 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 返回的 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.</source>
          <target state="translated">完成 Transact-SQL 语句的异步执行，从而将请求的数据以 XML 形式返回。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object that can be used to fetch the resulting XML data.</source>
          <target state="translated">可用于获取生成的 XML 数据的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">当调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>若要执行的 TRANSACT-SQL 语句，必须调用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>若要完成该操作。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">如果执行命令的进程未尚未完成，此方法受到阻止，直到该操作已完成。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method.</source>
          <target state="translated">用户可以验证该命令已完成其操作使用<ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>返回实例<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">如果对的调用中未指定，回调过程<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>，必须调用此方法。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">有关示例演示如何使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph>方法，请参阅<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 参数为 null（在 Microsoft Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>.</source>
          <target state="translated">不止一次为单个命令执行调用了 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph>，或该方法不匹配其执行方法（例如，代码调用了 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> 以完成对 <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> 调用的执行。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>Executes a Transact-SQL statement against the connection and returns the number of rows affected.</source>
          <target state="translated">对连接执行 Transact-SQL 语句并返回受影响的行数。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The number of rows affected.</source>
          <target state="translated">受影响的行数。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>执行目录操作 （例如，查询数据库的结构或创建数据库对象，如表），或更改数据库中的数据，而无需使用<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>通过执行更新、 插入或删除语句。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>Although the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> returns no rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">尽管<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>返回任何行，任何输出参数或返回值映射到参数填充了数据。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">对于 UPDATE、INSERT 和 DELETE 语句，返回值为该命令所影响的行数。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</source>
          <target state="translated">插入或更新存在于表的触发器，返回的值包括通过插入或更新操作并受或多个触发器的行数受影响的行数。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">对于其他所有类型的语句，返回值为 -1。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>If a rollback occurs, the return value is also -1.</source>
          <target state="translated">如果发生回滚，则返回值也为-1。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，然后执行它使用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.</source>
          <target state="translated">该示例传递 （例如更新、 插入或删除） 的 TRANSACT-SQL 语句的字符串和要用于连接到数据源的字符串。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">对锁定的行执行命令时出现异常。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">当使用 Microsoft .NET Framework 1.0 版时不生成此异常。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>, which executes a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement against the connection and returns the number of rows affected.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph> 的异步版本，它对连接执行 <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 语句并返回受影响的行数。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">在完成任务前，为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">执行命令文本时，SQL Server 返回了一个错误。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph>属性设置为<ph id="ph2">`StoredProcedure`</ph>、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>属性应设置为存储过程的名称。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">在调用时，该命令将执行此存储的过程<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>If a transaction is deadlocked, an exception may not be thrown until <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> is called.</source>
          <target state="translated">如果事务将被死锁，可能不会引发异常之前<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">多个活动结果集 (MARS) 功能允许多个操作使用相同的连接。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 将返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，然后通过传递是 TRANSACT-SQL SELECT 语句的字符串和字符串要用于连接到数据源执行它。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">对锁定的行执行命令时出现异常。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">当使用 Microsoft .NET Framework 1.0 版时不生成此异常。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The current state of the connection is closed.</source>
          <target state="translated">连接的当前状态已关闭。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph> requires an open <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph> 需要打开 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> using one of the <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并使用 <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值之一生成 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph>属性设置为<ph id="ph2">`StoredProcedure`</ph>、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>属性应设置为存储过程的名称。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">在调用时，该命令将执行此存储的过程<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> to retrieve large values and binary data.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph>来检索较大值和二进制数据。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> might occur and the connection will be closed.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>可能会发生，连接将关闭。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">多个活动结果集 (MARS) 功能允许多个操作使用相同的连接。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 将返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，然后通过传递是 TRANSACT-SQL SELECT 语句的字符串和字符串要用于连接到数据源执行它。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Data.CommandBehavior.CloseConnection&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph> 设置为 <ph id="ph2">&lt;xref:System.Data.CommandBehavior.CloseConnection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or stored procedure that is described by this <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">启动此 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 语句或存储过程的异步执行。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph> 的异步版本，它可以将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated">无效的 <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">在完成任务前，为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">执行命令文本时，SQL Server 返回了一个错误。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Options for statement execution and data retrieval.</source>
          <target state="translated">语句执行和数据检索的选项。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>When is set to <ph id="ph1">&lt;see langword="Default" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> reads the entire row before returning a complete Task.</source>
          <target state="translated">当设置为 <ph id="ph1">&lt;see langword="Default" /&gt;</ph> 时，<ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> 将在返回完整任务前读取整行。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph> 的异步版本，用于将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成一个 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated">无效的 <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">在完成任务前，为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">执行命令文本时，SQL Server 返回了一个错误。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph> 的异步版本，它可以将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated">无效的 <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">在完成任务前，为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">执行命令文本时，SQL Server 返回了一个错误。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Options for statement execution and data retrieval.</source>
          <target state="translated">语句执行和数据检索的选项。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>When is set to <ph id="ph1">&lt;see langword="Default" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> reads the entire row before returning a complete Task.</source>
          <target state="translated">当设置为 <ph id="ph1">&lt;see langword="Default" /&gt;</ph> 时，<ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> 将在返回完整任务前读取整行。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph> 的异步版本，它可以将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated">无效的 <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">在完成任务前，为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">执行命令文本时，SQL Server 返回了一个错误。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query.</source>
          <target state="translated">执行查询，并返回由查询返回的结果集中的第一行的第一列。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Additional columns or rows are ignored.</source>
          <target state="translated">其他列或行将被忽略。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The first column of the first row in the result set, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the result set is empty.</source>
          <target state="translated">为结果集中的第一行的第一列，或者，如果结果集为空，则为 null 引用（在 Visual Basic 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Returns a maximum of 2033 characters.</source>
          <target state="translated">返回的最大字符数为 2033 个字符。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph>方法以从数据库中检索单个值 （例如，一个聚合值）。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>This requires less code than using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations that you need to generate the single value using the data returned by a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">这要求更少的代码比使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>方法，，然后再执行需要生成使用返回的数据的单个值的操作<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">典型<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph>查询可进行格式设置如下面的 C# 示例所示：</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph>.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，然后执行它使用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source.</source>
          <target state="translated">该示例传递表示要插入到表，新值的字符串和要用于连接到数据源的字符串。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The function returns the new <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> column value if a new row was inserted, 0 on failure.</source>
          <target state="translated">该函数将返回新<bpt id="p1">**</bpt>标识<ept id="p1">**</ept>如果插入新行的列值，0 失败。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">对锁定的行执行命令时出现异常。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">当使用 Microsoft .NET Framework 1.0 版时不生成此异常。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /&gt;</ph>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /&gt;</ph> 的异步版本，该版本异步执行查询，并返回由查询返回的结果集中的第一行的第一列。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Additional columns or rows are ignored.</source>
          <target state="translated">其他列或行将被忽略。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">在完成任务前，为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">执行命令文本时，SQL Server 返回了一个错误。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成一个 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>属性通常指定<ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>带有有效的 FOR XML 子句的语句。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>However, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> can also specify a statement that returns <ph id="ph2">`ntext`</ph> or <ph id="ph3">`nvarchar`</ph> data that contains valid XML, or the contents of a column defined with the <ph id="ph4">`xml`</ph> data type.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>还可以指定返回的语句<ph id="ph2">`ntext`</ph>或<ph id="ph3">`nvarchar`</ph>包含有效的 XML 或使用定义的列的内容的数据<ph id="ph4">`xml`</ph>数据类型。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following Microsoft Visual C# example:</source>
          <target state="translated">典型<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>查询可进行格式设置如下面的 Microsoft Visual C# 示例所示：</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>This method can also be used to retrieve a single-row, single-column result set that contains XML data.</source>
          <target state="translated">此方法还可用来检索包含 XML 数据的单行、 单列的结果集。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">在这种情况下，如果多个返回一行，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>方法附加<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>结果的其余部分设置为上的第一行中和丢弃的值。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">多个活动结果集 (MARS) 功能允许多个操作使用相同的连接。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">如果你使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>若要访问 XML 数据，SQL Server 将返回的任何 XML 结果大于 2033 个字符中的每个 2033 个字符的多个行的长度。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">若要避免此行为，使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>读取 FOR XML 查询。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">有关详细信息，请参阅文章 Q310378，"PRB:: XML 数据是被截断时你使用 SqlDataReader，"Microsoft 知识库中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，然后执行它使用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">该示例传递是选择的 XML TRANSACT-SQL 语句的字符串和要用于连接到数据源的字符串。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">对锁定的行执行命令时出现异常。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">当使用 Microsoft .NET Framework 1.0 版时不生成此异常。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">启动此 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 描述的 Transact-SQL 语句或存储过程的异步执行，并将结果作为 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象返回。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph> 的异步版本，可以将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成 <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">在完成任务前，为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">执行命令文本时，SQL Server 返回了一个错误。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取消指令。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph> 的异步版本，可以将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 发送到 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>，并生成 <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">取消标记可用于请求在命令超时超过前放弃操作。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">将通过返回的任务对象报告异常。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅<bpt id="p1">[</bpt>异步编程<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Binary 或 VarBinary。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Char、NChar、NVarChar、VarChar 或 Xml。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> 设置为 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 时，使用的是 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> 而不是 Xml。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">在完成任务前，为同一个实例多次调用 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭或删除了 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated">在连接字符串中指定 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">执行命令文本时，SQL Server 返回了一个错误。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">流式处理操作期间发生了超时。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">流式处理操作期间在 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象中出现了错误。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">流式处理操作期间关闭了 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">有关流式处理的详细信息，请参阅 <bpt id="p1">[</bpt>SqlClient 流支持<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>Gets or sets a value that specifies the <ph id="ph1">&lt;see cref="T:System.Data.Sql.SqlNotificationRequest" /&gt;</ph> object bound to this command.</source>
          <target state="translated">获取或设置一个指定与此命令绑定的 <ph id="ph1">&lt;see cref="T:System.Data.Sql.SqlNotificationRequest" /&gt;</ph> 对象的值。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>When set to null (default), no notification should be requested.</source>
          <target state="translated">如果设置为 null（默认值），则不应请求任何通知。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>You must set the value for this property before the command is executed for it to take effect.</source>
          <target state="translated">该命令执行它才会生效之前，必须设置此属性的值。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>Gets or sets a value indicating whether the application should automatically receive query notifications from a common <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDependency" /&gt;</ph> object.</source>
          <target state="translated">获取或设置一个值，该值指示应用程序是否应自动接收来自公共 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDependency" /&gt;</ph> 对象的查询通知。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the application should automatically receive query notifications; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>true<ept id="p1">**</ept>如果应用程序应自动接收查询通知; 否则为<bpt id="p2">**</bpt>false<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>The default value is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">默认值是<bpt id="p1">**</bpt>true<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server.</source>
          <target state="translated">此功能在 ASP.NET 应用程序中用于接收针对 SQL Server ASP 页中执行的所有命令的通知。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This enables ASP.NET to cache the page until the queries used to render the page would produce a different result.</source>
          <target state="translated">这使 ASP.NET 可以缓存页，直到用于呈现页的查询会产生不同的结果。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>Automatic enlistment.</source>
          <target state="translated">自动登记。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This property applies only to versions of SQL Server that support query notifications.</source>
          <target state="translated">此属性仅适用于支持查询通知的 SQL Server 的版本。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>For earlier versions, setting this property to <bpt id="p1">**</bpt>true<ept id="p1">**</ept> has no effect on the application.</source>
          <target state="translated">对于早期版本，将此属性设置为<bpt id="p1">**</bpt>true<ept id="p1">**</ept>不起作用的应用程序上。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameterCollection" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameterCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The parameters of the Transact-SQL statement or stored procedure.</source>
          <target state="translated">Transact-SQL 语句或存储过程的参数。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The default is an empty collection.</source>
          <target state="translated">默认值为空集合。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">Microsoft.NET Framework 数据提供程序 SQL Server 不支持用于将参数传递到 SQL 语句或存储的过程调用的命令的问号 （？） 占位符<ph id="ph1">`CommandType.Text`</ph>。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">在这种情况下，必须使用命名的参数。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></source>
          <target state="translated">选择 * 从客户其中 CustomerID = <ph id="ph1">@CustomerID</ph></target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</source>
          <target state="translated">如果集合中的参数不匹配的查询执行的要求，可能会产生错误。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>配置参数和参数数据类型<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and add parameters to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>和将参数添加到<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Creates a prepared version of the command on an instance of SQL Server.</source>
          <target state="translated">在 SQL Server 的实例上创建命令的一个准备版本。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> is set to <ph id="ph2">`StoredProcedure`</ph>, the call to <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> should succeed, although it may cause a no-op.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph>设置为<ph id="ph2">`StoredProcedure`</ph>，调用<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>应该会成功，虽然它可能会不导致不执行任何操作。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Before you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, specify the data type of each parameter in the statement to be prepared.</source>
          <target state="translated">在调用之前<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>，在要准备的语句中指定每个参数的数据类型。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>For each parameter that has a variable length data type, you must set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property to the maximum size needed.</source>
          <target state="translated">对于每个参数具有可变长度数据类型，你必须设置<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>属性设置为所需的最大大小。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> returns an error if these conditions are not met.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> 如果不满足这些条件，则返回错误。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If the database context is changed by executing the Transact-SQL <ph id="ph1">`USE &lt;database&gt;`</ph> statement, or by calling the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> method, then <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> must be called a second time.</source>
          <target state="translated">如果通过执行 TRANSACT-SQL 更改数据库上下文<ph id="ph1">`USE &lt;database&gt;`</ph>语句，或通过调用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph>方法，然后<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>必须调用第二次。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If you call an <ph id="ph1">`Execute`</ph> method after calling <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, any parameter value that is larger than the value specified by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</source>
          <target state="translated">如果调用<ph id="ph1">`Execute`</ph>方法之后调用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>，任何大于指定的值的参数值<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>属性将被自动截断为原始的指定大小的参数，并且没有截断错误返回。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Output parameters (whether prepared or not) must have a user-specified data type.</source>
          <target state="translated">输出参数 （无论是否已准备） 必须具有用户指定的数据类型。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If you specify a variable length data type, you must also specify the maximum <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>.</source>
          <target state="translated">如果指定可变长度数据类型，你还必须指定最大值<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Prior to Visual Studio 2010, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> threw an exception.</source>
          <target state="translated">Visual Studio 2010 之前,<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>引发了异常。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Beginning in Visual Studio 2010, this method does not throw an exception.</source>
          <target state="translated">从 Visual Studio 2010 开始，此方法不引发异常。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> property to its default value.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> 属性重置为其默认值。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
          <source>The default value of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> is 30 seconds.</source>
          <target state="translated">默认值<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>为 30 秒。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlCommand.StatementCompleted">
          <source>Occurs when the execution of a Transact-SQL statement completes.</source>
          <target state="translated">当 Transact-SQL 语句执行完成时发生。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of the current instance.</source>
          <target state="translated">创建属于当前实例的副本的新 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of this instance.</source>
          <target state="translated">属于此实例副本的新 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> within which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated">获取或设置要在其中执行 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property if it is already set to a specific value, and the command is in the process of executing.</source>
          <target state="translated">无法设置<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph>如果它已被设置为特定值，并且该命令正在执行的属性。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>If you set the transaction property to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object that is not connected to the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> as the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object, an exception is thrown the next time that you attempt to execute a statement.</source>
          <target state="translated">如果事务属性设置为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>未连接到相同的对象<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>作为<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>对象，下次尝试执行语句，将引发异常。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>Gets or sets how command results are applied to the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> when used by the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> method of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">获取或设置命令结果在由 <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> 的 Update 方法使用时应用于 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 的方式。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>The default <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> value is <bpt id="p1">**</bpt>Both<ept id="p1">**</ept> unless the command is automatically generated (as in the case of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>), in which case the default is <bpt id="p2">**</bpt>None<ept id="p2">**</ept>.</source>
          <target state="translated">默认值<ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph>值是<bpt id="p1">**</bpt>同时<ept id="p1">**</ept>除非自动生成命令 (一样的情况下<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>)，默认值是在这种情况下<bpt id="p2">**</bpt>无<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>For more information about using the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property, see <bpt id="p2">[</bpt>DataAdapter Parameters<ept id="p2">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>.</source>
          <target state="translated">有关使用<bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept>属性，请参阅<bpt id="p2">[</bpt>DataAdapter 参数<ept id="p2">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
