<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13a8805b62cac7e4548ac44737cd6c5c1dc3578c" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452432" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a3fc5-101">表示到 SQL Server 数据库的连接。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3fc5-101">Represents a connection to a SQL Server database.</span>
      </span>
      <span data-ttu-id="a3fc5-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3fc5-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-103">A<xref:System.Data.SqlClient.SqlConnection>对象表示到 SQL Server 数据源的唯一的会话。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-103">A <xref:System.Data.SqlClient.SqlConnection> object represents a unique session to a SQL Server data source.</span></span> <span data-ttu-id="a3fc5-104">使用客户端/服务器数据库系统，它相当于网络连接到服务器。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-104">With a client/server database system, it is equivalent to a network connection to the server.</span></span> <span data-ttu-id="a3fc5-105"><xref:System.Data.SqlClient.SqlConnection> 使用连同<xref:System.Data.SqlClient.SqlDataAdapter>和<xref:System.Data.SqlClient.SqlCommand>来提高性能时连接到 Microsoft SQL Server 数据库。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-105"><xref:System.Data.SqlClient.SqlConnection> is used together with <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlCommand> to increase performance when connecting to a Microsoft SQL Server database.</span></span> <span data-ttu-id="a3fc5-106">对于所有第三方 SQL Server 产品和其他支持 OLE DB 的数据源，使用<xref:System.Data.OleDb.OleDbConnection>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-106">For all third-party SQL Server products and other OLE DB-supported data sources, use <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 <span data-ttu-id="a3fc5-107">当你创建的实例<xref:System.Data.SqlClient.SqlConnection>，所有属性均都设置为其初始值。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-107">When you create an instance of <xref:System.Data.SqlClient.SqlConnection>, all properties are set to their initial values.</span></span> <span data-ttu-id="a3fc5-108">有关这些值的列表，请参阅<xref:System.Data.SqlClient.SqlConnection>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-108">For a list of these values, see the <xref:System.Data.SqlClient.SqlConnection> constructor.</span></span>  
  
 <span data-ttu-id="a3fc5-109">请参阅<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>有关连接字符串中的关键字的列表。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-109">See <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> for a list of the keywords in a connection string.</span></span>  
  
 <span data-ttu-id="a3fc5-110">如果<xref:System.Data.SqlClient.SqlConnection>超出范围，则不会关闭。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-110">If the <xref:System.Data.SqlClient.SqlConnection> goes out of scope, it won't be closed.</span></span> <span data-ttu-id="a3fc5-111">因此，必须显式关闭连接通过调用`Close`或`Dispose`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-111">Therefore, you must explicitly close the connection by calling `Close` or `Dispose`.</span></span> <span data-ttu-id="a3fc5-112">`Close` 和`Dispose`在功能上等效。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-112">`Close` and `Dispose` are functionally equivalent.</span></span> <span data-ttu-id="a3fc5-113">如果连接池值`Pooling`设置为`true`或`yes`，则基础连接返回到连接池。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-113">If the connection pooling value `Pooling` is set to `true` or `yes`, the underlying connection is returned back to the connection pool.</span></span> <span data-ttu-id="a3fc5-114">另一方面，如果`Pooling`设置为`false`或`no`，则实际关闭基础连接到服务器。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-114">On the other hand, if `Pooling` is set to `false` or `no`, the underlying connection to the server is actually closed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-115">从连接池中提取连接或将连接返回到连接池时，服务器上不会引发登录和注销事件，这是因为在将连接返回到连接池时实际上并没有将其关闭。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-115">Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool.</span></span> <span data-ttu-id="a3fc5-116">有关详细信息，请参阅 [SQL Server 连接池 (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-116">For more information, see [SQL Server Connection Pooling (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).</span></span>  
  
 <span data-ttu-id="a3fc5-117">若要确保始终关闭连接，打开的内部连接`using`阻止，如下面的代码段中所示。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-117">To ensure that connections are always closed, open the connection inside of a `using` block, as shown in the following code fragment.</span></span> <span data-ttu-id="a3fc5-118">这样做可确保当代码退出块时自动关闭连接。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-118">Doing so ensures that the connection is automatically closed when the code exits the block.</span></span>  
  
```vb  
Using connection As New SqlConnection(connectionString)  
    connection.Open()  
    ' Do work here; connection closed on following line.  
End Using  
  
```  
  
```csharp  
using (SqlConnection connection = new SqlConnection(connectionString))  
    {  
        connection.Open();  
        // Do work here; connection closed on following line.  
    }  
```  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-119">若要部署高性能应用程序，必须使用连接池。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-119">To deploy high-performance applications, you must use connection pooling.</span></span> <span data-ttu-id="a3fc5-120">当你使用适用于 SQL Server 的.NET Framework 数据提供程序时，你无需启用连接池，因为提供程序管理此自动，尽管你可以修改某些设置。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-120">When you use the .NET Framework Data Provider for SQL Server, you do not have to enable connection pooling because the provider manages this automatically, although you can modify some settings.</span></span> <span data-ttu-id="a3fc5-121">有关详细信息，请参阅 [SQL Server 连接池 (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-121">For more information, see [SQL Server Connection Pooling (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).</span></span>  
  
 <span data-ttu-id="a3fc5-122">如果<xref:System.Data.SqlClient.SqlException>生成的方法执行<xref:System.Data.SqlClient.SqlCommand>、<xref:System.Data.SqlClient.SqlConnection>保持打开状态时的严重性级别为 19 或以下。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-122">If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less.</span></span> <span data-ttu-id="a3fc5-123">等于或大于 20 的严重性级别时，服务器通常会关闭<xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-123">When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>.</span></span> <span data-ttu-id="a3fc5-124">但是，用户可以重新打开连接并继续操作。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-124">However, the user can reopen the connection and continue.</span></span>  
  
 <span data-ttu-id="a3fc5-125">创建的实例的应用程序<xref:System.Data.SqlClient.SqlConnection>对象可以要求所有直接和间接调用方拥有足够权限的代码通过设置声明性或命令性安全要求。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-125">An application that creates an instance of the <xref:System.Data.SqlClient.SqlConnection> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.</span></span> <span data-ttu-id="a3fc5-126"><xref:System.Data.SqlClient.SqlConnection> 发出安全要求使用<xref:System.Data.SqlClient.SqlClientPermission>对象。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-126"><xref:System.Data.SqlClient.SqlConnection> makes security demands using the <xref:System.Data.SqlClient.SqlClientPermission> object.</span></span> <span data-ttu-id="a3fc5-127">用户可以验证他们的代码通过使用具有足够的权限<xref:System.Data.SqlClient.SqlClientPermissionAttribute>对象。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-127">Users can verify that their code has sufficient permissions by using the <xref:System.Data.SqlClient.SqlClientPermissionAttribute> object.</span></span> <span data-ttu-id="a3fc5-128">用户和管理员还可以使用[Caspol.exe （代码访问安全策略工具）](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)可修改计算机、 用户和企业级别的安全策略。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-128">Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) to modify security policy at the machine, user, and enterprise levels.</span></span> <span data-ttu-id="a3fc5-129">有关详细信息，请参阅[安全性](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-129">For more information, see [Security](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6).</span></span> <span data-ttu-id="a3fc5-130">有关演示如何使用安全要求的示例，请参阅[代码访问安全性和 ADO.NET](~/docs/framework/data/adonet/code-access-security.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-130">For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 <span data-ttu-id="a3fc5-131">有关处理来自服务器的警告和信息性消息的详细信息，请参阅[连接事件](~/docs/framework/data/adonet/connection-events.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-131">For more information about handling warning and informational messages from the server, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).</span></span> <span data-ttu-id="a3fc5-132">SQL Server 引擎错误和错误消息记录在 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-132">SQL Server engine errors and error messages are documented in SQL Server Books Online.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a3fc5-133">你可以强制 TCP，而不是共享的内存。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-133">You can force TCP instead of shared memory.</span></span> <span data-ttu-id="a3fc5-134">你可以通过实现此前缀 tcp： 在连接中的服务器名字符串也可以使用 localhost。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-134">You can do that by prefixing tcp: to the server name in the connection string or you can use localhost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-135">下面的示例创建<xref:System.Data.SqlClient.SqlCommand>和<xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-135">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and a <xref:System.Data.SqlClient.SqlConnection>.</span></span> <span data-ttu-id="a3fc5-136"><xref:System.Data.SqlClient.SqlConnection>打开并将其设置为<xref:System.Data.SqlClient.SqlCommand.Connection%2A>为<xref:System.Data.SqlClient.SqlCommand>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-136">The <xref:System.Data.SqlClient.SqlConnection> is opened and set as the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> for the <xref:System.Data.SqlClient.SqlCommand>.</span></span> <span data-ttu-id="a3fc5-137">该示例然后调用<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-137">The example then calls <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="a3fc5-138">若要实现此目的，<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>传递连接字符串和一个查询字符串[!INCLUDE[tsql](~/includes/tsql-md.md)]INSERT 语句。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-138">To accomplish this, the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is a [!INCLUDE[tsql](~/includes/tsql-md.md)] INSERT statement.</span></span> <span data-ttu-id="a3fc5-139">在代码退出使用时自动关闭连接块。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-139">The connection is closed automatically when the code exits the using block.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-140">初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-140">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-141">初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-141">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-142">新实例时<xref:System.Data.SqlClient.SqlConnection>创建读/写属性设置为以下初始值，除非它们专门设置使用在其关联的关键字<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-142">When a new instance of <xref:System.Data.SqlClient.SqlConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property.</span></span>  
  
|<span data-ttu-id="a3fc5-143">属性</span><span class="sxs-lookup"><span data-stu-id="a3fc5-143">Properties</span></span>|<span data-ttu-id="a3fc5-144">初始值</span><span class="sxs-lookup"><span data-stu-id="a3fc5-144">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|<span data-ttu-id="a3fc5-145">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="a3fc5-145">empty string ("")</span></span>|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|<span data-ttu-id="a3fc5-146">15</span><span class="sxs-lookup"><span data-stu-id="a3fc5-146">15</span></span>|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|<span data-ttu-id="a3fc5-147">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="a3fc5-147">empty string ("")</span></span>|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|<span data-ttu-id="a3fc5-148">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="a3fc5-148">empty string ("")</span></span>|  
  
 <span data-ttu-id="a3fc5-149">你可以更改这些属性的值只能通过使用<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-149">You can change the value for these properties only by using the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property.</span></span> <span data-ttu-id="a3fc5-150"><xref:System.Data.SqlClient.SqlConnectionStringBuilder>类提供用于创建和管理的连接字符串的内容的功能。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-150">The <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class provides functionality for creating and managing the contents of connection strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-151">下面的示例创建并打开<xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-151">The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="a3fc5-152">用于打开 SQL Server 数据库的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-152">The connection used to open the SQL Server database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-153">如果给定包含连接字符串的字符串，则初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-153">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection" /> class when given a string that contains the connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-154">新实例时<xref:System.Data.SqlClient.SqlConnection>创建读/写属性设置为以下初始值，除非它们专门设置使用在其关联的关键字<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-154">When a new instance of <xref:System.Data.SqlClient.SqlConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property.</span></span>  
  
|<span data-ttu-id="a3fc5-155">属性</span><span class="sxs-lookup"><span data-stu-id="a3fc5-155">Properties</span></span>|<span data-ttu-id="a3fc5-156">初始值</span><span class="sxs-lookup"><span data-stu-id="a3fc5-156">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|<span data-ttu-id="a3fc5-157">15</span><span class="sxs-lookup"><span data-stu-id="a3fc5-157">15</span></span>|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|<span data-ttu-id="a3fc5-158">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="a3fc5-158">empty string ("")</span></span>|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|<span data-ttu-id="a3fc5-159">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="a3fc5-159">empty string ("")</span></span>|  
  
 <span data-ttu-id="a3fc5-160">你可以更改这些属性的值只能通过使用<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-160">You can change the value for these properties only by using the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property.</span></span> <span data-ttu-id="a3fc5-161"><xref:System.Data.SqlClient.SqlConnection>类提供用于创建和管理的连接字符串的内容的功能。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-161">The <xref:System.Data.SqlClient.SqlConnection> class provides functionality for creating and managing the contents of connection strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-162">下面的示例创建并打开<xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-162">The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="a3fc5-163">不使用以下任何连接字符串关键字的连接字符串：<see langword="Integrated Security = true" />、 <see langword="UserId" />，或 <see langword="Password" />；或不使用 <see langword="ContextConnection = true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-163">A connection string that does not use any of the following connection string keywords: <see langword="Integrated Security = true" />, <see langword="UserId" />, or <see langword="Password" />; or that does not use <see langword="ContextConnection = true" />.</span>
          </span>
        </param>
        <param name="credential">To be added.</param>
        <param name="cred">To be added.</param>
        <summary>
          <span data-ttu-id="a3fc5-164">初始化给定连接字符串的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例，而不使用包含用户识别号和密码的 <see langword="Integrated Security = true" /> 和 <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-164">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection" /> class given a connection string, that does not use <see langword="Integrated Security = true" /> and a <see cref="T:System.Data.SqlClient.SqlCredential" /> object that contains the user ID and password.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-165">获取或设置用于连接的访问令牌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-165">Gets or sets the access token for the connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-166">用于连接的访问令牌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-166">The access token for the connection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-167">开始数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-167">Starts a database transaction.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-168">开始数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-168">Starts a database transaction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-169">表示新事务的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-169">An object representing the new transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-170">此命令将映射到 BEGIN TRANSACTION 的 SQL Server 实现。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-170">This command maps to the SQL Server implementation of BEGIN TRANSACTION.</span></span>  
  
 <span data-ttu-id="a3fc5-171">你必须显式提交或回滚事务使用<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>或<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-171">You must explicitly commit or roll back the transaction using the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> or <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method.</span></span> <span data-ttu-id="a3fc5-172">若要确保 SQL Server 事务管理模型.NET Framework 数据提供程序正常运行，请避免使用其他事务管理模型，例如 SQL Server 提供的那一个。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-172">To make sure that the .NET Framework Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-173">如果不指定隔离级别，使用的默认隔离级别。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-173">If you do not specify an isolation level, the default isolation level is used.</span></span> <span data-ttu-id="a3fc5-174">若要指定隔离级别与<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>方法，请使用采用的重载`iso`参数 (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-174">To specify an isolation level with the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> method, use the overload that takes the `iso` parameter (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>).</span></span> <span data-ttu-id="a3fc5-175">设置事务的隔离级别仍然保持事务完成后，直到关闭或断开连接。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-175">The isolation level set for a transaction persists after the transaction is completed and until the connection is closed or disposed.</span></span> <span data-ttu-id="a3fc5-176">隔离将级别设置为**快照**不启用快照隔离级别时的数据库中不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-176">Setting the isolation level to **Snapshot** in a database where the snapshot isolation level is not enabled does not throw an exception.</span></span> <span data-ttu-id="a3fc5-177">事务将在完成使用的默认隔离级别。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-177">The transaction will complete using the default isolation level.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a3fc5-178">如果启动事务，级别 16 或更高版本的错误发生在服务器上，事务将不会回滚直到<xref:System.Data.SqlClient.SqlDataReader.Read%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-178">If a transaction is started and a level 16 or higher error occurs on the server, the transaction will not be rolled back until the <xref:System.Data.SqlClient.SqlDataReader.Read%2A> method is invoked.</span></span> <span data-ttu-id="a3fc5-179">不引发任何异常**ExecuteReader**。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-179">No exception is thrown on **ExecuteReader**.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a3fc5-180">当你的查询返回大量的数据和调用`BeginTransaction`、<xref:System.Data.SqlClient.SqlException>因为 SQL Server 不允许并行事务使用 MARS 时引发。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-180">When your query returns a large amount of data and calls `BeginTransaction`, a <xref:System.Data.SqlClient.SqlException> is thrown because SQL Server does not allow parallel transactions when using MARS.</span></span> <span data-ttu-id="a3fc5-181">若要避免此问题，始终将关联事务与命令和 / 或连接之前任何读取器处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-181">To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</span></span>  
  
 <span data-ttu-id="a3fc5-182">对 SQL Server 中的事务的详细信息，请参阅"显式事务"和 SQL Server 联机丛书中的"编码高效事务"。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-182">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-183">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-183">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="a3fc5-184">它还演示如何使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>，和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-184">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="a3fc5-185">使用多个活动结果集 (MARS) 时，不允许并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-185">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a3fc5-186">不支持并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-186">Parallel transactions are not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">
          <span data-ttu-id="a3fc5-187">事务应在其下运行的隔离级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-187">The isolation level under which the transaction should run.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-188">以指定的隔离级别启动数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-188">Starts a database transaction with the specified isolation level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-189">表示新事务的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-189">An object representing the new transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-190">此命令将映射到 BEGIN TRANSACTION 的 SQL Server 实现。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-190">This command maps to the SQL Server implementation of BEGIN TRANSACTION.</span></span>  
  
 <span data-ttu-id="a3fc5-191">你必须显式提交或回滚事务使用<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>或<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-191">You must explicitly commit or roll back the transaction using the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> or <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method.</span></span> <span data-ttu-id="a3fc5-192">若要确保 SQL Server 事务管理模型.NET Framework 数据提供程序正常运行，请避免使用其他事务管理模型，例如 SQL Server 提供的那一个。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-192">To make sure that the .NET Framework Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-193">提交或回滚事务后，事务的隔离级别仍然存在的所有后续命令处于自动提交模式 （SQL Server 默认值）。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-193">After a transaction is committed or rolled back, the isolation level of the transaction persists for all subsequent commands that are in autocommit mode (the SQL Server default).</span></span> <span data-ttu-id="a3fc5-194">这可能会产生意外的结果，如保持和锁定在行外的其他用户 REPEATABLE READ 隔离级别。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-194">This can produce unexpected results, such as an isolation level of REPEATABLE READ persisting and locking other users out of a row.</span></span> <span data-ttu-id="a3fc5-195">若要重置为默认值 (READ COMMITTED) 的隔离级别，请执行[!INCLUDE[tsql](~/includes/tsql-md.md)]设置事务隔离级别 READ COMMITTED 语句或调用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType>后跟来<xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-195">To reset the isolation level to the default (READ COMMITTED), execute the [!INCLUDE[tsql](~/includes/tsql-md.md)] SET TRANSACTION ISOLATION LEVEL READ COMMITTED statement, or call <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> followed immediately by <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a3fc5-196">有关 SQL Server 隔离级别的详细信息，请参阅"隔离级别中数据库引擎"在 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-196">For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="a3fc5-197">对 SQL Server 中的事务的详细信息，请参阅"显式事务"和 SQL Server 联机丛书中的"编码高效事务"。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-197">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a3fc5-198">当你的查询返回大量的数据和调用`BeginTransaction`、<xref:System.Data.SqlClient.SqlException>因为 SQL Server 不允许并行事务使用 MARS 时引发。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-198">When your query returns a large amount of data and calls `BeginTransaction`, a <xref:System.Data.SqlClient.SqlException> is thrown because SQL Server does not allow parallel transactions when using MARS.</span></span> <span data-ttu-id="a3fc5-199">若要避免此问题，始终将关联事务与命令和 / 或连接之前任何读取器处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-199">To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-200">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-200">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="a3fc5-201">它还演示如何使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>，和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-201">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="a3fc5-202">使用多个活动结果集 (MARS) 时，不允许并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-202">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a3fc5-203">不支持并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-203">Parallel transactions are not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">
          <span data-ttu-id="a3fc5-204">事务名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-204">The name of the transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-205">以指定的事务名称启动数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-205">Starts a database transaction with the specified transaction name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-206">表示新事务的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-206">An object representing the new transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-207">此命令将映射到 BEGIN TRANSACTION 的 SQL Server 实现。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-207">This command maps to the SQL Server implementation of BEGIN TRANSACTION.</span></span>  
  
 <span data-ttu-id="a3fc5-208">长度`transactionName`参数不能超过 32 个字符; 否则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-208">The length of the `transactionName` parameter must not exceed 32 characters; otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="a3fc5-209">中的值`transactionName`参数可在更高版本调用<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>并在`savePoint`参数<xref:System.Data.SqlClient.SqlTransaction.Save%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-209">The value in the `transactionName` parameter can be used in later calls to <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> and in the `savePoint` parameter of the <xref:System.Data.SqlClient.SqlTransaction.Save%2A> method.</span></span>  
  
 <span data-ttu-id="a3fc5-210">你必须显式提交或回滚事务使用<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>或<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-210">You must explicitly commit or roll back the transaction using the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> or <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method.</span></span> <span data-ttu-id="a3fc5-211">若要确保[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]数据提供程序的 SQL Server 事务管理模型是否正常运行，请避免使用其他事务管理模型，例如 SQL Server 提供的。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-211">To make sure that the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</span></span>  
  
 <span data-ttu-id="a3fc5-212">对 SQL Server 中的事务的详细信息，请参阅"显式事务"和 SQL Server 联机丛书中的"编码高效事务"。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-212">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a3fc5-213">当你的查询返回大量的数据和调用`BeginTransaction`、<xref:System.Data.SqlClient.SqlException>因为 SQL Server 不允许并行事务使用 MARS 时引发。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-213">When your query returns a large amount of data and calls `BeginTransaction`, a <xref:System.Data.SqlClient.SqlException> is thrown because SQL Server does not allow parallel transactions when using MARS.</span></span> <span data-ttu-id="a3fc5-214">若要避免此问题，始终将关联事务与命令和 / 或连接之前任何读取器处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-214">To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-215">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-215">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="a3fc5-216">它还演示如何使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>，和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-216">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="a3fc5-217">使用多个活动结果集 (MARS) 时，不允许并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-217">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a3fc5-218">不支持并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-218">Parallel transactions are not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">
          <span data-ttu-id="a3fc5-219">事务应在其下运行的隔离级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-219">The isolation level under which the transaction should run.</span>
          </span>
        </param>
        <param name="transactionName">
          <span data-ttu-id="a3fc5-220">事务名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-220">The name of the transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-221">以指定的隔离级别和事务名称启动数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-221">Starts a database transaction with the specified isolation level and transaction name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-222">表示新事务的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-222">An object representing the new transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-223">此命令将映射到 BEGIN TRANSACTION 的 SQL Server 实现。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-223">This command maps to the SQL Server implementation of BEGIN TRANSACTION.</span></span>  
  
 <span data-ttu-id="a3fc5-224">中的值`transactionName`参数可在更高版本调用<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>并在`savePoint`参数<xref:System.Data.SqlClient.SqlTransaction.Save%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-224">The value in the `transactionName` parameter can be used in later calls to <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> and in the `savePoint` parameter of the <xref:System.Data.SqlClient.SqlTransaction.Save%2A> method.</span></span>  
  
 <span data-ttu-id="a3fc5-225">你必须显式提交或回滚事务使用<xref:System.Data.SqlClient.SqlTransaction.Commit%2A>或<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-225">You must explicitly commit or roll back the transaction using the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> or <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> method.</span></span> <span data-ttu-id="a3fc5-226">若要确保 SQL Server 事务管理模型正常运行，请避免使用其他事务管理模型，例如 SQL Server 提供的那一个。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-226">To make sure that the SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-227">提交或回滚事务后，事务的隔离级别仍然存在的所有后续命令处于自动提交模式 （SQL Server 默认值）。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-227">After a transaction is committed or rolled back, the isolation level of the transaction persists for all subsequent commands that are in autocommit mode (the SQL Server default).</span></span> <span data-ttu-id="a3fc5-228">这可能会产生意外的结果，如保持和锁定在行外的其他用户 REPEATABLE READ 隔离级别。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-228">This can produce unexpected results, such as an isolation level of REPEATABLE READ persisting and locking other users out of a row.</span></span> <span data-ttu-id="a3fc5-229">若要重置为默认值 (READ COMMITTED) 的隔离级别，请执行[!INCLUDE[tsql](~/includes/tsql-md.md)]设置事务隔离级别 READ COMMITTED 语句或调用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType>后跟来<xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-229">To reset the isolation level to the default (READ COMMITTED), execute the [!INCLUDE[tsql](~/includes/tsql-md.md)] SET TRANSACTION ISOLATION LEVEL READ COMMITTED statement, or call <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> followed immediately by <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a3fc5-230">有关 SQL Server 隔离级别的详细信息，请参阅"隔离级别中数据库引擎"在 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-230">For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="a3fc5-231">对 SQL Server 中的事务的详细信息，请参阅"显式事务"和 SQL Server 联机丛书中的"编码高效事务"。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-231">For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a3fc5-232">当你的查询返回大量的数据和调用`BeginTransaction`、<xref:System.Data.SqlClient.SqlException>因为 SQL Server 不允许并行事务使用 MARS 时引发。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-232">When your query returns a large amount of data and calls `BeginTransaction`, a <xref:System.Data.SqlClient.SqlException> is thrown because SQL Server does not allow parallel transactions when using MARS.</span></span> <span data-ttu-id="a3fc5-233">若要避免此问题，始终将关联事务与命令和 / 或连接之前任何读取器处于打开状态。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-233">To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-234">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlTransaction>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-234">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="a3fc5-235">它还演示如何使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>、 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>，和<xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-235">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="a3fc5-236">使用多个活动结果集 (MARS) 时，不允许并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-236">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a3fc5-237">不支持并行事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-237">Parallel transactions are not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">
          <span data-ttu-id="a3fc5-238">要代替当前数据库加以使用的数据库的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-238">The name of the database to use instead of the current database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-239">更改已打开的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的当前数据库。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-239">Changes the current database for an open <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-240">中提供的值`database`参数必须是有效的数据库名称。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-240">The value supplied in the `database` parameter must be a valid database name.</span></span> <span data-ttu-id="a3fc5-241">`database`参数不能包含 null 值、 空字符串或仅有空白字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-241">The `database` parameter cannot contain a null value, an empty string, or a string with only blank characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-242">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>并显示部分只读属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-242">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3fc5-243">数据库名称无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-243">The database name is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a3fc5-244">连接未打开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-244">The connection is not open.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="a3fc5-245">不能更改数据库。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-245">Cannot change the database.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-246">更改 SQL Server 密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-246">Changes the SQL Server password.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="a3fc5-247">包含连接至所需服务器的足够信息的连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-247">The connection string that contains enough information to connect to the server that you want.</span>
          </span>
          <span data-ttu-id="a3fc5-248">连接字符串必须包含用户 ID 和当前密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-248">The connection string must contain the user ID and the current password.</span>
          </span>
        </param>
        <param name="newPassword">
          <span data-ttu-id="a3fc5-249">要设置的新密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-249">The new password to set.</span>
          </span>
          <span data-ttu-id="a3fc5-250">此密码必须符合服务器上设置的任何密码安全策略，包括最小长度、特定字符要求等等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-250">This password must comply with any password security policy set on the server, including minimum length, requirements for specific characters, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-251">将连接字符串中指示的用户的 SQL Server 密码更改为提供的新密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-251">Changes the SQL Server password for the user indicated in the connection string to the supplied new password.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-252">当你在 Windows Server 上使用 SQL Server 时，开发人员可以利用使客户端应用程序提供当前和新密码才能更改现有密码的功能。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-252">When you are using SQL Server on Windows Server, developers can take advantage of functionality that lets the client application supply both the current and a new password in order to change the existing password.</span></span> <span data-ttu-id="a3fc5-253">应用程序可以实现功能，如在初始登录期间提示用户输入新密码，如果旧已过期，并且可以完成此操作，而无需管理员干预。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-253">Applications can implement functionality such as prompting the user for a new password during initial login if the old one has expired, and this operation can be completed without administrator intervention.</span></span>  
  
 <span data-ttu-id="a3fc5-254"><xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A>方法更改为用户提供所示的 SQL Server 密码`connectionString`参数中提供的值`newPassword`参数。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-254">The <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> method changes the SQL Server password for the user indicated in the supplied `connectionString` parameter to the value supplied in the `newPassword` parameter.</span></span> <span data-ttu-id="a3fc5-255">如果连接字符串将包括集成安全性的选项 (即"集成的安全性 = True"或同等身份)，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-255">If the connection string includes the option for integrated security (that is, "Integrated Security=True" or the equivalent), an exception is thrown.</span></span>  
  
 <span data-ttu-id="a3fc5-256">若要确定的密码已过期，这将调用<xref:System.Data.SqlClient.SqlConnection.Open%2A>方法引发<xref:System.Data.SqlClient.SqlException>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-256">To determine that the password has expired, calling the <xref:System.Data.SqlClient.SqlConnection.Open%2A> method raises a <xref:System.Data.SqlClient.SqlException>.</span></span> <span data-ttu-id="a3fc5-257">若要指示，则必须重置连接字符串中包含的密码，<xref:System.Data.SqlClient.SqlException.Number%2A>异常的属性包含状态值 18487 或 18488。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-257">In order to indicate that the password that is contained within the connection string must be reset, the <xref:System.Data.SqlClient.SqlException.Number%2A> property for the exception contains the status value 18487 or 18488.</span></span> <span data-ttu-id="a3fc5-258">第一个值 (18487) 指示的密码已过期，而第二个 (18488) 指示在登录之前，必须重置密码。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-258">The first value (18487) indicates that the password has expired and the second (18488) indicates that the password must be reset before logging in.</span></span>  
  
 <span data-ttu-id="a3fc5-259">此方法打开其自己的连接到服务器，请求密码更改，并已完成后立即关闭连接。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-259">This method opens its own connection to the server, requests the password change, and closes the connection as soon as it has completed.</span></span> <span data-ttu-id="a3fc5-260">此连接不检索从，也不返回到 SQL Server 连接池。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-260">This connection is not retrieved from, nor returned to, the SQL Server connection pool.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-261">下面是更改密码的简单示例：</span><span class="sxs-lookup"><span data-stu-id="a3fc5-261">The following is a simple example of changing a password:</span></span>  
  
```  
class Program {  
   static void Main(string[] args) {  
      System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password");  
   }  
}  
  
```  
  
```  
Module Module1  
    Sub Main()  
System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password")  
    End Sub  
End Module  
  
```  
  
 <span data-ttu-id="a3fc5-262">以下控制台应用程序演示涉及中更改用户的密码，因为当前的密码已过期的问题。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-262">The following console application demonstrates the issues involved in changing a user's password because the current password has expired.</span></span>  
  
 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3fc5-263">连接字符串包括将使用集成安全性的选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-263">The connection string includes the option to use integrated security.</span>
          </span>
          <span data-ttu-id="a3fc5-264">或  <paramref name="newPassword" /> 超过了 128 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-264">Or  The <paramref name="newPassword" /> exceeds 128 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3fc5-265">
            <paramref name="connectionString" /> 或 <paramref name="newPassword" /> 参数为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-265">Either the <paramref name="connectionString" /> or the <paramref name="newPassword" /> parameter is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="a3fc5-266">包含连接至服务器的足够信息的连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-266">The connection string that contains enough information to connect to a server.</span>
          </span>
          <span data-ttu-id="a3fc5-267">不应使用以下任何连接字符串关键字的连接字符串：<see langword="Integrated Security = true" />、 <see langword="UserId" />，或 <see langword="Password" />；或者 <see langword="ContextConnection = true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-267">The connection string should not use any of the following connection string keywords: <see langword="Integrated Security = true" />, <see langword="UserId" />, or <see langword="Password" />; or <see langword="ContextConnection = true" />.</span>
          </span>
        </param>
        <param name="credential">
          <span data-ttu-id="a3fc5-268">
            <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-268">A <see cref="T:System.Data.SqlClient.SqlCredential" /> object.</span>
          </span>
        </param>
        <param name="newSecurePassword">
          <span data-ttu-id="a3fc5-269">新密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-269">The new password.</span>
          </span>
          <span data-ttu-id="a3fc5-270">
            <c>newSecurePassword</c> 必须为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-270">
              <c>newSecurePassword</c> must be read only.</span>
          </span>
          <span data-ttu-id="a3fc5-271">该密码也必须符合服务器上设置的任何密码安全策略（例如：最小长度、特定字符要求）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-271">The password must also comply with any password security policy set on the server (for example, minimum length and requirements for specific characters).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-272">更改 <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象中指示的用户的 SQL Server 密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-272">Changes the SQL Server password for the user indicated in the <see cref="T:System.Data.SqlClient.SqlCredential" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3fc5-273">1.连接字符串包含 <see langword="UserId" />、 <see langword="Password" /> 或 <see langword="Integrated Security=true" /> 的任意组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-273">1.  The connection string contains any combination of <see langword="UserId" />, <see langword="Password" />, or <see langword="Integrated Security=true" />.</span>
          </span>
          <span data-ttu-id="a3fc5-274">2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-274">2.</span>
          </span>
          <span data-ttu-id="a3fc5-275">连接字符串包含 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-275">The connection string contains <see langword="Context Connection=true" />.</span>
          </span>
          <span data-ttu-id="a3fc5-276">3.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-276">3.</span>
          </span>
          <span data-ttu-id="a3fc5-277">
            <paramref name="newSecurePassword" /> 的长度超过 128 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-277">
              <paramref name="newSecurePassword" /> is greater than 128 characters.</span>
          </span>
          <span data-ttu-id="a3fc5-278">4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-278">4.</span>
          </span>
          <span data-ttu-id="a3fc5-279">
            <paramref name="newSecurePassword" /> 不是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-279">
              <paramref name="newSecurePassword" /> is not read only.</span>
          </span>
          <span data-ttu-id="a3fc5-280">5.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-280">5.</span>
          </span>
          <span data-ttu-id="a3fc5-281">
            <paramref name="newSecurePassword" /> 是一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-281">
              <paramref name="newSecurePassword" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3fc5-282">其中一个参数（<paramref name="connectionString" />、<paramref name="credential" /> 或 <paramref name="newSecurePassword" />）为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-282">One of the parameters (<paramref name="connectionString" />, <paramref name="credential" />, or <paramref name="newSecurePassword" />) is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-283">清空连接池。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-283">Empties the connection pool.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-284"><xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A> 重置 （或清空） 的连接池。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-284"><xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A> resets (or empties) the connection pool.</span></span> <span data-ttu-id="a3fc5-285">如果在调用时使用的连接，它们进行相应的标记并且将被放弃 （而不返回到池） 时<xref:System.Data.SqlClient.SqlConnection.Close%2A>对其调用。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-285">If there are connections in use at the time of the call, they are marked appropriately and will be discarded (instead of being returned to the pool) when <xref:System.Data.SqlClient.SqlConnection.Close%2A> is called on them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="a3fc5-286">要从池中清除的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-286">The <see cref="T:System.Data.SqlClient.SqlConnection" /> to be cleared from the pool.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-287">清空与指定连接关联的连接池。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-287">Empties the connection pool associated with the specified connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-288"><xref:System.Data.SqlClient.SqlConnection.ClearPool%2A> 清除与关联的连接池`connection`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-288"><xref:System.Data.SqlClient.SqlConnection.ClearPool%2A> clears the connection pool that is associated with the `connection`.</span></span> <span data-ttu-id="a3fc5-289">如果其他连接与关联`connection`是在使用中时调用的它们进行相应的标记，将被丢弃 （而不返回到池） 时<xref:System.Data.SqlClient.SqlConnection.Close%2A>对其调用。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-289">If additional connections associated with `connection` are in use at the time of the call, they are marked appropriately and are discarded (instead of being returned to the pool) when <xref:System.Data.SqlClient.SqlConnection.Close%2A> is called on them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-290">最近连接尝试连接的 ID，无论该尝试是成功还是失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-290">The connection ID of the most recent connection attempt, regardless of whether the attempt succeeded or failed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-291">最近连接尝试的连接 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-291">The connection ID of the most recent connection attempt.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-292"><xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A> 无论哪个版本的服务器的工作原理你连接到，但扩展的事件日志和上连接环形缓冲区错误项将不会显示在[!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)]及更早版本。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-292"><xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A> works regardless of which version of the server you connect to, but extended events logs and entry on connectivity ring buffer errors will not be present in [!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)] and earlier.</span></span>  
  
 <span data-ttu-id="a3fc5-293">你可以扩展的事件日志，以查看是否在服务器上已失败是否启用日志记录连接 ID 的扩展的事件中找到的连接 ID。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-293">You can locate the connection ID in the extended events log to see if the failure was on the server if the extended event for logging connection ID is enabled.</span></span> <span data-ttu-id="a3fc5-294">你还可以连接环形缓冲区中找到的连接 ID ([连接中使用连接环形缓冲区的 SQL Server 2008 的故障排除](http://go.microsoft.com/fwlink/?LinkId=207752)) 对于某些连接错误。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-294">You can also locate the connection ID in the connection ring buffer ([Connectivity troubleshooting in SQL Server 2008 with the Connectivity Ring Buffer](http://go.microsoft.com/fwlink/?LinkId=207752)) for certain connection errors.</span></span> <span data-ttu-id="a3fc5-295">如果连接 ID 不是连接环形缓冲区中，你可以假定网络错误。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-295">If the connection ID is not in the connection ring buffer, you can assume a network error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-296">关闭与数据库之间的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-296">Closes the connection to the database.</span>
          </span>
          <span data-ttu-id="a3fc5-297">此方法是关闭任何打开连接的首选方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-297">This is the preferred method of closing any open connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-298"><xref:System.Data.SqlClient.SqlConnection.Close%2A>方法回滚任何挂起的事务。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-298">The <xref:System.Data.SqlClient.SqlConnection.Close%2A> method rolls back any pending transactions.</span></span> <span data-ttu-id="a3fc5-299">然后，它将释放到连接池，连接或关闭的连接，如果禁用连接池。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-299">It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-300">挂起的事务开始使用[!INCLUDE[tsql](~/includes/tsql-md.md)]或<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>连接重置时，如果启用了连接池时将自动回滚。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-300">Pending transactions started using [!INCLUDE[tsql](~/includes/tsql-md.md)] or <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> are automatically rolled back when the connection is reset if connection pooling is enabled.</span></span> <span data-ttu-id="a3fc5-301">如果连接池处于关闭状态，则事务将回滚之后`SqlConnection.Close`调用。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-301">If connection pooling is off, the transaction is rolled back after `SqlConnection.Close` is called.</span></span> <span data-ttu-id="a3fc5-302">通过启动事务<xref:System.Transactions>通过控制`System.Transactions`基础结构，而不受`SqlConnection.Close`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-302">Transactions started through <xref:System.Transactions> are controlled through the `System.Transactions` infrastructure, and are not affected by `SqlConnection.Close`.</span></span>  
  
 <span data-ttu-id="a3fc5-303">应用程序可以调用<xref:System.Data.SqlClient.SqlConnection.Close%2A>不止一次。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-303">An application can call <xref:System.Data.SqlClient.SqlConnection.Close%2A> more than one time.</span></span> <span data-ttu-id="a3fc5-304">不会生成异常。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-304">No exception is generated.</span></span>  
  
 <span data-ttu-id="a3fc5-305">如果<xref:System.Data.SqlClient.SqlConnection>超出范围，则不会关闭。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-305">If the <xref:System.Data.SqlClient.SqlConnection> goes out of scope, it won't be closed.</span></span> <span data-ttu-id="a3fc5-306">因此，必须显式关闭连接通过调用`Close`或`Dispose`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-306">Therefore, you must explicitly close the connection by calling `Close` or `Dispose`.</span></span> <span data-ttu-id="a3fc5-307">`Close` 和`Dispose`在功能上等效。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-307">`Close` and `Dispose` are functionally equivalent.</span></span> <span data-ttu-id="a3fc5-308">如果连接池值`Pooling`设置为`true`或`yes`，则基础连接返回到连接池。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-308">If the connection pooling value `Pooling` is set to `true` or `yes`, the underlying connection is returned back to the connection pool.</span></span> <span data-ttu-id="a3fc5-309">另一方面，如果`Pooling`设置为`false`或`no`，则基础到服务器的连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-309">On the other hand, if `Pooling` is set to `false` or `no`, the underlying connection to the server is closed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-310">从连接池中提取连接或将连接返回到连接池时，服务器上不会引发登录和注销事件，这是因为在将连接返回到连接池时实际上并没有将其关闭。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-310">Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool.</span></span> <span data-ttu-id="a3fc5-311">有关详细信息，请参阅 [SQL Server 连接池 (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-311">For more information, see [SQL Server Connection Pooling (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a3fc5-312">不要调用`Close`或`Dispose`连接、 DataReader 或在任何其他托管的对象上`Finalize`你类的方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-312">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="a3fc5-313">在终结器中，你应仅释放类直接拥有的非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-313">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="a3fc5-314">如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-314">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="a3fc5-315">有关详细信息，请参阅[垃圾回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-315">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-316">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>、 将其打开、 显示它的一些属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-316">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, displays some of its properties.</span></span> <span data-ttu-id="a3fc5-317">连接会自动关闭的末尾`using`块。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-317">The connection is automatically closed at the end of the `using` block.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="a3fc5-318">打开连接时出现的连接级别的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-318">The connection-level error that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-319">在用于 [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine) 功能的列加密密钥缓存中，获取或设置列加密密钥项的生存时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-319">Gets or sets the time-to-live for column encryption key entries in the column encryption key cache for the [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine) feature.</span>
          </span>
          <span data-ttu-id="a3fc5-320">默认值为 2 小时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-320">The default value is 2 hours.</span>
          </span>
          <span data-ttu-id="a3fc5-321">0 表示无缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-321">0 means no caching at all.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-322">时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-322">The time interval.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-323">获取或设置一个值，该值指示对参数化查询（针对已启用 [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine) 的数据库运行）已启用 (True) 还是未启用 (False) 查询元数据缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-323">Gets or sets a value that indicates whether query metadata caching is enabled (true) or not (false) for parameterized queries running against [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine) enabled databases.</span>
          </span>
          <span data-ttu-id="a3fc5-324">默认值为 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-324">The default value is true.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-325">如果启用查询元数据缓存，则返回 True；否则返回 False。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-325">Returns true if query metadata caching is enabled; otherwise false.</span>
          </span>
          <span data-ttu-id="a3fc5-326">默认为 True。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-326">true is the default.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-327">对于参数化查询，SqlClient 往返将向发出 SQL Server 的参数元数据，以查看它需要加密的参数以及如何 （应使用哪个密钥和算法）。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-327">For parameterized queries, SqlClient makes a roundtrip to SQL Server for parameter metadata, to see which parameter it needs to encrypt and how (which keys and algorithms should be used).</span></span> <span data-ttu-id="a3fc5-328">如果应用程序调用相同的查询多个时间，一个额外往返生成指向服务器的每个时，这会降低应用程序性能。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-328">If the application calls the same query multiple times, an extra roundtrip is made to the server each time, which degrades application performance.</span></span>  
  
 <span data-ttu-id="a3fc5-329">与**ColumnEncryptionQueryMetadataCacheEnabled**设置为 true，如果多次调用了相同的查询，到服务器往返将进行一次。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-329">With **ColumnEncryptionQueryMetadataCacheEnabled** set to true, if the same query is called multiple times, the roundtrip to the server will be made only once.</span></span> <span data-ttu-id="a3fc5-330">缓存中有一个非可配置的最大大小参数，设置为 2000年查询。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-330">The cache has a non-configurable Max size parameter that is set to 2000 queries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-331">允许你设置数据库服务器的受信任密钥路径列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-331">Allows you to set a list of trusted key paths for a database server.</span>
          </span>
          <span data-ttu-id="a3fc5-332">如果在处理应用程序查询时驱动程序接收到不位于列表中的密钥路径，则查询会失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-332">If while processing an application query the driver receives a key path that is not on the list, the query will fail.</span>
          </span>
          <span data-ttu-id="a3fc5-333">此属性针对安全攻击提供附加保护，这些安全攻击涉及提供伪造密钥路径的受威胁的 SQL Server，可能导致密钥存储凭据泄露。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-333">This property provides additional protection against security attacks that involve a compromised SQL Server providing fake key paths, which may lead to leaking key store credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-334">适用于列加密的受信任主密钥路径的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-334">The list of trusted master key paths for the column encryption.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-335">获取或设置用于打开 SQL Server 数据库的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-335">Gets or sets the string used to open a SQL Server database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-336">连接字符串，其中包含源数据库名称和建立初始连接所需的其他参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-336">The connection string that includes the source database name, and other parameters needed to establish the initial connection.</span>
          </span>
          <span data-ttu-id="a3fc5-337">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-337">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-338"><xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>类似于一个 OLE DB 连接字符串，但并不完全相同。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-338">The <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> is similar to an OLE DB connection string, but is not identical.</span></span> <span data-ttu-id="a3fc5-339">与 OLE DB 或 ADO，不同的连接字符串，则返回等同于用户设置<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>，安全信息如果 Persist Security Info 值设置为减`false`（默认值）。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-339">Unlike OLE DB or ADO, the connection string that is returned is the same as the user-set <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>, minus security information if the Persist Security Info value is set to `false` (default).</span></span> <span data-ttu-id="a3fc5-340">SQL Server.NET Framework 数据提供程序不会保留或返回一个连接字符串中的密码，除非 Persist Security Info 设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-340">The .NET Framework Data Provider for SQL Server does not persist or return the password in a connection string unless you set Persist Security Info to `true`.</span></span>  
  
 <span data-ttu-id="a3fc5-341">你可以使用<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>属性，以连接到数据库。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-341">You can use the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property to connect to a database.</span></span> <span data-ttu-id="a3fc5-342">下面的示例演示一个典型的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-342">The following example illustrates a typical connection string.</span></span>  
  
```  
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"  
```  
  
 <span data-ttu-id="a3fc5-343">使用新<xref:System.Data.SqlClient.SqlConnectionStringBuilder>可以在运行时构造有效的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-343">Use the new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> to construct valid connection strings at run time.</span></span> <span data-ttu-id="a3fc5-344">有关详细信息，请参阅[连接字符串生成器](~/docs/framework/data/adonet/connection-string-builders.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-344">For more information, see [Connection String Builders](~/docs/framework/data/adonet/connection-string-builders.md).</span></span>  
  
 <span data-ttu-id="a3fc5-345"><xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>关闭连接时，才可以设置属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-345">The <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property can be set only when the connection is closed.</span></span> <span data-ttu-id="a3fc5-346">连接字符串值的许多具有相应的只读属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-346">Many of the connection string values have corresponding read-only properties.</span></span> <span data-ttu-id="a3fc5-347">当设置连接字符串时，将更新这些属性，除非当检测到错误。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-347">When the connection string is set, these properties are updated, except when an error is detected.</span></span> <span data-ttu-id="a3fc5-348">在这种情况下，不会更新任何属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-348">In this case, none of the properties are updated.</span></span> <span data-ttu-id="a3fc5-349"><xref:System.Data.SqlClient.SqlConnection> 属性返回中包含的那些设置<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-349"><xref:System.Data.SqlClient.SqlConnection> properties return only those settings that are contained in the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.</span></span>  
  
 <span data-ttu-id="a3fc5-350">若要连接到本地计算机，指定"(local)"的服务器。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-350">To connect to a local computer, specify "(local)" for the server.</span></span> <span data-ttu-id="a3fc5-351">如果未指定服务器名称，将尝试连接到本地计算机上的默认实例。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-351">If a server name is not specified, a connection will be attempted to the default instance on the local computer.</span></span>  
  
 <span data-ttu-id="a3fc5-352">重置<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>关闭的连接将重置所有连接字符串值 （和相关的属性） 包括密码。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-352">Resetting the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> on a closed connection resets all connection string values (and related properties) including the password.</span></span> <span data-ttu-id="a3fc5-353">例如，如果你设置的连接字符串，包括"数据库 = AdventureWorks"，然后重置的连接字符串"数据源 = myserver; 集成的安全性 = true"，则<xref:System.Data.SqlClient.SqlConnection.Database%2A>属性不能再设置为"AdventureWorks"。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-353">For example, if you set a connection string that includes "Database= AdventureWorks", and then reset the connection string to "Data Source=myserver;Integrated Security=true", the <xref:System.Data.SqlClient.SqlConnection.Database%2A> property is no longer set to "AdventureWorks".</span></span>  
  
 <span data-ttu-id="a3fc5-354">在设置之后立即分析连接字符串。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-354">The connection string is parsed immediately after being set.</span></span> <span data-ttu-id="a3fc5-355">如果在分析时，运行时异常，如发现语法中的错误<xref:System.ArgumentException>，生成。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-355">If errors in syntax are found when parsing, a runtime exception, such as <xref:System.ArgumentException>, is generated.</span></span> <span data-ttu-id="a3fc5-356">仅当尝试打开连接时，可以找到其他错误。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-356">Other errors can be found only when an attempt is made to open the connection.</span></span>  
  
 <span data-ttu-id="a3fc5-357">连接字符串的基本格式包含一系列的用分号分隔的关键字/值对。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-357">The basic format of a connection string includes a series of keyword/value pairs separated by semicolons.</span></span> <span data-ttu-id="a3fc5-358">每个关键字和它的值之间用等号 (=) 连接。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-358">The equal sign (=) connects each keyword and its value.</span></span> <span data-ttu-id="a3fc5-359">若要包含的值包含分号、 单引号字符或双引号字符，则该值必须括在双引号内。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-359">To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks.</span></span> <span data-ttu-id="a3fc5-360">如果值包含分号和双引号字符，则该值可以括在单引号中。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-360">If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks.</span></span> <span data-ttu-id="a3fc5-361">单引号也是有用的值以双引号字符开头。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-361">The single quotation mark is also useful if the value starts with a double-quote character.</span></span> <span data-ttu-id="a3fc5-362">相反，如果值以单引号开头，则可以使用双引号。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-362">Conversely, the double quotation mark can be used if the value starts with a single quotation mark.</span></span> <span data-ttu-id="a3fc5-363">如果值包含单引号和双引号字符，每次它的值中发生时，用于将值括起来的引号字符必须采用双重方括号。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-363">If the value contains both single-quote and double-quote characters, the quotation mark character used to enclose the value must be doubled every time it occurs within the value.</span></span>  
  
 <span data-ttu-id="a3fc5-364">若要包含前导或尾随空格的字符串值，则该值必须括在单引号或双引号中。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-364">To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks.</span></span> <span data-ttu-id="a3fc5-365">忽略任何前导空格或尾随空格围绕整数、 布尔值或枚举的值，即使用引号引起来。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-365">Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks.</span></span> <span data-ttu-id="a3fc5-366">但是，将保留在字符串文字关键字或值中的空间。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-366">However, spaces within a string literal keyword or value are preserved.</span></span> <span data-ttu-id="a3fc5-367">而不使用分隔符，可能在连接字符串中使用单引号或双引号引号 (例如，数据源 = my'Server 或数据源 = 我的"服务器)，除非引号字符的值中的第一个或最后一个字符。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-367">Single or double quotation marks may be used within a connection string without using delimiters (for example, Data Source= my'Server or Data Source= my"Server), unless a quotation mark character is the first or last character in the value.</span></span>  
  
 <span data-ttu-id="a3fc5-368">关键字不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-368">Keywords are not case sensitive.</span></span>  
  
 <span data-ttu-id="a3fc5-369">下表列出了中的关键字值的有效名称<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-369">The following table lists the valid names for keyword values within the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.</span></span>  
  
  <span data-ttu-id="a3fc5-370">以下列表包含的连接池内的值的有效名称<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-370">The following list contains the valid names for connection pooling values within the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>.</span></span> <span data-ttu-id="a3fc5-371">有关详细信息，请参阅 [SQL Server 连接池 (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-371">For more information, see [SQL Server Connection Pooling (ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md).</span></span>  
  
-   <span data-ttu-id="a3fc5-372">Connection Lifetime （或 Load Balance Timeout）</span><span class="sxs-lookup"><span data-stu-id="a3fc5-372">Connection Lifetime (or Load Balance Timeout)</span></span>  
  
-   <span data-ttu-id="a3fc5-373">Enlist</span><span class="sxs-lookup"><span data-stu-id="a3fc5-373">Enlist</span></span>  
  
-   <span data-ttu-id="a3fc5-374">Max Pool Size</span><span class="sxs-lookup"><span data-stu-id="a3fc5-374">Max Pool Size</span></span>  
  
-   <span data-ttu-id="a3fc5-375">Min Pool Size</span><span class="sxs-lookup"><span data-stu-id="a3fc5-375">Min Pool Size</span></span>  
  
-   <span data-ttu-id="a3fc5-376">Pooling</span><span class="sxs-lookup"><span data-stu-id="a3fc5-376">Pooling</span></span>  
  
 <span data-ttu-id="a3fc5-377">在设置关键字或连接池需要一个布尔值的值时，你可以是使用而不是 'true'，和否而不是 'false'。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-377">When you are setting keyword or connection pooling values that require a Boolean value, you can use 'yes' instead of 'true', and 'no' instead of 'false'.</span></span> <span data-ttu-id="a3fc5-378">整数值表示为字符串。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-378">Integer values are represented as strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-379">SQL Server.NET Framework 数据提供程序使用其自己的协议与 SQL Server 进行通信。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-379">The .NET Framework Data Provider for SQL Server uses its own protocol to communicate with SQL Server.</span></span> <span data-ttu-id="a3fc5-380">因此，它不支持使用 ODBC 数据源名称 (DSN) 时连接到 SQL Server，因为它不会添加一个 ODBC 层。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-380">Therefore, it does not support the use of an ODBC data source name (DSN) when connecting to SQL Server because it does not add an ODBC layer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-381">通用数据链接 (UDL) 文件不支持.NET Framework 数据提供程序为 SQL Server。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-381">Universal data link (UDL) files are not supported for the .NET Framework Data Provider for SQL Server.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a3fc5-382">在此版本中，应用程序时应小心构造根据用户输入 （例如，从一个对话框，并将其追加到连接字符串中检索用户 ID 和密码信息时） 的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-382">In this release, the application should use caution when constructing a connection string based on user input (for example when retrieving user ID and password information from a dialog box, and appending it to the connection string).</span></span> <span data-ttu-id="a3fc5-383">应用程序应确保用户不能嵌入在这些值中的其他连接字符串参数 (例如，输入一个密码作为"validpassword; 数据库 = somedb"尝试附加到不同数据库中)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-383">The application should make sure that a user cannot embed additional connection string parameters in these values (for example, entering a password as "validpassword;database=somedb" in an attempt to attach to a different database).</span></span> <span data-ttu-id="a3fc5-384">如果你需要构造基于用户输入的连接字符串，使用新<xref:System.Data.SqlClient.SqlConnectionStringBuilder>，它验证的连接字符串，并有助于避免此问题。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-384">If you need to construct connection strings based on user input, use the new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, which validates the connection string and helps to eliminate this problem.</span></span> <span data-ttu-id="a3fc5-385">请参阅[连接字符串生成器](~/docs/framework/data/adonet/connection-string-builders.md)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-385">See [Connection String Builders](~/docs/framework/data/adonet/connection-string-builders.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-386">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>和设置<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>之前打开连接的属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-386">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property before opening the connection.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3fc5-387">提供了一个无效的连接字符串参数，或者未提供所需的连接字符串参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-387">An invalid connection string argument has been supplied, or a required connection string argument has not been supplied.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-388">获取终止尝试并生成错误之前在尝试建立连接时所等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-388">Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-389">等待连接打开所需的时间（以秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-389">The time (in seconds) to wait for a connection to open.</span>
          </span>
          <span data-ttu-id="a3fc5-390">默认值为 15 秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-390">The default value is 15 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-391">你可以通过使用连接等待的时间量设置为超时`Connect Timeout`或`Connection Timeout`连接字符串中的关键字。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-391">You can set the amount of time a connection waits to time out by using the `Connect Timeout` or `Connection Timeout` keywords in the connection string.</span></span> <span data-ttu-id="a3fc5-392">值为 0 表示没有限制，，应当避免在<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>由于尝试连接将无限期等待。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-392">A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> because an attempt to connect waits indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-393">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>和设置`Connection Timeout`到连接字符串中的 30 秒。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-393">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the `Connection Timeout` to 30 seconds in the connection string.</span></span> <span data-ttu-id="a3fc5-394">该代码打开连接，并显示<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>在控制台窗口中的属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-394">The code opens the connection and displays the <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> property in the console window.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3fc5-395">设置的值小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-395">The value set is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-396">创建并返回与 <see cref="T:System.Data.SqlClient.SqlConnection" /> 关联的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-396">Creates and returns a <see cref="T:System.Data.SqlClient.SqlCommand" /> object associated with the <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-397">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-397">A <see cref="T:System.Data.SqlClient.SqlCommand" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-398">获取或设置此连接的 <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-398">Gets or sets the <see cref="T:System.Data.SqlClient.SqlCredential" /> object for this connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-399">此连接的 <see cref="T:System.Data.SqlClient.SqlCredential" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-399">The <see cref="T:System.Data.SqlClient.SqlCredential" /> object for this connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-400">`Persist Security Info = true` 获取的值所需<xref:System.Data.SqlClient.SqlCredential>对象<xref:System.Data.SqlClient.SqlConnection.Credential%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-400">`Persist Security Info = true` is required to get the value of the <xref:System.Data.SqlClient.SqlCredential> object with <xref:System.Data.SqlClient.SqlConnection.Credential%2A>.</span></span>  
  
 <span data-ttu-id="a3fc5-401">默认值<xref:System.Data.SqlClient.SqlConnection.Credential%2A>为 null。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-401">The default value of <xref:System.Data.SqlClient.SqlConnection.Credential%2A> is null.</span></span>  
  
 <span data-ttu-id="a3fc5-402"><xref:System.InvalidOperationException>将引发异常：</span><span class="sxs-lookup"><span data-stu-id="a3fc5-402">An <xref:System.InvalidOperationException> exception will be raised:</span></span>  
  
-   <span data-ttu-id="a3fc5-403">如果<xref:System.Data.SqlClient.SqlConnection.Credential%2A>对打开的连接设置。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-403">If <xref:System.Data.SqlClient.SqlConnection.Credential%2A> is set on an open connection.</span></span>  
  
-   <span data-ttu-id="a3fc5-404">如果<xref:System.Data.SqlClient.SqlConnection.Credential%2A>时会设置`Context Connection=true`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-404">If <xref:System.Data.SqlClient.SqlConnection.Credential%2A> is set when `Context Connection=true`.</span></span>  
  
-   <span data-ttu-id="a3fc5-405">如果<xref:System.Data.SqlClient.SqlConnection.Credential%2A>时会设置`Integrated Security = true`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-405">If <xref:System.Data.SqlClient.SqlConnection.Credential%2A> is set when `Integrated Security = true`.</span></span>  
  
-   <span data-ttu-id="a3fc5-406">如果<xref:System.Data.SqlClient.SqlConnection.Credential%2A>时使用的连接字符串设置`Password`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-406">If <xref:System.Data.SqlClient.SqlConnection.Credential%2A> is set when the connection string uses `Password`.</span></span>  
  
-   <span data-ttu-id="a3fc5-407">如果<xref:System.Data.SqlClient.SqlConnection.Credential%2A>时使用的连接字符串设置`UserID`。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-407">If <xref:System.Data.SqlClient.SqlConnection.Credential%2A> is set when the connection string uses `UserID`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-408">获取当前数据库的名称或打开连接后要使用的数据库的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-408">Gets the name of the current database or the database to be used after a connection is opened.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-409">当前数据库的名称或打开连接后要使用的数据库的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-409">The name of the current database or the name of the database to be used after a connection is opened.</span>
          </span>
          <span data-ttu-id="a3fc5-410">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-410">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-411"><xref:System.Data.SqlClient.SqlConnection.Database%2A>属性会动态更新。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-411">The <xref:System.Data.SqlClient.SqlConnection.Database%2A> property updates dynamically.</span></span> <span data-ttu-id="a3fc5-412">如果你更改当前的数据库使用[!INCLUDE[tsql](~/includes/tsql-md.md)]语句或<xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>方法，发送一条信息性消息，并自动更新的属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-412">If you change the current database using a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-413">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>并显示部分只读属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-413">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-414">获取要连接的 SQL Server 的实例的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-414">Gets the name of the instance of SQL Server to which to connect.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-415">要连接到的 SQL Server 实例的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-415">The name of the instance of SQL Server to which to connect.</span>
          </span>
          <span data-ttu-id="a3fc5-416">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-416">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-417"><xref:System.Data.SqlClient.SqlConnection.DataSource%2A>属性返回`null`如果该连接字符串，为<xref:System.Data.SqlClient.SqlConnection>是"上下文连接 = true"。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-417">The <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> property returns `null` if the connection string for the <xref:System.Data.SqlClient.SqlConnection> is "context connection=true".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-418">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>并显示部分只读属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-418">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="a3fc5-419">对用于登记的现有 <see cref="T:System.EnterpriseServices.ITransaction" /> 的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-419">A reference to an existing <see cref="T:System.EnterpriseServices.ITransaction" /> in which to enlist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-420">在指定的事务中登记为分布式事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-420">Enlists in the specified transaction as a distributed transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-421">你可以使用<xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>方法在分布式事务中登记。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-421">You can use the <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="a3fc5-422">因为它登记中的连接<xref:System.Transactions.Transaction>实例， **EnlistTransaction**中可用的功能利用<xref:System.Transactions>命名空间用于管理分布式事务，使其优于**EnlistDistributedTransaction**为此目的。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-422">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose.</span></span> <span data-ttu-id="a3fc5-423">有关详细信息，请参阅[分布式事务](~/docs/framework/data/adonet/distributed-transactions.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-423">For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 <span data-ttu-id="a3fc5-424">你可以继续在现有使用分布式的事务中登记**EnlistDistributedTransaction**方法如果禁用了自动登记。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-424">You can continue to enlist in an existing distributed transaction using the **EnlistDistributedTransaction** method if auto-enlistment is disabled.</span></span> <span data-ttu-id="a3fc5-425">在现有分布式事务中登记可以确保，如果事务是提交还是回滚，数据源的代码所做的修改也提交或回滚。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-425">Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</span></span>  
  
 <span data-ttu-id="a3fc5-426">`EnlistDistributedTransaction` 如果返回异常<xref:System.Data.SqlClient.SqlConnection>已经启动了事务使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-426">`EnlistDistributedTransaction` returns an exception if the <xref:System.Data.SqlClient.SqlConnection> has already started a transaction using <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="a3fc5-427">但是，如果事务是在数据源上开始的本地事务 (例如，通过显式执行 BEGIN TRANSACTION 语句使用<xref:System.Data.SqlClient.SqlCommand>对象)， **EnlistDistributedTransaction**回滚本地事务并根据请求在现有分布式事务中登记。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-427">However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.SqlClient.SqlCommand> object), **EnlistDistributedTransaction** rolls back the local transaction and enlists in the existing distributed transaction as requested.</span></span> <span data-ttu-id="a3fc5-428">你不会收到通知，该本地事务已回滚，并且会负责管理任何本地事务没有启动使用<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-428">You do not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="a3fc5-429">对用于登记的现有 <see cref="T:System.Transactions.Transaction" /> 的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-429">A reference to an existing <see cref="T:System.Transactions.Transaction" /> in which to enlist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-430">在指定的事务中登记为分布式事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-430">Enlists in the specified transaction as a distributed transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-431">你可以使用<xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>方法在分布式事务中登记。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-431">You can use the <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> method to enlist in a distributed transaction.</span></span> <span data-ttu-id="a3fc5-432">因为它登记中的连接<xref:System.Transactions.Transaction>实例， **EnlistTransaction**中可用的功能利用<xref:System.Transactions>命名空间用于管理分布式事务，使其优于**EnlistDistributedTransaction**，它使用**System.EnterpriseServices.ITransaction**对象。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-432">Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a **System.EnterpriseServices.ITransaction** object.</span></span> <span data-ttu-id="a3fc5-433">它还具有略有不同的语义： 后在事务中显式登记连接，不能取消登记或第一个事务完成之前在另一个事务中登记。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-433">It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</span></span> <span data-ttu-id="a3fc5-434">有关分布式事务的详细信息，请参阅[分布式事务](~/docs/framework/data/adonet/distributed-transactions.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-434">For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-435">获取或设置 <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-435">Gets or sets the <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-436">如果已设置了 <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-436">
              <see langword="true" /> if the <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> property has been set; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-437">当你将设置<xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A>到`true`，则以前视为作为现在处理异常的错误<xref:System.Data.SqlClient.SqlConnection.InfoMessage>事件。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-437">When you set <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> to `true`, errors that were previously treated as exceptions are now handled as <xref:System.Data.SqlClient.SqlConnection.InfoMessage> events.</span></span> <span data-ttu-id="a3fc5-438">立即激发和事件处理程序处理的所有事件。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-438">All events fire immediately and are handled by the event handler.</span></span> <span data-ttu-id="a3fc5-439">如果是<xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A>设置为`false`，然后<xref:System.Data.SqlClient.SqlConnection.InfoMessage>事件处理过程的结尾处。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-439">If is <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> is set to `false`, then <xref:System.Data.SqlClient.SqlConnection.InfoMessage> events are handled at the end of the procedure.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-440">导致服务器停止处理命令的错误严重级别为 17 或更高版本需要作为异常进行处理。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-440">An error with a severity level of 17 or above that causes the server to stop processing the command needs to be handled as an exception.</span></span> <span data-ttu-id="a3fc5-441">在这种情况下，无论如何在 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> 事件中处理该错误，都会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-441">In this case, an exception is thrown regardless of how the error is handled in the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
 <span data-ttu-id="a3fc5-442">有关处理事件的详细信息，请参阅[连接事件](~/docs/framework/data/adonet/connection-events.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-442">For more information on working with events, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).</span></span> <span data-ttu-id="a3fc5-443">有关由 SQL Server 引擎生成的错误的详细信息，请参阅 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-443">For more information on errors generated by the SQL Server engine, see SQL Server Books Online.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-444">返回此 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的数据源的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-444">Returns schema information for the data source of this <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-445">如果你尝试检索多个版本控制的存储过程的架构信息时，最新的项目的架构仅返回。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-445">If you attempt to retrieve schema information for more than one versioned stored procedure, the schema for the latest one only is returned.</span></span> <span data-ttu-id="a3fc5-446">有关版本控制的存储过程的详细信息，请参阅 SQL Server 联机丛书。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-446">For more information on versioned stored procedures, see SQL Server Books Online.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-447">返回此 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的数据源的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-447">Returns schema information for the data source of this <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
          <span data-ttu-id="a3fc5-448">有关架构的详细信息，请参阅 [SQL Server 架构集合](http://msdn.microsoft.com/library/ms254969.aspx)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-448">For more information about scheme, see [SQL Server Schema Collections](http://msdn.microsoft.com/library/ms254969.aspx).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-449">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-449">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">
          <span data-ttu-id="a3fc5-450">指定要返回的架构的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-450">Specifies the name of the schema to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-451">使用表示架构名称的指定字符串返回此 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的数据源的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-451">Returns schema information for the data source of this <see cref="T:System.Data.SqlClient.SqlConnection" /> using the specified string for the schema name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-452">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-452">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-453">你可能需要数据库、 表或列的架构的信息。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-453">You may need the schema information of the database, tables or columns.</span></span> <span data-ttu-id="a3fc5-454">此示例中：</span><span class="sxs-lookup"><span data-stu-id="a3fc5-454">This sample:</span></span>  
  
-   <span data-ttu-id="a3fc5-455">使用 GetSchema 获取架构信息。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-455">Uses GetSchema to get schema information.</span></span>  
  
-   <span data-ttu-id="a3fc5-456">使用架构限制来获取指定的信息。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-456">Use schema restrictions to get the specified information.</span></span>  
  
-   <span data-ttu-id="a3fc5-457">获取架构信息的数据库、 表和某些列。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-457">Gets schema information of the database, tables, and some columns.</span></span>  
  
 <span data-ttu-id="a3fc5-458">运行示例之前，你需要创建示例数据库中，使用以下[!INCLUDE[tsql](~/includes/tsql-md.md)]:</span><span class="sxs-lookup"><span data-stu-id="a3fc5-458">Before you run the sample, you need to create the sample database, using the following [!INCLUDE[tsql](~/includes/tsql-md.md)]:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 <span data-ttu-id="a3fc5-459">[如何从数据库获取架构信息](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2)Visual Studio 项目中都有此代码示例的 C# 和 Visual Basic 版本。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-459">[How to Get Schema Information from Database](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) has C# and Visual Basic versions of this code sample in a Visual Studio project.</span></span>  
  
```  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {  
         conn.Open();  
  
         // Get the Meta Data for Supported Schema Collections  
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");  
  
         Console.WriteLine("Meta Data for Supported Schema Collections:");  
         ShowDataTable(metaDataTable, 25);  
         Console.WriteLine();  
  
         // Get the schema information of Databases in your instance  
         DataTable databasesSchemaTable = conn.GetSchema("Databases");  
  
         Console.WriteLine("Schema Information of Databases:");  
         ShowDataTable(databasesSchemaTable, 25);  
         Console.WriteLine();  
  
         // First, get schema information of all the tables in current database;  
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");  
  
         Console.WriteLine("Schema Information of All Tables:");  
         ShowDataTable(allTablesSchemaTable, 20);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Table Type to get   
         // the specified table(s).  
         // You can use four restrictions for Table, so you should create a 4 members array.  
         String[] tableRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Table Type.   
         // Now we specify the Table Name of the table what we want to get schema information.  
         tableRestrictions[2] = "Course";  
  
         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);  
  
         Console.WriteLine("Schema Information of Course Tables:");  
         ShowDataTable(courseTableSchemaTable, 20);  
         Console.WriteLine();  
  
         // First, get schema information of all the columns in current database.  
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");  
  
         Console.WriteLine("Schema Information of All Columns:");  
         ShowColumns(allColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).  
         // You can use four restrictions for Column, so you should create a 4 members array.  
         String[] columnRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         columnRestrictions[2] = "Course";  
         columnRestrictions[3] = "DepartmentID";  
  
         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);  
  
         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");  
         ShowColumns(departmentIDSchemaTable);  
         Console.WriteLine();  
  
         // First, get schema information of all the IndexColumns in current database  
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");  
  
         Console.WriteLine("Schema Information of All IndexColumns:");  
         ShowIndexColumns(allIndexColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to   
         // get the specified column(s).  
         // You can use five restrictions for Column, so you should create a 5 members array.  
         String[] indexColumnsRestrictions = new String[5];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         indexColumnsRestrictions[2] = "Course";  
         indexColumnsRestrictions[4] = "CourseID";  
  
         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);  
  
         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");  
         ShowIndexColumns(courseIdIndexSchemaTable);  
         Console.WriteLine();  
      }  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   private static void ShowDataTable(DataTable table, Int32 length) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-" + length + "}", col.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         foreach (DataColumn col in table.Columns) {  
            if (col.DataType.Equals(typeof(DateTime)))  
               Console.Write("{0,-" + length + ":d}", row[col]);  
            else if (col.DataType.Equals(typeof(Decimal)))  
               Console.Write("{0,-" + length + ":C}", row[col]);  
            else  
               Console.Write("{0,-" + length + "}", row[col]);  
         }  
         Console.WriteLine();  
      }  
   }  
  
   private static void ShowDataTable(DataTable table) {  
      ShowDataTable(table, 14);  
   }  
  
   private static void ShowColumns(DataTable columnsTable) {  
      var selectedRows = from info in columnsTable.AsEnumerable()  
                         select new {  
                            TableCatalog = info["TABLE_CATALOG"],  
                            TableSchema = info["TABLE_SCHEMA"],  
                            TableName = info["TABLE_NAME"],  
                            ColumnName = info["COLUMN_NAME"],  
                            DataType = info["DATA_TYPE"]  
                         };  
  
      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",  
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,  
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);  
      }  
   }  
  
   private static void ShowIndexColumns(DataTable indexColumnsTable) {  
      var selectedRows = from info in indexColumnsTable.AsEnumerable()  
                         select new {  
                            TableSchema = info["table_schema"],  
                            TableName = info["table_name"],  
                            ColumnName = info["column_name"],  
                            ConstraintSchema = info["constraint_schema"],  
                            ConstraintName = info["constraint_name"],  
                            KeyType = info["KeyType"]  
                         };  
  
      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,  
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3fc5-460">
            <paramref name="collectionName" /> 被指定为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-460">
              <paramref name="collectionName" /> is specified as null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">
          <span data-ttu-id="a3fc5-461">指定要返回的架构的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-461">Specifies the name of the schema to return.</span>
          </span>
        </param>
        <param name="restrictionValues">
          <span data-ttu-id="a3fc5-462">请求的架构的一组限制值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-462">A set of restriction values for the requested schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-463">使用表示架构名称的指定字符串以及表示限制值的指定字符串数组返回此 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的数据源的架构信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-463">Returns schema information for the data source of this <see cref="T:System.Data.SqlClient.SqlConnection" /> using the specified string for the schema name and the specified string array for the restriction values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-464">包含架构信息的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-464">A <see cref="T:System.Data.DataTable" /> that contains schema information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-465">`restrictionValues`参数可以提供*n*深度的值，指定特定集合的限制集合。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-465">The `restrictionValues` parameter can supply *n* depth of values, which are specified by the restrictions collection for a specific collection.</span></span> <span data-ttu-id="a3fc5-466">若要对给定的限制，设置值，并且未设置其他限制的值，你需要将前面的限制条件设置为`null`然后将为你想要为指定值的限制中的相应值。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-466">In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to `null` and then put the appropriate value in for the restriction that you would like to specify a value for.</span></span>  
  
 <span data-ttu-id="a3fc5-467">此示例为"表"集合。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-467">An example of this is the "Tables" collection.</span></span> <span data-ttu-id="a3fc5-468">如果"表"集合具有三个限制-数据库、 所有者、 表名称--并且想要取回仅与"Carl"的所有者关联的表，请将传递以下值： null，"Carl"。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-468">If the "Tables" collection has three restrictions--database, owner, and table name--and you want to get back only the tables associated with the owner "Carl", you need to pass in the following values: null, "Carl".</span></span> <span data-ttu-id="a3fc5-469">如果未传入限制值，默认值用于该限制。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-469">If a restriction value is not passed in, the default values are used for that restriction.</span></span> <span data-ttu-id="a3fc5-470">这是相同的映射与传入`null`，即不同于传入的参数值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-470">This is the same mapping as passing in `null`, which is different from passing in an empty string for the parameter value.</span></span> <span data-ttu-id="a3fc5-471">在这种情况下，空字符串 ("") 被视为可为指定的参数的值。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-471">In that case, the empty string ("") is considered to be the value for the specified parameter.</span></span>  
  
 <span data-ttu-id="a3fc5-472">有关代码示例演示<xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>，请参阅<xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-472">For a code sample demonstrating <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>, see <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3fc5-473">
            <paramref name="collectionName" /> 被指定为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-473">
              <paramref name="collectionName" /> is specified as null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-474">当 SQL Server 返回一个警告或信息性消息时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-474">Occurs when SQL Server returns a warning or informational message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-475">要处理警告或信息性消息由服务器发送客户端应创建<xref:System.Data.SqlClient.SqlInfoMessageEventHandler>委托来侦听此事件。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-475">Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.SqlClient.SqlInfoMessageEventHandler> delegate to listen to this event.</span></span>  
  
 <span data-ttu-id="a3fc5-476"><xref:System.Data.SqlClient.SqlConnection.InfoMessage>事件发生时的严重级别为 10 的消息或 SQL Server 返回更少。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-476">The <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event occurs when a message with a severity of 10 or less is returned by SQL Server.</span></span> <span data-ttu-id="a3fc5-477">11 到 20 之间的严重性的消息将引发错误和消息严重性相比，20 原因要关闭的连接。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-477">Messages that have a severity between 11 and 20 raise an error and messages that have a severity over 20 causes the connection to close.</span></span> <span data-ttu-id="a3fc5-478">有关 SQL Server 错误级别的详细信息，请参阅 SQL Server 联机丛书中的"数据库的引擎错误严重性"。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-478">For more information on SQL Server error levels, see "Database Engine Error Severities" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="a3fc5-479">有关详细信息及示例，请参阅[连接事件](~/docs/framework/data/adonet/connection-events.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-479">For more information and an example, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-480">使用由 <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> 指定的属性设置打开一个数据库连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-480">Opens a database connection with the property settings specified by the <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-481"><xref:System.Data.SqlClient.SqlConnection>从连接池中绘制的开放连接，如果有的话。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-481">The <xref:System.Data.SqlClient.SqlConnection> draws an open connection from the connection pool if one is available.</span></span> <span data-ttu-id="a3fc5-482">否则，它在建立新连接到 SQL Server 的实例。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-482">Otherwise, it establishes a new connection to an instance of SQL Server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-483">如果<xref:System.Data.SqlClient.SqlConnection>超出范围，它没有闭合是。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-483">If the <xref:System.Data.SqlClient.SqlConnection> goes out of scope, it is not closed.</span></span> <span data-ttu-id="a3fc5-484">因此，必须显式关闭连接通过调用<xref:System.Data.SqlClient.SqlConnection.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-484">Therefore, you must explicitly close the connection by calling <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-485">如果你指定时要连接到 SQL Server 和使用 TCP/IP，以外的其他协议的一个实例的 1433年以外的端口号<xref:System.Data.SqlClient.SqlConnection.Open%2A>方法失败。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-485">If you specify a port number other than 1433 when you are trying to connect to an instance of SQL Server and using a protocol other than TCP/IP, the <xref:System.Data.SqlClient.SqlConnection.Open%2A> method fails.</span></span> <span data-ttu-id="a3fc5-486">若要指定除 1433年以外的端口号，包括"server = machinename，端口号"中的连接字符串和使用 TCP/IP 协议。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-486">To specify a port number other than 1433, include "server=machinename,port number" in the connection string, and use the TCP/IP protocol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3fc5-487">SQL Server.NET Framework 数据提供程序需要使用"允许对非托管程序集调用"启用安全权限 (<xref:System.Security.Permissions.SecurityPermission>与<xref:System.Security.Permissions.SecurityPermissionFlag>设置为`UnmanagedCode`) 以打开<xref:System.Data.SqlClient.SqlConnection>启用 SQL 调试。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-487">The .NET Framework Data Provider for SQL Server requires the Security permission with "Allows calls to unmanaged assemblies" enabled (<xref:System.Security.Permissions.SecurityPermission> with <xref:System.Security.Permissions.SecurityPermissionFlag> set to `UnmanagedCode`) to open a <xref:System.Data.SqlClient.SqlConnection> with SQL Debugging enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-488">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>，打开它，并显示它的一些属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-488">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, and displays some of its properties.</span></span> <span data-ttu-id="a3fc5-489">连接会自动关闭的末尾`using`块。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-489">The connection is automatically closed at the end of the `using` block.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a3fc5-490">如果不指定数据源或服务器，则无法打开连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-490">Cannot open a connection without specifying a data source or server.</span>
          </span>
          <span data-ttu-id="a3fc5-491">或-  连接已打开。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-491">or  The connection is already open.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="a3fc5-492">打开连接时出现的连接级别错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-492">A connection-level error occurred while opening the connection.</span>
          </span>
          <span data-ttu-id="a3fc5-493">如果 <see cref="P:System.Data.SqlClient.SqlException.Number" /> 属性包含值 18487 或 18488，这表明指定的密码已过期或必须重置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-493">If the <see cref="P:System.Data.SqlClient.SqlException.Number" /> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset.</span>
          </span>
          <span data-ttu-id="a3fc5-494">有关更多信息，请参阅 <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-494">See the <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> method for more information.</span>
          </span>
          <span data-ttu-id="a3fc5-495">App.config 文件中的 <see langword="&lt;system.data.localdb&gt;" /> 标记具有无效或未知元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-495">The <see langword="&lt;system.data.localdb&gt;" /> tag in the app.config file has invalid or unknown elements.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="a3fc5-496">
            <see langword="&lt;localdbinstances&gt;" /> 部分中有两个具有相同名称的条目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-496">There are two entries with the same name in the <see langword="&lt;localdbinstances&gt;" /> section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="a3fc5-497">取消指令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-497">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-498">
            <see cref="M:System.Data.SqlClient.SqlConnection.Open" /> 的异步版本，打开 <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> 指定的属性设置的数据库连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-498">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, which opens a database connection with the property settings specified by the <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />.</span>
          </span>
          <span data-ttu-id="a3fc5-499">取消标记可用于请求在连接超时超过前放弃操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-499">The cancellation token can be used to request that the operation be abandoned before the connection timeout elapses.</span>
          </span>
          <span data-ttu-id="a3fc5-500">异常将通过返回的任务传播。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-500">Exceptions will be propagated via the returned Task.</span>
          </span>
          <span data-ttu-id="a3fc5-501">如果在未成功连接的情况下连接超时时间已过，则返回的任务将被标记为“附带异常出错”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-501">If the connection timeout time elapses without successfully connecting, the returned Task will be marked as faulted with an Exception.</span>
          </span>
          <span data-ttu-id="a3fc5-502">实现返回一个不带有用于共用和非共用连接的锁定调用线程的“任务”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-502">The implementation returns a Task without blocking the calling thread for both pooled and non-pooled connections.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-503">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-503">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-504">在调用<xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>，<xref:System.Data.SqlClient.SqlConnection.State%2A>必须返回<xref:System.Data.ConnectionState.Connecting>直到返回<xref:System.Threading.Tasks.Task>完成。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-504">After calling <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>, <xref:System.Data.SqlClient.SqlConnection.State%2A> must return <xref:System.Data.ConnectionState.Connecting> until the returned <xref:System.Threading.Tasks.Task> is completed.</span></span> <span data-ttu-id="a3fc5-505">然后，如果连接成功，<xref:System.Data.SqlClient.SqlConnection.State%2A>必须返回<xref:System.Data.ConnectionState.Open>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-505">Then, if the connection was successful, <xref:System.Data.SqlClient.SqlConnection.State%2A> must return <xref:System.Data.ConnectionState.Open>.</span></span> <span data-ttu-id="a3fc5-506">如果连接失败，<xref:System.Data.SqlClient.SqlConnection.State%2A>必须返回<xref:System.Data.ConnectionState.Closed>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-506">If the connection fails, <xref:System.Data.SqlClient.SqlConnection.State%2A> must return <xref:System.Data.ConnectionState.Closed>.</span></span>  
  
 <span data-ttu-id="a3fc5-507">调用<xref:System.Data.SqlClient.SqlConnection.Close%2A>将尝试取消或关闭相应<xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-507">A call to <xref:System.Data.SqlClient.SqlConnection.Close%2A> will attempt to cancel or close the corresponding <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> call.</span></span>  
  
 <span data-ttu-id="a3fc5-508">有关 SQL Server 的.NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-508">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a3fc5-509">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-509">Calling <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="a3fc5-510">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-510">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
          <span data-ttu-id="a3fc5-511">在经过连接超时时间之前从连接池中的连接不可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-511">A connection was not available from the connection pool before the connection time out elapsed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="a3fc5-512">打开连接时出现的任何由 SQL Server 返回的错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-512">Any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-513">获取用于与 SQL Server 的实例进行通信的网络数据包的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-513">Gets the size (in bytes) of network packets used to communicate with an instance of SQL Server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-514">网络数据包的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-514">The size (in bytes) of network packets.</span>
          </span>
          <span data-ttu-id="a3fc5-515">默认值为 8000。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-515">The default value is 8000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-516">如果应用程序执行大容量复制操作，或发送或接收大量文本或图像数据，数据包大小大于默认值可能会提高效率，因为它会导致更少的网络读取和写入操作。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-516">If an application performs bulk copy operations, or sends or receives lots of text or image data, a packet size larger than the default may improve efficiency because it causes fewer network read and write operations.</span></span> <span data-ttu-id="a3fc5-517">如果应用程序发送和接收的信息的信息量很小，你可以将数据包大小设置为 512 个字节 (使用中的数据包大小值<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>)，这对于大多数数据传输操作已经足够。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-517">If an application sends and receives small amounts of information, you can set the packet size to 512 bytes (using the Packet Size value in the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), which is sufficient for most data transfer operations.</span></span> <span data-ttu-id="a3fc5-518">对于大多数应用程序，默认数据包大小为最佳数值。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-518">For most applications, the default packet size is best.</span></span>  
  
 <span data-ttu-id="a3fc5-519"><xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> 可能的 512 和 32767 之间的字节范围中的值。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-519"><xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> may be a value in the range of 512 and 32767 bytes.</span></span> <span data-ttu-id="a3fc5-520">如果值超出了此范围，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-520">An exception is generated if the value is outside this range.</span></span>  
  
 <span data-ttu-id="a3fc5-521">将默认值设置为一个数字大于 8000 将导致数据包，而不是要高效得多的 SinglePage 分配器，减少 SQL Server 的整体可伸缩性的 SQL Server 实例上使用多页的分配器。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-521">Setting the default value to a number greater than 8000 will cause the packets to use the MultiPage allocator on the instance of SQL Server instead of the much more efficient SinglePage allocator, reducing the overall scalability of the SQL Server.</span></span> <span data-ttu-id="a3fc5-522">SQL Server 如何使用内存的详细信息，请参阅[内存体系结构](http://go.microsoft.com/fwlink/?LinkId=143705)SQL Server 联机丛书中。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-522">For more information on how SQL Server uses memory, see [Memory Architecture](http://go.microsoft.com/fwlink/?LinkId=143705) in SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-523">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>，其中包括设置`Packet Size`为 512 连接字符串中。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-523">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, including setting the `Packet Size` to 512 in the connection string.</span></span> <span data-ttu-id="a3fc5-524">它显示<xref:System.Data.SqlClient.SqlConnection.PacketSize%2A>和<xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A>在控制台窗口中的属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-524">It displays the <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> and <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> properties in the console window.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="customProviders">
          <span data-ttu-id="a3fc5-525">自定义提供程序</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-525">The custom providers</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3fc5-526">注册列加密密钥存储提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-526">Registers the column encryption key store providers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-527">如果启用了统计信息收集，所有值都将重置为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-527">If statistics gathering is enabled, all values are reset to zero.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-528">如果未启用统计信息收集，并且在调用此方法，不会引发错误。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-528">If statistics gathering is not enabled and this method is called, no error is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-529">调用此方法时，将返回统计信息的名称值对集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-529">Returns a name value pair collection of statistics at the point in time the method is called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-530">返回 <see cref="T:System.Collections.DictionaryEntry" /> 项的 <see cref="T:System.Collections.IDictionary" /> 类型的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-530">Returns a reference of type <see cref="T:System.Collections.IDictionary" /> of <see cref="T:System.Collections.DictionaryEntry" /> items.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-531">当调用此方法时，检索到的值是当前点处的时间。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-531">When this method is called, the values retrieved are those at the current point in time.</span></span> <span data-ttu-id="a3fc5-532">如果你继续使用该连接，则值是不正确。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-532">If you continue using the connection, the values are incorrect.</span></span> <span data-ttu-id="a3fc5-533">你需要重新执行该方法来获取最新的值。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-533">You need to re-execute the method to obtain the most current values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-534">获取一个字符串，其中包含客户端所连接到的 SQL Server 的实例的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-534">Gets a string that contains the version of the instance of SQL Server to which the client is connected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-535">SQL server 实例的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-535">The version of the instance of SQL Server.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-536">版本的形式 *# #。 # #。 # # #*，其中前两个数字是否为主要版本，接下来的两位数字是次要版本，，最后四位数是发布版本。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-536">The version is of the form *##.##.####*, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.</span></span> <span data-ttu-id="a3fc5-537">字符串的形式*major.minor.build*，其中主要和次要是恰好两位，生成是四位数字。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-537">The string is of the form *major.minor.build*, where major and minor are exactly two digits and build is exactly four digits.</span></span>  
  
 <span data-ttu-id="a3fc5-538">当返回的任务未完成，且在调用 <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> 后未打开连接时，调用了 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-538"><xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> was called while the returned Task was not completed and the connection was not opened after a call to <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-539">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>并显示<xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-539">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a3fc5-540">连接已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-540">The connection is closed.</span>
          </span>
          <span data-ttu-id="a3fc5-541">当返回的任务未完成，且在调用 <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> 后未打开连接时，调用了 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-541">
              <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> was called while the returned Task was not completed and the connection was not opened after a call to <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-542">最近在连接上执行网络操作时表示 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-542">Indicates the state of the <see cref="T:System.Data.SqlClient.SqlConnection" /> during the most recent network operation performed on the connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-543">一个 <see cref="T:System.Data.ConnectionState" /> 枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-543">An <see cref="T:System.Data.ConnectionState" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-544">返回<xref:System.Data.ConnectionState>指示的状态枚举<xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-544">Returns an <xref:System.Data.ConnectionState> enumeration indicating the state of the <xref:System.Data.SqlClient.SqlConnection>.</span></span> <span data-ttu-id="a3fc5-545">关闭并重新打开连接将刷新的值<xref:System.Data.SqlClient.SqlConnection.State%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-545">Closing and reopening the connection will refresh the value of <xref:System.Data.SqlClient.SqlConnection.State%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-546">如果设置为 <see langword="true" />，则对当前连接启用统计信息收集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-546">When set to <see langword="true" />, enables statistics gathering for the current connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-547">如果启用了统计信息收集，则返回 <see langword="true" />；否则返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-547">Returns <see langword="true" /> if statistics gathering is enabled; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a3fc5-548">默认为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-548">
              <see langword="false" /> is the default.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-549">启用统计信息收集小但却显著提高对性能有影响，因此应启用需要时。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-549">Enabling statistics gathering has a minor, but measurable effect on performance and therefore should be enabled only when it is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-550">创建作为当前实例副本的新对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-550">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3fc5-551">作为此实例副本的新对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-551">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-552">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-552">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a3fc5-553">它只能在 <xref:System.Data.SqlClient.SqlConnection> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-553">It can be used only when the <xref:System.Data.SqlClient.SqlConnection> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="a3fc5-554">此成员仅受.NET Compact Framework。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-554">This member is only supported by the .NET Compact Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3fc5-555">获取一个标识数据库客户端的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-555">Gets a string that identifies the database client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3fc5-556">一个标识数据库客户端的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-556">A string that identifies the database client.</span>
          </span>
          <span data-ttu-id="a3fc5-557">如果未指定，则为客户端计算机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-557">If not specified, the name of the client computer.</span>
          </span>
          <span data-ttu-id="a3fc5-558">如果两个都没有指定，则值为空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3fc5-558">If neither is specified, the value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3fc5-559">字符串通常包含客户端的网络名称。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-559">The string typically contains the network name of the client.</span></span> <span data-ttu-id="a3fc5-560"><xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A>属性对应于`Workstation ID`连接字符串属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-560">The <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> property corresponds to the `Workstation ID` connection string property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3fc5-561">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>并显示<xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a3fc5-561">The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>