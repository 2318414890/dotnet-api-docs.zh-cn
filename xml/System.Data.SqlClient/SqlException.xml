<Type Name="SqlException" FullName="System.Data.SqlClient.SqlException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="982763b78dfe67e06f4b1f8f79fe8a34bb68d3a4" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlException : System.Data.Common.DbException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlException extends System.Data.Common.DbException" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlException&#xA;Inherits DbException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlException sealed : System::Data::Common::DbException" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>SQL Server 返回警告或错误时引发的异常。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类被创建 SQL Server.NET Framework 数据提供程序遇到错误时从服务器生成。 （客户端错误引发作为标准公共语言运行时异常。）<xref:System.Data.SqlClient.SqlException>始终包含至少一个实例<xref:System.Data.SqlClient.SqlError>。  
  
 严重性级别为 10 或以下的消息是信息性消息，并指示问题引起的用户输入的信息中的错误。 严重级别为 11 到 16 都由用户，并可以由用户纠正。 严重级别为 17 到 25 的消息指示存在软件或硬件错误。 当级别为 17 时、 18 或 19 的错误时，您可以继续工作，尽管你可能不能够执行特定语句。  
  
 当严重级别为 19 或以下时，<xref:System.Data.SqlClient.SqlConnection> 将保持打开状态。 等于或大于 20 的严重性级别时，服务器通常会关闭<xref:System.Data.SqlClient.SqlConnection>。 但是，用户可以重新打开连接并继续操作。 最后两种情况下，执行该命令的方法将生成 <xref:System.Data.SqlClient.SqlException>。  
  
 SQL Server 发送的警告和信息性消息有关的信息，请参阅 SQL Server 联机丛书的故障排除部分。 <xref:System.Data.SqlClient.SqlException>类映射到 SQL Server 严重性。  
  
 下面是处理异常的一般信息。 你的代码应捕获异常防止应用程序中发生故障，并允许向用户显示一条相关的错误消息。  可以使用数据库事务来确保数据一致性，无论客户端应用程序 （包括崩溃） 中会发生什么情况。 System.Transaction.TransactionScope 或 BeginTransaction 方法 （在 System.Data.OleDb.OleDbConnection、 System.Data.ODBC.ODBCConnection 和 System.Data.SqlClient.SqlConnection） 等功能确保一致的数据，而不考虑异常引发由提供程序。 事务可以失败，因此捕获失败和重试该事务。  
  
 请注意该开头.NET Framework 4.5、<xref:System.Data.SqlClient.SqlException>可以返回内部<xref:System.ComponentModel.Win32Exception>。  
  
 异常类的.Net Framework 数据提供程序报告提供程序特定的错误。 例如 System.Data.Odbc 具有 OdbcException、 System.Data.OleDb 具有 OleDbException，并且 System.Data.SqlClient SqlException。 错误详细信息的最佳级别，捕获这些异常并使用这些异常类的成员获取错误的详细信息。  
  
 除了特定于提供程序错误，.NET Framework 数据提供程序类型可以引发 System.Threading.ThreadAbortException System.OutOfMemoryException 等的.NET Framework 异常。 可能无法从这些异常中的恢复。  
  
 错误输入可能会导致引发异常，如 System.ArgumentException 或 System.IndexOutOfRangeException 的.NET Framework 数据提供程序类型。  在错误时调用的方法可以提高 System.InvalidOperationException。  
  
 因此，一般情况下，编写异常处理程序捕获任何提供程序特定的异常，以及公共语言运行时中的异常。  这些都可以如下所示进行分层：  
  
```csharp  
try {  
   // code here  
}  
catch (SqlException odbcEx) {  
   // Handle more specific SqlException exception here.  
}  
catch (Exception ex) {  
   // Handle generic ones here.  
}  
  
```  
  
 或者：  
  
```csharp  
try {  
   // code here  
}  
catch (Exception ex) {  
   if (ex is SqlException) {  
      // Handle more specific SqlException exception here.  
   }  
   else {  
      // Handle generic ones here.  
   }  
}  
  
```  
  
 还有可能为.NET Framework 数据提供程序的方法调用在有线程池线程上失败，在堆栈上没有用户代码。 在此情况下，以及使用异步方法调用时，你必须注册<xref:System.AppDomain.UnhandledException>事件来处理这些异常并避免应用程序崩溃。  
  
   
  
## Examples  
 下面的示例生成<xref:System.Data.SqlClient.SqlException>，然后显示该异常。  
  
 [!code-csharp[Classic WebData SqlException Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlError" />
    <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
  </Docs>
  <Members>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public byte Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Class" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Class { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取从 SQL Server .NET Framework 数据提供程序返回的错误的严重级别。</summary>
        <value>一个 1 至 25 的值，它指示错误的严重级别。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 严重性级别为 10 或以下的消息是信息性消息，并指示问题引起的用户输入的信息中的错误。 严重级别为 11 到 16 都由用户，并可以由用户纠正。 严重级别为 17 到 25 的消息指示存在软件或硬件错误。 当级别为 17 时、 18 或 19 的错误时，您可以继续工作，尽管你可能不能够执行特定语句。  
  
 当严重级别为 19 或以下时，<xref:System.Data.SqlClient.SqlConnection> 将保持打开状态。 等于或大于 20 的严重性级别时，服务器通常会关闭<xref:System.Data.SqlClient.SqlConnection>。 但是，用户可以重新打开连接并继续操作。 最后两种情况下，执行该命令的方法将生成 <xref:System.Data.SqlClient.SqlException>。  
  
 SQL Server 发送的警告和信息性消息有关的信息，请参阅 SQL Server 文档的故障排除部分。  
  
 这是包装器<xref:System.Data.SqlClient.SqlError.Class%2A>属性的第一个<xref:System.Data.SqlClient.SqlError>中<xref:System.Data.SqlClient.SqlException.Errors%2A>属性。  
  
   
  
## Examples  
 下面的示例显示各个<xref:System.Data.SqlClient.SqlError>内<xref:System.Data.SqlClient.SqlErrorCollection>集合。  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示客户端连接 ID。 有关详细信息，请参阅 [ADO.NET 中的数据跟踪](~/docs/framework/data/adonet/data-tracing.md)。</summary>
        <value>返回客户端连接 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关代码示例，请参见<xref:System.Data.SqlClient.SqlException.ToString%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlErrorCollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlErrorCollection Errors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As SqlErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlErrorCollection ^ Errors { System::Data::SqlClient::SqlErrorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlErrorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由一个或多个 <see cref="T:System.Data.SqlClient.SqlError" /> 对象组成的集合，这些对象提供有关 SQL Server .NET Framework 数据提供程序所生成的异常的详细信息。</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlError" /> 类的收集的实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlErrorCollection>类始终包含至少一个实例<xref:System.Data.SqlClient.SqlError>类。  
  
 这是包装器<xref:System.Data.SqlClient.SqlErrorCollection>。 有关 SQL Server 引擎错误的详细信息，请参阅 SQL Server 联机丛书。  
  
   
  
## Examples  
 下面的示例显示各个<xref:System.Data.SqlClient.SqlError>内<xref:System.Data.SqlClient.SqlErrorCollection>集合。  
  
 [!code-csharp[Classic WebData SqlError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
        <altmember cref="T:System.Data.SqlClient.SqlError" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">包含有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含关于源或目标的上下文信息。</param>
        <summary>使用关于异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetObjectData` 使用针对于序列化的所有异常对象数据设置 `SerializationInfo`。 反序列化期间，从通过流传输的 `SerializationInfo` 重建异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="si" /> 参数为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取生成错误的 Transact-SQL 批命令或存储过程内的行号。</summary>
        <value>生成错误的 Transact-SQL 批命令或存储过程内的行号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行号在 1; 的启动如果返回 0，则行号不适用。  
  
 这是包装器<xref:System.Data.SqlClient.SqlError.LineNumber%2A>属性的第一个<xref:System.Data.SqlClient.SqlError>中<xref:System.Data.SqlClient.SqlException.Errors%2A>属性。  
  
   
  
## Examples  
 下面的示例显示各个<xref:System.Data.SqlClient.SqlError>内<xref:System.Data.SqlClient.SqlErrorCollection>集合。  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Number" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个标识错误类型的数字。</summary>
        <value>标识错误类型的数字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是包装器<xref:System.Data.SqlClient.SqlError.Number%2A>属性的第一个<xref:System.Data.SqlClient.SqlError>中<xref:System.Data.SqlClient.SqlException.Errors%2A>属性。 有关 SQL Server 引擎错误的详细信息，请参阅 SQL Server 联机丛书。  
  
   
  
## Examples  
 下面的示例显示各个<xref:System.Data.SqlClient.SqlError>内<xref:System.Data.SqlClient.SqlErrorCollection>集合。  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Procedure">
      <MemberSignature Language="C#" Value="public string Procedure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Procedure" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Procedure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Procedure As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Procedure { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取生成错误的存储过程或远程过程调用 (RPC) 的名称。</summary>
        <value>存储过程或 RPC 的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是包装器<xref:System.Data.SqlClient.SqlError.Procedure%2A>属性的第一个<xref:System.Data.SqlClient.SqlError>中<xref:System.Data.SqlClient.SqlException.Errors%2A>属性。  
  
   
  
## Examples  
 下面的示例显示各个<xref:System.Data.SqlClient.SqlError>内<xref:System.Data.SqlClient.SqlErrorCollection>集合。  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public string Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Server" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Server { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取正在运行生成错误的 SQL Server 实例的计算机的名称。</summary>
        <value>运行 SQL Server 实例的计算机的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是包装器<xref:System.Data.SqlClient.SqlError.Server%2A>属性的第一个<xref:System.Data.SqlClient.SqlError>中<xref:System.Data.SqlClient.SqlException.Errors%2A>属性。  
  
   
  
## Examples  
 下面的示例显示各个<xref:System.Data.SqlClient.SqlError>内<xref:System.Data.SqlClient.SqlErrorCollection>集合。  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取生成错误的提供程序的名称。</summary>
        <value>生成错误的提供程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是包装器<xref:System.Data.SqlClient.SqlError.Source%2A>属性的第一个<xref:System.Data.SqlClient.SqlError>中<xref:System.Data.SqlClient.SqlException.Errors%2A>属性。  
  
   
  
## Examples  
 下面的示例显示各个<xref:System.Data.SqlClient.SqlError>内<xref:System.Data.SqlClient.SqlErrorCollection>集合。  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public byte State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte State { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从 SQL Server 中获取一个数值错误代码，它表示错误、警告或“未找到数据”消息。 有关如何将这些值解码的更多信息，请参见“SQL Server 联机丛书”。</summary>
        <value>表示错误代码的数字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这是包装器<xref:System.Data.SqlClient.SqlError.State%2A>属性的第一个<xref:System.Data.SqlClient.SqlError>中<xref:System.Data.SqlClient.SqlException.Errors%2A>属性。  
  
   
  
## Examples  
 下面的示例显示各个<xref:System.Data.SqlClient.SqlError>内<xref:System.Data.SqlClient.SqlErrorCollection>集合。  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回表示当前 <see cref="T:System.Data.SqlClient.SqlException" /> 对象的字符串，并包括客户端连接 ID（有关更多信息，请参见 <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />）。</summary>
        <returns>一个字符串，表示当前的 <see cref="T:System.Data.SqlClient.SqlException" /> object.<see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的 C# 示例显示如何将尝试连接到有效的服务器，但不存在数据库会导致<xref:System.Data.SqlClient.SqlException>，其中包括客户端连接 ID:  
  
```  
using System.Data.SqlClient;  
using System;  
  
public class A {  
   public static void Main() {  
      SqlConnection connection = new SqlConnection();  
      connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true";  
      try {  
         connection.Open();  
      }  
      catch (SqlException p) {  
         Console.WriteLine("{0}", p.ClientConnectionId);  
         Console.WriteLine("{0}", p.ToString());  
      }  
      connection.Close();  
   }  
}  
```  
  
 下面的 Visual Basic 示例在功能上等效于前面的 (C#) 示例：  
  
```  
Imports System.Data.SqlClient  
Imports System  
  
Module Module1  
  
    Sub Main()  
        Dim connection As New SqlConnection()  
        connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true"  
        Try  
            connection.Open()  
        Catch p As SqlException  
            Console.WriteLine("{0}", p.ClientConnectionId)  
            Console.WriteLine("{0}", p.ToString())  
        End Try  
        connection.Close()  
    End Sub  
  
End Module  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>