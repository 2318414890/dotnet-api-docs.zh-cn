<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlCommandBuilder.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51d6c2a42dc06d05c2f30996ed8802e30cd2597f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d6c2a42dc06d05c2f30996ed8802e30cd2597f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated SQL Server database.</source>
          <target state="translated">自动生成单表命令，用于将对 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 所做的更改与关联的 SQL Server 数据库的更改相协调。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated instance of SQL Server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>不会自动生成所需进行对帐对所做更改的 TRANSACT-SQL 语句<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>与关联的 SQL Server 实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object to automatically generate Transact-SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">但是，你可以创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>对象来自动生成单表更新的 TRANSACT-SQL 语句，如果你设置<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Then, any additional Transact-SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">然后，你未设置任何其他 TRANSACT-SQL 语句都由<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>将自己注册为侦听器<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph>事件每当你设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">你可以仅将一个相关联<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>与每个其他对象一次。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">若要生成 INSERT、 UPDATE 或 DELETE 语句，<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>使用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>要自动检索所需的元数据集属性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved, such as after the first update, you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">如果你更改<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>元数据进行检索，如第一次更新，应调用后<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>方法来更新元数据。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph> 还必须至少返回一个主键或唯一列。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If none are present, an <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> exception is generated, and the commands are not generated.</source>
          <target state="translated">如果这些都不存在， <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept>则会生成异常，并不会生成命令。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>还使用<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph>属性引用的<ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if one or more of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">用户应调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果修改一个或多个这些属性，或如果<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>本身被替换。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph>属性保留其以前的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>与解除关联<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>，并且不再使用所生成的命令。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, along <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, to select rows from a data source.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>、 以及<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>，来从数据源选择的行。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The example is passed a connection string, a query string that is a Transact-SQL SELECT statement, and a string that is the name of the database table.</source>
          <target state="translated">该示例传递连接字符串、 TRANSACT-SQL SELECT 语句的查询字符串和数据库表的名称的字符串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The example then creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">然后，示例创建<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class with the associated <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">使用关联的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> 对象初始化 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>将自己注册为侦听器<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph>由生成的事件<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>此属性中指定。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.</source>
          <target state="translated">当你创建的新实例<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>，任何现有<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>与此关联<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>释放。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> 类的实例，设置或获取 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">设置或获取一个字符串，该字符串用作 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> 类的实例的目录分隔符。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
          <source>A string that indicates the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">指示要用于 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> 类的目录分隔符的字符串。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">获取或设置自动为其生成 Transact-SQL 语句的一个 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>将自己注册为侦听器<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph>由生成的事件<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>此属性中指定。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.</source>
          <target state="translated">当你创建的新实例<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>，任何现有<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>与此关联<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>释放。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated">引用将从其中导出参数信息的存储过程的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The derived parameters are added to the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> collection of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">将派生参数添加到 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 集合中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>Retrieves parameter information from the stored procedure specified in the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and populates the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> collection of the specified <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object.</source>
          <target state="translated">从在 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 中指定的存储过程中检索参数信息并填充指定的 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source><ph id="ph1">`DeriveParameters`</ph> overwrites any existing parameter information for the <ph id="ph2">`SqlDbCommand`</ph>.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph> 将覆盖任何现有参数信息<ph id="ph2">`SqlDbCommand`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source><ph id="ph1">`DeriveParameters`</ph> requires an additional call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph> 需要其他调用数据库以获取信息。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">如果在提前知道参数信息，则更有效地通过显式设置的信息填充的参数集合。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You can only use <ph id="ph1">`DeriveParameters`</ph> with stored procedures.</source>
          <target state="translated">你只能使用<ph id="ph1">`DeriveParameters`</ph>的存储过程。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> with extended stored procedures.</source>
          <target state="translated">不能使用<ph id="ph1">`DeriveParameters`</ph>与扩展存储过程。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> to populate the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">不能使用<ph id="ph1">`DeriveParameters`</ph>来填充<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph>使用任意 Transact SQL 语句，例如参数化的 SELECT 语句。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>配置参数和参数数据类型<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The command text is not a valid stored procedure name.</source>
          <target state="translated">此命令文本不是一个有效的存储过程名。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行删除操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行删除操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">自动生成的、执行删除操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则生成与列名匹配的参数名（如果可能）。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则生成 <ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph>，以此类推。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform deletions on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行删除操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform deletions.</source>
          <target state="translated">自动生成的、执行删除操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>生成改为根据列名称的参数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">仅当满足以下条件，此操作将成功。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>指定集合并且其长度等于或大于生成的参数名。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">生成的参数名满足中指定的条件<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>集合正则表达式。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>指定的集合。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行插入操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 TRANSACT-SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行插入操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">自动生成的、执行插入操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 TRANSACT-SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则生成与列名匹配的参数名（如果可能）。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则生成 <ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph>，以此类推。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行插入操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions.</source>
          <target state="translated">自动生成的、执行插入操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 TRANSACT-SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>生成改为根据列名称的参数。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">仅当满足以下条件，此操作将成功。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>指定集合并且其长度等于或大于生成的参数名。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">生成的参数名满足中指定的条件<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>集合正则表达式。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>指定的集合。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行更新操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 TRANSACT-SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行更新操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform updates.</source>
          <target state="translated">自动生成的、执行更新所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 TRANSACT-SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则生成与列名匹配的参数名（如果可能）。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则生成 <ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph>，以此类推。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">获取自动生成的、对数据库执行更新操作所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">自动生成的、执行更新所需的 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">应用程序可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>方法为信息性或故障排除目的，因为它返回<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>要执行对象。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>作为修改命令的基础。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">例如，你可能会调用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>和修改<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>值，然后上显式设置<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">当首次生成 TRANSACT-SQL 语句后，应用程序必须显式调用<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>如果更改该语句以任何方式。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>仍将使用从上一条语句，这可能不是正确的信息。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">应用程序调用时，将首先生成 TRANSACT-SQL 语句<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">生成参数名称时的默认行为是使用<ph id="ph1">@p1</ph>， <ph id="ph2">@p2</ph>，有关的各种参数，依此类推。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">传递<ph id="ph1">`true`</ph>为<ph id="ph2">`useColumnsForParameterNames`</ph>参数允许你强制<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph>生成改为根据列名称的参数。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">仅当满足以下条件，此操作将成功。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>指定集合并且其长度等于或大于生成的参数名。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">生成的参数名满足中指定的条件<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>集合正则表达式。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>从返回<bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>方法调用，并且在中找到<ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph>指定的集合。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>使用 Commandbuilder 生成命令<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">不带引号的原始标识符。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">给定了具有正确的目录大小写设置且不带引号的标识符时，返回该标识符的正确的带引号形式。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">这包括正确地转义该标识符中的任何嵌入引号。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">带引号的标识符版本。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">标识符内的嵌入引号被正确地转义。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">获取或设置在指定其名称中包含空格或保留标记等字符的 SQL Server 数据库对象（如表或列）时使用的一个或多个起始字符。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>The starting character or characters to use.</source>
          <target state="translated">要使用的一个或多个起始字符。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>The default is an empty string.</source>
          <target state="translated">默认值为一个空字符串。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a DataAdapter.</source>
          <target state="translated">虽然不能更改<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph>属性插入、 更新或删除生成命令，可以将其设置更改后调用<ph id="ph3">`Update`</ph>DataAdapter 方法。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.</source>
          <target state="translated">在生成 INSERT、UPDATE 或 DELETE 命令后，不能更改此属性。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">获取或设置在指定其名称中包含空格或保留标记等字符的 SQL Server 数据库对象（如表或列）时使用的一个或多个结束字符。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>The ending character or characters to use.</source>
          <target state="translated">要使用的结束字符。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>The default is an empty string.</source>
          <target state="translated">默认值为一个空字符串。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a DataAdapter.</source>
          <target state="translated">虽然不能更改<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph>属性插入、 更新或删除已生成操作，可以将其设置更改后调用<ph id="ph3">`Update`</ph>DataAdapter 方法。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">当生成 Insert、Update 或 Delete 命令后，不能更改此属性。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">获取或设置要用作架构标识符和任何其他标识符之间的分隔符的字符。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">要用作架构分隔符的字符。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">通常情况下，数据库服务器通过将架构名称与具有某些字符标识符分离指示标识符的架构。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">例如，SQL Server 使用一段中，创建完整的标识符，例如，Person.CustomerName，其中"Person"是架构名称，"CustomerName"是的标识符。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Setting this property lets developers modify this behavior.</source>
          <target state="translated">设置此属性使开发人员修改此行为。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">其嵌入引号将被移除的标识符。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">给定了带引号的标识符时，返回该标识符的正确的不带引号的形式。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>This includes correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">这包括正确地非转义该标识符的所有嵌入的引号。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly unescaped.</source>
          <target state="translated">未加引号的标识符，其嵌入的引号已正确进行非转义。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>